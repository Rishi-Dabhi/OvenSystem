

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 31 23:41:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    27                           	psect	inittext,global,class=CODE,delta=2
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    79                           	dabs	1,0x7E,2
    80     0000                     
    81                           ; Version 2.40
    82                           ; Generated 17/11/2021 GMT
    83                           ; 
    84                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F1937 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     008F                     	;# 
   151     0090                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     0110                     	;# 
   171     0111                     	;# 
   172     0112                     	;# 
   173     0113                     	;# 
   174     0114                     	;# 
   175     0115                     	;# 
   176     0116                     	;# 
   177     0117                     	;# 
   178     0118                     	;# 
   179     0119                     	;# 
   180     011A                     	;# 
   181     011B                     	;# 
   182     011D                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     018F                     	;# 
   186     0190                     	;# 
   187     0191                     	;# 
   188     0191                     	;# 
   189     0192                     	;# 
   190     0193                     	;# 
   191     0193                     	;# 
   192     0193                     	;# 
   193     0194                     	;# 
   194     0195                     	;# 
   195     0196                     	;# 
   196     0199                     	;# 
   197     019A                     	;# 
   198     019B                     	;# 
   199     019B                     	;# 
   200     019B                     	;# 
   201     019B                     	;# 
   202     019C                     	;# 
   203     019C                     	;# 
   204     019D                     	;# 
   205     019E                     	;# 
   206     019F                     	;# 
   207     020D                     	;# 
   208     0210                     	;# 
   209     0211                     	;# 
   210     0212                     	;# 
   211     0213                     	;# 
   212     0214                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0216                     	;# 
   216     0217                     	;# 
   217     0291                     	;# 
   218     0291                     	;# 
   219     0292                     	;# 
   220     0293                     	;# 
   221     0294                     	;# 
   222     0295                     	;# 
   223     0295                     	;# 
   224     0296                     	;# 
   225     0298                     	;# 
   226     0298                     	;# 
   227     0299                     	;# 
   228     029A                     	;# 
   229     029B                     	;# 
   230     029C                     	;# 
   231     029C                     	;# 
   232     029D                     	;# 
   233     029E                     	;# 
   234     029F                     	;# 
   235     0311                     	;# 
   236     0311                     	;# 
   237     0312                     	;# 
   238     0313                     	;# 
   239     0314                     	;# 
   240     0315                     	;# 
   241     0315                     	;# 
   242     0316                     	;# 
   243     0318                     	;# 
   244     0318                     	;# 
   245     0319                     	;# 
   246     031A                     	;# 
   247     031C                     	;# 
   248     031C                     	;# 
   249     031D                     	;# 
   250     031E                     	;# 
   251     0394                     	;# 
   252     0395                     	;# 
   253     0396                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0791                     	;# 
   261     0792                     	;# 
   262     0793                     	;# 
   263     0794                     	;# 
   264     0795                     	;# 
   265     0798                     	;# 
   266     0799                     	;# 
   267     079A                     	;# 
   268     07A0                     	;# 
   269     07A1                     	;# 
   270     07A2                     	;# 
   271     07A3                     	;# 
   272     07A4                     	;# 
   273     07A5                     	;# 
   274     07A6                     	;# 
   275     07A7                     	;# 
   276     07A8                     	;# 
   277     07A9                     	;# 
   278     07AA                     	;# 
   279     07AB                     	;# 
   280     0FE4                     	;# 
   281     0FE5                     	;# 
   282     0FE6                     	;# 
   283     0FE7                     	;# 
   284     0FE8                     	;# 
   285     0FE9                     	;# 
   286     0FEA                     	;# 
   287     0FEB                     	;# 
   288     0FED                     	;# 
   289     0FEE                     	;# 
   290     0FEF                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0015                     	;# 
   312     0016                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001C                     	;# 
   320     001E                     	;# 
   321     001F                     	;# 
   322     008C                     	;# 
   323     008D                     	;# 
   324     008E                     	;# 
   325     008F                     	;# 
   326     0090                     	;# 
   327     0091                     	;# 
   328     0092                     	;# 
   329     0093                     	;# 
   330     0095                     	;# 
   331     0096                     	;# 
   332     0097                     	;# 
   333     0098                     	;# 
   334     0099                     	;# 
   335     009A                     	;# 
   336     009B                     	;# 
   337     009B                     	;# 
   338     009C                     	;# 
   339     009D                     	;# 
   340     009E                     	;# 
   341     010C                     	;# 
   342     010D                     	;# 
   343     010E                     	;# 
   344     010F                     	;# 
   345     0110                     	;# 
   346     0111                     	;# 
   347     0112                     	;# 
   348     0113                     	;# 
   349     0114                     	;# 
   350     0115                     	;# 
   351     0116                     	;# 
   352     0117                     	;# 
   353     0118                     	;# 
   354     0119                     	;# 
   355     011A                     	;# 
   356     011B                     	;# 
   357     011D                     	;# 
   358     018C                     	;# 
   359     018D                     	;# 
   360     018F                     	;# 
   361     0190                     	;# 
   362     0191                     	;# 
   363     0191                     	;# 
   364     0192                     	;# 
   365     0193                     	;# 
   366     0193                     	;# 
   367     0193                     	;# 
   368     0194                     	;# 
   369     0195                     	;# 
   370     0196                     	;# 
   371     0199                     	;# 
   372     019A                     	;# 
   373     019B                     	;# 
   374     019B                     	;# 
   375     019B                     	;# 
   376     019B                     	;# 
   377     019C                     	;# 
   378     019C                     	;# 
   379     019D                     	;# 
   380     019E                     	;# 
   381     019F                     	;# 
   382     020D                     	;# 
   383     0210                     	;# 
   384     0211                     	;# 
   385     0212                     	;# 
   386     0213                     	;# 
   387     0214                     	;# 
   388     0215                     	;# 
   389     0215                     	;# 
   390     0216                     	;# 
   391     0217                     	;# 
   392     0291                     	;# 
   393     0291                     	;# 
   394     0292                     	;# 
   395     0293                     	;# 
   396     0294                     	;# 
   397     0295                     	;# 
   398     0295                     	;# 
   399     0296                     	;# 
   400     0298                     	;# 
   401     0298                     	;# 
   402     0299                     	;# 
   403     029A                     	;# 
   404     029B                     	;# 
   405     029C                     	;# 
   406     029C                     	;# 
   407     029D                     	;# 
   408     029E                     	;# 
   409     029F                     	;# 
   410     0311                     	;# 
   411     0311                     	;# 
   412     0312                     	;# 
   413     0313                     	;# 
   414     0314                     	;# 
   415     0315                     	;# 
   416     0315                     	;# 
   417     0316                     	;# 
   418     0318                     	;# 
   419     0318                     	;# 
   420     0319                     	;# 
   421     031A                     	;# 
   422     031C                     	;# 
   423     031C                     	;# 
   424     031D                     	;# 
   425     031E                     	;# 
   426     0394                     	;# 
   427     0395                     	;# 
   428     0396                     	;# 
   429     0415                     	;# 
   430     0416                     	;# 
   431     0417                     	;# 
   432     041C                     	;# 
   433     041D                     	;# 
   434     041E                     	;# 
   435     0791                     	;# 
   436     0792                     	;# 
   437     0793                     	;# 
   438     0794                     	;# 
   439     0795                     	;# 
   440     0798                     	;# 
   441     0799                     	;# 
   442     079A                     	;# 
   443     07A0                     	;# 
   444     07A1                     	;# 
   445     07A2                     	;# 
   446     07A3                     	;# 
   447     07A4                     	;# 
   448     07A5                     	;# 
   449     07A6                     	;# 
   450     07A7                     	;# 
   451     07A8                     	;# 
   452     07A9                     	;# 
   453     07AA                     	;# 
   454     07AB                     	;# 
   455     0FE4                     	;# 
   456     0FE5                     	;# 
   457     0FE6                     	;# 
   458     0FE7                     	;# 
   459     0FE8                     	;# 
   460     0FE9                     	;# 
   461     0FEA                     	;# 
   462     0FEB                     	;# 
   463     0FED                     	;# 
   464     0FEE                     	;# 
   465     0FEF                     	;# 
   466                           
   467                           	psect	idataBANK3
   468     19DD                     __pidataBANK3:
   469                           
   470                           ;initializer for main@F3471
   471     19DD  3430               	retlw	48
   472     19DE  3430               	retlw	48
   473     19DF  343A               	retlw	58
   474     19E0  3430               	retlw	48
   475     19E1  3430               	retlw	48
   476     19E2  3400               	retlw	0
   477                           
   478                           ;initializer for main@F3469
   479     19E3  3430               	retlw	48
   480     19E4  3430               	retlw	48
   481     19E5  3430               	retlw	48
   482     000E                     _PORTCbits	set	14
   483     000F                     _PORTDbits	set	15
   484     008C                     _TRISA	set	140
   485     008E                     _TRISC	set	142
   486     008D                     _TRISB	set	141
   487     008F                     _TRISD	set	143
   488     009B                     _ADRESL	set	155
   489     009C                     _ADRESH	set	156
   490     009E                     _ADCON1bits	set	158
   491     009D                     _ADCON0bits	set	157
   492     010E                     _LATCbits	set	270
   493     010F                     _LATDbits	set	271
   494     010D                     _LATB	set	269
   495     018C                     _ANSELA	set	396
   496     018F                     _ANSELD	set	399
   497                           
   498                           	psect	stringtext1
   499     1800                     __pstringtext1:
   500     1800                     STR_8:
   501     1800  344F               	retlw	79	;'O'
   502     1801  3456               	retlw	86	;'V'
   503     1802  3445               	retlw	69	;'E'
   504     1803  344E               	retlw	78	;'N'
   505     1804  3420               	retlw	32	;' '
   506     1805  3453               	retlw	83	;'S'
   507     1806  3454               	retlw	84	;'T'
   508     1807  3441               	retlw	65	;'A'
   509     1808  3452               	retlw	82	;'R'
   510     1809  3454               	retlw	84	;'T'
   511     180A  3449               	retlw	73	;'I'
   512     180B  344E               	retlw	78	;'N'
   513     180C  3447               	retlw	71	;'G'
   514     180D  3420               	retlw	32	;' '
   515     180E  3400               	retlw	0
   516                           
   517                           	psect	stringtext2
   518     180F                     __pstringtext2:
   519     180F                     STR_13:
   520     180F  3454               	retlw	84	;'T'
   521     1810  3449               	retlw	73	;'I'
   522     1811  344D               	retlw	77	;'M'
   523     1812  3445               	retlw	69	;'E'
   524     1813  3452               	retlw	82	;'R'
   525     1814  3420               	retlw	32	;' '
   526     1815  3446               	retlw	70	;'F'
   527     1816  3449               	retlw	73	;'I'
   528     1817  344E               	retlw	78	;'N'
   529     1818  3449               	retlw	73	;'I'
   530     1819  3453               	retlw	83	;'S'
   531     181A  3448               	retlw	72	;'H'
   532     181B  3445               	retlw	69	;'E'
   533     181C  3444               	retlw	68	;'D'
   534     181D  3400               	retlw	0
   535                           
   536                           	psect	stringtext3
   537     181E                     __pstringtext3:
   538     181E                     STR_7:
   539     181E  3449               	retlw	73	;'I'
   540     181F  346E               	retlw	110	;'n'
   541     1820  3470               	retlw	112	;'p'
   542     1821  3475               	retlw	117	;'u'
   543     1822  3474               	retlw	116	;'t'
   544     1823  3465               	retlw	101	;'e'
   545     1824  3464               	retlw	100	;'d'
   546     1825  3420               	retlw	32	;' '
   547     1826  3454               	retlw	84	;'T'
   548     1827  3469               	retlw	105	;'i'
   549     1828  346D               	retlw	109	;'m'
   550     1829  3465               	retlw	101	;'e'
   551     182A  343A               	retlw	58	;':'
   552     182B  3400               	retlw	0
   553                           
   554                           	psect	stringtext4
   555     182C                     __pstringtext4:
   556     182C                     STR_5:
   557     182C  3449               	retlw	73	;'I'
   558     182D  346E               	retlw	110	;'n'
   559     182E  3470               	retlw	112	;'p'
   560     182F  3475               	retlw	117	;'u'
   561     1830  3474               	retlw	116	;'t'
   562     1831  3465               	retlw	101	;'e'
   563     1832  3464               	retlw	100	;'d'
   564     1833  3420               	retlw	32	;' '
   565     1834  3454               	retlw	84	;'T'
   566     1835  3465               	retlw	101	;'e'
   567     1836  346D               	retlw	109	;'m'
   568     1837  3470               	retlw	112	;'p'
   569     1838  343A               	retlw	58	;':'
   570     1839  3400               	retlw	0
   571                           
   572                           	psect	stringtext5
   573     183A                     __pstringtext5:
   574     183A                     STR_10:
   575     183A  3445               	retlw	69	;'E'
   576     183B  346E               	retlw	110	;'n'
   577     183C  3474               	retlw	116	;'t'
   578     183D  3465               	retlw	101	;'e'
   579     183E  3472               	retlw	114	;'r'
   580     183F  3420               	retlw	32	;' '
   581     1840  3454               	retlw	84	;'T'
   582     1841  3469               	retlw	105	;'i'
   583     1842  346D               	retlw	109	;'m'
   584     1843  3465               	retlw	101	;'e'
   585     1844  343A               	retlw	58	;':'
   586     1845  3400               	retlw	0
   587                           
   588                           	psect	stringtext6
   589     1846                     __pstringtext6:
   590     1846                     STR_6:
   591     1846  3445               	retlw	69	;'E'
   592     1847  346E               	retlw	110	;'n'
   593     1848  3474               	retlw	116	;'t'
   594     1849  3465               	retlw	101	;'e'
   595     184A  3472               	retlw	114	;'r'
   596     184B  3420               	retlw	32	;' '
   597     184C  3454               	retlw	84	;'T'
   598     184D  3465               	retlw	101	;'e'
   599     184E  346D               	retlw	109	;'m'
   600     184F  3470               	retlw	112	;'p'
   601     1850  343A               	retlw	58	;':'
   602     1851  3400               	retlw	0
   603                           
   604                           	psect	stringtext7
   605     1852                     __pstringtext7:
   606     1852                     STR_3:
   607     1852  344F               	retlw	79	;'O'
   608     1853  3456               	retlw	86	;'V'
   609     1854  3445               	retlw	69	;'E'
   610     1855  344E               	retlw	78	;'N'
   611     1856  3420               	retlw	32	;' '
   612     1857  3453               	retlw	83	;'S'
   613     1858  3459               	retlw	89	;'Y'
   614     1859  3453               	retlw	83	;'S'
   615     185A  3454               	retlw	84	;'T'
   616     185B  3445               	retlw	69	;'E'
   617     185C  344D               	retlw	77	;'M'
   618     185D  3400               	retlw	0
   619                           
   620                           	psect	stringtext8
   621     185E                     __pstringtext8:
   622     185E                     STR_4:
   623     185E  3447               	retlw	71	;'G'
   624     185F  3452               	retlw	82	;'R'
   625     1860  344F               	retlw	79	;'O'
   626     1861  3455               	retlw	85	;'U'
   627     1862  3450               	retlw	80	;'P'
   628     1863  342D               	retlw	45	;'-'
   629     1864  3420               	retlw	32	;' '
   630     1865  3448               	retlw	72	;'H'
   631     1866  3400               	retlw	0
   632                           
   633                           	psect	stringtext9
   634     1867                     __pstringtext9:
   635     1867                     STR_11:
   636     1867  3454               	retlw	84	;'T'
   637     1868  3449               	retlw	73	;'I'
   638     1869  344D               	retlw	77	;'M'
   639     186A  3445               	retlw	69	;'E'
   640     186B  3420               	retlw	32	;' '
   641     186C  343A               	retlw	58	;':'
   642     186D  3420               	retlw	32	;' '
   643     186E  3400               	retlw	0
   644                           
   645                           	psect	stringtext10
   646     186F                     __pstringtext10:
   647     186F                     STR_9:
   648     186F  344E               	retlw	78	;'N'
   649     1870  344F               	retlw	79	;'O'
   650     1871  3457               	retlw	87	;'W'
   651     1872  342E               	retlw	46	;'.'
   652     1873  342E               	retlw	46	;'.'
   653     1874  342E               	retlw	46	;'.'
   654     1875  3400               	retlw	0
   655                           
   656                           	psect	stringtext11
   657     1876                     __pstringtext11:
   658     1876                     STR_12:
   659     1876  3454               	retlw	84	;'T'
   660     1877  3445               	retlw	69	;'E'
   661     1878  344D               	retlw	77	;'M'
   662     1879  3450               	retlw	80	;'P'
   663     187A  343A               	retlw	58	;':'
   664     187B  3400               	retlw	0
   665                           
   666                           	psect	stringtext12
   667     187C                     __pstringtext12:
   668     187C                     STR_14:
   669     187C  342A               	retlw	42	;'*'
   670     187D  342A               	retlw	42	;'*'
   671     187E  342A               	retlw	42	;'*'
   672     187F  342A               	retlw	42	;'*'
   673     1880  3400               	retlw	0
   674                           
   675                           	psect	stringtext13
   676     1881                     __pstringtext13:
   677     1881                     STR_1:
   678     1881  3425               	retlw	37	;'%'
   679     1882  342E               	retlw	46	;'.'
   680     1883  3432               	retlw	50	;'2'
   681     1884  3466               	retlw	102	;'f'
   682     1885  3400               	retlw	0
   683                           
   684                           	psect	stringtext14
   685     1886                     __pstringtext14:
   686     1886                     STR_15:
   687     1886  3469               	retlw	105	;'i'
   688     1887  346E               	retlw	110	;'n'
   689     1888  3466               	retlw	102	;'f'
   690     1889  3400               	retlw	0
   691                           
   692                           	psect	stringtext15
   693     188A                     __pstringtext15:
   694     188A                     STR_18:
   695     188A  346E               	retlw	110	;'n'
   696     188B  3461               	retlw	97	;'a'
   697     188C  346E               	retlw	110	;'n'
   698     188D  3400               	retlw	0
   699                           
   700                           	psect	stringtext16
   701     188E                     __pstringtext16:
   702     188E                     STR_2:
   703     188E  3425               	retlw	37	;'%'
   704     188F  3464               	retlw	100	;'d'
   705     1890  3400               	retlw	0
   706                           
   707                           	psect	stringtext17
   708     0000                     __pstringtext17:
   709     1886                     
   710                           	psect	cinit
   711     07DB                     start_initialization:	
   712                           ; #config settings
   713                           
   714     07DB                     __initialization:
   715                           
   716                           ; Initialize objects allocated to BANK3
   717     07DB  30DD               	movlw	low __pidataBANK3
   718     07DC  0084               	movwf	4
   719     07DD  3099               	movlw	(high __pidataBANK3)| (0+128)
   720     07DE  0085               	movwf	5
   721     07DF  30A0               	movlw	low __pdataBANK3
   722     07E0  0086               	movwf	6
   723     07E1  3001               	movlw	high __pdataBANK3
   724     07E2  0087               	movwf	7
   725     07E3  3009               	movlw	9
   726     07E4  3199  21CE  3187   	fcall	init_ram
   727                           
   728                           ; Clear objects allocated to BANK2
   729     07E7  0022               	movlb	2	; select bank2
   730     07E8  01EA               	clrf	__pbssBANK2& (0+127)
   731     07E9  01EB               	clrf	(__pbssBANK2+1)& (0+127)
   732     07EA  01EC               	clrf	(__pbssBANK2+2)& (0+127)
   733     07EB  01ED               	clrf	(__pbssBANK2+3)& (0+127)
   734     07EC  01EE               	clrf	(__pbssBANK2+4)& (0+127)
   735                           
   736                           ; Clear objects allocated to BANK3
   737     07ED  30A9               	movlw	low __pbssBANK3
   738     07EE  0084               	movwf	4
   739     07EF  3001               	movlw	high __pbssBANK3
   740     07F0  0085               	movwf	5
   741     07F1  3008               	movlw	8
   742     07F2  3199  21C8  3187   	fcall	clear_ram0
   743                           
   744                           ; Clear objects allocated to BANK4
   745     07F5  3020               	movlw	low __pbssBANK4
   746     07F6  0084               	movwf	4
   747     07F7  3002               	movlw	high __pbssBANK4
   748     07F8  0085               	movwf	5
   749     07F9  3050               	movlw	80
   750     07FA  3199  21C8  3187   	fcall	clear_ram0
   751     07FD                     end_of_initialization:	
   752                           ;End of C runtime variable initialization code
   753                           
   754     07FD                     __end_of__initialization:
   755     07FD  0020               	movlb	0
   756     07FE  318C  2C0D         	ljmp	_main	;jump to C main() function
   757                           
   758                           	psect	bssBANK2
   759     016A                     __pbssBANK2:
   760     016A                     _width:
   761     016A                     	ds	2
   762     016C                     _prec:
   763     016C                     	ds	2
   764     016E                     _flags:
   765     016E                     	ds	1
   766                           
   767                           	psect	bssBANK3
   768     01A9                     __pbssBANK3:
   769     01A9                     floorf@F526:
   770     01A9                     	ds	4
   771     01AD                     ___fpclassifyf@F465:
   772     01AD                     	ds	4
   773                           
   774                           	psect	dataBANK3
   775     01A0                     __pdataBANK3:
   776     01A0                     main@F3471:
   777     01A0                     	ds	6
   778     01A6                     main@F3469:
   779     01A6                     	ds	3
   780                           
   781                           	psect	bssBANK4
   782     0220                     __pbssBANK4:
   783     0220                     _dbuf:
   784     0220                     	ds	80
   785                           
   786                           	psect	inittext
   787     19CE                     init_ram:
   788     19CE  00FE               	movwf	btemp
   789     19CF                     initloop:
   790     19CF  0012               	moviw fsr0++
   791     19D0  001E               	movwi fsr1++
   792     19D1  0BFE               	decfsz	btemp,f
   793     19D2  29CF               	goto	initloop
   794     19D3  3400               	retlw	0
   795                           
   796                           	psect	clrtext
   797     19C8                     clear_ram0:	
   798                           ;	Called with FSR0 containing the base address, and
   799                           ;	WREG with the size to clear
   800                           
   801     19C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   802     19C9                     clrloop0:
   803     19C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   804     19CA  3101               	addfsr 0,1
   805     19CB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   806     19CC  29C9               	goto	clrloop0	;have we reached the end yet?
   807     19CD  3400               	retlw	0	;all done for this memory range, return
   808                           
   809                           	psect	cstackBANK2
   810     0120                     __pcstackBANK2:
   811     0120                     sprintf@s:
   812                           
   813                           ; 1 bytes @ 0x0
   814     0120                     	ds	1
   815     0121                     sprintf@ap:
   816                           
   817                           ; 1 bytes @ 0x1
   818     0121                     	ds	1
   819     0122                     sprintf@f:
   820                           
   821                           ; 10 bytes @ 0x2
   822     0122                     	ds	10
   823     012C                     ?_display_float:
   824     012C                     display_float@num:	
   825                           ; 1 bytes @ 0xC
   826                           
   827     012C                     display_int@str:	
   828                           ; 4 bytes @ 0xC
   829                           
   830                           
   831                           ; 16 bytes @ 0xC
   832     012C                     	ds	4
   833     0130                     display_float@str:
   834                           
   835                           ; 16 bytes @ 0x10
   836     0130                     	ds	16
   837     0140                     ??_main:
   838                           
   839                           ; 1 bytes @ 0x20
   840     0140                     	ds	4
   841     0144                     main@tempVoltage:
   842                           
   843                           ; 4 bytes @ 0x24
   844     0144                     	ds	4
   845     0148                     main@ldrVoltage:
   846                           
   847                           ; 4 bytes @ 0x28
   848     0148                     	ds	4
   849     014C                     main@inputTemperature:
   850                           
   851                           ; 4 bytes @ 0x2C
   852     014C                     	ds	4
   853     0150                     main@start:
   854                           
   855                           ; 1 bytes @ 0x30
   856     0150                     	ds	1
   857     0151                     main@currentTemperature:
   858                           
   859                           ; 4 bytes @ 0x31
   860     0151                     	ds	4
   861     0155                     main@tempBool:
   862                           
   863                           ; 1 bytes @ 0x35
   864     0155                     	ds	1
   865     0156                     main@timeBool:
   866                           
   867                           ; 1 bytes @ 0x36
   868     0156                     	ds	1
   869     0157                     main@temp:
   870                           
   871                           ; 2 bytes @ 0x37
   872     0157                     	ds	2
   873     0159                     main@hr:
   874                           
   875                           ; 2 bytes @ 0x39
   876     0159                     	ds	2
   877     015B                     main@min:
   878                           
   879                           ; 2 bytes @ 0x3B
   880     015B                     	ds	2
   881     015D                     main@inputTime:
   882                           
   883                           ; 6 bytes @ 0x3D
   884     015D                     	ds	6
   885     0163                     main@seconds:
   886                           
   887                           ; 2 bytes @ 0x43
   888     0163                     	ds	2
   889     0165                     main@v:
   890                           
   891                           ; 1 bytes @ 0x45
   892     0165                     	ds	1
   893     0166                     main@key:
   894                           
   895                           ; 1 bytes @ 0x46
   896     0166                     	ds	1
   897     0167                     main@inputTemp:
   898                           
   899                           ; 3 bytes @ 0x47
   900     0167                     	ds	3
   901                           
   902                           	psect	cstackBANK1
   903     00A0                     __pcstackBANK1:
   904     00A0                     ??_efgtoa:
   905                           
   906                           ; 1 bytes @ 0x0
   907     00A0                     	ds	4
   908     00A4                     efgtoa@ne:
   909                           
   910                           ; 2 bytes @ 0x4
   911     00A4                     	ds	2
   912     00A6                     efgtoa@p:
   913                           
   914                           ; 2 bytes @ 0x6
   915     00A6                     	ds	2
   916     00A8                     efgtoa@t:
   917                           
   918                           ; 2 bytes @ 0x8
   919     00A8                     	ds	2
   920     00AA                     _efgtoa$943:
   921                           
   922                           ; 2 bytes @ 0xA
   923     00AA                     	ds	2
   924     00AC                     efgtoa@pp:
   925                           
   926                           ; 1 bytes @ 0xC
   927     00AC                     	ds	1
   928     00AD                     efgtoa@mode:
   929                           
   930                           ; 1 bytes @ 0xD
   931     00AD                     	ds	1
   932     00AE                     efgtoa@nmode:
   933                           
   934                           ; 1 bytes @ 0xE
   935     00AE                     	ds	1
   936     00AF                     efgtoa@d:
   937                           
   938                           ; 2 bytes @ 0xF
   939     00AF                     	ds	2
   940     00B1                     efgtoa@m:
   941                           
   942                           ; 2 bytes @ 0x11
   943     00B1                     	ds	2
   944     00B3                     efgtoa@fp:
   945                           
   946                           ; 1 bytes @ 0x13
   947     00B3                     	ds	1
   948     00B4                     efgtoa@e:
   949                           
   950                           ; 2 bytes @ 0x14
   951     00B4                     	ds	2
   952     00B6                     efgtoa@w:
   953                           
   954                           ; 2 bytes @ 0x16
   955     00B6                     	ds	2
   956     00B8                     efgtoa@ou:
   957                           
   958                           ; 4 bytes @ 0x18
   959     00B8                     	ds	4
   960     00BC                     efgtoa@i:
   961                           
   962                           ; 2 bytes @ 0x1C
   963     00BC                     	ds	2
   964     00BE                     efgtoa@h:
   965                           
   966                           ; 4 bytes @ 0x1E
   967     00BE                     	ds	4
   968     00C2                     efgtoa@l:
   969                           
   970                           ; 4 bytes @ 0x22
   971     00C2                     	ds	4
   972     00C6                     efgtoa@sign:
   973                           
   974                           ; 1 bytes @ 0x26
   975     00C6                     	ds	1
   976     00C7                     efgtoa@n:
   977                           
   978                           ; 2 bytes @ 0x27
   979     00C7                     	ds	2
   980     00C9                     efgtoa@g:
   981                           
   982                           ; 4 bytes @ 0x29
   983     00C9                     	ds	4
   984     00CD                     efgtoa@u:
   985                           
   986                           ; 4 bytes @ 0x2D
   987     00CD                     	ds	4
   988     00D1                     ??_vfpfcnvrt:
   989                           
   990                           ; 1 bytes @ 0x31
   991     00D1                     	ds	4
   992     00D5                     vfpfcnvrt@convarg:
   993                           
   994                           ; 8 bytes @ 0x35
   995     00D5                     	ds	8
   996     00DD                     vfpfcnvrt@c:
   997                           
   998                           ; 1 bytes @ 0x3D
   999     00DD                     	ds	1
  1000     00DE                     vfpfcnvrt@fp:
  1001                           
  1002                           ; 1 bytes @ 0x3E
  1003     00DE                     	ds	1
  1004     00DF                     vfpfcnvrt@cp:
  1005                           
  1006                           ; 2 bytes @ 0x3F
  1007     00DF                     	ds	2
  1008     00E1                     ?_vfprintf:
  1009     00E1                     vfprintf@fmt:	
  1010                           ; 2 bytes @ 0x41
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x41
  1014     00E1                     	ds	2
  1015     00E3                     vfprintf@ap:
  1016                           
  1017                           ; 1 bytes @ 0x43
  1018     00E3                     	ds	1
  1019     00E4                     vfprintf@fp:
  1020                           
  1021                           ; 1 bytes @ 0x44
  1022     00E4                     	ds	1
  1023     00E5                     vfprintf@cfmt:
  1024                           
  1025                           ; 2 bytes @ 0x45
  1026     00E5                     	ds	2
  1027     00E7                     ?_sprintf:
  1028     00E7                     sprintf@fmt:	
  1029                           ; 2 bytes @ 0x47
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x47
  1033     00E7                     	ds	6
  1034     00ED                     ??_sprintf:
  1035                           
  1036                           ; 1 bytes @ 0x4D
  1037     00ED                     	ds	1
  1038     00EE                     ?_display_int:
  1039     00EE                     display_int@num:	
  1040                           ; 1 bytes @ 0x4E
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x4E
  1044     00EE                     	ds	2
  1045                           
  1046                           	psect	cstackCOMMON
  1047     0070                     __pcstackCOMMON:
  1048     0070                     ?___fleq:
  1049     0070                     ?_strcpy:	
  1050                           ; 1 bit 
  1051                           
  1052     0070                     ?_memcpy:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0070                     ?_putch:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0070                     ??_putch:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0070                     ?_lcd_init:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0070                     ??_lcd_init:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0070                     ?_lcd_cmd:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0070                     ??_lcd_cmd:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073     0070                     ?_lcd_char:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076     0070                     ??_lcd_char:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0070                     ?_ADC_init:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0070                     ??_ADC_init:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0070                     ?_keypad:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0070                     ??_keypad:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0070                     ?_main:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094     0070                     ??___aodiv:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097     0070                     ??___aomod:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100     0070                     ?__Umul8_16:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103     0070                     ?_fputc:	
  1104                           ; 2 bytes @ 0x0
  1105                           
  1106     0070                     ?___fpclassifyf:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109     0070                     ?_isdigit:	
  1110                           ; 2 bytes @ 0x0
  1111                           
  1112     0070                     ?_isspace:	
  1113                           ; 2 bytes @ 0x0
  1114                           
  1115     0070                     ?_getInteger:	
  1116                           ; 2 bytes @ 0x0
  1117                           
  1118     0070                     ?___awmod:	
  1119                           ; 2 bytes @ 0x0
  1120                           
  1121     0070                     ?_labs:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124     0070                     ?___flneg:	
  1125                           ; 4 bytes @ 0x0
  1126                           
  1127     0070                     ?___fltol:	
  1128                           ; 4 bytes @ 0x0
  1129                           
  1130     0070                     ?___fladd:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133     0070                     ?___xxtofl:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136     0070                     __Umul8_16@multiplicand:	
  1137                           ; 4 bytes @ 0x0
  1138                           
  1139     0070                     memcpy@s1:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142     0070                     putch@c:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145     0070                     ___awmod@divisor:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148     0070                     isdigit@c:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151     0070                     isspace@c:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154     0070                     fputc@c:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157     0070                     strcpy@src:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160     0070                     ___fleq@ff1:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163     0070                     ___flneg@f1:	
  1164                           ; 4 bytes @ 0x0
  1165                           
  1166     0070                     ___fltol@f1:	
  1167                           ; 4 bytes @ 0x0
  1168                           
  1169     0070                     ___fladd@b:	
  1170                           ; 4 bytes @ 0x0
  1171                           
  1172     0070                     ___xxtofl@val:	
  1173                           ; 4 bytes @ 0x0
  1174                           
  1175     0070                     ___fpclassifyf@x:	
  1176                           ; 4 bytes @ 0x0
  1177                           
  1178     0070                     labs@a:	
  1179                           ; 4 bytes @ 0x0
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0x0
  1183     0070                     	ds	1
  1184     0071                     lcd_cmd@cmd:
  1185     0071                     lcd_char@c:	
  1186                           ; 1 bytes @ 0x1
  1187                           
  1188     0071                     ___aodiv@counter:	
  1189                           ; 1 bytes @ 0x1
  1190                           
  1191     0071                     ___aomod@counter:	
  1192                           ; 1 bytes @ 0x1
  1193                           
  1194     0071                     memcpy@n:	
  1195                           ; 1 bytes @ 0x1
  1196                           
  1197                           
  1198                           ; 2 bytes @ 0x1
  1199     0071                     	ds	1
  1200     0072                     ??__Umul8_16:
  1201     0072                     ??_strcpy:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204     0072                     ??_isdigit:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207     0072                     ??_isspace:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210     0072                     ?_lcd_DisplayString:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213     0072                     ??_getInteger:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216     0072                     getInteger@num:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219     0072                     ___aodiv@sign:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222     0072                     ___aomod@sign:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225     0072                     fputc@fp:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228     0072                     lcd_DisplayString@str:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231     0072                     ___awmod@dividend:	
  1232                           ; 2 bytes @ 0x2
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x2
  1236     0072                     	ds	1
  1237     0073                     ??_fputc:
  1238     0073                     ??_memcpy:	
  1239                           ; 1 bytes @ 0x3
  1240                           
  1241     0073                     ?_abs:	
  1242                           ; 1 bytes @ 0x3
  1243                           
  1244     0073                     ?___wmul:	
  1245                           ; 2 bytes @ 0x3
  1246                           
  1247     0073                     ___wmul@multiplier:	
  1248                           ; 2 bytes @ 0x3
  1249                           
  1250     0073                     abs@a:	
  1251                           ; 2 bytes @ 0x3
  1252                           
  1253     0073                     ___aodiv@quotient:	
  1254                           ; 2 bytes @ 0x3
  1255                           
  1256                           
  1257                           ; 8 bytes @ 0x3
  1258     0073                     	ds	1
  1259     0074                     ??___fpclassifyf:
  1260     0074                     ??_labs:	
  1261                           ; 1 bytes @ 0x4
  1262                           
  1263     0074                     ??_lcd_DisplayString:	
  1264                           ; 1 bytes @ 0x4
  1265                           
  1266     0074                     ??___awmod:	
  1267                           ; 1 bytes @ 0x4
  1268                           
  1269     0074                     ??___flneg:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272     0074                     ??___fltol:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275     0074                     ??___xxtofl:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278     0074                     _isspace$1023:	
  1279                           ; 1 bytes @ 0x4
  1280                           
  1281     0074                     memcpy@tmp:	
  1282                           ; 1 bytes @ 0x4
  1283                           
  1284     0074                     __Umul8_16@product:	
  1285                           ; 1 bytes @ 0x4
  1286                           
  1287     0074                     strcpy@s:	
  1288                           ; 2 bytes @ 0x4
  1289                           
  1290     0074                     ___fleq@ff2:	
  1291                           ; 2 bytes @ 0x4
  1292                           
  1293     0074                     ___fladd@a:	
  1294                           ; 4 bytes @ 0x4
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x4
  1298     0074                     	ds	1
  1299     0075                     ??_abs:
  1300     0075                     ___awmod@counter:	
  1301                           ; 1 bytes @ 0x5
  1302                           
  1303     0075                     memcpy@d1:	
  1304                           ; 1 bytes @ 0x5
  1305                           
  1306     0075                     ___wmul@multiplicand:	
  1307                           ; 1 bytes @ 0x5
  1308                           
  1309                           
  1310                           ; 2 bytes @ 0x5
  1311     0075                     	ds	1
  1312     0076                     ___awmod@sign:
  1313     0076                     memcpy@d:	
  1314                           ; 1 bytes @ 0x6
  1315                           
  1316     0076                     strcpy@d:	
  1317                           ; 1 bytes @ 0x6
  1318                           
  1319     0076                     __Umul8_16@word_mpld:	
  1320                           ; 1 bytes @ 0x6
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x6
  1324     0076                     	ds	1
  1325     0077                     ??___wmul:
  1326     0077                     ?___awdiv:	
  1327                           ; 1 bytes @ 0x7
  1328                           
  1329     0077                     memcpy@s:	
  1330                           ; 2 bytes @ 0x7
  1331                           
  1332     0077                     strcpy@dest:	
  1333                           ; 1 bytes @ 0x7
  1334                           
  1335     0077                     ___wmul@product:	
  1336                           ; 1 bytes @ 0x7
  1337                           
  1338     0077                     ___awdiv@divisor:	
  1339                           ; 2 bytes @ 0x7
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x7
  1343     0077                     	ds	1
  1344     0078                     ??___fleq:
  1345     0078                     ?_fputs:	
  1346                           ; 1 bytes @ 0x8
  1347                           
  1348     0078                     ___fltol@sign1:	
  1349                           ; 2 bytes @ 0x8
  1350                           
  1351     0078                     ___fladd@signs:	
  1352                           ; 1 bytes @ 0x8
  1353                           
  1354     0078                     __Umul8_16@multiplier:	
  1355                           ; 1 bytes @ 0x8
  1356                           
  1357     0078                     ___xxtofl@sign:	
  1358                           ; 1 bytes @ 0x8
  1359                           
  1360     0078                     fputs@fp:	
  1361                           ; 1 bytes @ 0x8
  1362                           
  1363                           
  1364                           ; 1 bytes @ 0x8
  1365     0078                     	ds	1
  1366     0079                     ??_fputs:
  1367     0079                     ?_atoi:	
  1368                           ; 1 bytes @ 0x9
  1369                           
  1370     0079                     ___fltol@exp1:	
  1371                           ; 2 bytes @ 0x9
  1372                           
  1373     0079                     ___fladd@aexp:	
  1374                           ; 1 bytes @ 0x9
  1375                           
  1376     0079                     ___xxtofl@exp:	
  1377                           ; 1 bytes @ 0x9
  1378                           
  1379     0079                     ___awdiv@dividend:	
  1380                           ; 1 bytes @ 0x9
  1381                           
  1382     0079                     atoi@s:	
  1383                           ; 2 bytes @ 0x9
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x9
  1387     0079                     	ds	1
  1388     007A                     ___fladd@bexp:
  1389     007A                     ___xxtofl@arg:	
  1390                           ; 1 bytes @ 0xA
  1391                           
  1392                           
  1393                           ; 4 bytes @ 0xA
  1394     007A                     	ds	1
  1395     007B                     ??_atoi:
  1396     007B                     ??___awdiv:	
  1397                           ; 1 bytes @ 0xB
  1398                           
  1399     007B                     ?_pad:	
  1400                           ; 1 bytes @ 0xB
  1401                           
  1402     007B                     ___fladd@grs:	
  1403                           ; 1 bytes @ 0xB
  1404                           
  1405     007B                     pad@buf:	
  1406                           ; 1 bytes @ 0xB
  1407                           
  1408                           
  1409                           ; 1 bytes @ 0xB
  1410     007B                     	ds	1
  1411     007C                     pad@p:
  1412                           
  1413                           ; 2 bytes @ 0xC
  1414     007C                     	ds	2
  1415     007E                     ??_display_float:
  1416     007E                     ??_display_int:	
  1417                           ; 1 bytes @ 0xE
  1418                           
  1419     007E                     ??___flsub:	
  1420                           ; 1 bytes @ 0xE
  1421                           
  1422                           
  1423                           	psect	cstackBANK0
  1424     0020                     __pcstackBANK0:	
  1425                           ; 1 bytes @ 0xE
  1426                           
  1427     0020                     ??___fladd:
  1428     0020                     ?___flmul:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431     0020                     ?___aodiv:	
  1432                           ; 4 bytes @ 0x0
  1433                           
  1434     0020                     ?___aomod:	
  1435                           ; 8 bytes @ 0x0
  1436                           
  1437     0020                     ___awdiv@counter:	
  1438                           ; 8 bytes @ 0x0
  1439                           
  1440     0020                     fputs@c:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443     0020                     ___fpclassifyf@e:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446     0020                     atoi@neg:	
  1447                           ; 2 bytes @ 0x0
  1448                           
  1449     0020                     ___flmul@b:	
  1450                           ; 2 bytes @ 0x0
  1451                           
  1452     0020                     ___aodiv@divisor:	
  1453                           ; 4 bytes @ 0x0
  1454                           
  1455     0020                     ___aomod@divisor:	
  1456                           ; 8 bytes @ 0x0
  1457                           
  1458                           
  1459                           ; 8 bytes @ 0x0
  1460     0020                     	ds	1
  1461     0021                     ___awdiv@sign:
  1462     0021                     fputs@i:	
  1463                           ; 1 bytes @ 0x1
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x1
  1467     0021                     	ds	1
  1468     0022                     ___awdiv@quotient:
  1469     0022                     atoi@n:	
  1470                           ; 2 bytes @ 0x2
  1471                           
  1472     0022                     ___fpclassifyf@u:	
  1473                           ; 2 bytes @ 0x2
  1474                           
  1475                           
  1476                           ; 4 bytes @ 0x2
  1477     0022                     	ds	1
  1478     0023                     fputs@s:
  1479                           
  1480                           ; 1 bytes @ 0x3
  1481     0023                     	ds	1
  1482     0024                     ??_pad:
  1483     0024                     ___flmul@a:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0x4
  1488     0024                     	ds	1
  1489     0025                     pad@i:
  1490                           
  1491                           ; 2 bytes @ 0x5
  1492     0025                     	ds	2
  1493     0027                     pad@w:
  1494                           
  1495                           ; 2 bytes @ 0x7
  1496     0027                     	ds	1
  1497     0028                     ??___flmul:
  1498     0028                     ___aodiv@dividend:	
  1499                           ; 1 bytes @ 0x8
  1500                           
  1501     0028                     ___aomod@dividend:	
  1502                           ; 8 bytes @ 0x8
  1503                           
  1504                           
  1505                           ; 8 bytes @ 0x8
  1506     0028                     	ds	1
  1507     0029                     pad@fp:
  1508                           
  1509                           ; 1 bytes @ 0x9
  1510     0029                     	ds	4
  1511     002D                     ___flmul@sign:
  1512                           
  1513                           ; 1 bytes @ 0xD
  1514     002D                     	ds	1
  1515     002E                     ___flmul@grs:
  1516                           
  1517                           ; 4 bytes @ 0xE
  1518     002E                     	ds	2
  1519     0030                     ?_dtoa:
  1520     0030                     dtoa@d:	
  1521                           ; 1 bytes @ 0x10
  1522                           
  1523                           
  1524                           ; 8 bytes @ 0x10
  1525     0030                     	ds	2
  1526     0032                     ___flmul@aexp:
  1527                           
  1528                           ; 1 bytes @ 0x12
  1529     0032                     	ds	1
  1530     0033                     ___flmul@bexp:
  1531                           
  1532                           ; 1 bytes @ 0x13
  1533     0033                     	ds	1
  1534     0034                     ___flmul@prod:
  1535                           
  1536                           ; 4 bytes @ 0x14
  1537     0034                     	ds	4
  1538     0038                     ??_dtoa:
  1539     0038                     ___flmul@temp:	
  1540                           ; 1 bytes @ 0x18
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x18
  1544     0038                     	ds	1
  1545     0039                     _dtoa$912:
  1546                           
  1547                           ; 2 bytes @ 0x19
  1548     0039                     	ds	1
  1549     003A                     ?___flge:
  1550     003A                     ?___flsub:	
  1551                           ; 1 bit 
  1552                           
  1553     003A                     ?___fldiv:	
  1554                           ; 4 bytes @ 0x1A
  1555                           
  1556     003A                     ___flge@ff1:	
  1557                           ; 4 bytes @ 0x1A
  1558                           
  1559     003A                     ___flsub@a:	
  1560                           ; 4 bytes @ 0x1A
  1561                           
  1562     003A                     ___fldiv@a:	
  1563                           ; 4 bytes @ 0x1A
  1564                           
  1565                           
  1566                           ; 4 bytes @ 0x1A
  1567     003A                     	ds	1
  1568     003B                     dtoa@fp:
  1569                           
  1570                           ; 1 bytes @ 0x1B
  1571     003B                     	ds	1
  1572     003C                     dtoa@p:
  1573                           
  1574                           ; 2 bytes @ 0x1C
  1575     003C                     	ds	2
  1576     003E                     dtoa@w:
  1577     003E                     ___flge@ff2:	
  1578                           ; 2 bytes @ 0x1E
  1579                           
  1580     003E                     ___flsub@b:	
  1581                           ; 4 bytes @ 0x1E
  1582                           
  1583     003E                     ___fldiv@b:	
  1584                           ; 4 bytes @ 0x1E
  1585                           
  1586                           
  1587                           ; 4 bytes @ 0x1E
  1588     003E                     	ds	2
  1589     0040                     dtoa@n:
  1590                           
  1591                           ; 8 bytes @ 0x20
  1592     0040                     	ds	2
  1593     0042                     ??___flge:
  1594     0042                     ??___fldiv:	
  1595                           ; 1 bytes @ 0x22
  1596                           
  1597                           
  1598                           ; 1 bytes @ 0x22
  1599     0042                     	ds	5
  1600     0047                     ___fldiv@rem:
  1601                           
  1602                           ; 4 bytes @ 0x27
  1603     0047                     	ds	1
  1604     0048                     dtoa@i:
  1605                           
  1606                           ; 2 bytes @ 0x28
  1607     0048                     	ds	2
  1608     004A                     dtoa@s:
  1609                           
  1610                           ; 1 bytes @ 0x2A
  1611     004A                     	ds	1
  1612     004B                     ___fldiv@sign:
  1613                           
  1614                           ; 1 bytes @ 0x2B
  1615     004B                     	ds	1
  1616     004C                     ___fldiv@new_exp:
  1617                           
  1618                           ; 2 bytes @ 0x2C
  1619     004C                     	ds	2
  1620     004E                     ___fldiv@grs:
  1621                           
  1622                           ; 4 bytes @ 0x2E
  1623     004E                     	ds	4
  1624     0052                     ___fldiv@bexp:
  1625                           
  1626                           ; 1 bytes @ 0x32
  1627     0052                     	ds	1
  1628     0053                     ___fldiv@aexp:
  1629                           
  1630                           ; 1 bytes @ 0x33
  1631     0053                     	ds	1
  1632     0054                     ?_floorf:
  1633     0054                     ?_ADC_Convert:	
  1634                           ; 4 bytes @ 0x34
  1635                           
  1636     0054                     ADC_Convert@chan:	
  1637                           ; 4 bytes @ 0x34
  1638                           
  1639     0054                     floorf@x:	
  1640                           ; 2 bytes @ 0x34
  1641                           
  1642                           
  1643                           ; 4 bytes @ 0x34
  1644     0054                     	ds	4
  1645     0058                     ??_floorf:
  1646     0058                     ??_ADC_Convert:	
  1647                           ; 1 bytes @ 0x38
  1648                           
  1649                           
  1650                           ; 1 bytes @ 0x38
  1651     0058                     	ds	2
  1652     005A                     ADC_Convert@voltage:
  1653                           
  1654                           ; 4 bytes @ 0x3A
  1655     005A                     	ds	4
  1656     005E                     ADC_Convert@result:
  1657     005E                     floorf@m:	
  1658                           ; 2 bytes @ 0x3E
  1659                           
  1660                           
  1661                           ; 4 bytes @ 0x3E
  1662     005E                     	ds	4
  1663     0062                     floorf@e:
  1664                           
  1665                           ; 2 bytes @ 0x42
  1666     0062                     	ds	2
  1667     0064                     floorf@u:
  1668                           
  1669                           ; 4 bytes @ 0x44
  1670     0064                     	ds	4
  1671     0068                     ?_efgtoa:
  1672     0068                     efgtoa@f:	
  1673                           ; 1 bytes @ 0x48
  1674                           
  1675                           
  1676                           ; 4 bytes @ 0x48
  1677     0068                     	ds	4
  1678     006C                     efgtoa@c:
  1679                           
  1680                           ; 1 bytes @ 0x4C
  1681     006C                     	ds	1
  1682     006D                     ?_vfpfcnvrt:
  1683     006D                     vfpfcnvrt@fmt:	
  1684                           ; 1 bytes @ 0x4D
  1685                           
  1686                           
  1687                           ; 1 bytes @ 0x4D
  1688     006D                     	ds	1
  1689     006E                     vfpfcnvrt@ap:
  1690                           
  1691                           ; 1 bytes @ 0x4E
  1692     006E                     	ds	1
  1693     006F                     ??_vfprintf:
  1694                           
  1695                           ; 1 bytes @ 0x4F
  1696     006F                     	ds	1
  1697                           
  1698                           	psect	maintext
  1699     0C0D                     __pmaintext:	
  1700 ;;
  1701 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1702 ;;
  1703 ;; *************** function _main *****************
  1704 ;; Defined at:
  1705 ;;		line 192 in file "main.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  currentTempe    4   49[BANK2 ] float 
  1710 ;;  inputTempera    4   44[BANK2 ] float 
  1711 ;;  ldrVoltage      4   40[BANK2 ] float 
  1712 ;;  tempVoltage     4   36[BANK2 ] float 
  1713 ;;  seconds         2   67[BANK2 ] int 
  1714 ;;  key             1   70[BANK2 ] unsigned char 
  1715 ;;  v               1   69[BANK2 ] unsigned char 
  1716 ;;  inputTime       6   61[BANK2 ] unsigned char [6]
  1717 ;;  inputTemp       3   71[BANK2 ] unsigned char [3]
  1718 ;;  min             2   59[BANK2 ] int 
  1719 ;;  hr              2   57[BANK2 ] int 
  1720 ;;  temp            2   55[BANK2 ] int 
  1721 ;;  timeBool        1   54[BANK2 ] _Bool 
  1722 ;;  tempBool        1   53[BANK2 ] _Bool 
  1723 ;;  start           1   48[BANK2 ] _Bool 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : B1F/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1733 ;;      Params:         0       0       0       0       0       0       0       0
  1734 ;;      Locals:         0       0       0      38       0       0       0       0
  1735 ;;      Temps:          0       0       0       4       0       0       0       0
  1736 ;;      Totals:         0       0       0      42       0       0       0       0
  1737 ;;Total ram usage:       42 bytes
  1738 ;; Hardware stack levels required when called: 9
  1739 ;; This function calls:
  1740 ;;		_ADC_Convert
  1741 ;;		_ADC_init
  1742 ;;		___awdiv
  1743 ;;		___awmod
  1744 ;;		___flge
  1745 ;;		___flmul
  1746 ;;		___wmul
  1747 ;;		___xxtofl
  1748 ;;		_display_float
  1749 ;;		_display_int
  1750 ;;		_getInteger
  1751 ;;		_keypad
  1752 ;;		_lcd_DisplayString
  1753 ;;		_lcd_char
  1754 ;;		_lcd_cmd
  1755 ;;		_lcd_init
  1756 ;; This function is called by:
  1757 ;;		Startup code after reset
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761     0C0D                     _main:	
  1762                           ;psect for function _main
  1763                           
  1764     0C0D                     l4354:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1767                           
  1768                           
  1769                           ;main.c: 194:     TRISD=0xF0;
  1770     0C0D  30F0               	movlw	240
  1771     0C0E  0021               	movlb	1	; select bank1
  1772     0C0F  008F               	movwf	15	;volatile
  1773     0C10                     l4356:
  1774                           
  1775                           ;main.c: 195:     ANSELD = 0;
  1776     0C10  0023               	movlb	3	; select bank3
  1777     0C11  018F               	clrf	15	;volatile
  1778     0C12                     l4358:
  1779                           
  1780                           ;main.c: 196:     TRISB=0x00;
  1781     0C12  0021               	movlb	1	; select bank1
  1782     0C13  018D               	clrf	13	;volatile
  1783     0C14                     l4360:
  1784                           
  1785                           ;main.c: 197:     TRISC=0x00;
  1786     0C14  018E               	clrf	14	;volatile
  1787     0C15                     l4362:
  1788                           
  1789                           ;main.c: 198:     ANSELA = 0xff;
  1790     0C15  30FF               	movlw	255
  1791     0C16  0023               	movlb	3	; select bank3
  1792     0C17  008C               	movwf	12	;volatile
  1793     0C18                     l4364:
  1794                           
  1795                           ;main.c: 199:     TRISA = 0xff;
  1796     0C18  30FF               	movlw	255
  1797     0C19  0021               	movlb	1	; select bank1
  1798     0C1A  008C               	movwf	12	;volatile
  1799     0C1B                     l4366:
  1800                           
  1801                           ;main.c: 201:     lcd_init();
  1802     0C1B  319C  242C  318C   	fcall	_lcd_init
  1803     0C1E                     l4368:
  1804                           
  1805                           ;main.c: 202:     lcd_cmd(0x28);
  1806     0C1E  3028               	movlw	40
  1807     0C1F  319B  2399  318C   	fcall	_lcd_cmd
  1808     0C22                     l4370:
  1809                           
  1810                           ;main.c: 203:     lcd_cmd(0x0C);
  1811     0C22  300C               	movlw	12
  1812     0C23  319B  2399  318C   	fcall	_lcd_cmd
  1813     0C26                     l4372:
  1814                           
  1815                           ;main.c: 204:     lcd_cmd(0x06);
  1816     0C26  3006               	movlw	6
  1817     0C27  319B  2399  318C   	fcall	_lcd_cmd
  1818     0C2A                     l4374:
  1819                           
  1820                           ;main.c: 205:     lcd_cmd(0x01);
  1821     0C2A  3001               	movlw	1
  1822     0C2B  319B  2399  318C   	fcall	_lcd_cmd
  1823     0C2E                     l4376:
  1824                           
  1825                           ;main.c: 207:     lcd_cmd(0x82);
  1826     0C2E  3082               	movlw	130
  1827     0C2F  319B  2399  318C   	fcall	_lcd_cmd
  1828     0C32                     l4378:
  1829                           
  1830                           ;main.c: 208:     lcd_DisplayString("OVEN SYSTEM");
  1831     0C32  3052               	movlw	low (STR_3| (0+32768))
  1832     0C33  00F2               	movwf	lcd_DisplayString@str
  1833     0C34  3098               	movlw	high (STR_3| (0+32768))
  1834     0C35  00F3               	movwf	lcd_DisplayString@str+1
  1835     0C36  319A  2206  318C   	fcall	_lcd_DisplayString
  1836     0C39                     l4380:
  1837                           
  1838                           ;main.c: 209:     lcd_cmd(0xC4);
  1839     0C39  30C4               	movlw	196
  1840     0C3A  319B  2399  318C   	fcall	_lcd_cmd
  1841     0C3D                     l4382:
  1842                           
  1843                           ;main.c: 210:     lcd_DisplayString("GROUP- H");
  1844     0C3D  305E               	movlw	low (STR_4| (0+32768))
  1845     0C3E  00F2               	movwf	lcd_DisplayString@str
  1846     0C3F  3098               	movlw	high (STR_4| (0+32768))
  1847     0C40  00F3               	movwf	lcd_DisplayString@str+1
  1848     0C41  319A  2206  318C   	fcall	_lcd_DisplayString
  1849     0C44                     l4384:
  1850                           
  1851                           ;main.c: 211:     _delay((unsigned long)((3000)*(19600000/4000.0)));
  1852     0C44  304B               	movlw	75
  1853     0C45  0022               	movlb	2	; select bank2
  1854     0C46  00C1               	movwf	(??_main^(0+256)+1)
  1855     0C47  3093               	movlw	147
  1856     0C48  00C0               	movwf	??_main^(0+256)
  1857     0C49  30B5               	movlw	181
  1858     0C4A                     u6377:
  1859     0C4A  0B89               	decfsz	9,f
  1860     0C4B  2C4A               	goto	u6377
  1861     0C4C  0BC0               	decfsz	??_main^(0+256),f
  1862     0C4D  2C4A               	goto	u6377
  1863     0C4E  0BC1               	decfsz	(??_main^(0+256)+1),f
  1864     0C4F  2C4A               	goto	u6377
  1865     0C50                     l4386:
  1866                           
  1867                           ;main.c: 212:     lcd_cmd(0x01);
  1868     0C50  3001               	movlw	1
  1869     0C51  319B  2399  318C   	fcall	_lcd_cmd
  1870     0C54                     l4388:
  1871                           
  1872                           ;main.c: 214:     ADC_init();
  1873     0C54  3190  2000  318C   	fcall	_ADC_init
  1874     0C57                     l4390:
  1875                           
  1876                           ;main.c: 216:     char inputTemp[3] = {'0','0','0'};
  1877     0C57  0023               	movlb	3	; select bank3
  1878     0C58  0826               	movf	main@F3469^(0+384),w
  1879     0C59  0022               	movlb	2	; select bank2
  1880     0C5A  00E7               	movwf	main@inputTemp^(0+256)
  1881     0C5B  0023               	movlb	3	; select bank3
  1882     0C5C  0827               	movf	(main@F3469+1)^(0+384),w
  1883     0C5D  0022               	movlb	2	; select bank2
  1884     0C5E  00E8               	movwf	(main@inputTemp+1)^(0+256)
  1885     0C5F  0023               	movlb	3	; select bank3
  1886     0C60  0828               	movf	(main@F3469+2)^(0+384),w
  1887     0C61  0022               	movlb	2	; select bank2
  1888     0C62  00E9               	movwf	(main@inputTemp+2)^(0+256)
  1889     0C63                     l4392:
  1890                           
  1891                           ;main.c: 217:     char inputTime[6] = {'0','0',':','0','0',0x00};
  1892     0C63  30A0               	movlw	low main@F3471
  1893     0C64  0086               	movwf	6
  1894     0C65  3001               	movlw	high main@F3471
  1895     0C66  0087               	movwf	7
  1896     0C67  305D               	movlw	low main@inputTime
  1897     0C68  0084               	movwf	4
  1898     0C69  3001               	movlw	high main@inputTime
  1899     0C6A  0085               	movwf	5
  1900     0C6B  3006               	movlw	6
  1901     0C6C  00C0               	movwf	??_main^(0+256)
  1902     0C6D                     u6190:
  1903     0C6D  0016               	moviw fsr1++
  1904     0C6E  001A               	movwi fsr0++
  1905     0C6F  0BC0               	decfsz	??_main^(0+256),f
  1906     0C70  2C6D               	goto	u6190
  1907     0C71                     l4394:
  1908                           
  1909                           ;main.c: 219:     int temp = 0;
  1910     0C71  01D7               	clrf	main@temp^(0+256)
  1911     0C72  01D8               	clrf	(main@temp+1)^(0+256)
  1912     0C73                     l4396:
  1913                           
  1914                           ;main.c: 221:     int hr = 0;
  1915     0C73  01D9               	clrf	main@hr^(0+256)
  1916     0C74  01DA               	clrf	(main@hr+1)^(0+256)
  1917     0C75                     l4398:
  1918                           
  1919                           ;main.c: 222:     int min = 0;
  1920     0C75  01DB               	clrf	main@min^(0+256)
  1921     0C76  01DC               	clrf	(main@min+1)^(0+256)
  1922     0C77                     l4400:
  1923                           
  1924                           ;main.c: 224:     _Bool tempBool = 1;
  1925     0C77  01D5               	clrf	main@tempBool^(0+256)
  1926     0C78  0AD5               	incf	main@tempBool^(0+256),f
  1927     0C79                     l4402:
  1928                           
  1929                           ;main.c: 225:     _Bool timeBool = 0;
  1930     0C79  01D6               	clrf	main@timeBool^(0+256)
  1931     0C7A                     l4404:
  1932                           
  1933                           ;main.c: 226:     _Bool start = 0;
  1934     0C7A  01D0               	clrf	main@start^(0+256)
  1935     0C7B                     l4406:
  1936                           
  1937                           ;main.c: 249:         if (tempBool){
  1938     0C7B  0022               	movlb	2	; select bank2
  1939     0C7C  0855               	movf	main@tempBool^(0+256),w
  1940     0C7D  1903               	btfsc	3,2
  1941     0C7E  2C80               	goto	u6201
  1942     0C7F  2C81               	goto	u6200
  1943     0C80                     u6201:
  1944     0C80  2D2E               	goto	l4446
  1945     0C81                     u6200:
  1946     0C81                     l4408:
  1947                           
  1948                           ;main.c: 250:             if(temp != 0){
  1949     0C81  0857               	movf	main@temp^(0+256),w
  1950     0C82  0458               	iorwf	(main@temp+1)^(0+256),w
  1951     0C83  1903               	btfsc	3,2
  1952     0C84  2C86               	goto	u6211
  1953     0C85  2C87               	goto	u6210
  1954     0C86                     u6211:
  1955     0C86  2CB7               	goto	l4426
  1956     0C87                     u6210:
  1957     0C87                     l4410:
  1958                           
  1959                           ;main.c: 251:                 lcd_cmd(0x80);
  1960     0C87  3080               	movlw	128
  1961     0C88  319B  2399  318C   	fcall	_lcd_cmd
  1962     0C8B                     l4412:
  1963                           
  1964                           ;main.c: 252:                 lcd_DisplayString("Inputed Temp:");
  1965     0C8B  302C               	movlw	low (STR_5| (0+32768))
  1966     0C8C  00F2               	movwf	lcd_DisplayString@str
  1967     0C8D  3098               	movlw	high (STR_5| (0+32768))
  1968     0C8E  00F3               	movwf	lcd_DisplayString@str+1
  1969     0C8F  319A  2206  318C   	fcall	_lcd_DisplayString
  1970     0C92                     l4414:
  1971                           
  1972                           ;main.c: 253:                 lcd_cmd(0xC0);
  1973     0C92  30C0               	movlw	192
  1974     0C93  319B  2399  318C   	fcall	_lcd_cmd
  1975     0C96                     l4416:
  1976                           
  1977                           ;main.c: 254:                 display_int(temp);
  1978     0C96  0022               	movlb	2	; select bank2
  1979     0C97  0858               	movf	(main@temp+1)^(0+256),w
  1980     0C98  0021               	movlb	1	; select bank1
  1981     0C99  00EF               	movwf	(display_int@num+1)^(0+128)
  1982     0C9A  0022               	movlb	2	; select bank2
  1983     0C9B  0857               	movf	main@temp^(0+256),w
  1984     0C9C  0021               	movlb	1	; select bank1
  1985     0C9D  00EE               	movwf	display_int@num^(0+128)
  1986     0C9E  3199  21F1  318C   	fcall	_display_int
  1987     0CA1                     l4418:
  1988                           
  1989                           ;main.c: 255:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  1990     0CA1  3032               	movlw	50
  1991     0CA2  0022               	movlb	2	; select bank2
  1992     0CA3  00C1               	movwf	(??_main^(0+256)+1)
  1993     0CA4  30B8               	movlw	184
  1994     0CA5  00C0               	movwf	??_main^(0+256)
  1995     0CA6  3022               	movlw	34
  1996     0CA7                     u6387:
  1997     0CA7  0B89               	decfsz	9,f
  1998     0CA8  2CA7               	goto	u6387
  1999     0CA9  0BC0               	decfsz	??_main^(0+256),f
  2000     0CAA  2CA7               	goto	u6387
  2001     0CAB  0BC1               	decfsz	(??_main^(0+256)+1),f
  2002     0CAC  2CA7               	goto	u6387
  2003     0CAD  0000               	nop
  2004     0CAE                     l4420:
  2005                           
  2006                           ;main.c: 256:                 tempBool = 0;
  2007     0CAE  0022               	movlb	2	; select bank2
  2008     0CAF  01D5               	clrf	main@tempBool^(0+256)
  2009     0CB0                     l4422:
  2010                           
  2011                           ;main.c: 257:                 timeBool = 1;
  2012     0CB0  01D6               	clrf	main@timeBool^(0+256)
  2013     0CB1  0AD6               	incf	main@timeBool^(0+256),f
  2014     0CB2                     l4424:
  2015                           
  2016                           ;main.c: 258:                 lcd_cmd(0x01);
  2017     0CB2  3001               	movlw	1
  2018     0CB3  319B  2399  318C   	fcall	_lcd_cmd
  2019                           
  2020                           ;main.c: 259:             }
  2021     0CB6  2C7B               	goto	l4406
  2022     0CB7                     l4426:
  2023                           
  2024                           ;main.c: 261:                 lcd_cmd(0x80);
  2025     0CB7  3080               	movlw	128
  2026     0CB8  319B  2399  318C   	fcall	_lcd_cmd
  2027     0CBB                     l4428:
  2028                           
  2029                           ;main.c: 262:                 lcd_DisplayString("Enter Temp:");
  2030     0CBB  3046               	movlw	low (STR_6| (0+32768))
  2031     0CBC  00F2               	movwf	lcd_DisplayString@str
  2032     0CBD  3098               	movlw	high (STR_6| (0+32768))
  2033     0CBE  00F3               	movwf	lcd_DisplayString@str+1
  2034     0CBF  319A  2206  318C   	fcall	_lcd_DisplayString
  2035     0CC2                     l4430:
  2036                           
  2037                           ;main.c: 263:                 lcd_cmd(0xC0);
  2038     0CC2  30C0               	movlw	192
  2039     0CC3  319B  2399  318C   	fcall	_lcd_cmd
  2040                           
  2041                           ;main.c: 264:                 lcd_DisplayString(inputTemp);
  2042     0CC6  3067               	movlw	low main@inputTemp
  2043     0CC7  00F2               	movwf	lcd_DisplayString@str
  2044     0CC8  3001               	movlw	high main@inputTemp
  2045     0CC9  00F3               	movwf	lcd_DisplayString@str+1
  2046     0CCA  319A  2206  318C   	fcall	_lcd_DisplayString
  2047     0CCD                     l4432:
  2048                           
  2049                           ;main.c: 265:                 char v = keypad();
  2050     0CCD  319F  2763  318C   	fcall	_keypad
  2051     0CD0  0022               	movlb	2	; select bank2
  2052     0CD1  00E5               	movwf	main@v^(0+256)
  2053     0CD2                     l4434:
  2054                           
  2055                           ;main.c: 266:                 if( v =='#'){
  2056     0CD2  3023               	movlw	35
  2057     0CD3  0665               	xorwf	main@v^(0+256),w
  2058     0CD4  1D03               	btfss	3,2
  2059     0CD5  2CD7               	goto	u6221
  2060     0CD6  2CD8               	goto	u6220
  2061     0CD7                     u6221:
  2062     0CD7  2D13               	goto	l4438
  2063     0CD8                     u6220:
  2064     0CD8                     l4436:
  2065                           
  2066                           ;main.c: 267:                     lcd_cmd(0x01);
  2067     0CD8  3001               	movlw	1
  2068     0CD9  319B  2399  318C   	fcall	_lcd_cmd
  2069                           
  2070                           ;main.c: 268:                     temp = getInteger(inputTemp[2]) + getInteger(inputTemp
      +                          [1])*10 + getInteger(inputTemp[0])*100;
  2071     0CDC  0022               	movlb	2	; select bank2
  2072     0CDD  0867               	movf	main@inputTemp^(0+256),w
  2073     0CDE  3199  21D4  318C   	fcall	_getInteger
  2074     0CE1  0871               	movf	?_getInteger+1,w
  2075     0CE2  00F4               	movwf	___wmul@multiplier+1
  2076     0CE3  0870               	movf	?_getInteger,w
  2077     0CE4  00F3               	movwf	___wmul@multiplier
  2078     0CE5  3064               	movlw	100
  2079     0CE6  00F5               	movwf	___wmul@multiplicand
  2080     0CE7  3000               	movlw	0
  2081     0CE8  00F6               	movwf	___wmul@multiplicand+1
  2082     0CE9  319A  224F  318C   	fcall	___wmul
  2083     0CEC  0873               	movf	?___wmul,w
  2084     0CED  0022               	movlb	2	; select bank2
  2085     0CEE  00C0               	movwf	??_main^(0+256)
  2086     0CEF  0874               	movf	?___wmul+1,w
  2087     0CF0  00C1               	movwf	(??_main^(0+256)+1)
  2088     0CF1  0868               	movf	(main@inputTemp^(0+256)+1),w
  2089     0CF2  3199  21D4  318C   	fcall	_getInteger
  2090     0CF5  0871               	movf	?_getInteger+1,w
  2091     0CF6  00F4               	movwf	___wmul@multiplier+1
  2092     0CF7  0870               	movf	?_getInteger,w
  2093     0CF8  00F3               	movwf	___wmul@multiplier
  2094     0CF9  300A               	movlw	10
  2095     0CFA  00F5               	movwf	___wmul@multiplicand
  2096     0CFB  3000               	movlw	0
  2097     0CFC  00F6               	movwf	___wmul@multiplicand+1
  2098     0CFD  319A  224F  318C   	fcall	___wmul
  2099     0D00  0873               	movf	?___wmul,w
  2100     0D01  0022               	movlb	2	; select bank2
  2101     0D02  0740               	addwf	??_main^(0+256),w
  2102     0D03  00C2               	movwf	(??_main+2)^(0+256)
  2103     0D04  0874               	movf	?___wmul+1,w
  2104     0D05  3D41               	addwfc	(??_main+1)^(0+256),w
  2105     0D06  00C3               	movwf	(??_main+3)^(0+256)
  2106     0D07  0869               	movf	(main@inputTemp^(0+256)+2),w
  2107     0D08  3199  21D4  318C   	fcall	_getInteger
  2108     0D0B  0870               	movf	?_getInteger,w
  2109     0D0C  0022               	movlb	2	; select bank2
  2110     0D0D  0742               	addwf	(??_main+2)^(0+256),w
  2111     0D0E  00D7               	movwf	main@temp^(0+256)
  2112     0D0F  0871               	movf	?_getInteger+1,w
  2113     0D10  3D43               	addwfc	(??_main+3)^(0+256),w
  2114     0D11  00D8               	movwf	(main@temp+1)^(0+256)
  2115                           
  2116                           ;main.c: 269:                 }
  2117     0D12  2C7B               	goto	l4406
  2118     0D13                     l4438:
  2119     0D13  302A               	movlw	42
  2120     0D14  0665               	xorwf	main@v^(0+256),w
  2121     0D15  1D03               	btfss	3,2
  2122     0D16  2D18               	goto	u6231
  2123     0D17  2D19               	goto	u6230
  2124     0D18                     u6231:
  2125     0D18  2D20               	goto	l4442
  2126     0D19                     u6230:
  2127     0D19                     l4440:
  2128                           
  2129                           ;main.c: 271:                     inputTemp[2] = inputTemp[1];
  2130     0D19  0868               	movf	(main@inputTemp^(0+256)+1),w
  2131     0D1A  00E9               	movwf	(main@inputTemp^(0+256)+2)
  2132                           
  2133                           ;main.c: 272:                     inputTemp[1] = inputTemp[0];
  2134     0D1B  0867               	movf	main@inputTemp^(0+256),w
  2135     0D1C  00E8               	movwf	(main@inputTemp^(0+256)+1)
  2136                           
  2137                           ;main.c: 273:                     inputTemp[0] ='0';
  2138     0D1D  3030               	movlw	48
  2139     0D1E  00E7               	movwf	main@inputTemp^(0+256)
  2140                           
  2141                           ;main.c: 274:                 }
  2142     0D1F  2C7B               	goto	l4406
  2143     0D20                     l4442:
  2144     0D20  3020               	movlw	32
  2145     0D21  0665               	xorwf	main@v^(0+256),w
  2146     0D22  1903               	btfsc	3,2
  2147     0D23  2D25               	goto	u6241
  2148     0D24  2D26               	goto	u6240
  2149     0D25                     u6241:
  2150     0D25  2D2D               	goto	l146
  2151     0D26                     u6240:
  2152     0D26                     l4444:
  2153                           
  2154                           ;main.c: 276:                     inputTemp[0] = inputTemp[1];
  2155     0D26  0868               	movf	(main@inputTemp^(0+256)+1),w
  2156     0D27  00E7               	movwf	main@inputTemp^(0+256)
  2157                           
  2158                           ;main.c: 277:                     inputTemp[1] = inputTemp[2];
  2159     0D28  0869               	movf	(main@inputTemp^(0+256)+2),w
  2160     0D29  00E8               	movwf	(main@inputTemp^(0+256)+1)
  2161                           
  2162                           ;main.c: 278:                     inputTemp[2] = v;
  2163     0D2A  0865               	movf	main@v^(0+256),w
  2164     0D2B  00E9               	movwf	(main@inputTemp^(0+256)+2)
  2165     0D2C  2C7B               	goto	l4406
  2166     0D2D                     l146:
  2167     0D2D  2C7B               	goto	l4406
  2168     0D2E                     l4446:
  2169     0D2E  0856               	movf	main@timeBool^(0+256),w
  2170     0D2F  1903               	btfsc	3,2
  2171     0D30  2D32               	goto	u6251
  2172     0D31  2D33               	goto	u6250
  2173     0D32                     u6251:
  2174     0D32  2E2A               	goto	l4506
  2175     0D33                     u6250:
  2176     0D33                     l4448:
  2177                           
  2178                           ;main.c: 283:             if ((hr!=0) || (min!=0)){
  2179     0D33  0859               	movf	main@hr^(0+256),w
  2180     0D34  045A               	iorwf	(main@hr+1)^(0+256),w
  2181     0D35  1D03               	btfss	3,2
  2182     0D36  2D38               	goto	u6261
  2183     0D37  2D39               	goto	u6260
  2184     0D38                     u6261:
  2185     0D38  2D3F               	goto	l4452
  2186     0D39                     u6260:
  2187     0D39                     l4450:
  2188     0D39  085B               	movf	main@min^(0+256),w
  2189     0D3A  045C               	iorwf	(main@min+1)^(0+256),w
  2190     0D3B  1903               	btfsc	3,2
  2191     0D3C  2D3E               	goto	u6271
  2192     0D3D  2D3F               	goto	u6270
  2193     0D3E                     u6271:
  2194     0D3E  2DA7               	goto	l4486
  2195     0D3F                     u6270:
  2196     0D3F                     l4452:
  2197                           
  2198                           ;main.c: 284:                 lcd_cmd(0x80);
  2199     0D3F  3080               	movlw	128
  2200     0D40  319B  2399  318C   	fcall	_lcd_cmd
  2201     0D43                     l4454:
  2202                           
  2203                           ;main.c: 285:                 lcd_DisplayString("Inputed Time:");
  2204     0D43  301E               	movlw	low (STR_7| (0+32768))
  2205     0D44  00F2               	movwf	lcd_DisplayString@str
  2206     0D45  3098               	movlw	high (STR_7| (0+32768))
  2207     0D46  00F3               	movwf	lcd_DisplayString@str+1
  2208     0D47  319A  2206  318C   	fcall	_lcd_DisplayString
  2209     0D4A                     l4456:
  2210                           
  2211                           ;main.c: 286:                 lcd_cmd(0xC0);
  2212     0D4A  30C0               	movlw	192
  2213     0D4B  319B  2399  318C   	fcall	_lcd_cmd
  2214     0D4E                     l4458:
  2215                           
  2216                           ;main.c: 287:                 display_int(hr);
  2217     0D4E  0022               	movlb	2	; select bank2
  2218     0D4F  085A               	movf	(main@hr+1)^(0+256),w
  2219     0D50  0021               	movlb	1	; select bank1
  2220     0D51  00EF               	movwf	(display_int@num+1)^(0+128)
  2221     0D52  0022               	movlb	2	; select bank2
  2222     0D53  0859               	movf	main@hr^(0+256),w
  2223     0D54  0021               	movlb	1	; select bank1
  2224     0D55  00EE               	movwf	display_int@num^(0+128)
  2225     0D56  3199  21F1  318C   	fcall	_display_int
  2226     0D59                     l4460:
  2227                           
  2228                           ;main.c: 288:                 lcd_char(':');
  2229     0D59  303A               	movlw	58
  2230     0D5A  319B  23C7  318C   	fcall	_lcd_char
  2231     0D5D                     l4462:
  2232                           
  2233                           ;main.c: 289:                 display_int(min);
  2234     0D5D  0022               	movlb	2	; select bank2
  2235     0D5E  085C               	movf	(main@min+1)^(0+256),w
  2236     0D5F  0021               	movlb	1	; select bank1
  2237     0D60  00EF               	movwf	(display_int@num+1)^(0+128)
  2238     0D61  0022               	movlb	2	; select bank2
  2239     0D62  085B               	movf	main@min^(0+256),w
  2240     0D63  0021               	movlb	1	; select bank1
  2241     0D64  00EE               	movwf	display_int@num^(0+128)
  2242     0D65  3199  21F1  318C   	fcall	_display_int
  2243     0D68                     l4464:
  2244                           
  2245                           ;main.c: 290:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  2246     0D68  3032               	movlw	50
  2247     0D69  0022               	movlb	2	; select bank2
  2248     0D6A  00C1               	movwf	(??_main^(0+256)+1)
  2249     0D6B  30B8               	movlw	184
  2250     0D6C  00C0               	movwf	??_main^(0+256)
  2251     0D6D  3022               	movlw	34
  2252     0D6E                     u6397:
  2253     0D6E  0B89               	decfsz	9,f
  2254     0D6F  2D6E               	goto	u6397
  2255     0D70  0BC0               	decfsz	??_main^(0+256),f
  2256     0D71  2D6E               	goto	u6397
  2257     0D72  0BC1               	decfsz	(??_main^(0+256)+1),f
  2258     0D73  2D6E               	goto	u6397
  2259     0D74  0000               	nop
  2260     0D75                     l4466:
  2261                           
  2262                           ;main.c: 291:                 lcd_cmd(0x01);
  2263     0D75  3001               	movlw	1
  2264     0D76  319B  2399  318C   	fcall	_lcd_cmd
  2265     0D79                     l4468:
  2266                           
  2267                           ;main.c: 292:                 lcd_cmd(0x80);
  2268     0D79  3080               	movlw	128
  2269     0D7A  319B  2399  318C   	fcall	_lcd_cmd
  2270     0D7D                     l4470:
  2271                           
  2272                           ;main.c: 293:                 lcd_DisplayString("OVEN STARTING ");
  2273     0D7D  3000               	movlw	low (STR_8| (0+32768))
  2274     0D7E  00F2               	movwf	lcd_DisplayString@str
  2275     0D7F  3098               	movlw	high (STR_8| (0+32768))
  2276     0D80  00F3               	movwf	lcd_DisplayString@str+1
  2277     0D81  319A  2206  318C   	fcall	_lcd_DisplayString
  2278     0D84                     l4472:
  2279                           
  2280                           ;main.c: 294:                 lcd_cmd(0xC0);
  2281     0D84  30C0               	movlw	192
  2282     0D85  319B  2399  318C   	fcall	_lcd_cmd
  2283     0D88                     l4474:
  2284                           
  2285                           ;main.c: 295:                 lcd_DisplayString("NOW...");
  2286     0D88  306F               	movlw	low (STR_9| (0+32768))
  2287     0D89  00F2               	movwf	lcd_DisplayString@str
  2288     0D8A  3098               	movlw	high (STR_9| (0+32768))
  2289     0D8B  00F3               	movwf	lcd_DisplayString@str+1
  2290     0D8C  319A  2206  318C   	fcall	_lcd_DisplayString
  2291     0D8F                     l4476:
  2292                           
  2293                           ;main.c: 296:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  2294     0D8F  3032               	movlw	50
  2295     0D90  0022               	movlb	2	; select bank2
  2296     0D91  00C1               	movwf	(??_main^(0+256)+1)
  2297     0D92  30B8               	movlw	184
  2298     0D93  00C0               	movwf	??_main^(0+256)
  2299     0D94  3022               	movlw	34
  2300     0D95                     u6407:
  2301     0D95  0B89               	decfsz	9,f
  2302     0D96  2D95               	goto	u6407
  2303     0D97  0BC0               	decfsz	??_main^(0+256),f
  2304     0D98  2D95               	goto	u6407
  2305     0D99  0BC1               	decfsz	(??_main^(0+256)+1),f
  2306     0D9A  2D95               	goto	u6407
  2307     0D9B  0000               	nop
  2308     0D9C                     l4478:
  2309                           
  2310                           ;main.c: 297:                 lcd_cmd(0x01);
  2311     0D9C  3001               	movlw	1
  2312     0D9D  319B  2399  318C   	fcall	_lcd_cmd
  2313     0DA0                     l4480:
  2314                           
  2315                           ;main.c: 300:                 timeBool = 0;
  2316     0DA0  0022               	movlb	2	; select bank2
  2317     0DA1  01D6               	clrf	main@timeBool^(0+256)
  2318     0DA2                     l4482:
  2319                           
  2320                           ;main.c: 301:                 start = 1;
  2321     0DA2  01D0               	clrf	main@start^(0+256)
  2322     0DA3  0AD0               	incf	main@start^(0+256),f
  2323     0DA4                     l4484:
  2324                           
  2325                           ;main.c: 303:                 PORTCbits.RC0 = 1;
  2326     0DA4  0020               	movlb	0	; select bank0
  2327     0DA5  140E               	bsf	14,0	;volatile
  2328                           
  2329                           ;main.c: 304:             }
  2330     0DA6  2C7B               	goto	l4406
  2331     0DA7                     l4486:
  2332                           
  2333                           ;main.c: 306:                 lcd_cmd(0x80);
  2334     0DA7  3080               	movlw	128
  2335     0DA8  319B  2399  318C   	fcall	_lcd_cmd
  2336     0DAB                     l4488:
  2337                           
  2338                           ;main.c: 307:                 lcd_DisplayString("Enter Time:");
  2339     0DAB  303A               	movlw	low (STR_10| (0+32768))
  2340     0DAC  00F2               	movwf	lcd_DisplayString@str
  2341     0DAD  3098               	movlw	high (STR_10| (0+32768))
  2342     0DAE  00F3               	movwf	lcd_DisplayString@str+1
  2343     0DAF  319A  2206  318C   	fcall	_lcd_DisplayString
  2344     0DB2                     l4490:
  2345                           
  2346                           ;main.c: 308:                 lcd_cmd(0xC0);
  2347     0DB2  30C0               	movlw	192
  2348     0DB3  319B  2399  318C   	fcall	_lcd_cmd
  2349                           
  2350                           ;main.c: 309:                 lcd_DisplayString(inputTime);
  2351     0DB6  305D               	movlw	low main@inputTime
  2352     0DB7  00F2               	movwf	lcd_DisplayString@str
  2353     0DB8  3001               	movlw	high main@inputTime
  2354     0DB9  00F3               	movwf	lcd_DisplayString@str+1
  2355     0DBA  319A  2206  318C   	fcall	_lcd_DisplayString
  2356     0DBD                     l4492:
  2357                           
  2358                           ;main.c: 311:                 char key = keypad();
  2359     0DBD  319F  2763  318C   	fcall	_keypad
  2360     0DC0  0022               	movlb	2	; select bank2
  2361     0DC1  00E6               	movwf	main@key^(0+256)
  2362     0DC2                     l4494:
  2363                           
  2364                           ;main.c: 312:                 if(key == '#'){
  2365     0DC2  3023               	movlw	35
  2366     0DC3  0666               	xorwf	main@key^(0+256),w
  2367     0DC4  1D03               	btfss	3,2
  2368     0DC5  2DC7               	goto	u6281
  2369     0DC6  2DC8               	goto	u6280
  2370     0DC7                     u6281:
  2371     0DC7  2E0C               	goto	l4498
  2372     0DC8                     u6280:
  2373     0DC8                     l4496:
  2374                           
  2375                           ;main.c: 313:                     lcd_cmd(0x01);
  2376     0DC8  3001               	movlw	1
  2377     0DC9  319B  2399  318C   	fcall	_lcd_cmd
  2378                           
  2379                           ;main.c: 315:                     hr = getInteger(inputTime[1]) + getInteger(inputTime[0
      +                          ])*10;
  2380     0DCC  0022               	movlb	2	; select bank2
  2381     0DCD  085D               	movf	main@inputTime^(0+256),w
  2382     0DCE  3199  21D4  318C   	fcall	_getInteger
  2383     0DD1  0871               	movf	?_getInteger+1,w
  2384     0DD2  00F4               	movwf	___wmul@multiplier+1
  2385     0DD3  0870               	movf	?_getInteger,w
  2386     0DD4  00F3               	movwf	___wmul@multiplier
  2387     0DD5  300A               	movlw	10
  2388     0DD6  00F5               	movwf	___wmul@multiplicand
  2389     0DD7  3000               	movlw	0
  2390     0DD8  00F6               	movwf	___wmul@multiplicand+1
  2391     0DD9  319A  224F  318C   	fcall	___wmul
  2392     0DDC  0873               	movf	?___wmul,w
  2393     0DDD  0022               	movlb	2	; select bank2
  2394     0DDE  00C0               	movwf	??_main^(0+256)
  2395     0DDF  0874               	movf	?___wmul+1,w
  2396     0DE0  00C1               	movwf	(??_main^(0+256)+1)
  2397     0DE1  085E               	movf	(main@inputTime^(0+256)+1),w
  2398     0DE2  3199  21D4  318C   	fcall	_getInteger
  2399     0DE5  0870               	movf	?_getInteger,w
  2400     0DE6  0022               	movlb	2	; select bank2
  2401     0DE7  0740               	addwf	??_main^(0+256),w
  2402     0DE8  00D9               	movwf	main@hr^(0+256)
  2403     0DE9  0871               	movf	?_getInteger+1,w
  2404     0DEA  3D41               	addwfc	(??_main+1)^(0+256),w
  2405     0DEB  00DA               	movwf	(main@hr+1)^(0+256)
  2406                           
  2407                           ;main.c: 316:                     min = getInteger(inputTime[4]) + getInteger(inputTime[
      +                          3])*10;
  2408     0DEC  0860               	movf	(main@inputTime^(0+256)+3),w
  2409     0DED  3199  21D4  318C   	fcall	_getInteger
  2410     0DF0  0871               	movf	?_getInteger+1,w
  2411     0DF1  00F4               	movwf	___wmul@multiplier+1
  2412     0DF2  0870               	movf	?_getInteger,w
  2413     0DF3  00F3               	movwf	___wmul@multiplier
  2414     0DF4  300A               	movlw	10
  2415     0DF5  00F5               	movwf	___wmul@multiplicand
  2416     0DF6  3000               	movlw	0
  2417     0DF7  00F6               	movwf	___wmul@multiplicand+1
  2418     0DF8  319A  224F  318C   	fcall	___wmul
  2419     0DFB  0873               	movf	?___wmul,w
  2420     0DFC  0022               	movlb	2	; select bank2
  2421     0DFD  00C0               	movwf	??_main^(0+256)
  2422     0DFE  0874               	movf	?___wmul+1,w
  2423     0DFF  00C1               	movwf	(??_main^(0+256)+1)
  2424     0E00  0861               	movf	(main@inputTime^(0+256)+4),w
  2425     0E01  3199  21D4  318C   	fcall	_getInteger
  2426     0E04  0870               	movf	?_getInteger,w
  2427     0E05  0022               	movlb	2	; select bank2
  2428     0E06  0740               	addwf	??_main^(0+256),w
  2429     0E07  00DB               	movwf	main@min^(0+256)
  2430     0E08  0871               	movf	?_getInteger+1,w
  2431     0E09  3D41               	addwfc	(??_main+1)^(0+256),w
  2432     0E0A  00DC               	movwf	(main@min+1)^(0+256)
  2433                           
  2434                           ;main.c: 317:                 }
  2435     0E0B  2C7B               	goto	l4406
  2436     0E0C                     l4498:
  2437     0E0C  302A               	movlw	42
  2438     0E0D  0666               	xorwf	main@key^(0+256),w
  2439     0E0E  1D03               	btfss	3,2
  2440     0E0F  2E11               	goto	u6291
  2441     0E10  2E12               	goto	u6290
  2442     0E11                     u6291:
  2443     0E11  2E1B               	goto	l4502
  2444     0E12                     u6290:
  2445     0E12                     l4500:
  2446                           
  2447                           ;main.c: 319:                     inputTime[4] = inputTime[3];
  2448     0E12  0860               	movf	(main@inputTime^(0+256)+3),w
  2449     0E13  00E1               	movwf	(main@inputTime^(0+256)+4)
  2450                           
  2451                           ;main.c: 320:                     inputTime[3] = inputTime[1];
  2452     0E14  085E               	movf	(main@inputTime^(0+256)+1),w
  2453     0E15  00E0               	movwf	(main@inputTime^(0+256)+3)
  2454                           
  2455                           ;main.c: 321:                     inputTime[1] = inputTime[0];
  2456     0E16  085D               	movf	main@inputTime^(0+256),w
  2457     0E17  00DE               	movwf	(main@inputTime^(0+256)+1)
  2458                           
  2459                           ;main.c: 322:                     inputTime[0] = '0';
  2460     0E18  3030               	movlw	48
  2461     0E19  00DD               	movwf	main@inputTime^(0+256)
  2462                           
  2463                           ;main.c: 323:                 }
  2464     0E1A  2C7B               	goto	l4406
  2465     0E1B                     l4502:
  2466     0E1B  3020               	movlw	32
  2467     0E1C  0666               	xorwf	main@key^(0+256),w
  2468     0E1D  1903               	btfsc	3,2
  2469     0E1E  2E20               	goto	u6301
  2470     0E1F  2E21               	goto	u6300
  2471     0E20                     u6301:
  2472     0E20  2D2D               	goto	l146
  2473     0E21                     u6300:
  2474     0E21                     l4504:
  2475                           
  2476                           ;main.c: 325:                     inputTime[0] = inputTime[1];
  2477     0E21  085E               	movf	(main@inputTime^(0+256)+1),w
  2478     0E22  00DD               	movwf	main@inputTime^(0+256)
  2479                           
  2480                           ;main.c: 326:                     inputTime[1] = inputTime[3];
  2481     0E23  0860               	movf	(main@inputTime^(0+256)+3),w
  2482     0E24  00DE               	movwf	(main@inputTime^(0+256)+1)
  2483                           
  2484                           ;main.c: 327:                     inputTime[3] = inputTime[4];
  2485     0E25  0861               	movf	(main@inputTime^(0+256)+4),w
  2486     0E26  00E0               	movwf	(main@inputTime^(0+256)+3)
  2487                           
  2488                           ;main.c: 328:                     inputTime[4] = key;
  2489     0E27  0866               	movf	main@key^(0+256),w
  2490     0E28  00E1               	movwf	(main@inputTime^(0+256)+4)
  2491     0E29  2C7B               	goto	l4406
  2492     0E2A                     l4506:
  2493     0E2A  0856               	movf	main@timeBool^(0+256),w
  2494     0E2B  1D03               	btfss	3,2
  2495     0E2C  2E2E               	goto	u6311
  2496     0E2D  2E2F               	goto	u6310
  2497     0E2E                     u6311:
  2498     0E2E  2D2D               	goto	l146
  2499     0E2F                     u6310:
  2500     0E2F                     l4508:
  2501     0E2F  0855               	movf	main@tempBool^(0+256),w
  2502     0E30  1D03               	btfss	3,2
  2503     0E31  2E33               	goto	u6321
  2504     0E32  2E34               	goto	u6320
  2505     0E33                     u6321:
  2506     0E33  2D2D               	goto	l146
  2507     0E34                     u6320:
  2508     0E34                     l4510:
  2509                           
  2510                           ;main.c: 333:             if(start){
  2511     0E34  0850               	movf	main@start^(0+256),w
  2512     0E35  1903               	btfsc	3,2
  2513     0E36  2E38               	goto	u6331
  2514     0E37  2E39               	goto	u6330
  2515     0E38                     u6331:
  2516     0E38  2FBF               	goto	l4554
  2517     0E39                     u6330:
  2518     0E39                     l4512:
  2519                           
  2520                           ;main.c: 334:                 int seconds = hr*3600 + min * 60;
  2521     0E39  085A               	movf	(main@hr+1)^(0+256),w
  2522     0E3A  00F4               	movwf	___wmul@multiplier+1
  2523     0E3B  0859               	movf	main@hr^(0+256),w
  2524     0E3C  00F3               	movwf	___wmul@multiplier
  2525     0E3D  3010               	movlw	16
  2526     0E3E  00F5               	movwf	___wmul@multiplicand
  2527     0E3F  300E               	movlw	14
  2528     0E40  00F6               	movwf	___wmul@multiplicand+1
  2529     0E41  319A  224F  318C   	fcall	___wmul
  2530     0E44  0873               	movf	?___wmul,w
  2531     0E45  0022               	movlb	2	; select bank2
  2532     0E46  00C0               	movwf	??_main^(0+256)
  2533     0E47  0874               	movf	?___wmul+1,w
  2534     0E48  00C1               	movwf	(??_main^(0+256)+1)
  2535     0E49  085C               	movf	(main@min+1)^(0+256),w
  2536     0E4A  00F4               	movwf	___wmul@multiplier+1
  2537     0E4B  085B               	movf	main@min^(0+256),w
  2538     0E4C  00F3               	movwf	___wmul@multiplier
  2539     0E4D  303C               	movlw	60
  2540     0E4E  00F5               	movwf	___wmul@multiplicand
  2541     0E4F  3000               	movlw	0
  2542     0E50  00F6               	movwf	___wmul@multiplicand+1
  2543     0E51  319A  224F  318C   	fcall	___wmul
  2544     0E54  0873               	movf	?___wmul,w
  2545     0E55  0022               	movlb	2	; select bank2
  2546     0E56  0740               	addwf	??_main^(0+256),w
  2547     0E57  00E3               	movwf	main@seconds^(0+256)
  2548     0E58  0874               	movf	?___wmul+1,w
  2549     0E59  3D41               	addwfc	(??_main+1)^(0+256),w
  2550     0E5A  00E4               	movwf	(main@seconds+1)^(0+256)
  2551                           
  2552                           ;main.c: 335:                 while(seconds > 0 ){
  2553     0E5B  2FAC               	goto	l4550
  2554     0E5C                     l4514:
  2555                           
  2556                           ;main.c: 336:                     lcd_cmd(0x80);
  2557     0E5C  3080               	movlw	128
  2558     0E5D  319B  2399  318C   	fcall	_lcd_cmd
  2559     0E60                     l4516:
  2560                           
  2561                           ;main.c: 337:                     lcd_DisplayString("TIME : ");
  2562     0E60  3067               	movlw	low (STR_11| (0+32768))
  2563     0E61  00F2               	movwf	lcd_DisplayString@str
  2564     0E62  3098               	movlw	high (STR_11| (0+32768))
  2565     0E63  00F3               	movwf	lcd_DisplayString@str+1
  2566     0E64  319A  2206  318C   	fcall	_lcd_DisplayString
  2567     0E67                     l4518:
  2568                           
  2569                           ;main.c: 338:                     display_int(seconds/3600);
  2570     0E67  3010               	movlw	16
  2571     0E68  00F7               	movwf	___awdiv@divisor
  2572     0E69  300E               	movlw	14
  2573     0E6A  00F8               	movwf	___awdiv@divisor+1
  2574     0E6B  0022               	movlb	2	; select bank2
  2575     0E6C  0864               	movf	(main@seconds+1)^(0+256),w
  2576     0E6D  00FA               	movwf	___awdiv@dividend+1
  2577     0E6E  0863               	movf	main@seconds^(0+256),w
  2578     0E6F  00F9               	movwf	___awdiv@dividend
  2579     0E70  319D  2565  318C   	fcall	___awdiv
  2580     0E73  0878               	movf	?___awdiv+1,w
  2581     0E74  0021               	movlb	1	; select bank1
  2582     0E75  00EF               	movwf	(display_int@num+1)^(0+128)
  2583     0E76  0877               	movf	?___awdiv,w
  2584     0E77  00EE               	movwf	display_int@num^(0+128)
  2585     0E78  3199  21F1  318C   	fcall	_display_int
  2586     0E7B                     l4520:
  2587                           
  2588                           ;main.c: 339:                     lcd_char(':');
  2589     0E7B  303A               	movlw	58
  2590     0E7C  319B  23C7  318C   	fcall	_lcd_char
  2591     0E7F                     l4522:
  2592                           
  2593                           ;main.c: 340:                     display_int((seconds%3600)/60);
  2594     0E7F  303C               	movlw	60
  2595     0E80  00F7               	movwf	___awdiv@divisor
  2596     0E81  3000               	movlw	0
  2597     0E82  00F8               	movwf	___awdiv@divisor+1
  2598     0E83  0022               	movlb	2	; select bank2
  2599     0E84  0864               	movf	(main@seconds+1)^(0+256),w
  2600     0E85  00F3               	movwf	___awmod@dividend+1
  2601     0E86  0863               	movf	main@seconds^(0+256),w
  2602     0E87  00F2               	movwf	___awmod@dividend
  2603     0E88  3010               	movlw	16
  2604     0E89  00F0               	movwf	___awmod@divisor
  2605     0E8A  300E               	movlw	14
  2606     0E8B  00F1               	movwf	___awmod@divisor+1
  2607     0E8C  319C  24BB  318C   	fcall	___awmod
  2608     0E8F  0871               	movf	?___awmod+1,w
  2609     0E90  00FA               	movwf	___awdiv@dividend+1
  2610     0E91  0870               	movf	?___awmod,w
  2611     0E92  00F9               	movwf	___awdiv@dividend
  2612     0E93  319D  2565  318C   	fcall	___awdiv
  2613     0E96  0878               	movf	?___awdiv+1,w
  2614     0E97  0021               	movlb	1	; select bank1
  2615     0E98  00EF               	movwf	(display_int@num+1)^(0+128)
  2616     0E99  0877               	movf	?___awdiv,w
  2617     0E9A  00EE               	movwf	display_int@num^(0+128)
  2618     0E9B  3199  21F1  318C   	fcall	_display_int
  2619     0E9E                     l4524:
  2620                           
  2621                           ;main.c: 341:                     lcd_char(':');
  2622     0E9E  303A               	movlw	58
  2623     0E9F  319B  23C7  318C   	fcall	_lcd_char
  2624     0EA2                     l4526:
  2625                           
  2626                           ;main.c: 342:                     display_int(seconds%60);
  2627     0EA2  303C               	movlw	60
  2628     0EA3  00F0               	movwf	___awmod@divisor
  2629     0EA4  3000               	movlw	0
  2630     0EA5  00F1               	movwf	___awmod@divisor+1
  2631     0EA6  0022               	movlb	2	; select bank2
  2632     0EA7  0864               	movf	(main@seconds+1)^(0+256),w
  2633     0EA8  00F3               	movwf	___awmod@dividend+1
  2634     0EA9  0863               	movf	main@seconds^(0+256),w
  2635     0EAA  00F2               	movwf	___awmod@dividend
  2636     0EAB  319C  24BB  318C   	fcall	___awmod
  2637     0EAE  0871               	movf	?___awmod+1,w
  2638     0EAF  0021               	movlb	1	; select bank1
  2639     0EB0  00EF               	movwf	(display_int@num+1)^(0+128)
  2640     0EB1  0870               	movf	?___awmod,w
  2641     0EB2  00EE               	movwf	display_int@num^(0+128)
  2642     0EB3  3199  21F1  318C   	fcall	_display_int
  2643     0EB6                     l4528:
  2644                           
  2645                           ;main.c: 344:                     lcd_cmd(0xC0);
  2646     0EB6  30C0               	movlw	192
  2647     0EB7  319B  2399  318C   	fcall	_lcd_cmd
  2648     0EBA                     l4530:
  2649                           
  2650                           ;main.c: 345:                     float tempVoltage = ADC_Convert(0);
  2651     0EBA  3000               	movlw	0
  2652     0EBB  0020               	movlb	0	; select bank0
  2653     0EBC  00D4               	movwf	ADC_Convert@chan
  2654     0EBD  00D5               	movwf	ADC_Convert@chan+1
  2655     0EBE  3190  200A  318C   	fcall	_ADC_Convert
  2656     0EC1  0020               	movlb	0	; select bank0
  2657     0EC2  0857               	movf	?_ADC_Convert+3,w
  2658     0EC3  0022               	movlb	2	; select bank2
  2659     0EC4  00C7               	movwf	(main@tempVoltage+3)^(0+256)
  2660     0EC5  0020               	movlb	0	; select bank0
  2661     0EC6  0856               	movf	?_ADC_Convert+2,w
  2662     0EC7  0022               	movlb	2	; select bank2
  2663     0EC8  00C6               	movwf	(main@tempVoltage+2)^(0+256)
  2664     0EC9  0020               	movlb	0	; select bank0
  2665     0ECA  0855               	movf	?_ADC_Convert+1,w
  2666     0ECB  0022               	movlb	2	; select bank2
  2667     0ECC  00C5               	movwf	(main@tempVoltage+1)^(0+256)
  2668     0ECD  0020               	movlb	0	; select bank0
  2669     0ECE  0854               	movf	?_ADC_Convert,w
  2670     0ECF  0022               	movlb	2	; select bank2
  2671     0ED0  00C4               	movwf	main@tempVoltage^(0+256)
  2672     0ED1                     l4532:
  2673                           
  2674                           ;main.c: 346:                     float currentTemperature = tempVoltage*100;
  2675     0ED1  3042               	movlw	66
  2676     0ED2  0020               	movlb	0	; select bank0
  2677     0ED3  00A3               	movwf	___flmul@b+3
  2678     0ED4  30C8               	movlw	200
  2679     0ED5  00A2               	movwf	___flmul@b+2
  2680     0ED6  3000               	movlw	0
  2681     0ED7  00A1               	movwf	___flmul@b+1
  2682     0ED8  3000               	movlw	0
  2683     0ED9  00A0               	movwf	___flmul@b
  2684     0EDA  0022               	movlb	2	; select bank2
  2685     0EDB  0847               	movf	(main@tempVoltage+3)^(0+256),w
  2686     0EDC  0020               	movlb	0	; select bank0
  2687     0EDD  00A7               	movwf	___flmul@a+3
  2688     0EDE  0022               	movlb	2	; select bank2
  2689     0EDF  0846               	movf	(main@tempVoltage+2)^(0+256),w
  2690     0EE0  0020               	movlb	0	; select bank0
  2691     0EE1  00A6               	movwf	___flmul@a+2
  2692     0EE2  0022               	movlb	2	; select bank2
  2693     0EE3  0845               	movf	(main@tempVoltage+1)^(0+256),w
  2694     0EE4  0020               	movlb	0	; select bank0
  2695     0EE5  00A5               	movwf	___flmul@a+1
  2696     0EE6  0022               	movlb	2	; select bank2
  2697     0EE7  0844               	movf	main@tempVoltage^(0+256),w
  2698     0EE8  0020               	movlb	0	; select bank0
  2699     0EE9  00A4               	movwf	___flmul@a
  2700     0EEA  3189  21D2  318C   	fcall	___flmul
  2701     0EED  0020               	movlb	0	; select bank0
  2702     0EEE  0823               	movf	?___flmul+3,w
  2703     0EEF  0022               	movlb	2	; select bank2
  2704     0EF0  00D4               	movwf	(main@currentTemperature+3)^(0+256)
  2705     0EF1  0020               	movlb	0	; select bank0
  2706     0EF2  0822               	movf	?___flmul+2,w
  2707     0EF3  0022               	movlb	2	; select bank2
  2708     0EF4  00D3               	movwf	(main@currentTemperature+2)^(0+256)
  2709     0EF5  0020               	movlb	0	; select bank0
  2710     0EF6  0821               	movf	?___flmul+1,w
  2711     0EF7  0022               	movlb	2	; select bank2
  2712     0EF8  00D2               	movwf	(main@currentTemperature+1)^(0+256)
  2713     0EF9  0020               	movlb	0	; select bank0
  2714     0EFA  0820               	movf	?___flmul,w
  2715     0EFB  0022               	movlb	2	; select bank2
  2716     0EFC  00D1               	movwf	main@currentTemperature^(0+256)
  2717     0EFD                     l4534:
  2718                           
  2719                           ;main.c: 347:                     lcd_DisplayString("TEMP:");
  2720     0EFD  3076               	movlw	low (STR_12| (0+32768))
  2721     0EFE  00F2               	movwf	lcd_DisplayString@str
  2722     0EFF  3098               	movlw	high (STR_12| (0+32768))
  2723     0F00  00F3               	movwf	lcd_DisplayString@str+1
  2724     0F01  319A  2206  318C   	fcall	_lcd_DisplayString
  2725                           
  2726                           ;main.c: 348:                     display_float(currentTemperature);
  2727     0F04  0022               	movlb	2	; select bank2
  2728     0F05  0854               	movf	(main@currentTemperature+3)^(0+256),w
  2729     0F06  00AF               	movwf	(display_float@num+3)^(0+256)
  2730     0F07  0853               	movf	(main@currentTemperature+2)^(0+256),w
  2731     0F08  00AE               	movwf	(display_float@num+2)^(0+256)
  2732     0F09  0852               	movf	(main@currentTemperature+1)^(0+256),w
  2733     0F0A  00AD               	movwf	(display_float@num+1)^(0+256)
  2734     0F0B  0851               	movf	main@currentTemperature^(0+256),w
  2735     0F0C  00AC               	movwf	display_float@num^(0+256)
  2736     0F0D  319B  230E  318C   	fcall	_display_float
  2737     0F10                     l4536:
  2738                           
  2739                           ;main.c: 350:                     float ldrVoltage = ADC_Convert(1);
  2740     0F10  3001               	movlw	1
  2741     0F11  0020               	movlb	0	; select bank0
  2742     0F12  00D4               	movwf	ADC_Convert@chan
  2743     0F13  3000               	movlw	0
  2744     0F14  00D5               	movwf	ADC_Convert@chan+1
  2745     0F15  3190  200A  318C   	fcall	_ADC_Convert
  2746     0F18  0020               	movlb	0	; select bank0
  2747     0F19  0857               	movf	?_ADC_Convert+3,w
  2748     0F1A  0022               	movlb	2	; select bank2
  2749     0F1B  00CB               	movwf	(main@ldrVoltage+3)^(0+256)
  2750     0F1C  0020               	movlb	0	; select bank0
  2751     0F1D  0856               	movf	?_ADC_Convert+2,w
  2752     0F1E  0022               	movlb	2	; select bank2
  2753     0F1F  00CA               	movwf	(main@ldrVoltage+2)^(0+256)
  2754     0F20  0020               	movlb	0	; select bank0
  2755     0F21  0855               	movf	?_ADC_Convert+1,w
  2756     0F22  0022               	movlb	2	; select bank2
  2757     0F23  00C9               	movwf	(main@ldrVoltage+1)^(0+256)
  2758     0F24  0020               	movlb	0	; select bank0
  2759     0F25  0854               	movf	?_ADC_Convert,w
  2760     0F26  0022               	movlb	2	; select bank2
  2761     0F27  00C8               	movwf	main@ldrVoltage^(0+256)
  2762     0F28                     l4538:
  2763                           
  2764                           ;main.c: 351:                     if(ldrVoltage>0.4){
  2765     0F28  303E               	movlw	62
  2766     0F29  0020               	movlb	0	; select bank0
  2767     0F2A  00BD               	movwf	___flge@ff1+3
  2768     0F2B  30CC               	movlw	204
  2769     0F2C  00BC               	movwf	___flge@ff1+2
  2770     0F2D  30CC               	movlw	204
  2771     0F2E  00BB               	movwf	___flge@ff1+1
  2772     0F2F  30CD               	movlw	205
  2773     0F30  00BA               	movwf	___flge@ff1
  2774     0F31  0022               	movlb	2	; select bank2
  2775     0F32  084B               	movf	(main@ldrVoltage+3)^(0+256),w
  2776     0F33  0020               	movlb	0	; select bank0
  2777     0F34  00C1               	movwf	___flge@ff2+3
  2778     0F35  0022               	movlb	2	; select bank2
  2779     0F36  084A               	movf	(main@ldrVoltage+2)^(0+256),w
  2780     0F37  0020               	movlb	0	; select bank0
  2781     0F38  00C0               	movwf	___flge@ff2+2
  2782     0F39  0022               	movlb	2	; select bank2
  2783     0F3A  0849               	movf	(main@ldrVoltage+1)^(0+256),w
  2784     0F3B  0020               	movlb	0	; select bank0
  2785     0F3C  00BF               	movwf	___flge@ff2+1
  2786     0F3D  0022               	movlb	2	; select bank2
  2787     0F3E  0848               	movf	main@ldrVoltage^(0+256),w
  2788     0F3F  0020               	movlb	0	; select bank0
  2789     0F40  00BE               	movwf	___flge@ff2
  2790     0F41  319E  2644  318C   	fcall	___flge
  2791     0F44  1803               	btfsc	3,0
  2792     0F45  2F47               	goto	u6341
  2793     0F46  2F48               	goto	u6340
  2794     0F47                     u6341:
  2795     0F47  2F4B               	goto	l166
  2796     0F48                     u6340:
  2797     0F48                     l4540:
  2798                           
  2799                           ;main.c: 352:                         LATCbits.LATC4 = 1;
  2800     0F48  0022               	movlb	2	; select bank2
  2801     0F49  160E               	bsf	14,4	;volatile
  2802                           
  2803                           ;main.c: 353:                     }else{
  2804     0F4A  2F4D               	goto	l4542
  2805     0F4B                     l166:
  2806                           
  2807                           ;main.c: 354:                         LATCbits.LATC4 = 0;
  2808     0F4B  0022               	movlb	2	; select bank2
  2809     0F4C  120E               	bcf	14,4	;volatile
  2810     0F4D                     l4542:
  2811                           
  2812                           ;main.c: 357:                     _delay((unsigned long)((990)*(19600000/4000.0)));
  2813     0F4D  3019               	movlw	25
  2814     0F4E  0022               	movlb	2	; select bank2
  2815     0F4F  00C1               	movwf	(??_main^(0+256)+1)
  2816     0F50  309C               	movlw	156
  2817     0F51  00C0               	movwf	??_main^(0+256)
  2818     0F52  30ED               	movlw	237
  2819     0F53                     u6417:
  2820     0F53  0B89               	decfsz	9,f
  2821     0F54  2F53               	goto	u6417
  2822     0F55  0BC0               	decfsz	??_main^(0+256),f
  2823     0F56  2F53               	goto	u6417
  2824     0F57  0BC1               	decfsz	(??_main^(0+256)+1),f
  2825     0F58  2F53               	goto	u6417
  2826     0F59  3200               	nop2
  2827     0F5A                     l4544:
  2828                           
  2829                           ;main.c: 358:                     lcd_cmd(0x01);
  2830     0F5A  3001               	movlw	1
  2831     0F5B  319B  2399  318C   	fcall	_lcd_cmd
  2832     0F5E                     l4546:
  2833                           
  2834                           ;main.c: 359:                     seconds--;
  2835     0F5E  30FF               	movlw	255
  2836     0F5F  0022               	movlb	2	; select bank2
  2837     0F60  07E3               	addwf	main@seconds^(0+256),f
  2838     0F61  30FF               	movlw	255
  2839     0F62  3DE4               	addwfc	(main@seconds+1)^(0+256),f
  2840                           
  2841                           ;main.c: 361:                     float inputTemperature = temp+5;
  2842     0F63  0857               	movf	main@temp^(0+256),w
  2843     0F64  3E05               	addlw	5
  2844     0F65  00F0               	movwf	___xxtofl@val
  2845     0F66  3000               	movlw	0
  2846     0F67  3D58               	addwfc	(main@temp+1)^(0+256),w
  2847     0F68  00F1               	movwf	___xxtofl@val+1
  2848     0F69  01F2               	clrf	___xxtofl@val+2
  2849     0F6A  1BF1               	btfsc	___xxtofl@val+1,7
  2850     0F6B  03F2               	decf	___xxtofl@val+2,f
  2851     0F6C  0872               	movf	___xxtofl@val+2,w
  2852     0F6D  00F3               	movwf	___xxtofl@val+3
  2853     0F6E  3001               	movlw	1
  2854     0F6F  3190  208A  318C   	fcall	___xxtofl
  2855     0F72  0873               	movf	?___xxtofl+3,w
  2856     0F73  0022               	movlb	2	; select bank2
  2857     0F74  00CF               	movwf	(main@inputTemperature+3)^(0+256)
  2858     0F75  0872               	movf	?___xxtofl+2,w
  2859     0F76  00CE               	movwf	(main@inputTemperature+2)^(0+256)
  2860     0F77  0871               	movf	?___xxtofl+1,w
  2861     0F78  00CD               	movwf	(main@inputTemperature+1)^(0+256)
  2862     0F79  0870               	movf	?___xxtofl,w
  2863     0F7A  00CC               	movwf	main@inputTemperature^(0+256)
  2864                           
  2865                           ;main.c: 362:                     if(inputTemperature >= currentTemperature){
  2866     0F7B  084F               	movf	(main@inputTemperature+3)^(0+256),w
  2867     0F7C  0020               	movlb	0	; select bank0
  2868     0F7D  00BD               	movwf	___flge@ff1+3
  2869     0F7E  0022               	movlb	2	; select bank2
  2870     0F7F  084E               	movf	(main@inputTemperature+2)^(0+256),w
  2871     0F80  0020               	movlb	0	; select bank0
  2872     0F81  00BC               	movwf	___flge@ff1+2
  2873     0F82  0022               	movlb	2	; select bank2
  2874     0F83  084D               	movf	(main@inputTemperature+1)^(0+256),w
  2875     0F84  0020               	movlb	0	; select bank0
  2876     0F85  00BB               	movwf	___flge@ff1+1
  2877     0F86  0022               	movlb	2	; select bank2
  2878     0F87  084C               	movf	main@inputTemperature^(0+256),w
  2879     0F88  0020               	movlb	0	; select bank0
  2880     0F89  00BA               	movwf	___flge@ff1
  2881     0F8A  0022               	movlb	2	; select bank2
  2882     0F8B  0854               	movf	(main@currentTemperature+3)^(0+256),w
  2883     0F8C  0020               	movlb	0	; select bank0
  2884     0F8D  00C1               	movwf	___flge@ff2+3
  2885     0F8E  0022               	movlb	2	; select bank2
  2886     0F8F  0853               	movf	(main@currentTemperature+2)^(0+256),w
  2887     0F90  0020               	movlb	0	; select bank0
  2888     0F91  00C0               	movwf	___flge@ff2+2
  2889     0F92  0022               	movlb	2	; select bank2
  2890     0F93  0852               	movf	(main@currentTemperature+1)^(0+256),w
  2891     0F94  0020               	movlb	0	; select bank0
  2892     0F95  00BF               	movwf	___flge@ff2+1
  2893     0F96  0022               	movlb	2	; select bank2
  2894     0F97  0851               	movf	main@currentTemperature^(0+256),w
  2895     0F98  0020               	movlb	0	; select bank0
  2896     0F99  00BE               	movwf	___flge@ff2
  2897     0F9A  319E  2644  318C   	fcall	___flge
  2898     0F9D  1C03               	btfss	3,0
  2899     0F9E  2FA0               	goto	u6351
  2900     0F9F  2FA1               	goto	u6350
  2901     0FA0                     u6351:
  2902     0FA0  2FA7               	goto	l168
  2903     0FA1                     u6350:
  2904     0FA1                     l4548:
  2905                           
  2906                           ;main.c: 363:                         LATCbits.LATC0 = 1;
  2907     0FA1  0022               	movlb	2	; select bank2
  2908     0FA2  140E               	bsf	14,0	;volatile
  2909                           
  2910                           ;main.c: 364:                         LATCbits.LATC1 = 0;
  2911     0FA3  108E               	bcf	14,1	;volatile
  2912                           
  2913                           ;main.c: 366:                         LATCbits.LATC2 = 0;
  2914     0FA4  110E               	bcf	14,2	;volatile
  2915                           
  2916                           ;main.c: 367:                         LATCbits.LATC3 = 1;
  2917     0FA5  158E               	bsf	14,3	;volatile
  2918                           
  2919                           ;main.c: 368:                     }
  2920     0FA6  2FAC               	goto	l4550
  2921     0FA7                     l168:	
  2922                           ;main.c: 369:                     else{
  2923                           
  2924                           
  2925                           ;main.c: 370:                         LATCbits.LATC0 = 0;
  2926     0FA7  0022               	movlb	2	; select bank2
  2927     0FA8  100E               	bcf	14,0	;volatile
  2928                           
  2929                           ;main.c: 371:                         LATCbits.LATC1 = 1;
  2930     0FA9  148E               	bsf	14,1	;volatile
  2931                           
  2932                           ;main.c: 373:                         LATCbits.LATC2 = 1;
  2933     0FAA  150E               	bsf	14,2	;volatile
  2934                           
  2935                           ;main.c: 374:                         LATCbits.LATC3 = 0;
  2936     0FAB  118E               	bcf	14,3	;volatile
  2937     0FAC                     l4550:
  2938                           
  2939                           ;main.c: 335:                 while(seconds > 0 ){
  2940     0FAC  0864               	movf	(main@seconds+1)^(0+256),w
  2941     0FAD  3A80               	xorlw	128
  2942     0FAE  00C0               	movwf	??_main^(0+256)
  2943     0FAF  3080               	movlw	128
  2944     0FB0  0240               	subwf	??_main^(0+256),w
  2945     0FB1  1D03               	skipz
  2946     0FB2  2FB5               	goto	u6365
  2947     0FB3  3001               	movlw	1
  2948     0FB4  0263               	subwf	main@seconds^(0+256),w
  2949     0FB5                     u6365:
  2950     0FB5  1803               	skipnc
  2951     0FB6  2FB8               	goto	u6361
  2952     0FB7  2FB9               	goto	u6360
  2953     0FB8                     u6361:
  2954     0FB8  2E5C               	goto	l4514
  2955     0FB9                     u6360:
  2956     0FB9                     l170:
  2957                           
  2958                           ;main.c: 377:                 LATCbits.LATC0 = 0;
  2959     0FB9  0022               	movlb	2	; select bank2
  2960     0FBA  100E               	bcf	14,0	;volatile
  2961                           
  2962                           ;main.c: 378:                 LATCbits.LATC1 = 1;
  2963     0FBB  148E               	bsf	14,1	;volatile
  2964                           
  2965                           ;main.c: 379:                 LATCbits.LATC2 = 0;
  2966     0FBC  110E               	bcf	14,2	;volatile
  2967                           
  2968                           ;main.c: 380:                 LATCbits.LATC3 = 1;
  2969     0FBD  158E               	bsf	14,3	;volatile
  2970     0FBE                     l4552:
  2971                           
  2972                           ;main.c: 382:                 start = 0;
  2973     0FBE  01D0               	clrf	main@start^(0+256)
  2974     0FBF                     l4554:
  2975                           
  2976                           ;main.c: 384:             lcd_cmd(0x80);
  2977     0FBF  3080               	movlw	128
  2978     0FC0  319B  2399  318C   	fcall	_lcd_cmd
  2979     0FC3                     l4556:
  2980                           
  2981                           ;main.c: 385:             lcd_DisplayString("TIMER FINISHED");
  2982     0FC3  300F               	movlw	low (STR_13| (0+32768))
  2983     0FC4  00F2               	movwf	lcd_DisplayString@str
  2984     0FC5  3098               	movlw	high (STR_13| (0+32768))
  2985     0FC6  00F3               	movwf	lcd_DisplayString@str+1
  2986     0FC7  319A  2206  318C   	fcall	_lcd_DisplayString
  2987     0FCA                     l4558:
  2988                           
  2989                           ;main.c: 386:             lcd_cmd(0xC6);
  2990     0FCA  30C6               	movlw	198
  2991     0FCB  319B  2399  318C   	fcall	_lcd_cmd
  2992     0FCE                     l4560:
  2993                           
  2994                           ;main.c: 387:             lcd_DisplayString("****");
  2995     0FCE  307C               	movlw	low (STR_14| (0+32768))
  2996     0FCF  00F2               	movwf	lcd_DisplayString@str
  2997     0FD0  3098               	movlw	high (STR_14| (0+32768))
  2998     0FD1  00F3               	movwf	lcd_DisplayString@str+1
  2999     0FD2  319A  2206  318C   	fcall	_lcd_DisplayString
  3000     0FD5                     l4562:
  3001                           
  3002                           ;main.c: 388:             _delay((unsigned long)((5000)*(19600000/4000.0)));
  3003     0FD5  307D               	movlw	125
  3004     0FD6  0022               	movlb	2	; select bank2
  3005     0FD7  00C1               	movwf	(??_main^(0+256)+1)
  3006     0FD8  304A               	movlw	74
  3007     0FD9  00C0               	movwf	??_main^(0+256)
  3008     0FDA  30D9               	movlw	217
  3009     0FDB                     u6427:
  3010     0FDB  0B89               	decfsz	9,f
  3011     0FDC  2FDB               	goto	u6427
  3012     0FDD  0BC0               	decfsz	??_main^(0+256),f
  3013     0FDE  2FDB               	goto	u6427
  3014     0FDF  0BC1               	decfsz	(??_main^(0+256)+1),f
  3015     0FE0  2FDB               	goto	u6427
  3016     0FE1  3200               	nop2
  3017     0FE2                     l4564:
  3018                           
  3019                           ;main.c: 389:             lcd_cmd(0x01);
  3020     0FE2  3001               	movlw	1
  3021     0FE3  319B  2399  318C   	fcall	_lcd_cmd
  3022     0FE6                     l4566:
  3023                           
  3024                           ;main.c: 390:             tempBool = 1;
  3025     0FE6  0022               	movlb	2	; select bank2
  3026     0FE7  01D5               	clrf	main@tempBool^(0+256)
  3027     0FE8  0AD5               	incf	main@tempBool^(0+256),f
  3028     0FE9                     l4568:
  3029                           
  3030                           ;main.c: 391:             temp = 0;
  3031     0FE9  01D7               	clrf	main@temp^(0+256)
  3032     0FEA  01D8               	clrf	(main@temp+1)^(0+256)
  3033     0FEB                     l4570:
  3034                           
  3035                           ;main.c: 392:             hr = 0;
  3036     0FEB  01D9               	clrf	main@hr^(0+256)
  3037     0FEC  01DA               	clrf	(main@hr+1)^(0+256)
  3038     0FED                     l4572:
  3039                           
  3040                           ;main.c: 393:             min = 0;
  3041     0FED  01DB               	clrf	main@min^(0+256)
  3042     0FEE  01DC               	clrf	(main@min+1)^(0+256)
  3043     0FEF                     l4574:
  3044                           
  3045                           ;main.c: 394:             inputTemp[0] = '0';
  3046     0FEF  3030               	movlw	48
  3047     0FF0  00E7               	movwf	main@inputTemp^(0+256)
  3048     0FF1                     l4576:
  3049                           
  3050                           ;main.c: 395:             inputTemp[1] = '0';
  3051     0FF1  3030               	movlw	48
  3052     0FF2  00E8               	movwf	(main@inputTemp^(0+256)+1)
  3053     0FF3                     l4578:
  3054                           
  3055                           ;main.c: 396:             inputTemp[2] = '0';
  3056     0FF3  3030               	movlw	48
  3057     0FF4  00E9               	movwf	(main@inputTemp^(0+256)+2)
  3058     0FF5                     l4580:
  3059                           
  3060                           ;main.c: 397:             inputTime[4] = '0';
  3061     0FF5  3030               	movlw	48
  3062     0FF6  00E1               	movwf	(main@inputTime^(0+256)+4)
  3063     0FF7                     l4582:
  3064                           
  3065                           ;main.c: 398:             inputTime[3] = '0';
  3066     0FF7  3030               	movlw	48
  3067     0FF8  00E0               	movwf	(main@inputTime^(0+256)+3)
  3068     0FF9                     l4584:
  3069                           
  3070                           ;main.c: 399:             inputTime[1] = '0';
  3071     0FF9  3030               	movlw	48
  3072     0FFA  00DE               	movwf	(main@inputTime^(0+256)+1)
  3073     0FFB                     l4586:
  3074                           
  3075                           ;main.c: 400:             inputTime[0] = '0';
  3076     0FFB  3030               	movlw	48
  3077     0FFC  00DD               	movwf	main@inputTime^(0+256)
  3078     0FFD  2C7B               	goto	l4406
  3079     0FFE  3180  2802         	ljmp	start
  3080     1000                     __end_of_main:
  3081                           
  3082                           	psect	text1
  3083     1C2C                     __ptext1:	
  3084 ;; *************** function _lcd_init *****************
  3085 ;; Defined at:
  3086 ;;		line 40 in file "main.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3100 ;;      Params:         0       0       0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0
  3102 ;;      Temps:          2       0       0       0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113     1C2C                     _lcd_init:	
  3114                           ;psect for function _lcd_init
  3115                           
  3116     1C2C                     l4106:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _lcd_init: [wreg]
  3119                           
  3120                           
  3121                           ;main.c: 42:     _delay((unsigned long)((60)*(19600000/4000.0)));
  3122     1C2C  3002               	movlw	2
  3123     1C2D  00F1               	movwf	??_lcd_init+1
  3124     1C2E  307E               	movlw	126
  3125     1C2F  00F0               	movwf	??_lcd_init
  3126     1C30  30CE               	movlw	206
  3127     1C31                     u6437:
  3128     1C31  0B89               	decfsz	9,f
  3129     1C32  2C31               	goto	u6437
  3130     1C33  0BF0               	decfsz	??_lcd_init,f
  3131     1C34  2C31               	goto	u6437
  3132     1C35  0BF1               	decfsz	??_lcd_init+1,f
  3133     1C36  2C31               	goto	u6437
  3134     1C37  3200               	nop2
  3135                           
  3136                           ;main.c: 43:     LATB = 0x23;
  3137     1C38  3023               	movlw	35
  3138     1C39  0022               	movlb	2	; select bank2
  3139     1C3A  008D               	movwf	13	;volatile
  3140                           
  3141                           ;main.c: 44:     LATB = 0x03;
  3142     1C3B  3003               	movlw	3
  3143     1C3C  008D               	movwf	13	;volatile
  3144                           
  3145                           ;main.c: 45:     _delay((unsigned long)((20)*(19600000/4000.0)));
  3146     1C3D  3080               	movlw	128
  3147     1C3E  00F0               	movwf	??_lcd_init
  3148     1C3F  3044               	movlw	68
  3149     1C40                     u6447:
  3150     1C40  0B89               	decfsz	9,f
  3151     1C41  2C40               	goto	u6447
  3152     1C42  0BF0               	decfsz	??_lcd_init,f
  3153     1C43  2C40               	goto	u6447
  3154     1C44  3200               	nop2
  3155                           
  3156                           ;main.c: 46:     LATB = 0x23;
  3157     1C45  3023               	movlw	35
  3158     1C46  0022               	movlb	2	; select bank2
  3159     1C47  008D               	movwf	13	;volatile
  3160                           
  3161                           ;main.c: 47:     LATB = 0x03;
  3162     1C48  3003               	movlw	3
  3163     1C49  008D               	movwf	13	;volatile
  3164                           
  3165                           ;main.c: 48:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3166     1C4A  3020               	movlw	32
  3167     1C4B  00F0               	movwf	??_lcd_init
  3168     1C4C  30D0               	movlw	208
  3169     1C4D                     u6457:
  3170     1C4D  0B89               	decfsz	9,f
  3171     1C4E  2C4D               	goto	u6457
  3172     1C4F  0BF0               	decfsz	??_lcd_init,f
  3173     1C50  2C4D               	goto	u6457
  3174     1C51  3200               	nop2
  3175                           
  3176                           ;main.c: 49:     LATB = 0x23;
  3177     1C52  3023               	movlw	35
  3178     1C53  0022               	movlb	2	; select bank2
  3179     1C54  008D               	movwf	13	;volatile
  3180                           
  3181                           ;main.c: 50:     LATB = 0x03;
  3182     1C55  3003               	movlw	3
  3183     1C56  008D               	movwf	13	;volatile
  3184                           
  3185                           ;main.c: 51:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3186     1C57  3020               	movlw	32
  3187     1C58  00F0               	movwf	??_lcd_init
  3188     1C59  30D0               	movlw	208
  3189     1C5A                     u6467:
  3190     1C5A  0B89               	decfsz	9,f
  3191     1C5B  2C5A               	goto	u6467
  3192     1C5C  0BF0               	decfsz	??_lcd_init,f
  3193     1C5D  2C5A               	goto	u6467
  3194     1C5E  3200               	nop2
  3195                           
  3196                           ;main.c: 52:     LATB = 0x23;
  3197     1C5F  3023               	movlw	35
  3198     1C60  0022               	movlb	2	; select bank2
  3199     1C61  008D               	movwf	13	;volatile
  3200                           
  3201                           ;main.c: 53:     LATB = 0x03;
  3202     1C62  3003               	movlw	3
  3203     1C63  008D               	movwf	13	;volatile
  3204                           
  3205                           ;main.c: 54:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3206     1C64  3020               	movlw	32
  3207     1C65  00F0               	movwf	??_lcd_init
  3208     1C66  30D0               	movlw	208
  3209     1C67                     u6477:
  3210     1C67  0B89               	decfsz	9,f
  3211     1C68  2C67               	goto	u6477
  3212     1C69  0BF0               	decfsz	??_lcd_init,f
  3213     1C6A  2C67               	goto	u6477
  3214     1C6B  3200               	nop2
  3215     1C6C                     l37:
  3216     1C6C  0008               	return
  3217     1C6D                     __end_of_lcd_init:
  3218                           
  3219                           	psect	text2
  3220     1B99                     __ptext2:	
  3221 ;; *************** function _lcd_cmd *****************
  3222 ;; Defined at:
  3223 ;;		line 57 in file "main.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  cmd             1    wreg     unsigned char 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  cmd             1    1[COMMON] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3237 ;;      Params:         0       0       0       0       0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0       0       0       0
  3239 ;;      Temps:          1       0       0       0       0       0       0       0
  3240 ;;      Totals:         2       0       0       0       0       0       0       0
  3241 ;;Total ram usage:        2 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250     1B99                     _lcd_cmd:	
  3251                           ;psect for function _lcd_cmd
  3252                           
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  3256                           ;lcd_cmd@cmd stored from wreg
  3257     1B99  00F1               	movwf	lcd_cmd@cmd
  3258     1B9A                     l4108:
  3259                           
  3260                           ;main.c: 57: void lcd_cmd(unsigned char cmd);main.c: 58: {;main.c: 59:     LATB = 0x10 +
      +                           ((cmd >> 4) & 0x0f);
  3261     1B9A  0871               	movf	lcd_cmd@cmd,w
  3262     1B9B  00F0               	movwf	??_lcd_cmd
  3263     1B9C  3004               	movlw	4
  3264     1B9D                     u5705:
  3265     1B9D  36F0               	lsrf	??_lcd_cmd,f
  3266     1B9E  0B89               	decfsz	9,f
  3267     1B9F  2B9D               	goto	u5705
  3268     1BA0  0870               	movf	??_lcd_cmd,w
  3269     1BA1  390F               	andlw	15
  3270     1BA2  3E10               	addlw	16
  3271     1BA3  0022               	movlb	2	; select bank2
  3272     1BA4  008D               	movwf	13	;volatile
  3273                           
  3274                           ;main.c: 60:     LATB = ((cmd >> 4) & 0x0f);
  3275     1BA5  0871               	movf	lcd_cmd@cmd,w
  3276     1BA6  00F0               	movwf	??_lcd_cmd
  3277     1BA7  3004               	movlw	4
  3278     1BA8                     u5715:
  3279     1BA8  36F0               	lsrf	??_lcd_cmd,f
  3280     1BA9  0B89               	decfsz	9,f
  3281     1BAA  2BA8               	goto	u5715
  3282     1BAB  0870               	movf	??_lcd_cmd,w
  3283     1BAC  390F               	andlw	15
  3284     1BAD  008D               	movwf	13	;volatile
  3285     1BAE                     l4110:
  3286                           
  3287                           ;main.c: 61:     _delay((unsigned long)((2)*(19600000/4000.0)));
  3288     1BAE  300D               	movlw	13
  3289     1BAF  00F0               	movwf	??_lcd_cmd
  3290     1BB0  30B9               	movlw	185
  3291     1BB1                     u6487:
  3292     1BB1  0B89               	decfsz	9,f
  3293     1BB2  2BB1               	goto	u6487
  3294     1BB3  0BF0               	decfsz	??_lcd_cmd,f
  3295     1BB4  2BB1               	goto	u6487
  3296     1BB5  0000               	nop
  3297     1BB6                     l4112:
  3298                           
  3299                           ;main.c: 62:     LATB = (0x10 + (cmd & 0x0f));
  3300     1BB6  0871               	movf	lcd_cmd@cmd,w
  3301     1BB7  390F               	andlw	15
  3302     1BB8  3E10               	addlw	16
  3303     1BB9  0022               	movlb	2	; select bank2
  3304     1BBA  008D               	movwf	13	;volatile
  3305     1BBB                     l4114:
  3306                           
  3307                           ;main.c: 63:     LATB = (cmd & 0x0f);
  3308     1BBB  0871               	movf	lcd_cmd@cmd,w
  3309     1BBC  390F               	andlw	15
  3310     1BBD  008D               	movwf	13	;volatile
  3311     1BBE                     l4116:
  3312                           
  3313                           ;main.c: 64:     _delay((unsigned long)((2)*(19600000/4000.0)));
  3314     1BBE  300D               	movlw	13
  3315     1BBF  00F0               	movwf	??_lcd_cmd
  3316     1BC0  30B9               	movlw	185
  3317     1BC1                     u6497:
  3318     1BC1  0B89               	decfsz	9,f
  3319     1BC2  2BC1               	goto	u6497
  3320     1BC3  0BF0               	decfsz	??_lcd_cmd,f
  3321     1BC4  2BC1               	goto	u6497
  3322     1BC5  0000               	nop
  3323     1BC6                     l40:
  3324     1BC6  0008               	return
  3325     1BC7                     __end_of_lcd_cmd:
  3326                           
  3327                           	psect	text3
  3328     1F63                     __ptext3:	
  3329 ;; *************** function _keypad *****************
  3330 ;; Defined at:
  3331 ;;		line 126 in file "main.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      unsigned char 
  3338 ;; Registers used:
  3339 ;;		wreg
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3345 ;;      Params:         0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358     1F63                     _keypad:	
  3359                           ;psect for function _keypad
  3360                           
  3361     1F63                     l4160:	
  3362                           ;incstack = 0
  3363                           ; Regs used in _keypad: [wreg]
  3364                           
  3365                           
  3366                           ;main.c: 127:     LATDbits.LATD0 =1; LATDbits.LATD1 = 0; LATDbits.LATD2 = 0;
  3367     1F63  0022               	movlb	2	; select bank2
  3368     1F64  140F               	bsf	15,0	;volatile
  3369     1F65  108F               	bcf	15,1	;volatile
  3370     1F66  110F               	bcf	15,2	;volatile
  3371     1F67                     l4162:
  3372                           
  3373                           ;main.c: 128:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3374     1F67  3010               	movlw	16
  3375     1F68                     u6507:
  3376     1F68  0B89               	decfsz	9,f
  3377     1F69  2F68               	goto	u6507
  3378     1F6A  0000               	nop
  3379     1F6B                     l4164:
  3380                           
  3381                           ;main.c: 129:     if(PORTDbits.RD4==1){
  3382     1F6B  0020               	movlb	0	; select bank0
  3383     1F6C  1E0F               	btfss	15,4	;volatile
  3384     1F6D  2F6F               	goto	u5761
  3385     1F6E  2F70               	goto	u5760
  3386     1F6F                     u5761:
  3387     1F6F  2F76               	goto	l72
  3388     1F70                     u5760:
  3389     1F70                     l73:
  3390     1F70  1A0F               	btfsc	15,4	;volatile
  3391     1F71  2F73               	goto	u5771
  3392     1F72  2F74               	goto	u5770
  3393     1F73                     u5771:
  3394     1F73  2F70               	goto	l73
  3395     1F74                     u5770:
  3396     1F74                     l4168:
  3397                           
  3398                           ;main.c: 131:         return '1';
  3399     1F74  3031               	movlw	49
  3400     1F75  2FFF               	goto	l76
  3401     1F76                     l72:	
  3402                           ;main.c: 133:     else if(PORTDbits.RD5==1){
  3403                           
  3404     1F76  1E8F               	btfss	15,5	;volatile
  3405     1F77  2F79               	goto	u5781
  3406     1F78  2F7A               	goto	u5780
  3407     1F79                     u5781:
  3408     1F79  2F80               	goto	l78
  3409     1F7A                     u5780:
  3410     1F7A                     l79:
  3411     1F7A  1A8F               	btfsc	15,5	;volatile
  3412     1F7B  2F7D               	goto	u5791
  3413     1F7C  2F7E               	goto	u5790
  3414     1F7D                     u5791:
  3415     1F7D  2F7A               	goto	l79
  3416     1F7E                     u5790:
  3417     1F7E                     l4176:
  3418                           
  3419                           ;main.c: 135:         return '4';
  3420     1F7E  3034               	movlw	52
  3421     1F7F  2FFF               	goto	l76
  3422     1F80                     l78:	
  3423                           ;main.c: 137:     else if(PORTDbits.RD6==1){
  3424                           
  3425     1F80  1F0F               	btfss	15,6	;volatile
  3426     1F81  2F83               	goto	u5801
  3427     1F82  2F84               	goto	u5800
  3428     1F83                     u5801:
  3429     1F83  2F8A               	goto	l83
  3430     1F84                     u5800:
  3431     1F84                     l84:
  3432     1F84  1B0F               	btfsc	15,6	;volatile
  3433     1F85  2F87               	goto	u5811
  3434     1F86  2F88               	goto	u5810
  3435     1F87                     u5811:
  3436     1F87  2F84               	goto	l84
  3437     1F88                     u5810:
  3438     1F88                     l4184:
  3439                           
  3440                           ;main.c: 139:         return '7';
  3441     1F88  3037               	movlw	55
  3442     1F89  2FFF               	goto	l76
  3443     1F8A                     l83:	
  3444                           ;main.c: 141:     else if(PORTDbits.RD7==1){
  3445                           
  3446     1F8A  1F8F               	btfss	15,7	;volatile
  3447     1F8B  2F8D               	goto	u5821
  3448     1F8C  2F8E               	goto	u5820
  3449     1F8D                     u5821:
  3450     1F8D  2F94               	goto	l77
  3451     1F8E                     u5820:
  3452     1F8E                     l89:
  3453     1F8E  1B8F               	btfsc	15,7	;volatile
  3454     1F8F  2F91               	goto	u5831
  3455     1F90  2F92               	goto	u5830
  3456     1F91                     u5831:
  3457     1F91  2F8E               	goto	l89
  3458     1F92                     u5830:
  3459     1F92                     l4192:
  3460                           
  3461                           ;main.c: 143:         return '*';
  3462     1F92  302A               	movlw	42
  3463     1F93  2FFF               	goto	l76
  3464     1F94                     l77:
  3465                           
  3466                           ;main.c: 146:     LATDbits.LATD0 =0; LATDbits.LATD1 = 1; LATDbits.LATD2 = 0;
  3467     1F94  0022               	movlb	2	; select bank2
  3468     1F95  100F               	bcf	15,0	;volatile
  3469     1F96  148F               	bsf	15,1	;volatile
  3470     1F97  110F               	bcf	15,2	;volatile
  3471     1F98                     l4196:
  3472                           
  3473                           ;main.c: 147:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3474     1F98  3010               	movlw	16
  3475     1F99                     u6517:
  3476     1F99  0B89               	decfsz	9,f
  3477     1F9A  2F99               	goto	u6517
  3478     1F9B  0000               	nop
  3479     1F9C                     l4198:
  3480                           
  3481                           ;main.c: 148:     if(PORTDbits.RD4==1){
  3482     1F9C  0020               	movlb	0	; select bank0
  3483     1F9D  1E0F               	btfss	15,4	;volatile
  3484     1F9E  2FA0               	goto	u5841
  3485     1F9F  2FA1               	goto	u5840
  3486     1FA0                     u5841:
  3487     1FA0  2FA7               	goto	l92
  3488     1FA1                     u5840:
  3489     1FA1                     l93:
  3490     1FA1  1A0F               	btfsc	15,4	;volatile
  3491     1FA2  2FA4               	goto	u5851
  3492     1FA3  2FA5               	goto	u5850
  3493     1FA4                     u5851:
  3494     1FA4  2FA1               	goto	l93
  3495     1FA5                     u5850:
  3496     1FA5                     l4202:
  3497                           
  3498                           ;main.c: 150:         return '2';
  3499     1FA5  3032               	movlw	50
  3500     1FA6  2FFF               	goto	l76
  3501     1FA7                     l92:	
  3502                           ;main.c: 152:     else if(PORTDbits.RD5==1){
  3503                           
  3504     1FA7  1E8F               	btfss	15,5	;volatile
  3505     1FA8  2FAA               	goto	u5861
  3506     1FA9  2FAB               	goto	u5860
  3507     1FAA                     u5861:
  3508     1FAA  2FB1               	goto	l97
  3509     1FAB                     u5860:
  3510     1FAB                     l98:
  3511     1FAB  1A8F               	btfsc	15,5	;volatile
  3512     1FAC  2FAE               	goto	u5871
  3513     1FAD  2FAF               	goto	u5870
  3514     1FAE                     u5871:
  3515     1FAE  2FAB               	goto	l98
  3516     1FAF                     u5870:
  3517     1FAF                     l4210:
  3518                           
  3519                           ;main.c: 154:         return '5';
  3520     1FAF  3035               	movlw	53
  3521     1FB0  2FFF               	goto	l76
  3522     1FB1                     l97:	
  3523                           ;main.c: 156:     else if(PORTDbits.RD6==1){
  3524                           
  3525     1FB1  1F0F               	btfss	15,6	;volatile
  3526     1FB2  2FB4               	goto	u5881
  3527     1FB3  2FB5               	goto	u5880
  3528     1FB4                     u5881:
  3529     1FB4  2FBB               	goto	l102
  3530     1FB5                     u5880:
  3531     1FB5                     l103:
  3532     1FB5  1B0F               	btfsc	15,6	;volatile
  3533     1FB6  2FB8               	goto	u5891
  3534     1FB7  2FB9               	goto	u5890
  3535     1FB8                     u5891:
  3536     1FB8  2FB5               	goto	l103
  3537     1FB9                     u5890:
  3538     1FB9                     l4218:
  3539                           
  3540                           ;main.c: 158:         return '8';
  3541     1FB9  3038               	movlw	56
  3542     1FBA  2FFF               	goto	l76
  3543     1FBB                     l102:	
  3544                           ;main.c: 160:     else if(PORTDbits.RD7==1){
  3545                           
  3546     1FBB  1F8F               	btfss	15,7	;volatile
  3547     1FBC  2FBE               	goto	u5901
  3548     1FBD  2FBF               	goto	u5900
  3549     1FBE                     u5901:
  3550     1FBE  2FC5               	goto	l96
  3551     1FBF                     u5900:
  3552     1FBF                     l108:
  3553     1FBF  1B8F               	btfsc	15,7	;volatile
  3554     1FC0  2FC2               	goto	u5911
  3555     1FC1  2FC3               	goto	u5910
  3556     1FC2                     u5911:
  3557     1FC2  2FBF               	goto	l108
  3558     1FC3                     u5910:
  3559     1FC3                     l4226:
  3560                           
  3561                           ;main.c: 162:         return '0';
  3562     1FC3  3030               	movlw	48
  3563     1FC4  2FFF               	goto	l76
  3564     1FC5                     l96:
  3565                           
  3566                           ;main.c: 165:     LATDbits.LATD0 =0; LATDbits.LATD1 = 0; LATDbits.LATD2 = 1;
  3567     1FC5  0022               	movlb	2	; select bank2
  3568     1FC6  100F               	bcf	15,0	;volatile
  3569     1FC7  108F               	bcf	15,1	;volatile
  3570     1FC8  150F               	bsf	15,2	;volatile
  3571     1FC9                     l4230:
  3572                           
  3573                           ;main.c: 166:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3574     1FC9  3010               	movlw	16
  3575     1FCA                     u6527:
  3576     1FCA  0B89               	decfsz	9,f
  3577     1FCB  2FCA               	goto	u6527
  3578     1FCC  0000               	nop
  3579     1FCD                     l4232:
  3580                           
  3581                           ;main.c: 167:     if(PORTDbits.RD4==1){
  3582     1FCD  0020               	movlb	0	; select bank0
  3583     1FCE  1E0F               	btfss	15,4	;volatile
  3584     1FCF  2FD1               	goto	u5921
  3585     1FD0  2FD2               	goto	u5920
  3586     1FD1                     u5921:
  3587     1FD1  2FD8               	goto	l111
  3588     1FD2                     u5920:
  3589     1FD2                     l112:
  3590     1FD2  1A0F               	btfsc	15,4	;volatile
  3591     1FD3  2FD5               	goto	u5931
  3592     1FD4  2FD6               	goto	u5930
  3593     1FD5                     u5931:
  3594     1FD5  2FD2               	goto	l112
  3595     1FD6                     u5930:
  3596     1FD6                     l4236:
  3597                           
  3598                           ;main.c: 169:         return '3';
  3599     1FD6  3033               	movlw	51
  3600     1FD7  2FFF               	goto	l76
  3601     1FD8                     l111:	
  3602                           ;main.c: 171:     else if(PORTDbits.RD5==1){
  3603                           
  3604     1FD8  1E8F               	btfss	15,5	;volatile
  3605     1FD9  2FDB               	goto	u5941
  3606     1FDA  2FDC               	goto	u5940
  3607     1FDB                     u5941:
  3608     1FDB  2FE2               	goto	l116
  3609     1FDC                     u5940:
  3610     1FDC                     l117:
  3611     1FDC  1A8F               	btfsc	15,5	;volatile
  3612     1FDD  2FDF               	goto	u5951
  3613     1FDE  2FE0               	goto	u5950
  3614     1FDF                     u5951:
  3615     1FDF  2FDC               	goto	l117
  3616     1FE0                     u5950:
  3617     1FE0                     l4244:
  3618                           
  3619                           ;main.c: 173:         return '6';
  3620     1FE0  3036               	movlw	54
  3621     1FE1  2FFF               	goto	l76
  3622     1FE2                     l116:	
  3623                           ;main.c: 175:     else if(PORTDbits.RD6==1){
  3624                           
  3625     1FE2  1F0F               	btfss	15,6	;volatile
  3626     1FE3  2FE5               	goto	u5961
  3627     1FE4  2FE6               	goto	u5960
  3628     1FE5                     u5961:
  3629     1FE5  2FEC               	goto	l121
  3630     1FE6                     u5960:
  3631     1FE6                     l122:
  3632     1FE6  1B0F               	btfsc	15,6	;volatile
  3633     1FE7  2FE9               	goto	u5971
  3634     1FE8  2FEA               	goto	u5970
  3635     1FE9                     u5971:
  3636     1FE9  2FE6               	goto	l122
  3637     1FEA                     u5970:
  3638     1FEA                     l4252:
  3639                           
  3640                           ;main.c: 177:         return'9';
  3641     1FEA  3039               	movlw	57
  3642     1FEB  2FFF               	goto	l76
  3643     1FEC                     l121:	
  3644                           ;main.c: 179:     else if(PORTDbits.RD7==1){
  3645                           
  3646     1FEC  1F8F               	btfss	15,7	;volatile
  3647     1FED  2FEF               	goto	u5981
  3648     1FEE  2FF0               	goto	u5980
  3649     1FEF                     u5981:
  3650     1FEF  2FF6               	goto	l115
  3651     1FF0                     u5980:
  3652     1FF0                     l127:
  3653     1FF0  1B8F               	btfsc	15,7	;volatile
  3654     1FF1  2FF3               	goto	u5991
  3655     1FF2  2FF4               	goto	u5990
  3656     1FF3                     u5991:
  3657     1FF3  2FF0               	goto	l127
  3658     1FF4                     u5990:
  3659     1FF4                     l4260:
  3660                           
  3661                           ;main.c: 181:         return '#';
  3662     1FF4  3023               	movlw	35
  3663     1FF5  2FFF               	goto	l76
  3664     1FF6                     l115:
  3665                           
  3666                           ;main.c: 183:     LATDbits.LATD0 =0; LATDbits.LATD1 = 0; LATDbits.LATD2 = 0;
  3667     1FF6  0022               	movlb	2	; select bank2
  3668     1FF7  100F               	bcf	15,0	;volatile
  3669     1FF8  108F               	bcf	15,1	;volatile
  3670     1FF9  110F               	bcf	15,2	;volatile
  3671     1FFA                     l4264:
  3672                           
  3673                           ;main.c: 184:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3674     1FFA  3010               	movlw	16
  3675     1FFB                     u6537:
  3676     1FFB  0B89               	decfsz	9,f
  3677     1FFC  2FFB               	goto	u6537
  3678     1FFD  0000               	nop
  3679                           
  3680                           ;main.c: 185:     return ' ';
  3681     1FFE  3020               	movlw	32
  3682     1FFF                     l76:
  3683     1FFF  0008               	return
  3684     2000                     __end_of_keypad:
  3685                           
  3686                           	psect	text4
  3687     19D4                     __ptext4:	
  3688 ;; *************** function _getInteger *****************
  3689 ;; Defined at:
  3690 ;;		line 188 in file "main.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  num             1    wreg     unsigned char 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  num             1    2[COMMON] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  2    0[COMMON] int 
  3697 ;; Registers used:
  3698 ;;		wreg
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3704 ;;      Params:         2       0       0       0       0       0       0       0
  3705 ;;      Locals:         1       0       0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0
  3707 ;;      Totals:         3       0       0       0       0       0       0       0
  3708 ;;Total ram usage:        3 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717     19D4                     _getInteger:	
  3718                           ;psect for function _getInteger
  3719                           
  3720                           
  3721                           ;incstack = 0
  3722                           ; Regs used in _getInteger: [wreg]
  3723                           ;getInteger@num stored from wreg
  3724     19D4  00F2               	movwf	getInteger@num
  3725     19D5                     l4268:
  3726                           
  3727                           ;main.c: 189:     return num - '0';
  3728     19D5  0872               	movf	getInteger@num,w
  3729     19D6  3ED0               	addlw	208
  3730     19D7  00F0               	movwf	?_getInteger
  3731     19D8  30FF               	movlw	255
  3732     19D9  1803               	skipnc
  3733     19DA  3000               	movlw	0
  3734     19DB  00F1               	movwf	?_getInteger+1
  3735     19DC                     l132:
  3736     19DC  0008               	return
  3737     19DD                     __end_of_getInteger:
  3738                           
  3739                           	psect	text5
  3740     19F1                     __ptext5:	
  3741 ;; *************** function _display_int *****************
  3742 ;; Defined at:
  3743 ;;		line 91 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  num             2   78[BANK1 ] int 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  str            16   12[BANK2 ] unsigned char [16]
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3757 ;;      Params:         0       0       2       0       0       0       0       0
  3758 ;;      Locals:         0       0       0      16       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       2      16       0       0       0       0
  3761 ;;Total ram usage:       18 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 8
  3764 ;; This function calls:
  3765 ;;		_lcd_DisplayString
  3766 ;;		_sprintf
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772     19F1                     _display_int:	
  3773                           ;psect for function _display_int
  3774                           
  3775     19F1                     l4122:	
  3776                           ;incstack = 0
  3777                           ; Regs used in _display_int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3778                           
  3779                           
  3780                           ;main.c: 92:     char str[16];;main.c: 93:     sprintf(str, "%d", num);
  3781     19F1  308E               	movlw	low (STR_2| (0+32768))
  3782     19F2  0021               	movlb	1	; select bank1
  3783     19F3  00E7               	movwf	sprintf@fmt^(0+128)
  3784     19F4  3098               	movlw	high (STR_2| (0+32768))
  3785     19F5  00E8               	movwf	(sprintf@fmt^(0+128)+1)
  3786     19F6  086F               	movf	(display_int@num+1)^(0+128),w
  3787     19F7  00EA               	movwf	((?_sprintf+1)^(0+128)+2)
  3788     19F8  086E               	movf	display_int@num^(0+128),w
  3789     19F9  00E9               	movwf	(?_sprintf^(0+128)+2)
  3790     19FA  302C               	movlw	(low (display_int@str| (0+256)))& (0+255)
  3791     19FB  319A  22CD  3199   	fcall	_sprintf
  3792     19FE                     l4124:
  3793                           
  3794                           ;main.c: 94:     lcd_DisplayString(str);
  3795     19FE  302C               	movlw	low display_int@str
  3796     19FF  00F2               	movwf	lcd_DisplayString@str
  3797     1A00  3001               	movlw	high display_int@str
  3798     1A01  00F3               	movwf	lcd_DisplayString@str+1
  3799     1A02  319A  2206  3199   	fcall	_lcd_DisplayString
  3800     1A05                     l55:
  3801     1A05  0008               	return
  3802     1A06                     __end_of_display_int:
  3803                           
  3804                           	psect	text6
  3805     1B0E                     __ptext6:	
  3806 ;; *************** function _display_float *****************
  3807 ;; Defined at:
  3808 ;;		line 85 in file "main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  num             4   12[BANK2 ] float 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  str            16   16[BANK2 ] unsigned char [16]
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3822 ;;      Params:         0       0       0       4       0       0       0       0
  3823 ;;      Locals:         0       0       0      16       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0
  3825 ;;      Totals:         0       0       0      20       0       0       0       0
  3826 ;;Total ram usage:       20 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 8
  3829 ;; This function calls:
  3830 ;;		_lcd_DisplayString
  3831 ;;		_sprintf
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837     1B0E                     _display_float:	
  3838                           ;psect for function _display_float
  3839                           
  3840     1B0E                     l4118:	
  3841                           ;incstack = 0
  3842                           ; Regs used in _display_float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3843                           
  3844                           
  3845                           ;main.c: 86:     char str[16];;main.c: 87:     sprintf(str, "%.2f", num);
  3846     1B0E  3081               	movlw	low (STR_1| (0+32768))
  3847     1B0F  0021               	movlb	1	; select bank1
  3848     1B10  00E7               	movwf	sprintf@fmt^(0+128)
  3849     1B11  3098               	movlw	high (STR_1| (0+32768))
  3850     1B12  00E8               	movwf	(sprintf@fmt^(0+128)+1)
  3851     1B13  0022               	movlb	2	; select bank2
  3852     1B14  082F               	movf	(display_float@num+3)^(0+256),w
  3853     1B15  0021               	movlb	1	; select bank1
  3854     1B16  00EC               	movwf	((?_sprintf+3)^(0+128)+2)
  3855     1B17  0022               	movlb	2	; select bank2
  3856     1B18  082E               	movf	(display_float@num+2)^(0+256),w
  3857     1B19  0021               	movlb	1	; select bank1
  3858     1B1A  00EB               	movwf	((?_sprintf+2)^(0+128)+2)
  3859     1B1B  0022               	movlb	2	; select bank2
  3860     1B1C  082D               	movf	(display_float@num+1)^(0+256),w
  3861     1B1D  0021               	movlb	1	; select bank1
  3862     1B1E  00EA               	movwf	((?_sprintf+1)^(0+128)+2)
  3863     1B1F  0022               	movlb	2	; select bank2
  3864     1B20  082C               	movf	display_float@num^(0+256),w
  3865     1B21  0021               	movlb	1	; select bank1
  3866     1B22  00E9               	movwf	(?_sprintf^(0+128)+2)
  3867     1B23  3030               	movlw	(low (display_float@str| (0+256)))& (0+255)
  3868     1B24  319A  22CD  319B   	fcall	_sprintf
  3869     1B27                     l4120:
  3870                           
  3871                           ;main.c: 88:     lcd_DisplayString(str);
  3872     1B27  3030               	movlw	low display_float@str
  3873     1B28  00F2               	movwf	lcd_DisplayString@str
  3874     1B29  3001               	movlw	high display_float@str
  3875     1B2A  00F3               	movwf	lcd_DisplayString@str+1
  3876     1B2B  319A  2206  319B   	fcall	_lcd_DisplayString
  3877     1B2E                     l52:
  3878     1B2E  0008               	return
  3879     1B2F                     __end_of_display_float:
  3880                           
  3881                           	psect	text7
  3882     1ACD                     __ptext7:	
  3883 ;; *************** function _sprintf *****************
  3884 ;; Defined at:
  3885 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  s               1    wreg     PTR unsigned char 
  3888 ;;		 -> display_int@str(16), display_float@str(16), 
  3889 ;;  fmt             2   71[BANK1 ] PTR const unsigned char 
  3890 ;;		 -> STR_2(3), STR_1(5), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  s               1    0[BANK2 ] PTR unsigned char 
  3893 ;;		 -> display_int@str(16), display_float@str(16), 
  3894 ;;  f              10    2[BANK2 ] struct _IO_FILE
  3895 ;;  ret             2    0        int 
  3896 ;;  ap              1    1[BANK2 ] PTR void [1]
  3897 ;;		 -> ?_sprintf(2), 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2   71[BANK1 ] int 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3907 ;;      Params:         0       0       6       0       0       0       0       0
  3908 ;;      Locals:         0       0       0      12       0       0       0       0
  3909 ;;      Temps:          0       0       1       0       0       0       0       0
  3910 ;;      Totals:         0       0       7      12       0       0       0       0
  3911 ;;Total ram usage:       19 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 7
  3914 ;; This function calls:
  3915 ;;		_vfprintf
  3916 ;; This function is called by:
  3917 ;;		_display_float
  3918 ;;		_display_int
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922     1ACD                     _sprintf:	
  3923                           ;psect for function _sprintf
  3924                           
  3925                           
  3926                           ;incstack = 0
  3927                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3928                           ;sprintf@s stored from wreg
  3929     1ACD  0022               	movlb	2	; select bank2
  3930     1ACE  00A0               	movwf	sprintf@s^(0+256)
  3931     1ACF                     l4050:
  3932     1ACF  30E9               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3933     1AD0  00A1               	movwf	sprintf@ap^(0+256)
  3934     1AD1  0820               	movf	sprintf@s^(0+256),w
  3935     1AD2  00A2               	movwf	sprintf@f^(0+256)
  3936     1AD3                     l4052:
  3937     1AD3  01A4               	clrf	(sprintf@f^(0+256)+2)
  3938     1AD4  01A5               	clrf	((sprintf@f+1)^(0+256)+2)
  3939     1AD5                     l4054:
  3940     1AD5  01AA               	clrf	(sprintf@f^(0+256)+8)
  3941     1AD6  01AB               	clrf	((sprintf@f+1)^(0+256)+8)
  3942     1AD7                     l4056:
  3943     1AD7  0021               	movlb	1	; select bank1
  3944     1AD8  0868               	movf	(sprintf@fmt+1)^(0+128),w
  3945     1AD9  00E2               	movwf	(vfprintf@fmt+1)^(0+128)
  3946     1ADA  0867               	movf	sprintf@fmt^(0+128),w
  3947     1ADB  00E1               	movwf	vfprintf@fmt^(0+128)
  3948     1ADC  3021               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3949     1ADD  00E3               	movwf	vfprintf@ap^(0+128)
  3950     1ADE  3022               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3951     1ADF  319A  22AD  319A   	fcall	_vfprintf
  3952     1AE2                     l4058:
  3953     1AE2  0022               	movlb	2	; select bank2
  3954     1AE3  0824               	movf	(sprintf@f^(0+256)+2),w
  3955     1AE4  0720               	addwf	sprintf@s^(0+256),w
  3956     1AE5  0021               	movlb	1	; select bank1
  3957     1AE6  00ED               	movwf	??_sprintf^(0+128)
  3958     1AE7  086D               	movf	??_sprintf^(0+128),w
  3959     1AE8  0086               	movwf	6
  3960     1AE9  3001               	movlw	1	; select bank2/3
  3961     1AEA  0087               	movwf	7
  3962     1AEB  0181               	clrf	1
  3963     1AEC                     l786:
  3964     1AEC  0008               	return
  3965     1AED                     __end_of_sprintf:
  3966                           
  3967                           	psect	text8
  3968     1AAD                     __ptext8:	
  3969 ;; *************** function _vfprintf *****************
  3970 ;; Defined at:
  3971 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  fp              1    wreg     PTR struct _IO_FILE
  3974 ;;		 -> sprintf@f(10), 
  3975 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  3976 ;;		 -> STR_2(3), STR_1(5), 
  3977 ;;  ap              1   67[BANK1 ] PTR PTR void 
  3978 ;;		 -> sprintf@ap(1), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  fp              1   68[BANK1 ] PTR struct _IO_FILE
  3981 ;;		 -> sprintf@f(10), 
  3982 ;;  cfmt            2   69[BANK1 ] PTR unsigned char 
  3983 ;;		 -> STR_2(3), STR_1(5), 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2   65[BANK1 ] int 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3993 ;;      Params:         0       0       3       0       0       0       0       0
  3994 ;;      Locals:         0       0       3       0       0       0       0       0
  3995 ;;      Temps:          0       1       0       0       0       0       0       0
  3996 ;;      Totals:         0       1       6       0       0       0       0       0
  3997 ;;Total ram usage:        7 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 6
  4000 ;; This function calls:
  4001 ;;		_vfpfcnvrt
  4002 ;; This function is called by:
  4003 ;;		_sprintf
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007     1AAD                     _vfprintf:	
  4008                           ;psect for function _vfprintf
  4009                           
  4010                           
  4011                           ;incstack = 0
  4012                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4013                           ;vfprintf@fp stored from wreg
  4014     1AAD  0021               	movlb	1	; select bank1
  4015     1AAE  00E4               	movwf	vfprintf@fp^(0+128)
  4016     1AAF                     l4032:
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4019     1AAF  0862               	movf	(vfprintf@fmt+1)^(0+128),w
  4020     1AB0  00E6               	movwf	(vfprintf@cfmt+1)^(0+128)
  4021     1AB1  0861               	movf	vfprintf@fmt^(0+128),w
  4022     1AB2  00E5               	movwf	vfprintf@cfmt^(0+128)
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4025     1AB3  2AC0               	goto	l4036
  4026     1AB4                     l4034:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4029     1AB4  30E5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4030     1AB5  0020               	movlb	0	; select bank0
  4031     1AB6  00ED               	movwf	vfpfcnvrt@fmt
  4032     1AB7  0021               	movlb	1	; select bank1
  4033     1AB8  0863               	movf	vfprintf@ap^(0+128),w
  4034     1AB9  0020               	movlb	0	; select bank0
  4035     1ABA  00EE               	movwf	vfpfcnvrt@ap
  4036     1ABB  0021               	movlb	1	; select bank1
  4037     1ABC  0864               	movf	vfprintf@fp^(0+128),w
  4038     1ABD  3194  240A  319A   	fcall	_vfpfcnvrt
  4039     1AC0                     l4036:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4042     1AC0  0021               	movlb	1	; select bank1
  4043     1AC1  0865               	movf	vfprintf@cfmt^(0+128),w
  4044     1AC2  0084               	movwf	4
  4045     1AC3  0866               	movf	(vfprintf@cfmt+1)^(0+128),w
  4046     1AC4  0085               	movwf	5
  4047     1AC5  0012               	moviw fsr0++
  4048     1AC6  1D03               	btfss	3,2
  4049     1AC7  2AC9               	goto	u5541
  4050     1AC8  2ACA               	goto	u5540
  4051     1AC9                     u5541:
  4052     1AC9  2AB4               	goto	l4034
  4053     1ACA                     u5540:
  4054     1ACA                     l4038:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4057     1ACA  01E1               	clrf	?_vfprintf^(0+128)
  4058     1ACB  01E2               	clrf	(?_vfprintf+1)^(0+128)
  4059     1ACC                     l934:
  4060     1ACC  0008               	return
  4061     1ACD                     __end_of_vfprintf:
  4062                           
  4063                           	psect	text9
  4064     140A                     __ptext9:	
  4065 ;; *************** function _vfpfcnvrt *****************
  4066 ;; Defined at:
  4067 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  fp              1    wreg     PTR struct _IO_FILE
  4070 ;;		 -> sprintf@f(10), 
  4071 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  4072 ;;		 -> vfprintf@cfmt(2), 
  4073 ;;  ap              1   78[BANK0 ] PTR PTR void 
  4074 ;;		 -> sprintf@ap(1), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  4077 ;;		 -> sprintf@f(10), 
  4078 ;;  convarg         8   53[BANK1 ] struct .
  4079 ;;  cp              2   63[BANK1 ] PTR unsigned char 
  4080 ;;		 -> STR_2(3), STR_1(5), 
  4081 ;;  i               2    0        int 
  4082 ;;  done            2    0        int 
  4083 ;;  c               1   61[BANK1 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4093 ;;      Params:         0       2       0       0       0       0       0       0
  4094 ;;      Locals:         0       0      12       0       0       0       0       0
  4095 ;;      Temps:          0       0       4       0       0       0       0       0
  4096 ;;      Totals:         0       2      16       0       0       0       0       0
  4097 ;;Total ram usage:       18 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 5
  4100 ;; This function calls:
  4101 ;;		_atoi
  4102 ;;		_dtoa
  4103 ;;		_efgtoa
  4104 ;;		_fputc
  4105 ;;		_isdigit
  4106 ;; This function is called by:
  4107 ;;		_vfprintf
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111     140A                     _vfpfcnvrt:	
  4112                           ;psect for function _vfpfcnvrt
  4113                           
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4117                           ;vfpfcnvrt@fp stored from wreg
  4118     140A  0021               	movlb	1	; select bank1
  4119     140B  00DE               	movwf	vfpfcnvrt@fp^(0+128)
  4120     140C                     l3924:
  4121                           
  4122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4123     140C  0020               	movlb	0	; select bank0
  4124     140D  086D               	movf	vfpfcnvrt@fmt,w
  4125     140E  0086               	movwf	6
  4126     140F  0187               	clrf	7
  4127     1410  3F40               	moviw [0]fsr1
  4128     1411  0021               	movlb	1	; select bank1
  4129     1412  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4130     1413  3F41               	moviw [1]fsr1
  4131     1414  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4132     1415  0851               	movf	??_vfpfcnvrt^(0+128),w
  4133     1416  0084               	movwf	4
  4134     1417  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4135     1418  0085               	movwf	5
  4136     1419  0012               	moviw fsr0++
  4137     141A  3A25               	xorlw	37
  4138     141B  1D03               	btfss	3,2
  4139     141C  2C1E               	goto	u5451
  4140     141D  2C1F               	goto	u5450
  4141     141E                     u5451:
  4142     141E  2DD9               	goto	l4004
  4143     141F                     u5450:
  4144     141F                     l3926:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4147     141F  0020               	movlb	0	; select bank0
  4148     1420  086D               	movf	vfpfcnvrt@fmt,w
  4149     1421  0086               	movwf	6
  4150     1422  0187               	clrf	7
  4151     1423  3001               	movlw	1
  4152     1424  0781               	addwf	1,f
  4153     1425  3141               	addfsr 1,1
  4154     1426  1803               	skipnc
  4155     1427  0A81               	incf	1,f
  4156     1428                     l3928:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4159     1428  0022               	movlb	2	; select bank2
  4160     1429  01EA               	clrf	_width^(0+256)
  4161     142A  01EB               	clrf	(_width+1)^(0+256)
  4162     142B  1003               	clrc
  4163     142C  3000               	movlw	0
  4164     142D  1803               	btfsc	3,0
  4165     142E  3001               	movlw	1
  4166     142F  00EE               	movwf	_flags^(0+256)
  4167     1430                     l3930:
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4170     1430  30FF               	movlw	255
  4171     1431  00EC               	movwf	_prec^(0+256)
  4172     1432  30FF               	movlw	255
  4173     1433  00ED               	movwf	(_prec^(0+256)+1)
  4174     1434                     l3932:
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  4177     1434  0020               	movlb	0	; select bank0
  4178     1435  086D               	movf	vfpfcnvrt@fmt,w
  4179     1436  0086               	movwf	6
  4180     1437  0187               	clrf	7
  4181     1438  3F40               	moviw [0]fsr1
  4182     1439  0021               	movlb	1	; select bank1
  4183     143A  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4184     143B  3F41               	moviw [1]fsr1
  4185     143C  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4186     143D  0851               	movf	??_vfpfcnvrt^(0+128),w
  4187     143E  0084               	movwf	4
  4188     143F  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4189     1440  0085               	movwf	5
  4190     1441  0012               	moviw fsr0++
  4191     1442  3A2E               	xorlw	46
  4192     1443  1D03               	btfss	3,2
  4193     1444  2C46               	goto	u5461
  4194     1445  2C47               	goto	u5460
  4195     1446                     u5461:
  4196     1446  2CB4               	goto	l3952
  4197     1447                     u5460:
  4198     1447                     l3934:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  4201     1447  0022               	movlb	2	; select bank2
  4202     1448  01EC               	clrf	_prec^(0+256)
  4203     1449  01ED               	clrf	(_prec+1)^(0+256)
  4204     144A                     l3936:
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  4207     144A  0020               	movlb	0	; select bank0
  4208     144B  086D               	movf	vfpfcnvrt@fmt,w
  4209     144C  0086               	movwf	6
  4210     144D  0187               	clrf	7
  4211     144E  3001               	movlw	1
  4212     144F  0781               	addwf	1,f
  4213     1450  3141               	addfsr 1,1
  4214     1451  1803               	skipnc
  4215     1452  0A81               	incf	1,f
  4216     1453                     l3938:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  4219     1453  086D               	movf	vfpfcnvrt@fmt,w
  4220     1454  0086               	movwf	6
  4221     1455  0187               	clrf	7
  4222     1456  3F40               	moviw [0]fsr1
  4223     1457  0021               	movlb	1	; select bank1
  4224     1458  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4225     1459  3F41               	moviw [1]fsr1
  4226     145A  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4227     145B  0851               	movf	??_vfpfcnvrt^(0+128),w
  4228     145C  0084               	movwf	4
  4229     145D  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4230     145E  0085               	movwf	5
  4231     145F  0012               	moviw fsr0++
  4232     1460  3A2A               	xorlw	42
  4233     1461  1D03               	btfss	3,2
  4234     1462  2C64               	goto	u5471
  4235     1463  2C65               	goto	u5470
  4236     1464                     u5471:
  4237     1464  2C7D               	goto	l3944
  4238     1465                     u5470:
  4239     1465                     l3940:
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  4242     1465  0020               	movlb	0	; select bank0
  4243     1466  086D               	movf	vfpfcnvrt@fmt,w
  4244     1467  0086               	movwf	6
  4245     1468  0187               	clrf	7
  4246     1469  3001               	movlw	1
  4247     146A  0781               	addwf	1,f
  4248     146B  3141               	addfsr 1,1
  4249     146C  1803               	skipnc
  4250     146D  0A81               	incf	1,f
  4251     146E                     l3942:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4254     146E  086E               	movf	vfpfcnvrt@ap,w
  4255     146F  0086               	movwf	6
  4256     1470  3001               	movlw	1	; select bank2/3
  4257     1471  0087               	movwf	7
  4258     1472  0801               	movf	1,w
  4259     1473  0084               	movwf	4
  4260     1474  0185               	clrf	5
  4261     1475  3002               	movlw	2
  4262     1476  0781               	addwf	1,f
  4263     1477  3F00               	moviw [0]fsr0
  4264     1478  0022               	movlb	2	; select bank2
  4265     1479  00EC               	movwf	_prec^(0+256)
  4266     147A  3F01               	moviw [1]fsr0
  4267     147B  00ED               	movwf	(_prec+1)^(0+256)
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  4270     147C  2CB4               	goto	l3952
  4271     147D                     l3944:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  4274     147D  0020               	movlb	0	; select bank0
  4275     147E  086D               	movf	vfpfcnvrt@fmt,w
  4276     147F  0086               	movwf	6
  4277     1480  0187               	clrf	7
  4278     1481  3F40               	moviw [0]fsr1
  4279     1482  00F9               	movwf	atoi@s
  4280     1483  3F41               	moviw [1]fsr1
  4281     1484  00FA               	movwf	atoi@s+1
  4282     1485  319E  26CF  3194   	fcall	_atoi
  4283     1488  087A               	movf	?_atoi+1,w
  4284     1489  0022               	movlb	2	; select bank2
  4285     148A  00ED               	movwf	(_prec+1)^(0+256)
  4286     148B  0879               	movf	?_atoi,w
  4287     148C  00EC               	movwf	_prec^(0+256)
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4290     148D  2C97               	goto	l3950
  4291     148E                     l3946:
  4292                           
  4293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  4294     148E  0020               	movlb	0	; select bank0
  4295     148F  086D               	movf	vfpfcnvrt@fmt,w
  4296     1490  0086               	movwf	6
  4297     1491  0187               	clrf	7
  4298     1492  3001               	movlw	1
  4299     1493  0781               	addwf	1,f
  4300     1494  3141               	addfsr 1,1
  4301     1495  1803               	skipnc
  4302     1496  0A81               	incf	1,f
  4303     1497                     l3950:
  4304     1497  0020               	movlb	0	; select bank0
  4305     1498  086D               	movf	vfpfcnvrt@fmt,w
  4306     1499  0086               	movwf	6
  4307     149A  0187               	clrf	7
  4308     149B  3F40               	moviw [0]fsr1
  4309     149C  0021               	movlb	1	; select bank1
  4310     149D  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4311     149E  3F41               	moviw [1]fsr1
  4312     149F  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4313     14A0  0851               	movf	??_vfpfcnvrt^(0+128),w
  4314     14A1  0084               	movwf	4
  4315     14A2  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4316     14A3  0085               	movwf	5
  4317     14A4  0800               	movf	0,w	;code access
  4318     14A5  3ED0               	addlw	208
  4319     14A6  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4320     14A7  30FF               	movlw	255
  4321     14A8  1803               	skipnc
  4322     14A9  3000               	movlw	0
  4323     14AA  00D4               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  4324     14AB  3000               	movlw	0
  4325     14AC  0254               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  4326     14AD  300A               	movlw	10
  4327     14AE  1903               	skipnz
  4328     14AF  0253               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  4329     14B0  1C03               	skipc
  4330     14B1  2CB3               	goto	u5481
  4331     14B2  2CB4               	goto	u5480
  4332     14B3                     u5481:
  4333     14B3  2C8E               	goto	l3946
  4334     14B4                     u5480:
  4335     14B4                     l3952:
  4336                           
  4337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  4338     14B4  0020               	movlb	0	; select bank0
  4339     14B5  086D               	movf	vfpfcnvrt@fmt,w
  4340     14B6  0086               	movwf	6
  4341     14B7  0187               	clrf	7
  4342     14B8  3F40               	moviw [0]fsr1
  4343     14B9  0021               	movlb	1	; select bank1
  4344     14BA  00DF               	movwf	vfpfcnvrt@cp^(0+128)
  4345     14BB  3F41               	moviw [1]fsr1
  4346     14BC  00E0               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4347     14BD                     l3954:
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4350     14BD  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4351     14BE  0084               	movwf	4
  4352     14BF  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4353     14C0  0085               	movwf	5
  4354     14C1  0012               	moviw fsr0++
  4355     14C2  3A64               	xorlw	100
  4356     14C3  1903               	btfsc	3,2
  4357     14C4  2CC6               	goto	u5491
  4358     14C5  2CC7               	goto	u5490
  4359     14C6                     u5491:
  4360     14C6  2CD1               	goto	l3958
  4361     14C7                     u5490:
  4362     14C7                     l3956:
  4363     14C7  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4364     14C8  0084               	movwf	4
  4365     14C9  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4366     14CA  0085               	movwf	5
  4367     14CB  0012               	moviw fsr0++
  4368     14CC  3A69               	xorlw	105
  4369     14CD  1D03               	btfss	3,2
  4370     14CE  2CD0               	goto	u5501
  4371     14CF  2CD1               	goto	u5500
  4372     14D0                     u5501:
  4373     14D0  2D21               	goto	l3966
  4374     14D1                     u5500:
  4375     14D1                     l3958:
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4378     14D1  0020               	movlb	0	; select bank0
  4379     14D2  086E               	movf	vfpfcnvrt@ap,w
  4380     14D3  0086               	movwf	6
  4381     14D4  3001               	movlw	1	; select bank2/3
  4382     14D5  0087               	movwf	7
  4383     14D6  0801               	movf	1,w
  4384     14D7  0084               	movwf	4
  4385     14D8  0185               	clrf	5
  4386     14D9  3002               	movlw	2
  4387     14DA  0781               	addwf	1,f
  4388     14DB  3F00               	moviw [0]fsr0
  4389     14DC  0021               	movlb	1	; select bank1
  4390     14DD  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4391     14DE  3F01               	moviw [1]fsr0
  4392     14DF  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4393     14E0  0851               	movf	??_vfpfcnvrt^(0+128),w
  4394     14E1  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4395     14E2  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4396     14E3  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4397     14E4  0D89               	rlf	9,f
  4398     14E5  3B89               	subwfb	9,f
  4399     14E6  0989               	comf	9,f
  4400     14E7  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4401     14E8  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4402     14E9  00D9               	movwf	(vfpfcnvrt@convarg+4)^(0+128)
  4403     14EA  00DA               	movwf	(vfpfcnvrt@convarg+5)^(0+128)
  4404     14EB  00DB               	movwf	(vfpfcnvrt@convarg+6)^(0+128)
  4405     14EC  00DC               	movwf	(vfpfcnvrt@convarg+7)^(0+128)
  4406     14ED                     l3960:
  4407                           
  4408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4409     14ED  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4410     14EE  3E01               	addlw	1
  4411     14EF  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4412     14F0  3000               	movlw	0
  4413     14F1  3D60               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4414     14F2  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4415     14F3  0020               	movlb	0	; select bank0
  4416     14F4  086D               	movf	vfpfcnvrt@fmt,w
  4417     14F5  0086               	movwf	6
  4418     14F6  0187               	clrf	7
  4419     14F7  0021               	movlb	1	; select bank1
  4420     14F8  0851               	movf	??_vfpfcnvrt^(0+128),w
  4421     14F9  3FC0               	movwi [0]fsr1
  4422     14FA  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4423     14FB  3FC1               	movwi [1]fsr1
  4424     14FC                     l3962:
  4425                           
  4426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4427     14FC  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4428     14FD  0020               	movlb	0	; select bank0
  4429     14FE  00B0               	movwf	dtoa@d
  4430     14FF  0021               	movlb	1	; select bank1
  4431     1500  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4432     1501  0020               	movlb	0	; select bank0
  4433     1502  00B1               	movwf	dtoa@d+1
  4434     1503  0021               	movlb	1	; select bank1
  4435     1504  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4436     1505  0020               	movlb	0	; select bank0
  4437     1506  00B2               	movwf	dtoa@d+2
  4438     1507  0021               	movlb	1	; select bank1
  4439     1508  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4440     1509  0020               	movlb	0	; select bank0
  4441     150A  00B3               	movwf	dtoa@d+3
  4442     150B  0021               	movlb	1	; select bank1
  4443     150C  0859               	movf	(vfpfcnvrt@convarg+4)^(0+128),w
  4444     150D  0020               	movlb	0	; select bank0
  4445     150E  00B4               	movwf	dtoa@d+4
  4446     150F  0021               	movlb	1	; select bank1
  4447     1510  085A               	movf	(vfpfcnvrt@convarg+5)^(0+128),w
  4448     1511  0020               	movlb	0	; select bank0
  4449     1512  00B5               	movwf	dtoa@d+5
  4450     1513  0021               	movlb	1	; select bank1
  4451     1514  085B               	movf	(vfpfcnvrt@convarg+6)^(0+128),w
  4452     1515  0020               	movlb	0	; select bank0
  4453     1516  00B6               	movwf	dtoa@d+6
  4454     1517  0021               	movlb	1	; select bank1
  4455     1518  085C               	movf	(vfpfcnvrt@convarg+7)^(0+128),w
  4456     1519  0020               	movlb	0	; select bank0
  4457     151A  00B7               	movwf	dtoa@d+7
  4458     151B  0021               	movlb	1	; select bank1
  4459     151C  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4460     151D  3180  2075  3194   	fcall	_dtoa
  4461     1520  2DF3               	goto	l912
  4462     1521                     l3966:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  4465     1521  0020               	movlb	0	; select bank0
  4466     1522  086D               	movf	vfpfcnvrt@fmt,w
  4467     1523  0086               	movwf	6
  4468     1524  0187               	clrf	7
  4469     1525  3F40               	moviw [0]fsr1
  4470     1526  0021               	movlb	1	; select bank1
  4471     1527  00DF               	movwf	vfpfcnvrt@cp^(0+128)
  4472     1528  3F41               	moviw [1]fsr1
  4473     1529  00E0               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4474     152A                     l3968:
  4475                           
  4476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  4477     152A  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4478     152B  0084               	movwf	4
  4479     152C  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4480     152D  0085               	movwf	5
  4481     152E  0800               	movf	0,w	;code access
  4482     152F  00DD               	movwf	vfpfcnvrt@c^(0+128)
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  4485     1530  2D3B               	goto	l3978
  4486     1531                     l3970:
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  4489     1531  3001               	movlw	1
  4490     1532  07DF               	addwf	vfpfcnvrt@cp^(0+128),f
  4491     1533  3000               	movlw	0
  4492     1534  3DE0               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4493                           
  4494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  4495     1535  2D4E               	goto	l3980
  4496     1536                     l3972:
  4497                           
  4498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  4499     1536  306C               	movlw	108
  4500     1537  00DD               	movwf	vfpfcnvrt@c^(0+128)
  4501                           
  4502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  4503     1538  2D4E               	goto	l3980
  4504     1539                     l3974:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  4507     1539  01DD               	clrf	vfpfcnvrt@c^(0+128)
  4508                           
  4509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  4510     153A  2D4E               	goto	l3980
  4511     153B                     l3978:
  4512     153B  085D               	movf	vfpfcnvrt@c^(0+128),w
  4513     153C  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4514     153D  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4515                           
  4516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4517                           ; Switch size 1, requested type "simple"
  4518                           ; Number of cases is 1, Range of values is 0 to 0
  4519                           ; switch strategies available:
  4520                           ; Name         Instructions Cycles
  4521                           ; simple_byte            4     3 (average)
  4522                           ; direct_byte            8     6 (fixed)
  4523                           ; jumptable            260     6 (fixed)
  4524                           ;	Chosen strategy is simple_byte
  4525     153E  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4526     153F  3A00               	xorlw	0	; case 0
  4527     1540  1903               	skipnz
  4528     1541  2D43               	goto	l4668
  4529     1542  2D39               	goto	l3974
  4530     1543                     l4668:
  4531                           
  4532                           ; Switch size 1, requested type "simple"
  4533                           ; Number of cases is 3, Range of values is 76 to 108
  4534                           ; switch strategies available:
  4535                           ; Name         Instructions Cycles
  4536                           ; simple_byte           10     6 (average)
  4537                           ; direct_byte           75     9 (fixed)
  4538                           ; jumptable            263     9 (fixed)
  4539                           ;	Chosen strategy is simple_byte
  4540     1543  0851               	movf	??_vfpfcnvrt^(0+128),w
  4541     1544  3A4C               	xorlw	76	; case 76
  4542     1545  1903               	skipnz
  4543     1546  2D31               	goto	l3970
  4544     1547  3A2A               	xorlw	42	; case 102
  4545     1548  1903               	skipnz
  4546     1549  2D36               	goto	l3972
  4547     154A  3A0A               	xorlw	10	; case 108
  4548     154B  1903               	skipnz
  4549     154C  2D31               	goto	l3970
  4550     154D  2D39               	goto	l3974
  4551     154E                     l3980:
  4552     154E  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4553     154F  0084               	movwf	4
  4554     1550  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4555     1551  0085               	movwf	5
  4556     1552  0012               	moviw fsr0++
  4557     1553  3A66               	xorlw	102
  4558     1554  1D03               	btfss	3,2
  4559     1555  2D57               	goto	u5511
  4560     1556  2D58               	goto	u5510
  4561     1557                     u5511:
  4562     1557  2DCF               	goto	l4000
  4563     1558                     u5510:
  4564     1558  2D81               	goto	l3988
  4565     1559                     l3982:
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4568     1559  0020               	movlb	0	; select bank0
  4569     155A  086E               	movf	vfpfcnvrt@ap,w
  4570     155B  0086               	movwf	6
  4571     155C  3001               	movlw	1	; select bank2/3
  4572     155D  0087               	movwf	7
  4573     155E  0801               	movf	1,w
  4574     155F  0084               	movwf	4
  4575     1560  0185               	clrf	5
  4576     1561  3004               	movlw	4
  4577     1562  0781               	addwf	1,f
  4578     1563  3F00               	moviw [0]fsr0
  4579     1564  0021               	movlb	1	; select bank1
  4580     1565  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4581     1566  3F01               	moviw [1]fsr0
  4582     1567  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4583     1568  3F02               	moviw [2]fsr0
  4584     1569  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4585     156A  3F03               	moviw [3]fsr0
  4586     156B  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  4589     156C  2D91               	goto	l3990
  4590     156D                     l3984:
  4591                           
  4592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4593     156D  0020               	movlb	0	; select bank0
  4594     156E  086E               	movf	vfpfcnvrt@ap,w
  4595     156F  0086               	movwf	6
  4596     1570  3001               	movlw	1	; select bank2/3
  4597     1571  0087               	movwf	7
  4598     1572  0801               	movf	1,w
  4599     1573  0084               	movwf	4
  4600     1574  0185               	clrf	5
  4601     1575  3004               	movlw	4
  4602     1576  0781               	addwf	1,f
  4603     1577  3F00               	moviw [0]fsr0
  4604     1578  0021               	movlb	1	; select bank1
  4605     1579  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4606     157A  3F01               	moviw [1]fsr0
  4607     157B  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4608     157C  3F02               	moviw [2]fsr0
  4609     157D  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4610     157E  3F03               	moviw [3]fsr0
  4611     157F  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4612                           
  4613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  4614     1580  2D91               	goto	l3990
  4615     1581                     l3988:
  4616     1581  085D               	movf	vfpfcnvrt@c^(0+128),w
  4617     1582  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4618     1583  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4619                           
  4620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4621                           ; Switch size 1, requested type "simple"
  4622                           ; Number of cases is 1, Range of values is 0 to 0
  4623                           ; switch strategies available:
  4624                           ; Name         Instructions Cycles
  4625                           ; simple_byte            4     3 (average)
  4626                           ; direct_byte            8     6 (fixed)
  4627                           ; jumptable            260     6 (fixed)
  4628                           ;	Chosen strategy is simple_byte
  4629     1584  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4630     1585  3A00               	xorlw	0	; case 0
  4631     1586  1903               	skipnz
  4632     1587  2D89               	goto	l4670
  4633     1588  2D91               	goto	l3990
  4634     1589                     l4670:
  4635                           
  4636                           ; Switch size 1, requested type "simple"
  4637                           ; Number of cases is 2, Range of values is 76 to 108
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte            7     4 (average)
  4641                           ; direct_byte           75     9 (fixed)
  4642                           ; jumptable            263     9 (fixed)
  4643                           ;	Chosen strategy is simple_byte
  4644     1589  0851               	movf	??_vfpfcnvrt^(0+128),w
  4645     158A  3A4C               	xorlw	76	; case 76
  4646     158B  1903               	skipnz
  4647     158C  2D6D               	goto	l3984
  4648     158D  3A20               	xorlw	32	; case 108
  4649     158E  1903               	skipnz
  4650     158F  2D59               	goto	l3982
  4651     1590  2D91               	goto	l3990
  4652     1591                     l3990:
  4653                           
  4654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  4655     1591  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4656     1592  3E01               	addlw	1
  4657     1593  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4658     1594  3000               	movlw	0
  4659     1595  3D60               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4660     1596  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4661     1597  0020               	movlb	0	; select bank0
  4662     1598  086D               	movf	vfpfcnvrt@fmt,w
  4663     1599  0086               	movwf	6
  4664     159A  0187               	clrf	7
  4665     159B  0021               	movlb	1	; select bank1
  4666     159C  0851               	movf	??_vfpfcnvrt^(0+128),w
  4667     159D  3FC0               	movwi [0]fsr1
  4668     159E  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4669     159F  3FC1               	movwi [1]fsr1
  4670                           
  4671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  4672     15A0  2DBE               	goto	l3998
  4673     15A1                     l3992:
  4674                           
  4675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4676     15A1  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4677     15A2  0020               	movlb	0	; select bank0
  4678     15A3  00EB               	movwf	efgtoa@f+3
  4679     15A4  0021               	movlb	1	; select bank1
  4680     15A5  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4681     15A6  0020               	movlb	0	; select bank0
  4682     15A7  00EA               	movwf	efgtoa@f+2
  4683     15A8  0021               	movlb	1	; select bank1
  4684     15A9  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4685     15AA  0020               	movlb	0	; select bank0
  4686     15AB  00E9               	movwf	efgtoa@f+1
  4687     15AC  0021               	movlb	1	; select bank1
  4688     15AD  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4689     15AE  0020               	movlb	0	; select bank0
  4690     15AF  00E8               	movwf	efgtoa@f
  4691     15B0  0021               	movlb	1	; select bank1
  4692     15B1  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4693     15B2  0084               	movwf	4
  4694     15B3  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4695     15B4  0085               	movwf	5
  4696     15B5  0800               	movf	0,w	;code access
  4697     15B6  0020               	movlb	0	; select bank0
  4698     15B7  00EC               	movwf	efgtoa@c
  4699     15B8  0021               	movlb	1	; select bank1
  4700     15B9  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4701     15BA  3181  21AC  3194   	fcall	_efgtoa
  4702     15BD  2DF3               	goto	l912
  4703     15BE                     l3998:
  4704     15BE  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4705     15BF  0084               	movwf	4
  4706     15C0  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4707     15C1  0085               	movwf	5
  4708     15C2  0800               	movf	0,w	;code access
  4709     15C3  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4710     15C4  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4711                           
  4712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4713                           ; Switch size 1, requested type "simple"
  4714                           ; Number of cases is 1, Range of values is 0 to 0
  4715                           ; switch strategies available:
  4716                           ; Name         Instructions Cycles
  4717                           ; simple_byte            4     3 (average)
  4718                           ; direct_byte            8     6 (fixed)
  4719                           ; jumptable            260     6 (fixed)
  4720                           ;	Chosen strategy is simple_byte
  4721     15C5  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4722     15C6  3A00               	xorlw	0	; case 0
  4723     15C7  1903               	skipnz
  4724     15C8  2DCA               	goto	l4672
  4725     15C9  2DCF               	goto	l4000
  4726     15CA                     l4672:
  4727                           
  4728                           ; Switch size 1, requested type "simple"
  4729                           ; Number of cases is 1, Range of values is 102 to 102
  4730                           ; switch strategies available:
  4731                           ; Name         Instructions Cycles
  4732                           ; simple_byte            4     3 (average)
  4733                           ; direct_byte           11     9 (fixed)
  4734                           ; jumptable            263     9 (fixed)
  4735                           ;	Chosen strategy is simple_byte
  4736     15CA  0851               	movf	??_vfpfcnvrt^(0+128),w
  4737     15CB  3A66               	xorlw	102	; case 102
  4738     15CC  1903               	skipnz
  4739     15CD  2DA1               	goto	l3992
  4740     15CE  2DCF               	goto	l4000
  4741     15CF                     l4000:
  4742                           
  4743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4744     15CF  0020               	movlb	0	; select bank0
  4745     15D0  086D               	movf	vfpfcnvrt@fmt,w
  4746     15D1  0086               	movwf	6
  4747     15D2  0187               	clrf	7
  4748     15D3  3001               	movlw	1
  4749     15D4  0781               	addwf	1,f
  4750     15D5  3141               	addfsr 1,1
  4751     15D6  1803               	skipnc
  4752     15D7  0A81               	incf	1,f
  4753     15D8  2DF3               	goto	l912
  4754     15D9                     l4004:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4757     15D9  0020               	movlb	0	; select bank0
  4758     15DA  086D               	movf	vfpfcnvrt@fmt,w
  4759     15DB  0086               	movwf	6
  4760     15DC  0187               	clrf	7
  4761     15DD  3F40               	moviw [0]fsr1
  4762     15DE  0021               	movlb	1	; select bank1
  4763     15DF  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4764     15E0  3F41               	moviw [1]fsr1
  4765     15E1  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4766     15E2  0851               	movf	??_vfpfcnvrt^(0+128),w
  4767     15E3  0084               	movwf	4
  4768     15E4  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4769     15E5  0085               	movwf	5
  4770     15E6  0800               	movf	0,w	;code access
  4771     15E7  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4772     15E8  01D4               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4773     15E9  0853               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4774     15EA  00F0               	movwf	fputc@c
  4775     15EB  0854               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4776     15EC  00F1               	movwf	fputc@c+1
  4777     15ED  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4778     15EE  00F2               	movwf	fputc@fp
  4779     15EF  319D  250E  3194   	fcall	_fputc
  4780     15F2  2DCF               	goto	l4000
  4781     15F3                     l912:
  4782     15F3  0008               	return
  4783     15F4                     __end_of_vfpfcnvrt:
  4784                           
  4785                           	psect	text10
  4786     01AC                     __ptext10:	
  4787 ;; *************** function _efgtoa *****************
  4788 ;; Defined at:
  4789 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  fp              1    wreg     PTR struct _IO_FILE
  4792 ;;		 -> sprintf@f(10), 
  4793 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  4794 ;;  c               1   76[BANK0 ] unsigned char 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  fp              1   19[BANK1 ] PTR struct _IO_FILE
  4797 ;;		 -> sprintf@f(10), 
  4798 ;;  u               4   45[BANK1 ] struct flui
  4799 ;;  g               4   41[BANK1 ] struct flui
  4800 ;;  l               4   34[BANK1 ] struct flui
  4801 ;;  h               4   30[BANK1 ] struct flui
  4802 ;;  ou              4   24[BANK1 ] struct flui
  4803 ;;  n               2   39[BANK1 ] int 
  4804 ;;  i               2   28[BANK1 ] int 
  4805 ;;  w               2   22[BANK1 ] int 
  4806 ;;  e               2   20[BANK1 ] int 
  4807 ;;  m               2   17[BANK1 ] int 
  4808 ;;  d               2   15[BANK1 ] int 
  4809 ;;  t               2    8[BANK1 ] int 
  4810 ;;  p               2    6[BANK1 ] int 
  4811 ;;  ne              2    4[BANK1 ] int 
  4812 ;;  sign            1   38[BANK1 ] unsigned char 
  4813 ;;  nmode           1   14[BANK1 ] unsigned char 
  4814 ;;  mode            1   13[BANK1 ] unsigned char 
  4815 ;;  pp              1   12[BANK1 ] unsigned char 
  4816 ;;  esign           1    0        unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4826 ;;      Params:         0       5       0       0       0       0       0       0
  4827 ;;      Locals:         0       0      45       0       0       0       0       0
  4828 ;;      Temps:          0       0       4       0       0       0       0       0
  4829 ;;      Totals:         0       5      49       0       0       0       0       0
  4830 ;;Total ram usage:       54 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; Hardware stack levels required when called: 4
  4833 ;; This function calls:
  4834 ;;		___fladd
  4835 ;;		___fldiv
  4836 ;;		___fleq
  4837 ;;		___flge
  4838 ;;		___flmul
  4839 ;;		___flneg
  4840 ;;		___flsub
  4841 ;;		___fltol
  4842 ;;		___fpclassifyf
  4843 ;;		_floorf
  4844 ;;		_labs
  4845 ;;		_memcpy
  4846 ;;		_pad
  4847 ;;		_strcpy
  4848 ;; This function is called by:
  4849 ;;		_vfpfcnvrt
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853     01AC                     _efgtoa:	
  4854                           ;psect for function _efgtoa
  4855                           
  4856                           
  4857                           ;incstack = 0
  4858                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4859                           ;efgtoa@fp stored from wreg
  4860     01AC  0021               	movlb	1	; select bank1
  4861     01AD  00B3               	movwf	efgtoa@fp^(0+128)
  4862     01AE                     l3688:
  4863                           
  4864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  4865     01AE  01C6               	clrf	efgtoa@sign^(0+128)
  4866     01AF                     l3690:
  4867                           
  4868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  4869     01AF  0020               	movlb	0	; select bank0
  4870     01B0  086B               	movf	efgtoa@f+3,w
  4871     01B1  0021               	movlb	1	; select bank1
  4872     01B2  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4873     01B3  0020               	movlb	0	; select bank0
  4874     01B4  086A               	movf	efgtoa@f+2,w
  4875     01B5  0021               	movlb	1	; select bank1
  4876     01B6  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4877     01B7  0020               	movlb	0	; select bank0
  4878     01B8  0869               	movf	efgtoa@f+1,w
  4879     01B9  0021               	movlb	1	; select bank1
  4880     01BA  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4881     01BB  0020               	movlb	0	; select bank0
  4882     01BC  0868               	movf	efgtoa@f,w
  4883     01BD  0021               	movlb	1	; select bank1
  4884     01BE  00C9               	movwf	efgtoa@g^(0+128)
  4885     01BF                     l3692:
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  4888     01BF  084C               	movf	(efgtoa@g+3)^(0+128),w
  4889     01C0  0020               	movlb	0	; select bank0
  4890     01C1  00BD               	movwf	___flge@ff1+3
  4891     01C2  0021               	movlb	1	; select bank1
  4892     01C3  084B               	movf	(efgtoa@g+2)^(0+128),w
  4893     01C4  0020               	movlb	0	; select bank0
  4894     01C5  00BC               	movwf	___flge@ff1+2
  4895     01C6  0021               	movlb	1	; select bank1
  4896     01C7  084A               	movf	(efgtoa@g+1)^(0+128),w
  4897     01C8  0020               	movlb	0	; select bank0
  4898     01C9  00BB               	movwf	___flge@ff1+1
  4899     01CA  0021               	movlb	1	; select bank1
  4900     01CB  0849               	movf	efgtoa@g^(0+128),w
  4901     01CC  0020               	movlb	0	; select bank0
  4902     01CD  00BA               	movwf	___flge@ff1
  4903     01CE  3000               	movlw	0
  4904     01CF  00C1               	movwf	___flge@ff2+3
  4905     01D0  3000               	movlw	0
  4906     01D1  00C0               	movwf	___flge@ff2+2
  4907     01D2  3000               	movlw	0
  4908     01D3  00BF               	movwf	___flge@ff2+1
  4909     01D4  3000               	movlw	0
  4910     01D5  00BE               	movwf	___flge@ff2
  4911     01D6  319E  2644  3181   	fcall	___flge
  4912     01D9  1803               	btfsc	3,0
  4913     01DA  29DC               	goto	u5091
  4914     01DB  29DD               	goto	u5090
  4915     01DC                     u5091:
  4916     01DC  29F4               	goto	l3698
  4917     01DD                     u5090:
  4918     01DD                     l3694:
  4919                           
  4920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  4921     01DD  0021               	movlb	1	; select bank1
  4922     01DE  01C6               	clrf	efgtoa@sign^(0+128)
  4923     01DF  0AC6               	incf	efgtoa@sign^(0+128),f
  4924     01E0                     l3696:
  4925                           
  4926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  4927     01E0  084C               	movf	(efgtoa@g+3)^(0+128),w
  4928     01E1  00F3               	movwf	___flneg@f1+3
  4929     01E2  084B               	movf	(efgtoa@g+2)^(0+128),w
  4930     01E3  00F2               	movwf	___flneg@f1+2
  4931     01E4  084A               	movf	(efgtoa@g+1)^(0+128),w
  4932     01E5  00F1               	movwf	___flneg@f1+1
  4933     01E6  0849               	movf	efgtoa@g^(0+128),w
  4934     01E7  00F0               	movwf	___flneg@f1
  4935     01E8  3199  21E6  3181   	fcall	___flneg
  4936     01EB  0873               	movf	?___flneg+3,w
  4937     01EC  0021               	movlb	1	; select bank1
  4938     01ED  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4939     01EE  0872               	movf	?___flneg+2,w
  4940     01EF  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4941     01F0  0871               	movf	?___flneg+1,w
  4942     01F1  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4943     01F2  0870               	movf	?___flneg,w
  4944     01F3  00C9               	movwf	efgtoa@g^(0+128)
  4945     01F4                     l3698:
  4946                           
  4947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  4948     01F4  0021               	movlb	1	; select bank1
  4949     01F5  01C7               	clrf	efgtoa@n^(0+128)
  4950     01F6  01C8               	clrf	(efgtoa@n+1)^(0+128)
  4951     01F7                     l3700:
  4952                           
  4953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  4954     01F7  0022               	movlb	2	; select bank2
  4955     01F8  086B               	movf	(_width+1)^(0+256),w
  4956     01F9  0021               	movlb	1	; select bank1
  4957     01FA  00B7               	movwf	(efgtoa@w+1)^(0+128)
  4958     01FB  0022               	movlb	2	; select bank2
  4959     01FC  086A               	movf	_width^(0+256),w
  4960     01FD  0021               	movlb	1	; select bank1
  4961     01FE  00B6               	movwf	efgtoa@w^(0+128)
  4962     01FF                     l3702:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  4965     01FF  0846               	movf	efgtoa@sign^(0+128),w
  4966     0200  1903               	btfsc	3,2
  4967     0201  2A03               	goto	u5101
  4968     0202  2A04               	goto	u5100
  4969     0203                     u5101:
  4970     0203  2A14               	goto	l3710
  4971     0204                     u5100:
  4972     0204                     l3704:
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  4975     0204  0846               	movf	efgtoa@sign^(0+128),w
  4976     0205  1D03               	btfss	3,2
  4977     0206  2A08               	goto	u5111
  4978     0207  2A09               	goto	u5110
  4979     0208                     u5111:
  4980     0208  2A0E               	goto	l3708
  4981     0209                     u5110:
  4982     0209                     l3706:
  4983     0209  302B               	movlw	43
  4984     020A  00AA               	movwf	_efgtoa$943^(0+128)
  4985     020B  3000               	movlw	0
  4986     020C  00AB               	movwf	(_efgtoa$943^(0+128)+1)
  4987     020D  2A12               	goto	l853
  4988     020E                     l3708:
  4989     020E  302D               	movlw	45
  4990     020F  00AA               	movwf	_efgtoa$943^(0+128)
  4991     0210  3000               	movlw	0
  4992     0211  00AB               	movwf	(_efgtoa$943^(0+128)+1)
  4993     0212                     l853:
  4994     0212  082A               	movf	_efgtoa$943^(0+128),w
  4995     0213  00C6               	movwf	efgtoa@sign^(0+128)
  4996     0214                     l3710:
  4997                           
  4998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4999     0214  084C               	movf	(efgtoa@g+3)^(0+128),w
  5000     0215  00F3               	movwf	___fpclassifyf@x+3
  5001     0216  084B               	movf	(efgtoa@g+2)^(0+128),w
  5002     0217  00F2               	movwf	___fpclassifyf@x+2
  5003     0218  084A               	movf	(efgtoa@g+1)^(0+128),w
  5004     0219  00F1               	movwf	___fpclassifyf@x+1
  5005     021A  0849               	movf	efgtoa@g^(0+128),w
  5006     021B  00F0               	movwf	___fpclassifyf@x
  5007     021C  319D  25C5  3181   	fcall	___fpclassifyf
  5008     021F  0370               	decf	?___fpclassifyf,w
  5009     0220  0471               	iorwf	?___fpclassifyf+1,w
  5010     0221  1D03               	btfss	3,2
  5011     0222  2A24               	goto	u5121
  5012     0223  2A25               	goto	u5120
  5013     0224                     u5121:
  5014     0224  2A50               	goto	l3722
  5015     0225                     u5120:
  5016     0225                     l3712:
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  5019     0225  0021               	movlb	1	; select bank1
  5020     0226  0846               	movf	efgtoa@sign^(0+128),w
  5021     0227  1903               	btfsc	3,2
  5022     0228  2A2A               	goto	u5131
  5023     0229  2A2B               	goto	u5130
  5024     022A                     u5131:
  5025     022A  2A37               	goto	l3716
  5026     022B                     u5130:
  5027     022B                     l3714:
  5028                           
  5029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  5030     022B  0846               	movf	efgtoa@sign^(0+128),w
  5031     022C  0024               	movlb	4	; select bank4
  5032     022D  00A0               	movwf	_dbuf^(0+512)
  5033                           
  5034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  5035     022E  30FF               	movlw	255
  5036     022F  0021               	movlb	1	; select bank1
  5037     0230  07B6               	addwf	efgtoa@w^(0+128),f
  5038     0231  30FF               	movlw	255
  5039     0232  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5040                           
  5041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  5042     0233  3001               	movlw	1
  5043     0234  00C7               	movwf	efgtoa@n^(0+128)
  5044     0235  3000               	movlw	0
  5045     0236  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5046     0237                     l3716:
  5047                           
  5048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  5049     0237  3086               	movlw	low (STR_15| (0+32768))
  5050     0238  00F0               	movwf	strcpy@src
  5051     0239  3098               	movlw	high (STR_15| (0+32768))
  5052     023A  00F1               	movwf	strcpy@src+1
  5053     023B  0847               	movf	efgtoa@n^(0+128),w
  5054     023C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5055     023D  319A  226E  3181   	fcall	_strcpy
  5056     0240                     l3718:
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5059     0240  30FD               	movlw	253
  5060     0241  0021               	movlb	1	; select bank1
  5061     0242  07B6               	addwf	efgtoa@w^(0+128),f
  5062     0243  30FF               	movlw	255
  5063     0244  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5066     0245  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5067     0246  00FB               	movwf	pad@buf
  5068     0247  0837               	movf	(efgtoa@w+1)^(0+128),w
  5069     0248  00FD               	movwf	pad@p+1
  5070     0249  0836               	movf	efgtoa@w^(0+128),w
  5071     024A  00FC               	movwf	pad@p
  5072     024B  0833               	movf	efgtoa@fp^(0+128),w
  5073     024C  319B  23F7  3181   	fcall	_pad
  5074     024F  2FDA               	goto	l856
  5075     0250                     l3722:
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  5078     0250  0021               	movlb	1	; select bank1
  5079     0251  084C               	movf	(efgtoa@g+3)^(0+128),w
  5080     0252  00F3               	movwf	___fpclassifyf@x+3
  5081     0253  084B               	movf	(efgtoa@g+2)^(0+128),w
  5082     0254  00F2               	movwf	___fpclassifyf@x+2
  5083     0255  084A               	movf	(efgtoa@g+1)^(0+128),w
  5084     0256  00F1               	movwf	___fpclassifyf@x+1
  5085     0257  0849               	movf	efgtoa@g^(0+128),w
  5086     0258  00F0               	movwf	___fpclassifyf@x
  5087     0259  319D  25C5  3181   	fcall	___fpclassifyf
  5088     025C  0870               	movf	?___fpclassifyf,w
  5089     025D  0471               	iorwf	?___fpclassifyf+1,w
  5090     025E  1D03               	btfss	3,2
  5091     025F  2A61               	goto	u5141
  5092     0260  2A62               	goto	u5140
  5093     0261                     u5141:
  5094     0261  2A8D               	goto	l3734
  5095     0262                     u5140:
  5096     0262                     l3724:
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  5099     0262  0021               	movlb	1	; select bank1
  5100     0263  0846               	movf	efgtoa@sign^(0+128),w
  5101     0264  1903               	btfsc	3,2
  5102     0265  2A67               	goto	u5151
  5103     0266  2A68               	goto	u5150
  5104     0267                     u5151:
  5105     0267  2A74               	goto	l3728
  5106     0268                     u5150:
  5107     0268                     l3726:
  5108                           
  5109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  5110     0268  0846               	movf	efgtoa@sign^(0+128),w
  5111     0269  0024               	movlb	4	; select bank4
  5112     026A  00A0               	movwf	_dbuf^(0+512)
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  5115     026B  30FF               	movlw	255
  5116     026C  0021               	movlb	1	; select bank1
  5117     026D  07B6               	addwf	efgtoa@w^(0+128),f
  5118     026E  30FF               	movlw	255
  5119     026F  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5120                           
  5121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  5122     0270  3001               	movlw	1
  5123     0271  00C7               	movwf	efgtoa@n^(0+128)
  5124     0272  3000               	movlw	0
  5125     0273  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5126     0274                     l3728:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  5129     0274  308A               	movlw	low (STR_18| (0+32768))
  5130     0275  00F0               	movwf	strcpy@src
  5131     0276  3098               	movlw	high (STR_18| (0+32768))
  5132     0277  00F1               	movwf	strcpy@src+1
  5133     0278  0847               	movf	efgtoa@n^(0+128),w
  5134     0279  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5135     027A  319A  226E  3181   	fcall	_strcpy
  5136     027D                     l3730:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 570:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 571:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  5139     027D  30FD               	movlw	253
  5140     027E  0021               	movlb	1	; select bank1
  5141     027F  07B6               	addwf	efgtoa@w^(0+128),f
  5142     0280  30FF               	movlw	255
  5143     0281  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 572:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5146     0282  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5147     0283  00FB               	movwf	pad@buf
  5148     0284  0837               	movf	(efgtoa@w+1)^(0+128),w
  5149     0285  00FD               	movwf	pad@p+1
  5150     0286  0836               	movf	efgtoa@w^(0+128),w
  5151     0287  00FC               	movwf	pad@p
  5152     0288  0833               	movf	efgtoa@fp^(0+128),w
  5153     0289  319B  23F7  3181   	fcall	_pad
  5154     028C  2FDA               	goto	l856
  5155     028D                     l3734:
  5156                           
  5157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  5158     028D  303F               	movlw	63
  5159     028E  0021               	movlb	1	; select bank1
  5160     028F  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5161     0290  3080               	movlw	128
  5162     0291  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5163     0292  3000               	movlw	0
  5164     0293  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5165     0294  3000               	movlw	0
  5166     0295  00CD               	movwf	efgtoa@u^(0+128)
  5167     0296                     l3736:
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  5170     0296  01B4               	clrf	efgtoa@e^(0+128)
  5171     0297  01B5               	clrf	(efgtoa@e+1)^(0+128)
  5172     0298                     l3738:
  5173                           
  5174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  5175     0298  084C               	movf	(efgtoa@g+3)^(0+128),w
  5176     0299  00F3               	movwf	___fleq@ff1+3
  5177     029A  084B               	movf	(efgtoa@g+2)^(0+128),w
  5178     029B  00F2               	movwf	___fleq@ff1+2
  5179     029C  084A               	movf	(efgtoa@g+1)^(0+128),w
  5180     029D  00F1               	movwf	___fleq@ff1+1
  5181     029E  0849               	movf	efgtoa@g^(0+128),w
  5182     029F  00F0               	movwf	___fleq@ff1
  5183     02A0  3000               	movlw	0
  5184     02A1  00F7               	movwf	___fleq@ff2+3
  5185     02A2  3000               	movlw	0
  5186     02A3  00F6               	movwf	___fleq@ff2+2
  5187     02A4  3000               	movlw	0
  5188     02A5  00F5               	movwf	___fleq@ff2+1
  5189     02A6  3000               	movlw	0
  5190     02A7  00F4               	movwf	___fleq@ff2
  5191     02A8  319C  246D  3181   	fcall	___fleq
  5192     02AB  1803               	btfsc	3,0
  5193     02AC  2AAE               	goto	u5161
  5194     02AD  2AAF               	goto	u5160
  5195     02AE                     u5161:
  5196     02AE  2BEB               	goto	l3764
  5197     02AF                     u5160:
  5198     02AF  2ABD               	goto	l3744
  5199     02B0                     l3742:
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  5202     02B0  0021               	movlb	1	; select bank1
  5203     02B1  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5204     02B2  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5205     02B3  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5206     02B4  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5207     02B5  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5208     02B6  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5209     02B7  0838               	movf	efgtoa@ou^(0+128),w
  5210     02B8  00CD               	movwf	efgtoa@u^(0+128)
  5211                           
  5212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  5213     02B9  3001               	movlw	1
  5214     02BA  07B4               	addwf	efgtoa@e^(0+128),f
  5215     02BB  3000               	movlw	0
  5216     02BC  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5217     02BD                     l3744:
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5220     02BD  3041               	movlw	65
  5221     02BE  0020               	movlb	0	; select bank0
  5222     02BF  00A3               	movwf	___flmul@b+3
  5223     02C0  3020               	movlw	32
  5224     02C1  00A2               	movwf	___flmul@b+2
  5225     02C2  3000               	movlw	0
  5226     02C3  00A1               	movwf	___flmul@b+1
  5227     02C4  3000               	movlw	0
  5228     02C5  00A0               	movwf	___flmul@b
  5229     02C6  0021               	movlb	1	; select bank1
  5230     02C7  0850               	movf	(efgtoa@u+3)^(0+128),w
  5231     02C8  0020               	movlb	0	; select bank0
  5232     02C9  00A7               	movwf	___flmul@a+3
  5233     02CA  0021               	movlb	1	; select bank1
  5234     02CB  084F               	movf	(efgtoa@u+2)^(0+128),w
  5235     02CC  0020               	movlb	0	; select bank0
  5236     02CD  00A6               	movwf	___flmul@a+2
  5237     02CE  0021               	movlb	1	; select bank1
  5238     02CF  084E               	movf	(efgtoa@u+1)^(0+128),w
  5239     02D0  0020               	movlb	0	; select bank0
  5240     02D1  00A5               	movwf	___flmul@a+1
  5241     02D2  0021               	movlb	1	; select bank1
  5242     02D3  084D               	movf	efgtoa@u^(0+128),w
  5243     02D4  0020               	movlb	0	; select bank0
  5244     02D5  00A4               	movwf	___flmul@a
  5245     02D6  3189  21D2  3181   	fcall	___flmul
  5246     02D9  0020               	movlb	0	; select bank0
  5247     02DA  0823               	movf	?___flmul+3,w
  5248     02DB  0021               	movlb	1	; select bank1
  5249     02DC  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5250     02DD  0020               	movlb	0	; select bank0
  5251     02DE  0822               	movf	?___flmul+2,w
  5252     02DF  0021               	movlb	1	; select bank1
  5253     02E0  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5254     02E1  0020               	movlb	0	; select bank0
  5255     02E2  0821               	movf	?___flmul+1,w
  5256     02E3  0021               	movlb	1	; select bank1
  5257     02E4  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5258     02E5  0020               	movlb	0	; select bank0
  5259     02E6  0820               	movf	?___flmul,w
  5260     02E7  0021               	movlb	1	; select bank1
  5261     02E8  00B8               	movwf	efgtoa@ou^(0+128)
  5262     02E9                     l3746:
  5263     02E9  0838               	movf	efgtoa@ou^(0+128),w
  5264     02EA  0249               	subwf	efgtoa@g^(0+128),w
  5265     02EB  00A0               	movwf	??_efgtoa^(0+128)
  5266     02EC  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5267     02ED  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5268     02EE  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5269     02EF  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5270     02F0  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5271     02F1  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5272     02F2  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5273     02F3  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5274     02F4  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5275     02F5  0823               	movf	(??_efgtoa+3)^(0+128),w
  5276     02F6  00F3               	movwf	labs@a+3
  5277     02F7  0822               	movf	(??_efgtoa+2)^(0+128),w
  5278     02F8  00F2               	movwf	labs@a+2
  5279     02F9  0821               	movf	(??_efgtoa+1)^(0+128),w
  5280     02FA  00F1               	movwf	labs@a+1
  5281     02FB  0820               	movf	??_efgtoa^(0+128),w
  5282     02FC  00F0               	movwf	labs@a
  5283     02FD  319B  232F  3181   	fcall	_labs
  5284     0300  1BF3               	btfsc	?_labs+3,7
  5285     0301  2B10               	goto	u5171
  5286     0302  0873               	movf	?_labs+3,w
  5287     0303  1D03               	btfss	3,2
  5288     0304  2B11               	goto	u5170
  5289     0305  0872               	movf	?_labs+2,w
  5290     0306  1D03               	btfss	3,2
  5291     0307  2B11               	goto	u5170
  5292     0308  0871               	movf	?_labs+1,w
  5293     0309  1D03               	btfss	3,2
  5294     030A  2B11               	goto	u5170
  5295     030B  3002               	movlw	2
  5296     030C  0270               	subwf	?_labs,w
  5297     030D  1C03               	btfss	3,0
  5298     030E  2B10               	goto	u5171
  5299     030F  2B11               	goto	u5170
  5300     0310                     u5171:
  5301     0310  2AB0               	goto	l3742
  5302     0311                     u5170:
  5303     0311                     l3748:
  5304     0311  0021               	movlb	1	; select bank1
  5305     0312  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5306     0313  0020               	movlb	0	; select bank0
  5307     0314  00BD               	movwf	___flge@ff1+3
  5308     0315  0021               	movlb	1	; select bank1
  5309     0316  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5310     0317  0020               	movlb	0	; select bank0
  5311     0318  00BC               	movwf	___flge@ff1+2
  5312     0319  0021               	movlb	1	; select bank1
  5313     031A  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5314     031B  0020               	movlb	0	; select bank0
  5315     031C  00BB               	movwf	___flge@ff1+1
  5316     031D  0021               	movlb	1	; select bank1
  5317     031E  0838               	movf	efgtoa@ou^(0+128),w
  5318     031F  0020               	movlb	0	; select bank0
  5319     0320  00BA               	movwf	___flge@ff1
  5320     0321  0021               	movlb	1	; select bank1
  5321     0322  084C               	movf	(efgtoa@g+3)^(0+128),w
  5322     0323  0020               	movlb	0	; select bank0
  5323     0324  00C1               	movwf	___flge@ff2+3
  5324     0325  0021               	movlb	1	; select bank1
  5325     0326  084B               	movf	(efgtoa@g+2)^(0+128),w
  5326     0327  0020               	movlb	0	; select bank0
  5327     0328  00C0               	movwf	___flge@ff2+2
  5328     0329  0021               	movlb	1	; select bank1
  5329     032A  084A               	movf	(efgtoa@g+1)^(0+128),w
  5330     032B  0020               	movlb	0	; select bank0
  5331     032C  00BF               	movwf	___flge@ff2+1
  5332     032D  0021               	movlb	1	; select bank1
  5333     032E  0849               	movf	efgtoa@g^(0+128),w
  5334     032F  0020               	movlb	0	; select bank0
  5335     0330  00BE               	movwf	___flge@ff2
  5336     0331  319E  2644  3181   	fcall	___flge
  5337     0334  1C03               	btfss	3,0
  5338     0335  2B37               	goto	u5181
  5339     0336  2B38               	goto	u5180
  5340     0337                     u5181:
  5341     0337  2AB0               	goto	l3742
  5342     0338                     u5180:
  5343     0338                     l3750:
  5344                           
  5345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5346     0338  0021               	movlb	1	; select bank1
  5347     0339  084D               	movf	efgtoa@u^(0+128),w
  5348     033A  0249               	subwf	efgtoa@g^(0+128),w
  5349     033B  00A0               	movwf	??_efgtoa^(0+128)
  5350     033C  084E               	movf	(efgtoa@u+1)^(0+128),w
  5351     033D  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5352     033E  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5353     033F  084F               	movf	(efgtoa@u+2)^(0+128),w
  5354     0340  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5355     0341  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5356     0342  0850               	movf	(efgtoa@u+3)^(0+128),w
  5357     0343  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5358     0344  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5359     0345  0823               	movf	(??_efgtoa+3)^(0+128),w
  5360     0346  00F3               	movwf	labs@a+3
  5361     0347  0822               	movf	(??_efgtoa+2)^(0+128),w
  5362     0348  00F2               	movwf	labs@a+2
  5363     0349  0821               	movf	(??_efgtoa+1)^(0+128),w
  5364     034A  00F1               	movwf	labs@a+1
  5365     034B  0820               	movf	??_efgtoa^(0+128),w
  5366     034C  00F0               	movwf	labs@a
  5367     034D  319B  232F  3181   	fcall	_labs
  5368     0350  1BF3               	btfsc	?_labs+3,7
  5369     0351  2B61               	goto	u5190
  5370     0352  0873               	movf	?_labs+3,w
  5371     0353  1D03               	btfss	3,2
  5372     0354  2B60               	goto	u5191
  5373     0355  0872               	movf	?_labs+2,w
  5374     0356  1D03               	btfss	3,2
  5375     0357  2B60               	goto	u5191
  5376     0358  0871               	movf	?_labs+1,w
  5377     0359  1D03               	btfss	3,2
  5378     035A  2B60               	goto	u5191
  5379     035B  3002               	movlw	2
  5380     035C  0270               	subwf	?_labs,w
  5381     035D  1803               	btfsc	3,0
  5382     035E  2B60               	goto	u5191
  5383     035F  2B61               	goto	u5190
  5384     0360                     u5191:
  5385     0360  2BC4               	goto	l3762
  5386     0361                     u5190:
  5387     0361                     l3752:
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  5390     0361  0021               	movlb	1	; select bank1
  5391     0362  0850               	movf	(efgtoa@u+3)^(0+128),w
  5392     0363  00CC               	movwf	(efgtoa@g+3)^(0+128)
  5393     0364  084F               	movf	(efgtoa@u+2)^(0+128),w
  5394     0365  00CB               	movwf	(efgtoa@g+2)^(0+128)
  5395     0366  084E               	movf	(efgtoa@u+1)^(0+128),w
  5396     0367  00CA               	movwf	(efgtoa@g+1)^(0+128)
  5397     0368  084D               	movf	efgtoa@u^(0+128),w
  5398     0369  00C9               	movwf	efgtoa@g^(0+128)
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  5401     036A  2BEB               	goto	l3764
  5402     036B                     l3754:
  5403                           
  5404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  5405     036B  3041               	movlw	65
  5406     036C  0020               	movlb	0	; select bank0
  5407     036D  00BD               	movwf	___fldiv@a+3
  5408     036E  3020               	movlw	32
  5409     036F  00BC               	movwf	___fldiv@a+2
  5410     0370  3000               	movlw	0
  5411     0371  00BB               	movwf	___fldiv@a+1
  5412     0372  3000               	movlw	0
  5413     0373  00BA               	movwf	___fldiv@a
  5414     0374  0021               	movlb	1	; select bank1
  5415     0375  0850               	movf	(efgtoa@u+3)^(0+128),w
  5416     0376  0020               	movlb	0	; select bank0
  5417     0377  00C1               	movwf	___fldiv@b+3
  5418     0378  0021               	movlb	1	; select bank1
  5419     0379  084F               	movf	(efgtoa@u+2)^(0+128),w
  5420     037A  0020               	movlb	0	; select bank0
  5421     037B  00C0               	movwf	___fldiv@b+2
  5422     037C  0021               	movlb	1	; select bank1
  5423     037D  084E               	movf	(efgtoa@u+1)^(0+128),w
  5424     037E  0020               	movlb	0	; select bank0
  5425     037F  00BF               	movwf	___fldiv@b+1
  5426     0380  0021               	movlb	1	; select bank1
  5427     0381  084D               	movf	efgtoa@u^(0+128),w
  5428     0382  0020               	movlb	0	; select bank0
  5429     0383  00BE               	movwf	___fldiv@b
  5430     0384  3188  2028  3181   	fcall	___fldiv
  5431     0387  0020               	movlb	0	; select bank0
  5432     0388  083D               	movf	?___fldiv+3,w
  5433     0389  0021               	movlb	1	; select bank1
  5434     038A  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5435     038B  0020               	movlb	0	; select bank0
  5436     038C  083C               	movf	?___fldiv+2,w
  5437     038D  0021               	movlb	1	; select bank1
  5438     038E  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5439     038F  0020               	movlb	0	; select bank0
  5440     0390  083B               	movf	?___fldiv+1,w
  5441     0391  0021               	movlb	1	; select bank1
  5442     0392  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5443     0393  0020               	movlb	0	; select bank0
  5444     0394  083A               	movf	?___fldiv,w
  5445     0395  0021               	movlb	1	; select bank1
  5446     0396  00CD               	movwf	efgtoa@u^(0+128)
  5447     0397                     l3756:
  5448                           
  5449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  5450     0397  30FF               	movlw	255
  5451     0398  07B4               	addwf	efgtoa@e^(0+128),f
  5452     0399  30FF               	movlw	255
  5453     039A  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5454     039B                     l3758:
  5455                           
  5456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5457     039B  084D               	movf	efgtoa@u^(0+128),w
  5458     039C  0249               	subwf	efgtoa@g^(0+128),w
  5459     039D  00A0               	movwf	??_efgtoa^(0+128)
  5460     039E  084E               	movf	(efgtoa@u+1)^(0+128),w
  5461     039F  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5462     03A0  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5463     03A1  084F               	movf	(efgtoa@u+2)^(0+128),w
  5464     03A2  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5465     03A3  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5466     03A4  0850               	movf	(efgtoa@u+3)^(0+128),w
  5467     03A5  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5468     03A6  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5469     03A7  0823               	movf	(??_efgtoa+3)^(0+128),w
  5470     03A8  00F3               	movwf	labs@a+3
  5471     03A9  0822               	movf	(??_efgtoa+2)^(0+128),w
  5472     03AA  00F2               	movwf	labs@a+2
  5473     03AB  0821               	movf	(??_efgtoa+1)^(0+128),w
  5474     03AC  00F1               	movwf	labs@a+1
  5475     03AD  0820               	movf	??_efgtoa^(0+128),w
  5476     03AE  00F0               	movwf	labs@a
  5477     03AF  319B  232F  3181   	fcall	_labs
  5478     03B2  1BF3               	btfsc	?_labs+3,7
  5479     03B3  2BC3               	goto	u5200
  5480     03B4  0873               	movf	?_labs+3,w
  5481     03B5  1D03               	btfss	3,2
  5482     03B6  2BC2               	goto	u5201
  5483     03B7  0872               	movf	?_labs+2,w
  5484     03B8  1D03               	btfss	3,2
  5485     03B9  2BC2               	goto	u5201
  5486     03BA  0871               	movf	?_labs+1,w
  5487     03BB  1D03               	btfss	3,2
  5488     03BC  2BC2               	goto	u5201
  5489     03BD  3002               	movlw	2
  5490     03BE  0270               	subwf	?_labs,w
  5491     03BF  1803               	btfsc	3,0
  5492     03C0  2BC2               	goto	u5201
  5493     03C1  2BC3               	goto	u5200
  5494     03C2                     u5201:
  5495     03C2  2BC4               	goto	l3762
  5496     03C3                     u5200:
  5497     03C3  2B61               	goto	l3752
  5498     03C4                     l3762:
  5499                           
  5500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  5501     03C4  0021               	movlb	1	; select bank1
  5502     03C5  084C               	movf	(efgtoa@g+3)^(0+128),w
  5503     03C6  0020               	movlb	0	; select bank0
  5504     03C7  00BD               	movwf	___flge@ff1+3
  5505     03C8  0021               	movlb	1	; select bank1
  5506     03C9  084B               	movf	(efgtoa@g+2)^(0+128),w
  5507     03CA  0020               	movlb	0	; select bank0
  5508     03CB  00BC               	movwf	___flge@ff1+2
  5509     03CC  0021               	movlb	1	; select bank1
  5510     03CD  084A               	movf	(efgtoa@g+1)^(0+128),w
  5511     03CE  0020               	movlb	0	; select bank0
  5512     03CF  00BB               	movwf	___flge@ff1+1
  5513     03D0  0021               	movlb	1	; select bank1
  5514     03D1  0849               	movf	efgtoa@g^(0+128),w
  5515     03D2  0020               	movlb	0	; select bank0
  5516     03D3  00BA               	movwf	___flge@ff1
  5517     03D4  0021               	movlb	1	; select bank1
  5518     03D5  0850               	movf	(efgtoa@u+3)^(0+128),w
  5519     03D6  0020               	movlb	0	; select bank0
  5520     03D7  00C1               	movwf	___flge@ff2+3
  5521     03D8  0021               	movlb	1	; select bank1
  5522     03D9  084F               	movf	(efgtoa@u+2)^(0+128),w
  5523     03DA  0020               	movlb	0	; select bank0
  5524     03DB  00C0               	movwf	___flge@ff2+2
  5525     03DC  0021               	movlb	1	; select bank1
  5526     03DD  084E               	movf	(efgtoa@u+1)^(0+128),w
  5527     03DE  0020               	movlb	0	; select bank0
  5528     03DF  00BF               	movwf	___flge@ff2+1
  5529     03E0  0021               	movlb	1	; select bank1
  5530     03E1  084D               	movf	efgtoa@u^(0+128),w
  5531     03E2  0020               	movlb	0	; select bank0
  5532     03E3  00BE               	movwf	___flge@ff2
  5533     03E4  319E  2644  3181   	fcall	___flge
  5534     03E7  1C03               	btfss	3,0
  5535     03E8  2BEA               	goto	u5211
  5536     03E9  2BEB               	goto	u5210
  5537     03EA                     u5211:
  5538     03EA  2B6B               	goto	l3754
  5539     03EB                     u5210:
  5540     03EB                     l3764:
  5541                           
  5542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  5543     03EB  0020               	movlb	0	; select bank0
  5544     03EC  086C               	movf	efgtoa@c,w
  5545     03ED  0021               	movlb	1	; select bank1
  5546     03EE  00AD               	movwf	efgtoa@mode^(0+128)
  5547                           
  5548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  5549     03EF  082D               	movf	efgtoa@mode^(0+128),w
  5550     03F0  00AE               	movwf	efgtoa@nmode^(0+128)
  5551     03F1                     l3766:
  5552                           
  5553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  5554     03F1  0022               	movlb	2	; select bank2
  5555     03F2  1BED               	btfsc	(_prec+1)^(0+256),7
  5556     03F3  2BF5               	goto	u5221
  5557     03F4  2BF6               	goto	u5220
  5558     03F5                     u5221:
  5559     03F5  2BFE               	goto	l3770
  5560     03F6                     u5220:
  5561     03F6                     l3768:
  5562     03F6  086D               	movf	(_prec+1)^(0+256),w
  5563     03F7  0021               	movlb	1	; select bank1
  5564     03F8  00A7               	movwf	(efgtoa@p+1)^(0+128)
  5565     03F9  0022               	movlb	2	; select bank2
  5566     03FA  086C               	movf	_prec^(0+256),w
  5567     03FB  0021               	movlb	1	; select bank1
  5568     03FC  00A6               	movwf	efgtoa@p^(0+128)
  5569     03FD  2C03               	goto	l872
  5570     03FE                     l3770:
  5571     03FE  3006               	movlw	6
  5572     03FF  0021               	movlb	1	; select bank1
  5573     0400  00A6               	movwf	efgtoa@p^(0+128)
  5574     0401  3000               	movlw	0
  5575     0402  00A7               	movwf	(efgtoa@p^(0+128)+1)
  5576     0403                     l872:
  5577                           
  5578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  5579     0403  0827               	movf	(efgtoa@p+1)^(0+128),w
  5580     0404  00B2               	movwf	(efgtoa@m+1)^(0+128)
  5581     0405  0826               	movf	efgtoa@p^(0+128),w
  5582     0406  00B1               	movwf	efgtoa@m^(0+128)
  5583                           
  5584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  5585     0407  3001               	movlw	1
  5586     0408  07B1               	addwf	efgtoa@m^(0+128),f
  5587     0409  3000               	movlw	0
  5588     040A  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5589     040B                     l3772:
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  5592     040B  3066               	movlw	102
  5593     040C  062E               	xorwf	efgtoa@nmode^(0+128),w
  5594     040D  1D03               	btfss	3,2
  5595     040E  2C10               	goto	u5231
  5596     040F  2C11               	goto	u5230
  5597     0410                     u5231:
  5598     0410  2C29               	goto	l3784
  5599     0411                     u5230:
  5600     0411                     l3774:
  5601                           
  5602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  5603     0411  1FB5               	btfss	(efgtoa@e+1)^(0+128),7
  5604     0412  2C14               	goto	u5241
  5605     0413  2C15               	goto	u5240
  5606     0414                     u5241:
  5607     0414  2C1F               	goto	l3780
  5608     0415                     u5240:
  5609     0415                     l3776:
  5610                           
  5611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  5612     0415  303F               	movlw	63
  5613     0416  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5614     0417  3080               	movlw	128
  5615     0418  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5616     0419  3000               	movlw	0
  5617     041A  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5618     041B  3000               	movlw	0
  5619     041C  00CD               	movwf	efgtoa@u^(0+128)
  5620     041D                     l3778:
  5621                           
  5622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  5623     041D  01B4               	clrf	efgtoa@e^(0+128)
  5624     041E  01B5               	clrf	(efgtoa@e+1)^(0+128)
  5625     041F                     l3780:
  5626                           
  5627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  5628     041F  3067               	movlw	103
  5629     0420  062D               	xorwf	efgtoa@mode^(0+128),w
  5630     0421  1903               	btfsc	3,2
  5631     0422  2C24               	goto	u5251
  5632     0423  2C25               	goto	u5250
  5633     0424                     u5251:
  5634     0424  2C29               	goto	l3784
  5635     0425                     u5250:
  5636     0425                     l3782:
  5637                           
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  5639     0425  0834               	movf	efgtoa@e^(0+128),w
  5640     0426  07B1               	addwf	efgtoa@m^(0+128),f
  5641     0427  0835               	movf	(efgtoa@e+1)^(0+128),w
  5642     0428  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5643     0429                     l3784:
  5644                           
  5645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  5646     0429  01BC               	clrf	efgtoa@i^(0+128)
  5647     042A  01BD               	clrf	(efgtoa@i+1)^(0+128)
  5648     042B                     l3786:
  5649                           
  5650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  5651     042B  084C               	movf	(efgtoa@g+3)^(0+128),w
  5652     042C  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5653     042D  084B               	movf	(efgtoa@g+2)^(0+128),w
  5654     042E  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5655     042F  084A               	movf	(efgtoa@g+1)^(0+128),w
  5656     0430  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5657     0431  0849               	movf	efgtoa@g^(0+128),w
  5658     0432  00BE               	movwf	efgtoa@h^(0+128)
  5659     0433                     l3788:
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  5662     0433  0850               	movf	(efgtoa@u+3)^(0+128),w
  5663     0434  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5664     0435  084F               	movf	(efgtoa@u+2)^(0+128),w
  5665     0436  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5666     0437  084E               	movf	(efgtoa@u+1)^(0+128),w
  5667     0438  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5668     0439  084D               	movf	efgtoa@u^(0+128),w
  5669     043A  00B8               	movwf	efgtoa@ou^(0+128)
  5670                           
  5671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5672     043B  2D09               	goto	l3794
  5673     043C                     l3790:
  5674                           
  5675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  5676     043C  0021               	movlb	1	; select bank1
  5677     043D  0850               	movf	(efgtoa@u+3)^(0+128),w
  5678     043E  0020               	movlb	0	; select bank0
  5679     043F  00BD               	movwf	___fldiv@a+3
  5680     0440  0021               	movlb	1	; select bank1
  5681     0441  084F               	movf	(efgtoa@u+2)^(0+128),w
  5682     0442  0020               	movlb	0	; select bank0
  5683     0443  00BC               	movwf	___fldiv@a+2
  5684     0444  0021               	movlb	1	; select bank1
  5685     0445  084E               	movf	(efgtoa@u+1)^(0+128),w
  5686     0446  0020               	movlb	0	; select bank0
  5687     0447  00BB               	movwf	___fldiv@a+1
  5688     0448  0021               	movlb	1	; select bank1
  5689     0449  084D               	movf	efgtoa@u^(0+128),w
  5690     044A  0020               	movlb	0	; select bank0
  5691     044B  00BA               	movwf	___fldiv@a
  5692     044C  0021               	movlb	1	; select bank1
  5693     044D  0841               	movf	(efgtoa@h+3)^(0+128),w
  5694     044E  0020               	movlb	0	; select bank0
  5695     044F  00C1               	movwf	___fldiv@b+3
  5696     0450  0021               	movlb	1	; select bank1
  5697     0451  0840               	movf	(efgtoa@h+2)^(0+128),w
  5698     0452  0020               	movlb	0	; select bank0
  5699     0453  00C0               	movwf	___fldiv@b+2
  5700     0454  0021               	movlb	1	; select bank1
  5701     0455  083F               	movf	(efgtoa@h+1)^(0+128),w
  5702     0456  0020               	movlb	0	; select bank0
  5703     0457  00BF               	movwf	___fldiv@b+1
  5704     0458  0021               	movlb	1	; select bank1
  5705     0459  083E               	movf	efgtoa@h^(0+128),w
  5706     045A  0020               	movlb	0	; select bank0
  5707     045B  00BE               	movwf	___fldiv@b
  5708     045C  3188  2028  3181   	fcall	___fldiv
  5709     045F  0020               	movlb	0	; select bank0
  5710     0460  083D               	movf	?___fldiv+3,w
  5711     0461  00D7               	movwf	floorf@x+3
  5712     0462  083C               	movf	?___fldiv+2,w
  5713     0463  00D6               	movwf	floorf@x+2
  5714     0464  083B               	movf	?___fldiv+1,w
  5715     0465  00D5               	movwf	floorf@x+1
  5716     0466  083A               	movf	?___fldiv,w
  5717     0467  00D4               	movwf	floorf@x
  5718     0468  3192  221E  3181   	fcall	_floorf
  5719     046B  0020               	movlb	0	; select bank0
  5720     046C  0857               	movf	?_floorf+3,w
  5721     046D  0021               	movlb	1	; select bank1
  5722     046E  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5723     046F  0020               	movlb	0	; select bank0
  5724     0470  0856               	movf	?_floorf+2,w
  5725     0471  0021               	movlb	1	; select bank1
  5726     0472  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5727     0473  0020               	movlb	0	; select bank0
  5728     0474  0855               	movf	?_floorf+1,w
  5729     0475  0021               	movlb	1	; select bank1
  5730     0476  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5731     0477  0020               	movlb	0	; select bank0
  5732     0478  0854               	movf	?_floorf,w
  5733     0479  0021               	movlb	1	; select bank1
  5734     047A  00C2               	movwf	efgtoa@l^(0+128)
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  5737     047B  0845               	movf	(efgtoa@l+3)^(0+128),w
  5738     047C  00F3               	movwf	___fltol@f1+3
  5739     047D  0844               	movf	(efgtoa@l+2)^(0+128),w
  5740     047E  00F2               	movwf	___fltol@f1+2
  5741     047F  0843               	movf	(efgtoa@l+1)^(0+128),w
  5742     0480  00F1               	movwf	___fltol@f1+1
  5743     0481  0842               	movf	efgtoa@l^(0+128),w
  5744     0482  00F0               	movwf	___fltol@f1
  5745     0483  3180  2005  3181   	fcall	___fltol
  5746     0486  0871               	movf	?___fltol+1,w
  5747     0487  0021               	movlb	1	; select bank1
  5748     0488  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5749     0489  0870               	movf	?___fltol,w
  5750     048A  00AF               	movwf	efgtoa@d^(0+128)
  5751                           
  5752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  5753     048B  0850               	movf	(efgtoa@u+3)^(0+128),w
  5754     048C  0020               	movlb	0	; select bank0
  5755     048D  00A7               	movwf	___flmul@a+3
  5756     048E  0021               	movlb	1	; select bank1
  5757     048F  084F               	movf	(efgtoa@u+2)^(0+128),w
  5758     0490  0020               	movlb	0	; select bank0
  5759     0491  00A6               	movwf	___flmul@a+2
  5760     0492  0021               	movlb	1	; select bank1
  5761     0493  084E               	movf	(efgtoa@u+1)^(0+128),w
  5762     0494  0020               	movlb	0	; select bank0
  5763     0495  00A5               	movwf	___flmul@a+1
  5764     0496  0021               	movlb	1	; select bank1
  5765     0497  084D               	movf	efgtoa@u^(0+128),w
  5766     0498  0020               	movlb	0	; select bank0
  5767     0499  00A4               	movwf	___flmul@a
  5768     049A  0021               	movlb	1	; select bank1
  5769     049B  0845               	movf	(efgtoa@l+3)^(0+128),w
  5770     049C  0020               	movlb	0	; select bank0
  5771     049D  00A3               	movwf	___flmul@b+3
  5772     049E  0021               	movlb	1	; select bank1
  5773     049F  0844               	movf	(efgtoa@l+2)^(0+128),w
  5774     04A0  0020               	movlb	0	; select bank0
  5775     04A1  00A2               	movwf	___flmul@b+2
  5776     04A2  0021               	movlb	1	; select bank1
  5777     04A3  0843               	movf	(efgtoa@l+1)^(0+128),w
  5778     04A4  0020               	movlb	0	; select bank0
  5779     04A5  00A1               	movwf	___flmul@b+1
  5780     04A6  0021               	movlb	1	; select bank1
  5781     04A7  0842               	movf	efgtoa@l^(0+128),w
  5782     04A8  0020               	movlb	0	; select bank0
  5783     04A9  00A0               	movwf	___flmul@b
  5784     04AA  3189  21D2  3181   	fcall	___flmul
  5785     04AD  0020               	movlb	0	; select bank0
  5786     04AE  0823               	movf	?___flmul+3,w
  5787     04AF  00BD               	movwf	___flsub@a+3
  5788     04B0  0822               	movf	?___flmul+2,w
  5789     04B1  00BC               	movwf	___flsub@a+2
  5790     04B2  0821               	movf	?___flmul+1,w
  5791     04B3  00BB               	movwf	___flsub@a+1
  5792     04B4  0820               	movf	?___flmul,w
  5793     04B5  00BA               	movwf	___flsub@a
  5794     04B6  0021               	movlb	1	; select bank1
  5795     04B7  0841               	movf	(efgtoa@h+3)^(0+128),w
  5796     04B8  0020               	movlb	0	; select bank0
  5797     04B9  00C1               	movwf	___flsub@b+3
  5798     04BA  0021               	movlb	1	; select bank1
  5799     04BB  0840               	movf	(efgtoa@h+2)^(0+128),w
  5800     04BC  0020               	movlb	0	; select bank0
  5801     04BD  00C0               	movwf	___flsub@b+2
  5802     04BE  0021               	movlb	1	; select bank1
  5803     04BF  083F               	movf	(efgtoa@h+1)^(0+128),w
  5804     04C0  0020               	movlb	0	; select bank0
  5805     04C1  00BF               	movwf	___flsub@b+1
  5806     04C2  0021               	movlb	1	; select bank1
  5807     04C3  083E               	movf	efgtoa@h^(0+128),w
  5808     04C4  0020               	movlb	0	; select bank0
  5809     04C5  00BE               	movwf	___flsub@b
  5810     04C6  319A  228D  3181   	fcall	___flsub
  5811     04C9  0020               	movlb	0	; select bank0
  5812     04CA  083D               	movf	?___flsub+3,w
  5813     04CB  0021               	movlb	1	; select bank1
  5814     04CC  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5815     04CD  0020               	movlb	0	; select bank0
  5816     04CE  083C               	movf	?___flsub+2,w
  5817     04CF  0021               	movlb	1	; select bank1
  5818     04D0  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5819     04D1  0020               	movlb	0	; select bank0
  5820     04D2  083B               	movf	?___flsub+1,w
  5821     04D3  0021               	movlb	1	; select bank1
  5822     04D4  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5823     04D5  0020               	movlb	0	; select bank0
  5824     04D6  083A               	movf	?___flsub,w
  5825     04D7  0021               	movlb	1	; select bank1
  5826     04D8  00BE               	movwf	efgtoa@h^(0+128)
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  5829     04D9  3041               	movlw	65
  5830     04DA  0020               	movlb	0	; select bank0
  5831     04DB  00BD               	movwf	___fldiv@a+3
  5832     04DC  3020               	movlw	32
  5833     04DD  00BC               	movwf	___fldiv@a+2
  5834     04DE  3000               	movlw	0
  5835     04DF  00BB               	movwf	___fldiv@a+1
  5836     04E0  3000               	movlw	0
  5837     04E1  00BA               	movwf	___fldiv@a
  5838     04E2  0021               	movlb	1	; select bank1
  5839     04E3  0850               	movf	(efgtoa@u+3)^(0+128),w
  5840     04E4  0020               	movlb	0	; select bank0
  5841     04E5  00C1               	movwf	___fldiv@b+3
  5842     04E6  0021               	movlb	1	; select bank1
  5843     04E7  084F               	movf	(efgtoa@u+2)^(0+128),w
  5844     04E8  0020               	movlb	0	; select bank0
  5845     04E9  00C0               	movwf	___fldiv@b+2
  5846     04EA  0021               	movlb	1	; select bank1
  5847     04EB  084E               	movf	(efgtoa@u+1)^(0+128),w
  5848     04EC  0020               	movlb	0	; select bank0
  5849     04ED  00BF               	movwf	___fldiv@b+1
  5850     04EE  0021               	movlb	1	; select bank1
  5851     04EF  084D               	movf	efgtoa@u^(0+128),w
  5852     04F0  0020               	movlb	0	; select bank0
  5853     04F1  00BE               	movwf	___fldiv@b
  5854     04F2  3188  2028  3181   	fcall	___fldiv
  5855     04F5  0020               	movlb	0	; select bank0
  5856     04F6  083D               	movf	?___fldiv+3,w
  5857     04F7  0021               	movlb	1	; select bank1
  5858     04F8  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5859     04F9  0020               	movlb	0	; select bank0
  5860     04FA  083C               	movf	?___fldiv+2,w
  5861     04FB  0021               	movlb	1	; select bank1
  5862     04FC  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5863     04FD  0020               	movlb	0	; select bank0
  5864     04FE  083B               	movf	?___fldiv+1,w
  5865     04FF  0021               	movlb	1	; select bank1
  5866     0500  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5867     0501  0020               	movlb	0	; select bank0
  5868     0502  083A               	movf	?___fldiv,w
  5869     0503  0021               	movlb	1	; select bank1
  5870     0504  00CD               	movwf	efgtoa@u^(0+128)
  5871     0505                     l3792:
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  5874     0505  3001               	movlw	1
  5875     0506  07BC               	addwf	efgtoa@i^(0+128),f
  5876     0507  3000               	movlw	0
  5877     0508  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  5878     0509                     l3794:
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5881     0509  083D               	movf	(efgtoa@i+1)^(0+128),w
  5882     050A  3A80               	xorlw	128
  5883     050B  00A0               	movwf	??_efgtoa^(0+128)
  5884     050C  0832               	movf	(efgtoa@m+1)^(0+128),w
  5885     050D  3A80               	xorlw	128
  5886     050E  0220               	subwf	??_efgtoa^(0+128),w
  5887     050F  1D03               	skipz
  5888     0510  2D13               	goto	u5265
  5889     0511  0831               	movf	efgtoa@m^(0+128),w
  5890     0512  023C               	subwf	efgtoa@i^(0+128),w
  5891     0513                     u5265:
  5892     0513  1C03               	skipc
  5893     0514  2D16               	goto	u5261
  5894     0515  2D17               	goto	u5260
  5895     0516                     u5261:
  5896     0516  2C3C               	goto	l3790
  5897     0517                     u5260:
  5898     0517                     l3796:
  5899                           
  5900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  5901     0517  3040               	movlw	64
  5902     0518  0020               	movlb	0	; select bank0
  5903     0519  00A3               	movwf	___flmul@b+3
  5904     051A  30A0               	movlw	160
  5905     051B  00A2               	movwf	___flmul@b+2
  5906     051C  3000               	movlw	0
  5907     051D  00A1               	movwf	___flmul@b+1
  5908     051E  3000               	movlw	0
  5909     051F  00A0               	movwf	___flmul@b
  5910     0520  0021               	movlb	1	; select bank1
  5911     0521  0850               	movf	(efgtoa@u+3)^(0+128),w
  5912     0522  0020               	movlb	0	; select bank0
  5913     0523  00A7               	movwf	___flmul@a+3
  5914     0524  0021               	movlb	1	; select bank1
  5915     0525  084F               	movf	(efgtoa@u+2)^(0+128),w
  5916     0526  0020               	movlb	0	; select bank0
  5917     0527  00A6               	movwf	___flmul@a+2
  5918     0528  0021               	movlb	1	; select bank1
  5919     0529  084E               	movf	(efgtoa@u+1)^(0+128),w
  5920     052A  0020               	movlb	0	; select bank0
  5921     052B  00A5               	movwf	___flmul@a+1
  5922     052C  0021               	movlb	1	; select bank1
  5923     052D  084D               	movf	efgtoa@u^(0+128),w
  5924     052E  0020               	movlb	0	; select bank0
  5925     052F  00A4               	movwf	___flmul@a
  5926     0530  3189  21D2  3181   	fcall	___flmul
  5927     0533  0020               	movlb	0	; select bank0
  5928     0534  0823               	movf	?___flmul+3,w
  5929     0535  0021               	movlb	1	; select bank1
  5930     0536  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5931     0537  0020               	movlb	0	; select bank0
  5932     0538  0822               	movf	?___flmul+2,w
  5933     0539  0021               	movlb	1	; select bank1
  5934     053A  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5935     053B  0020               	movlb	0	; select bank0
  5936     053C  0821               	movf	?___flmul+1,w
  5937     053D  0021               	movlb	1	; select bank1
  5938     053E  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5939     053F  0020               	movlb	0	; select bank0
  5940     0540  0820               	movf	?___flmul,w
  5941     0541  0021               	movlb	1	; select bank1
  5942     0542  00C2               	movwf	efgtoa@l^(0+128)
  5943                           
  5944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  5945     0543  0841               	movf	(efgtoa@h+3)^(0+128),w
  5946     0544  0020               	movlb	0	; select bank0
  5947     0545  00BD               	movwf	___flge@ff1+3
  5948     0546  0021               	movlb	1	; select bank1
  5949     0547  0840               	movf	(efgtoa@h+2)^(0+128),w
  5950     0548  0020               	movlb	0	; select bank0
  5951     0549  00BC               	movwf	___flge@ff1+2
  5952     054A  0021               	movlb	1	; select bank1
  5953     054B  083F               	movf	(efgtoa@h+1)^(0+128),w
  5954     054C  0020               	movlb	0	; select bank0
  5955     054D  00BB               	movwf	___flge@ff1+1
  5956     054E  0021               	movlb	1	; select bank1
  5957     054F  083E               	movf	efgtoa@h^(0+128),w
  5958     0550  0020               	movlb	0	; select bank0
  5959     0551  00BA               	movwf	___flge@ff1
  5960     0552  0021               	movlb	1	; select bank1
  5961     0553  0845               	movf	(efgtoa@l+3)^(0+128),w
  5962     0554  0020               	movlb	0	; select bank0
  5963     0555  00C1               	movwf	___flge@ff2+3
  5964     0556  0021               	movlb	1	; select bank1
  5965     0557  0844               	movf	(efgtoa@l+2)^(0+128),w
  5966     0558  0020               	movlb	0	; select bank0
  5967     0559  00C0               	movwf	___flge@ff2+2
  5968     055A  0021               	movlb	1	; select bank1
  5969     055B  0843               	movf	(efgtoa@l+1)^(0+128),w
  5970     055C  0020               	movlb	0	; select bank0
  5971     055D  00BF               	movwf	___flge@ff2+1
  5972     055E  0021               	movlb	1	; select bank1
  5973     055F  0842               	movf	efgtoa@l^(0+128),w
  5974     0560  0020               	movlb	0	; select bank0
  5975     0561  00BE               	movwf	___flge@ff2
  5976     0562  319E  2644  3181   	fcall	___flge
  5977     0565  1803               	btfsc	3,0
  5978     0566  2D68               	goto	u5271
  5979     0567  2D69               	goto	u5270
  5980     0568                     u5271:
  5981     0568  2D73               	goto	l3800
  5982     0569                     u5270:
  5983     0569                     l3798:
  5984                           
  5985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  5986     0569  3000               	movlw	0
  5987     056A  0021               	movlb	1	; select bank1
  5988     056B  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5989     056C  3000               	movlw	0
  5990     056D  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5991     056E  3000               	movlw	0
  5992     056F  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5993     0570  3000               	movlw	0
  5994     0571  00C2               	movwf	efgtoa@l^(0+128)
  5995                           
  5996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  5997     0572  2D98               	goto	l3806
  5998     0573                     l3800:
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  6001     0573  0021               	movlb	1	; select bank1
  6002     0574  0841               	movf	(efgtoa@h+3)^(0+128),w
  6003     0575  00F3               	movwf	___fleq@ff1+3
  6004     0576  0840               	movf	(efgtoa@h+2)^(0+128),w
  6005     0577  00F2               	movwf	___fleq@ff1+2
  6006     0578  083F               	movf	(efgtoa@h+1)^(0+128),w
  6007     0579  00F1               	movwf	___fleq@ff1+1
  6008     057A  083E               	movf	efgtoa@h^(0+128),w
  6009     057B  00F0               	movwf	___fleq@ff1
  6010     057C  0845               	movf	(efgtoa@l+3)^(0+128),w
  6011     057D  00F7               	movwf	___fleq@ff2+3
  6012     057E  0844               	movf	(efgtoa@l+2)^(0+128),w
  6013     057F  00F6               	movwf	___fleq@ff2+2
  6014     0580  0843               	movf	(efgtoa@l+1)^(0+128),w
  6015     0581  00F5               	movwf	___fleq@ff2+1
  6016     0582  0842               	movf	efgtoa@l^(0+128),w
  6017     0583  00F4               	movwf	___fleq@ff2
  6018     0584  319C  246D  3181   	fcall	___fleq
  6019     0587  1C03               	btfss	3,0
  6020     0588  2D8A               	goto	u5281
  6021     0589  2D8B               	goto	u5280
  6022     058A                     u5281:
  6023     058A  2D98               	goto	l3806
  6024     058B                     u5280:
  6025     058B                     l3802:
  6026     058B  0021               	movlb	1	; select bank1
  6027     058C  182F               	btfsc	efgtoa@d^(0+128),0
  6028     058D  2D8F               	goto	u5291
  6029     058E  2D90               	goto	u5290
  6030     058F                     u5291:
  6031     058F  2D98               	goto	l3806
  6032     0590                     u5290:
  6033     0590                     l3804:
  6034                           
  6035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  6036     0590  3000               	movlw	0
  6037     0591  00C5               	movwf	(efgtoa@l+3)^(0+128)
  6038     0592  3000               	movlw	0
  6039     0593  00C4               	movwf	(efgtoa@l+2)^(0+128)
  6040     0594  3000               	movlw	0
  6041     0595  00C3               	movwf	(efgtoa@l+1)^(0+128)
  6042     0596  3000               	movlw	0
  6043     0597  00C2               	movwf	efgtoa@l^(0+128)
  6044     0598                     l3806:
  6045                           
  6046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  6047     0598  0021               	movlb	1	; select bank1
  6048     0599  0845               	movf	(efgtoa@l+3)^(0+128),w
  6049     059A  00F3               	movwf	___fladd@b+3
  6050     059B  0844               	movf	(efgtoa@l+2)^(0+128),w
  6051     059C  00F2               	movwf	___fladd@b+2
  6052     059D  0843               	movf	(efgtoa@l+1)^(0+128),w
  6053     059E  00F1               	movwf	___fladd@b+1
  6054     059F  0842               	movf	efgtoa@l^(0+128),w
  6055     05A0  00F0               	movwf	___fladd@b
  6056     05A1  084C               	movf	(efgtoa@g+3)^(0+128),w
  6057     05A2  00F7               	movwf	___fladd@a+3
  6058     05A3  084B               	movf	(efgtoa@g+2)^(0+128),w
  6059     05A4  00F6               	movwf	___fladd@a+2
  6060     05A5  084A               	movf	(efgtoa@g+1)^(0+128),w
  6061     05A6  00F5               	movwf	___fladd@a+1
  6062     05A7  0849               	movf	efgtoa@g^(0+128),w
  6063     05A8  00F4               	movwf	___fladd@a
  6064     05A9  3195  25F4  3181   	fcall	___fladd
  6065     05AC  0873               	movf	?___fladd+3,w
  6066     05AD  0021               	movlb	1	; select bank1
  6067     05AE  00C1               	movwf	(efgtoa@h+3)^(0+128)
  6068     05AF  0872               	movf	?___fladd+2,w
  6069     05B0  00C0               	movwf	(efgtoa@h+2)^(0+128)
  6070     05B1  0871               	movf	?___fladd+1,w
  6071     05B2  00BF               	movwf	(efgtoa@h+1)^(0+128)
  6072     05B3  0870               	movf	?___fladd,w
  6073     05B4  00BE               	movwf	efgtoa@h^(0+128)
  6074     05B5                     l3808:
  6075                           
  6076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  6077     05B5  0841               	movf	(efgtoa@h+3)^(0+128),w
  6078     05B6  0020               	movlb	0	; select bank0
  6079     05B7  00BD               	movwf	___flge@ff1+3
  6080     05B8  0021               	movlb	1	; select bank1
  6081     05B9  0840               	movf	(efgtoa@h+2)^(0+128),w
  6082     05BA  0020               	movlb	0	; select bank0
  6083     05BB  00BC               	movwf	___flge@ff1+2
  6084     05BC  0021               	movlb	1	; select bank1
  6085     05BD  083F               	movf	(efgtoa@h+1)^(0+128),w
  6086     05BE  0020               	movlb	0	; select bank0
  6087     05BF  00BB               	movwf	___flge@ff1+1
  6088     05C0  0021               	movlb	1	; select bank1
  6089     05C1  083E               	movf	efgtoa@h^(0+128),w
  6090     05C2  0020               	movlb	0	; select bank0
  6091     05C3  00BA               	movwf	___flge@ff1
  6092     05C4  3041               	movlw	65
  6093     05C5  00A3               	movwf	___flmul@b+3
  6094     05C6  3020               	movlw	32
  6095     05C7  00A2               	movwf	___flmul@b+2
  6096     05C8  3000               	movlw	0
  6097     05C9  00A1               	movwf	___flmul@b+1
  6098     05CA  3000               	movlw	0
  6099     05CB  00A0               	movwf	___flmul@b
  6100     05CC  0021               	movlb	1	; select bank1
  6101     05CD  083B               	movf	(efgtoa@ou+3)^(0+128),w
  6102     05CE  0020               	movlb	0	; select bank0
  6103     05CF  00A7               	movwf	___flmul@a+3
  6104     05D0  0021               	movlb	1	; select bank1
  6105     05D1  083A               	movf	(efgtoa@ou+2)^(0+128),w
  6106     05D2  0020               	movlb	0	; select bank0
  6107     05D3  00A6               	movwf	___flmul@a+2
  6108     05D4  0021               	movlb	1	; select bank1
  6109     05D5  0839               	movf	(efgtoa@ou+1)^(0+128),w
  6110     05D6  0020               	movlb	0	; select bank0
  6111     05D7  00A5               	movwf	___flmul@a+1
  6112     05D8  0021               	movlb	1	; select bank1
  6113     05D9  0838               	movf	efgtoa@ou^(0+128),w
  6114     05DA  0020               	movlb	0	; select bank0
  6115     05DB  00A4               	movwf	___flmul@a
  6116     05DC  3189  21D2  3181   	fcall	___flmul
  6117     05DF  0020               	movlb	0	; select bank0
  6118     05E0  0823               	movf	?___flmul+3,w
  6119     05E1  00C1               	movwf	___flge@ff2+3
  6120     05E2  0822               	movf	?___flmul+2,w
  6121     05E3  00C0               	movwf	___flge@ff2+2
  6122     05E4  0821               	movf	?___flmul+1,w
  6123     05E5  00BF               	movwf	___flge@ff2+1
  6124     05E6  0820               	movf	?___flmul,w
  6125     05E7  00BE               	movwf	___flge@ff2
  6126     05E8  319E  2644  3181   	fcall	___flge
  6127     05EB  1C03               	btfss	3,0
  6128     05EC  2DEE               	goto	u5301
  6129     05ED  2DEF               	goto	u5300
  6130     05EE                     u5301:
  6131     05EE  2E2A               	goto	l882
  6132     05EF                     u5300:
  6133     05EF                     l3810:
  6134                           
  6135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  6136     05EF  3001               	movlw	1
  6137     05F0  0021               	movlb	1	; select bank1
  6138     05F1  07B4               	addwf	efgtoa@e^(0+128),f
  6139     05F2  3000               	movlw	0
  6140     05F3  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  6141     05F4                     l3812:
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  6144     05F4  3041               	movlw	65
  6145     05F5  0020               	movlb	0	; select bank0
  6146     05F6  00A3               	movwf	___flmul@b+3
  6147     05F7  3020               	movlw	32
  6148     05F8  00A2               	movwf	___flmul@b+2
  6149     05F9  3000               	movlw	0
  6150     05FA  00A1               	movwf	___flmul@b+1
  6151     05FB  3000               	movlw	0
  6152     05FC  00A0               	movwf	___flmul@b
  6153     05FD  0021               	movlb	1	; select bank1
  6154     05FE  083B               	movf	(efgtoa@ou+3)^(0+128),w
  6155     05FF  0020               	movlb	0	; select bank0
  6156     0600  00A7               	movwf	___flmul@a+3
  6157     0601  0021               	movlb	1	; select bank1
  6158     0602  083A               	movf	(efgtoa@ou+2)^(0+128),w
  6159     0603  0020               	movlb	0	; select bank0
  6160     0604  00A6               	movwf	___flmul@a+2
  6161     0605  0021               	movlb	1	; select bank1
  6162     0606  0839               	movf	(efgtoa@ou+1)^(0+128),w
  6163     0607  0020               	movlb	0	; select bank0
  6164     0608  00A5               	movwf	___flmul@a+1
  6165     0609  0021               	movlb	1	; select bank1
  6166     060A  0838               	movf	efgtoa@ou^(0+128),w
  6167     060B  0020               	movlb	0	; select bank0
  6168     060C  00A4               	movwf	___flmul@a
  6169     060D  3189  21D2  3181   	fcall	___flmul
  6170     0610  0020               	movlb	0	; select bank0
  6171     0611  0823               	movf	?___flmul+3,w
  6172     0612  0021               	movlb	1	; select bank1
  6173     0613  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  6174     0614  0020               	movlb	0	; select bank0
  6175     0615  0822               	movf	?___flmul+2,w
  6176     0616  0021               	movlb	1	; select bank1
  6177     0617  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  6178     0618  0020               	movlb	0	; select bank0
  6179     0619  0821               	movf	?___flmul+1,w
  6180     061A  0021               	movlb	1	; select bank1
  6181     061B  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  6182     061C  0020               	movlb	0	; select bank0
  6183     061D  0820               	movf	?___flmul,w
  6184     061E  0021               	movlb	1	; select bank1
  6185     061F  00B8               	movwf	efgtoa@ou^(0+128)
  6186     0620                     l3814:
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  6189     0620  3066               	movlw	102
  6190     0621  062E               	xorwf	efgtoa@nmode^(0+128),w
  6191     0622  1D03               	btfss	3,2
  6192     0623  2E25               	goto	u5311
  6193     0624  2E26               	goto	u5310
  6194     0625                     u5311:
  6195     0625  2E2A               	goto	l882
  6196     0626                     u5310:
  6197     0626                     l3816:
  6198                           
  6199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  6200     0626  3001               	movlw	1
  6201     0627  07B1               	addwf	efgtoa@m^(0+128),f
  6202     0628  3000               	movlw	0
  6203     0629  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  6204     062A                     l882:	
  6205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 686:  }
  6206                           
  6207                           
  6208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  6209     062A  0021               	movlb	1	; select bank1
  6210     062B  083B               	movf	(efgtoa@ou+3)^(0+128),w
  6211     062C  00D0               	movwf	(efgtoa@u+3)^(0+128)
  6212     062D  083A               	movf	(efgtoa@ou+2)^(0+128),w
  6213     062E  00CF               	movwf	(efgtoa@u+2)^(0+128)
  6214     062F  0839               	movf	(efgtoa@ou+1)^(0+128),w
  6215     0630  00CE               	movwf	(efgtoa@u+1)^(0+128)
  6216     0631  0838               	movf	efgtoa@ou^(0+128),w
  6217     0632  00CD               	movwf	efgtoa@u^(0+128)
  6218                           
  6219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  6220     0633  0835               	movf	(efgtoa@e+1)^(0+128),w
  6221     0634  00A5               	movwf	(efgtoa@ne+1)^(0+128)
  6222     0635  0834               	movf	efgtoa@e^(0+128),w
  6223     0636  00A4               	movwf	efgtoa@ne^(0+128)
  6224     0637                     l3818:
  6225                           
  6226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  6227     0637  01AC               	clrf	efgtoa@pp^(0+128)
  6228     0638                     l3820:
  6229                           
  6230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  6231     0638  01A8               	clrf	efgtoa@t^(0+128)
  6232     0639  01A9               	clrf	(efgtoa@t+1)^(0+128)
  6233     063A                     l3822:
  6234                           
  6235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  6236     063A  01BC               	clrf	efgtoa@i^(0+128)
  6237     063B  01BD               	clrf	(efgtoa@i+1)^(0+128)
  6238                           
  6239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6240     063C  2F72               	goto	l3866
  6241     063D                     l3824:
  6242                           
  6243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  6244     063D  0021               	movlb	1	; select bank1
  6245     063E  0850               	movf	(efgtoa@u+3)^(0+128),w
  6246     063F  0020               	movlb	0	; select bank0
  6247     0640  00BD               	movwf	___fldiv@a+3
  6248     0641  0021               	movlb	1	; select bank1
  6249     0642  084F               	movf	(efgtoa@u+2)^(0+128),w
  6250     0643  0020               	movlb	0	; select bank0
  6251     0644  00BC               	movwf	___fldiv@a+2
  6252     0645  0021               	movlb	1	; select bank1
  6253     0646  084E               	movf	(efgtoa@u+1)^(0+128),w
  6254     0647  0020               	movlb	0	; select bank0
  6255     0648  00BB               	movwf	___fldiv@a+1
  6256     0649  0021               	movlb	1	; select bank1
  6257     064A  084D               	movf	efgtoa@u^(0+128),w
  6258     064B  0020               	movlb	0	; select bank0
  6259     064C  00BA               	movwf	___fldiv@a
  6260     064D  0021               	movlb	1	; select bank1
  6261     064E  0841               	movf	(efgtoa@h+3)^(0+128),w
  6262     064F  0020               	movlb	0	; select bank0
  6263     0650  00C1               	movwf	___fldiv@b+3
  6264     0651  0021               	movlb	1	; select bank1
  6265     0652  0840               	movf	(efgtoa@h+2)^(0+128),w
  6266     0653  0020               	movlb	0	; select bank0
  6267     0654  00C0               	movwf	___fldiv@b+2
  6268     0655  0021               	movlb	1	; select bank1
  6269     0656  083F               	movf	(efgtoa@h+1)^(0+128),w
  6270     0657  0020               	movlb	0	; select bank0
  6271     0658  00BF               	movwf	___fldiv@b+1
  6272     0659  0021               	movlb	1	; select bank1
  6273     065A  083E               	movf	efgtoa@h^(0+128),w
  6274     065B  0020               	movlb	0	; select bank0
  6275     065C  00BE               	movwf	___fldiv@b
  6276     065D  3188  2028  3181   	fcall	___fldiv
  6277     0660  0020               	movlb	0	; select bank0
  6278     0661  083D               	movf	?___fldiv+3,w
  6279     0662  00D7               	movwf	floorf@x+3
  6280     0663  083C               	movf	?___fldiv+2,w
  6281     0664  00D6               	movwf	floorf@x+2
  6282     0665  083B               	movf	?___fldiv+1,w
  6283     0666  00D5               	movwf	floorf@x+1
  6284     0667  083A               	movf	?___fldiv,w
  6285     0668  00D4               	movwf	floorf@x
  6286     0669  3192  221E  3181   	fcall	_floorf
  6287     066C  0020               	movlb	0	; select bank0
  6288     066D  0857               	movf	?_floorf+3,w
  6289     066E  0021               	movlb	1	; select bank1
  6290     066F  00C5               	movwf	(efgtoa@l+3)^(0+128)
  6291     0670  0020               	movlb	0	; select bank0
  6292     0671  0856               	movf	?_floorf+2,w
  6293     0672  0021               	movlb	1	; select bank1
  6294     0673  00C4               	movwf	(efgtoa@l+2)^(0+128)
  6295     0674  0020               	movlb	0	; select bank0
  6296     0675  0855               	movf	?_floorf+1,w
  6297     0676  0021               	movlb	1	; select bank1
  6298     0677  00C3               	movwf	(efgtoa@l+1)^(0+128)
  6299     0678  0020               	movlb	0	; select bank0
  6300     0679  0854               	movf	?_floorf,w
  6301     067A  0021               	movlb	1	; select bank1
  6302     067B  00C2               	movwf	efgtoa@l^(0+128)
  6303                           
  6304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6305     067C  0845               	movf	(efgtoa@l+3)^(0+128),w
  6306     067D  00F3               	movwf	___fltol@f1+3
  6307     067E  0844               	movf	(efgtoa@l+2)^(0+128),w
  6308     067F  00F2               	movwf	___fltol@f1+2
  6309     0680  0843               	movf	(efgtoa@l+1)^(0+128),w
  6310     0681  00F1               	movwf	___fltol@f1+1
  6311     0682  0842               	movf	efgtoa@l^(0+128),w
  6312     0683  00F0               	movwf	___fltol@f1
  6313     0684  3180  2005  3181   	fcall	___fltol
  6314     0687  0871               	movf	?___fltol+1,w
  6315     0688  3A80               	xorlw	128
  6316     0689  0021               	movlb	1	; select bank1
  6317     068A  00A0               	movwf	??_efgtoa^(0+128)
  6318     068B  3080               	movlw	128
  6319     068C  0220               	subwf	??_efgtoa^(0+128),w
  6320     068D  1D03               	skipz
  6321     068E  2E91               	goto	u5325
  6322     068F  300A               	movlw	10
  6323     0690  0270               	subwf	?___fltol,w
  6324     0691                     u5325:
  6325     0691  1803               	skipnc
  6326     0692  2E94               	goto	u5321
  6327     0693  2E95               	goto	u5320
  6328     0694                     u5321:
  6329     0694  2EA7               	goto	l3828
  6330     0695                     u5320:
  6331     0695                     l3826:
  6332     0695  0021               	movlb	1	; select bank1
  6333     0696  0845               	movf	(efgtoa@l+3)^(0+128),w
  6334     0697  00F3               	movwf	___fltol@f1+3
  6335     0698  0844               	movf	(efgtoa@l+2)^(0+128),w
  6336     0699  00F2               	movwf	___fltol@f1+2
  6337     069A  0843               	movf	(efgtoa@l+1)^(0+128),w
  6338     069B  00F1               	movwf	___fltol@f1+1
  6339     069C  0842               	movf	efgtoa@l^(0+128),w
  6340     069D  00F0               	movwf	___fltol@f1
  6341     069E  3180  2005  3181   	fcall	___fltol
  6342     06A1  0871               	movf	?___fltol+1,w
  6343     06A2  0021               	movlb	1	; select bank1
  6344     06A3  00B0               	movwf	(efgtoa@d+1)^(0+128)
  6345     06A4  0870               	movf	?___fltol,w
  6346     06A5  00AF               	movwf	efgtoa@d^(0+128)
  6347     06A6  2EAC               	goto	l3830
  6348     06A7                     l3828:
  6349     06A7  3009               	movlw	9
  6350     06A8  0021               	movlb	1	; select bank1
  6351     06A9  00AF               	movwf	efgtoa@d^(0+128)
  6352     06AA  3000               	movlw	0
  6353     06AB  00B0               	movwf	(efgtoa@d^(0+128)+1)
  6354     06AC                     l3830:
  6355                           
  6356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  6357     06AC  082C               	movf	efgtoa@pp^(0+128),w
  6358     06AD  1D03               	btfss	3,2
  6359     06AE  2EB0               	goto	u5331
  6360     06AF  2EB1               	goto	u5330
  6361     06B0                     u5331:
  6362     06B0  2EDA               	goto	l3850
  6363     06B1                     u5330:
  6364     06B1                     l3832:
  6365     06B1  1FA5               	btfss	(efgtoa@ne+1)^(0+128),7
  6366     06B2  2EB4               	goto	u5341
  6367     06B3  2EB5               	goto	u5340
  6368     06B4                     u5341:
  6369     06B4  2EDA               	goto	l3850
  6370     06B5                     u5340:
  6371     06B5                     l3834:
  6372                           
  6373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  6374     06B5  0847               	movf	efgtoa@n^(0+128),w
  6375     06B6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6376     06B7  0086               	movwf	6
  6377     06B8  3002               	movlw	2	; select bank4/5
  6378     06B9  0087               	movwf	7
  6379     06BA  302E               	movlw	46
  6380     06BB  0081               	movwf	1
  6381     06BC                     l3836:
  6382     06BC  3001               	movlw	1
  6383     06BD  07C7               	addwf	efgtoa@n^(0+128),f
  6384     06BE  3000               	movlw	0
  6385     06BF  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6386     06C0                     l3838:
  6387                           
  6388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  6389     06C0  30FF               	movlw	255
  6390     06C1  07B6               	addwf	efgtoa@w^(0+128),f
  6391     06C2  30FF               	movlw	255
  6392     06C3  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6393     06C4                     l3840:
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  6396     06C4  01AC               	clrf	efgtoa@pp^(0+128)
  6397     06C5  0AAC               	incf	efgtoa@pp^(0+128),f
  6398     06C6  2EDA               	goto	l3850
  6399     06C7                     l3842:
  6400                           
  6401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  6402     06C7  0847               	movf	efgtoa@n^(0+128),w
  6403     06C8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6404     06C9  0086               	movwf	6
  6405     06CA  3002               	movlw	2	; select bank4/5
  6406     06CB  0087               	movwf	7
  6407     06CC  3030               	movlw	48
  6408     06CD  0081               	movwf	1
  6409     06CE                     l3844:
  6410     06CE  3001               	movlw	1
  6411     06CF  07C7               	addwf	efgtoa@n^(0+128),f
  6412     06D0  3000               	movlw	0
  6413     06D1  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6414     06D2                     l3846:
  6415                           
  6416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  6417     06D2  30FF               	movlw	255
  6418     06D3  07B6               	addwf	efgtoa@w^(0+128),f
  6419     06D4  30FF               	movlw	255
  6420     06D5  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6421     06D6                     l3848:
  6422                           
  6423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  6424     06D6  30FF               	movlw	255
  6425     06D7  07A8               	addwf	efgtoa@t^(0+128),f
  6426     06D8  30FF               	movlw	255
  6427     06D9  3DA9               	addwfc	(efgtoa@t+1)^(0+128),f
  6428     06DA                     l3850:
  6429                           
  6430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  6431     06DA  0828               	movf	efgtoa@t^(0+128),w
  6432     06DB  0429               	iorwf	(efgtoa@t+1)^(0+128),w
  6433     06DC  1D03               	btfss	3,2
  6434     06DD  2EDF               	goto	u5351
  6435     06DE  2EE0               	goto	u5350
  6436     06DF                     u5351:
  6437     06DF  2EC7               	goto	l3842
  6438     06E0                     u5350:
  6439     06E0                     l3852:
  6440                           
  6441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6442     06E0  0847               	movf	efgtoa@n^(0+128),w
  6443     06E1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6444     06E2  0086               	movwf	6
  6445     06E3  3002               	movlw	2	; select bank4/5
  6446     06E4  0087               	movwf	7
  6447     06E5  082F               	movf	efgtoa@d^(0+128),w
  6448     06E6  3E30               	addlw	48
  6449     06E7  0081               	movwf	1
  6450     06E8                     l3854:
  6451     06E8  3001               	movlw	1
  6452     06E9  07C7               	addwf	efgtoa@n^(0+128),f
  6453     06EA  3000               	movlw	0
  6454     06EB  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6455     06EC                     l3856:
  6456                           
  6457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  6458     06EC  30FF               	movlw	255
  6459     06ED  07B6               	addwf	efgtoa@w^(0+128),f
  6460     06EE  30FF               	movlw	255
  6461     06EF  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6462     06F0                     l3858:
  6463                           
  6464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  6465     06F0  0850               	movf	(efgtoa@u+3)^(0+128),w
  6466     06F1  0020               	movlb	0	; select bank0
  6467     06F2  00A7               	movwf	___flmul@a+3
  6468     06F3  0021               	movlb	1	; select bank1
  6469     06F4  084F               	movf	(efgtoa@u+2)^(0+128),w
  6470     06F5  0020               	movlb	0	; select bank0
  6471     06F6  00A6               	movwf	___flmul@a+2
  6472     06F7  0021               	movlb	1	; select bank1
  6473     06F8  084E               	movf	(efgtoa@u+1)^(0+128),w
  6474     06F9  0020               	movlb	0	; select bank0
  6475     06FA  00A5               	movwf	___flmul@a+1
  6476     06FB  0021               	movlb	1	; select bank1
  6477     06FC  084D               	movf	efgtoa@u^(0+128),w
  6478     06FD  0020               	movlb	0	; select bank0
  6479     06FE  00A4               	movwf	___flmul@a
  6480     06FF  0021               	movlb	1	; select bank1
  6481     0700  0845               	movf	(efgtoa@l+3)^(0+128),w
  6482     0701  0020               	movlb	0	; select bank0
  6483     0702  00A3               	movwf	___flmul@b+3
  6484     0703  0021               	movlb	1	; select bank1
  6485     0704  0844               	movf	(efgtoa@l+2)^(0+128),w
  6486     0705  0020               	movlb	0	; select bank0
  6487     0706  00A2               	movwf	___flmul@b+2
  6488     0707  0021               	movlb	1	; select bank1
  6489     0708  0843               	movf	(efgtoa@l+1)^(0+128),w
  6490     0709  0020               	movlb	0	; select bank0
  6491     070A  00A1               	movwf	___flmul@b+1
  6492     070B  0021               	movlb	1	; select bank1
  6493     070C  0842               	movf	efgtoa@l^(0+128),w
  6494     070D  0020               	movlb	0	; select bank0
  6495     070E  00A0               	movwf	___flmul@b
  6496     070F  3189  21D2  3181   	fcall	___flmul
  6497     0712  0020               	movlb	0	; select bank0
  6498     0713  0823               	movf	?___flmul+3,w
  6499     0714  00BD               	movwf	___flsub@a+3
  6500     0715  0822               	movf	?___flmul+2,w
  6501     0716  00BC               	movwf	___flsub@a+2
  6502     0717  0821               	movf	?___flmul+1,w
  6503     0718  00BB               	movwf	___flsub@a+1
  6504     0719  0820               	movf	?___flmul,w
  6505     071A  00BA               	movwf	___flsub@a
  6506     071B  0021               	movlb	1	; select bank1
  6507     071C  0841               	movf	(efgtoa@h+3)^(0+128),w
  6508     071D  0020               	movlb	0	; select bank0
  6509     071E  00C1               	movwf	___flsub@b+3
  6510     071F  0021               	movlb	1	; select bank1
  6511     0720  0840               	movf	(efgtoa@h+2)^(0+128),w
  6512     0721  0020               	movlb	0	; select bank0
  6513     0722  00C0               	movwf	___flsub@b+2
  6514     0723  0021               	movlb	1	; select bank1
  6515     0724  083F               	movf	(efgtoa@h+1)^(0+128),w
  6516     0725  0020               	movlb	0	; select bank0
  6517     0726  00BF               	movwf	___flsub@b+1
  6518     0727  0021               	movlb	1	; select bank1
  6519     0728  083E               	movf	efgtoa@h^(0+128),w
  6520     0729  0020               	movlb	0	; select bank0
  6521     072A  00BE               	movwf	___flsub@b
  6522     072B  319A  228D  3181   	fcall	___flsub
  6523     072E  0020               	movlb	0	; select bank0
  6524     072F  083D               	movf	?___flsub+3,w
  6525     0730  0021               	movlb	1	; select bank1
  6526     0731  00C1               	movwf	(efgtoa@h+3)^(0+128)
  6527     0732  0020               	movlb	0	; select bank0
  6528     0733  083C               	movf	?___flsub+2,w
  6529     0734  0021               	movlb	1	; select bank1
  6530     0735  00C0               	movwf	(efgtoa@h+2)^(0+128)
  6531     0736  0020               	movlb	0	; select bank0
  6532     0737  083B               	movf	?___flsub+1,w
  6533     0738  0021               	movlb	1	; select bank1
  6534     0739  00BF               	movwf	(efgtoa@h+1)^(0+128)
  6535     073A  0020               	movlb	0	; select bank0
  6536     073B  083A               	movf	?___flsub,w
  6537     073C  0021               	movlb	1	; select bank1
  6538     073D  00BE               	movwf	efgtoa@h^(0+128)
  6539     073E                     l3860:
  6540                           
  6541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  6542     073E  3041               	movlw	65
  6543     073F  0020               	movlb	0	; select bank0
  6544     0740  00BD               	movwf	___fldiv@a+3
  6545     0741  3020               	movlw	32
  6546     0742  00BC               	movwf	___fldiv@a+2
  6547     0743  3000               	movlw	0
  6548     0744  00BB               	movwf	___fldiv@a+1
  6549     0745  3000               	movlw	0
  6550     0746  00BA               	movwf	___fldiv@a
  6551     0747  0021               	movlb	1	; select bank1
  6552     0748  0850               	movf	(efgtoa@u+3)^(0+128),w
  6553     0749  0020               	movlb	0	; select bank0
  6554     074A  00C1               	movwf	___fldiv@b+3
  6555     074B  0021               	movlb	1	; select bank1
  6556     074C  084F               	movf	(efgtoa@u+2)^(0+128),w
  6557     074D  0020               	movlb	0	; select bank0
  6558     074E  00C0               	movwf	___fldiv@b+2
  6559     074F  0021               	movlb	1	; select bank1
  6560     0750  084E               	movf	(efgtoa@u+1)^(0+128),w
  6561     0751  0020               	movlb	0	; select bank0
  6562     0752  00BF               	movwf	___fldiv@b+1
  6563     0753  0021               	movlb	1	; select bank1
  6564     0754  084D               	movf	efgtoa@u^(0+128),w
  6565     0755  0020               	movlb	0	; select bank0
  6566     0756  00BE               	movwf	___fldiv@b
  6567     0757  3188  2028  3181   	fcall	___fldiv
  6568     075A  0020               	movlb	0	; select bank0
  6569     075B  083D               	movf	?___fldiv+3,w
  6570     075C  0021               	movlb	1	; select bank1
  6571     075D  00D0               	movwf	(efgtoa@u+3)^(0+128)
  6572     075E  0020               	movlb	0	; select bank0
  6573     075F  083C               	movf	?___fldiv+2,w
  6574     0760  0021               	movlb	1	; select bank1
  6575     0761  00CF               	movwf	(efgtoa@u+2)^(0+128)
  6576     0762  0020               	movlb	0	; select bank0
  6577     0763  083B               	movf	?___fldiv+1,w
  6578     0764  0021               	movlb	1	; select bank1
  6579     0765  00CE               	movwf	(efgtoa@u+1)^(0+128)
  6580     0766  0020               	movlb	0	; select bank0
  6581     0767  083A               	movf	?___fldiv,w
  6582     0768  0021               	movlb	1	; select bank1
  6583     0769  00CD               	movwf	efgtoa@u^(0+128)
  6584     076A                     l3862:
  6585                           
  6586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  6587     076A  30FF               	movlw	255
  6588     076B  07A4               	addwf	efgtoa@ne^(0+128),f
  6589     076C  30FF               	movlw	255
  6590     076D  3DA5               	addwfc	(efgtoa@ne+1)^(0+128),f
  6591     076E                     l3864:
  6592                           
  6593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  6594     076E  3001               	movlw	1
  6595     076F  07BC               	addwf	efgtoa@i^(0+128),f
  6596     0770  3000               	movlw	0
  6597     0771  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  6598     0772                     l3866:
  6599                           
  6600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6601     0772  083D               	movf	(efgtoa@i+1)^(0+128),w
  6602     0773  3A80               	xorlw	128
  6603     0774  00A0               	movwf	??_efgtoa^(0+128)
  6604     0775  0832               	movf	(efgtoa@m+1)^(0+128),w
  6605     0776  3A80               	xorlw	128
  6606     0777  0220               	subwf	??_efgtoa^(0+128),w
  6607     0778  1D03               	skipz
  6608     0779  2F7C               	goto	u5365
  6609     077A  0831               	movf	efgtoa@m^(0+128),w
  6610     077B  023C               	subwf	efgtoa@i^(0+128),w
  6611     077C                     u5365:
  6612     077C  1803               	skipnc
  6613     077D  2F7F               	goto	u5361
  6614     077E  2F80               	goto	u5360
  6615     077F                     u5361:
  6616     077F  2F8E               	goto	l3870
  6617     0780                     u5360:
  6618     0780                     l3868:
  6619     0780  0021               	movlb	1	; select bank1
  6620     0781  0848               	movf	(efgtoa@n+1)^(0+128),w
  6621     0782  3A80               	xorlw	128
  6622     0783  00A0               	movwf	??_efgtoa^(0+128)
  6623     0784  3080               	movlw	128
  6624     0785  0220               	subwf	??_efgtoa^(0+128),w
  6625     0786  1D03               	skipz
  6626     0787  2F8A               	goto	u5375
  6627     0788  304B               	movlw	75
  6628     0789  0247               	subwf	efgtoa@n^(0+128),w
  6629     078A                     u5375:
  6630     078A  1C03               	skipc
  6631     078B  2F8D               	goto	u5371
  6632     078C  2F8E               	goto	u5370
  6633     078D                     u5371:
  6634     078D  2E3D               	goto	l3824
  6635     078E                     u5370:
  6636     078E                     l3870:
  6637                           
  6638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  6639     078E  304F               	movlw	79
  6640     078F  0021               	movlb	1	; select bank1
  6641     0790  00BC               	movwf	efgtoa@i^(0+128)
  6642     0791  3000               	movlw	0
  6643     0792  00BD               	movwf	(efgtoa@i^(0+128)+1)
  6644     0793                     l3872:
  6645                           
  6646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  6647     0793  083C               	movf	efgtoa@i^(0+128),w
  6648     0794  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6649     0795  0086               	movwf	6
  6650     0796  3002               	movlw	2	; select bank4/5
  6651     0797  0087               	movwf	7
  6652     0798  0181               	clrf	1
  6653     0799                     l3874:
  6654                           
  6655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6656     0799  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6657     079A  00F0               	movwf	memcpy@s1
  6658     079B  0848               	movf	(efgtoa@n+1)^(0+128),w
  6659     079C  00F2               	movwf	memcpy@n+1
  6660     079D  0847               	movf	efgtoa@n^(0+128),w
  6661     079E  00F1               	movwf	memcpy@n
  6662     079F  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6663     07A0  00A0               	movwf	??_efgtoa^(0+128)
  6664     07A1  0847               	movf	efgtoa@n^(0+128),w
  6665     07A2  0220               	subwf	??_efgtoa^(0+128),w
  6666     07A3  073C               	addwf	efgtoa@i^(0+128),w
  6667     07A4  3188  2001  3181   	fcall	_memcpy
  6668     07A7                     l3876:
  6669                           
  6670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  6671     07A7  0021               	movlb	1	; select bank1
  6672     07A8  0847               	movf	efgtoa@n^(0+128),w
  6673     07A9  023C               	subwf	efgtoa@i^(0+128),w
  6674     07AA  00C7               	movwf	efgtoa@n^(0+128)
  6675     07AB  0848               	movf	(efgtoa@n+1)^(0+128),w
  6676     07AC  3B3D               	subwfb	(efgtoa@i+1)^(0+128),w
  6677     07AD  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6678     07AE                     l3878:
  6679                           
  6680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  6681     07AE  0846               	movf	efgtoa@sign^(0+128),w
  6682     07AF  1D03               	btfss	3,2
  6683     07B0  2FB2               	goto	u5381
  6684     07B1  2FB4               	goto	u5380
  6685     07B2                     u5381:
  6686     07B2  3001               	movlw	1
  6687     07B3  2FB5               	goto	u5390
  6688     07B4                     u5380:
  6689     07B4  3000               	movlw	0
  6690     07B5                     u5390:
  6691     07B5  00A0               	movwf	??_efgtoa^(0+128)
  6692     07B6  01A1               	clrf	(??_efgtoa^(0+128)+1)
  6693     07B7  0820               	movf	??_efgtoa^(0+128),w
  6694     07B8  00BC               	movwf	efgtoa@i^(0+128)
  6695     07B9  0821               	movf	(??_efgtoa+1)^(0+128),w
  6696     07BA  00BD               	movwf	(efgtoa@i+1)^(0+128)
  6697     07BB                     l3880:
  6698                           
  6699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  6700     07BB  0846               	movf	efgtoa@sign^(0+128),w
  6701     07BC  1903               	btfsc	3,2
  6702     07BD  2FBF               	goto	u5401
  6703     07BE  2FC0               	goto	u5400
  6704     07BF                     u5401:
  6705     07BF  2FCB               	goto	l3884
  6706     07C0                     u5400:
  6707     07C0                     l3882:
  6708                           
  6709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  6710     07C0  30FF               	movlw	255
  6711     07C1  07C7               	addwf	efgtoa@n^(0+128),f
  6712     07C2  30FF               	movlw	255
  6713     07C3  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6714     07C4  0847               	movf	efgtoa@n^(0+128),w
  6715     07C5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6716     07C6  0086               	movwf	6
  6717     07C7  3002               	movlw	2	; select bank4/5
  6718     07C8  0087               	movwf	7
  6719     07C9  0846               	movf	efgtoa@sign^(0+128),w
  6720     07CA  0081               	movwf	1
  6721     07CB                     l3884:
  6722                           
  6723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  6724     07CB  083C               	movf	efgtoa@i^(0+128),w
  6725     07CC  02B6               	subwf	efgtoa@w^(0+128),f
  6726     07CD  083D               	movf	(efgtoa@i+1)^(0+128),w
  6727     07CE  3BB7               	subwfb	(efgtoa@w+1)^(0+128),f
  6728     07CF                     l3886:
  6729                           
  6730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6731     07CF  0847               	movf	efgtoa@n^(0+128),w
  6732     07D0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6733     07D1  00FB               	movwf	pad@buf
  6734     07D2  0837               	movf	(efgtoa@w+1)^(0+128),w
  6735     07D3  00FD               	movwf	pad@p+1
  6736     07D4  0836               	movf	efgtoa@w^(0+128),w
  6737     07D5  00FC               	movwf	pad@p
  6738     07D6  0833               	movf	efgtoa@fp^(0+128),w
  6739     07D7  319B  23F7  3181   	fcall	_pad
  6740     07DA                     l856:
  6741     07DA  0008               	return
  6742     07DB                     __end_of_efgtoa:
  6743                           
  6744                           	psect	text11
  6745     1A6E                     __ptext11:	
  6746 ;; *************** function _strcpy *****************
  6747 ;; Defined at:
  6748 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  dest            1    wreg     PTR unsigned char 
  6751 ;;		 -> dbuf(80), 
  6752 ;;  src             2    0[COMMON] PTR const unsigned char 
  6753 ;;		 -> STR_18(4), STR_15(4), 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  dest            1    7[COMMON] PTR unsigned char 
  6756 ;;		 -> dbuf(80), 
  6757 ;;  s               2    4[COMMON] PTR const unsigned char 
  6758 ;;		 -> STR_18(4), STR_15(4), 
  6759 ;;  d               1    6[COMMON] PTR unsigned char 
  6760 ;;		 -> dbuf(80), 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      PTR unsigned char 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6770 ;;      Params:         2       0       0       0       0       0       0       0
  6771 ;;      Locals:         4       0       0       0       0       0       0       0
  6772 ;;      Temps:          2       0       0       0       0       0       0       0
  6773 ;;      Totals:         8       0       0       0       0       0       0       0
  6774 ;;Total ram usage:        8 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_efgtoa
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783     1A6E                     _strcpy:	
  6784                           ;psect for function _strcpy
  6785                           
  6786                           
  6787                           ;incstack = 0
  6788                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6789                           ;strcpy@dest stored from wreg
  6790     1A6E  00F7               	movwf	strcpy@dest
  6791     1A6F                     l3576:
  6792     1A6F  0871               	movf	strcpy@src+1,w
  6793     1A70  00F5               	movwf	strcpy@s+1
  6794     1A71  0870               	movf	strcpy@src,w
  6795     1A72  00F4               	movwf	strcpy@s
  6796     1A73  0877               	movf	strcpy@dest,w
  6797     1A74  00F6               	movwf	strcpy@d
  6798     1A75                     l3578:
  6799     1A75  0876               	movf	strcpy@d,w
  6800     1A76  0086               	movwf	6
  6801     1A77  3002               	movlw	2	; select bank4/5
  6802     1A78  0087               	movwf	7
  6803     1A79  0AF6               	incf	strcpy@d,f
  6804     1A7A  0875               	movf	strcpy@s+1,w
  6805     1A7B  00F3               	movwf	??_strcpy+1
  6806     1A7C  0874               	movf	strcpy@s,w
  6807     1A7D  00F2               	movwf	??_strcpy
  6808     1A7E  0AF4               	incf	strcpy@s,f
  6809     1A7F  1903               	skipnz
  6810     1A80  0AF5               	incf	strcpy@s+1,f
  6811     1A81  0872               	movf	??_strcpy,w
  6812     1A82  0084               	movwf	4
  6813     1A83  0873               	movf	??_strcpy+1,w
  6814     1A84  0085               	movwf	5
  6815     1A85  0800               	movf	0,w	;code access
  6816     1A86  3FC0               	movwi [0]fsr1
  6817     1A87  0889               	movf	9,f
  6818     1A88  1D03               	btfss	3,2
  6819     1A89  2A8B               	goto	u4801
  6820     1A8A  2A8C               	goto	u4800
  6821     1A8B                     u4801:
  6822     1A8B  2A75               	goto	l3578
  6823     1A8C                     u4800:
  6824     1A8C                     l1046:
  6825     1A8C  0008               	return
  6826     1A8D                     __end_of_strcpy:
  6827                           
  6828                           	psect	text12
  6829     0801                     __ptext12:	
  6830 ;; *************** function _memcpy *****************
  6831 ;; Defined at:
  6832 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  d1              1    wreg     PTR void 
  6835 ;;		 -> dbuf(80), 
  6836 ;;  s1              1    0[COMMON] PTR const void 
  6837 ;;		 -> dbuf(80), 
  6838 ;;  n               2    1[COMMON] unsigned int 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  d1              1    5[COMMON] PTR void 
  6841 ;;		 -> dbuf(80), 
  6842 ;;  s               1    7[COMMON] PTR const unsigned char 
  6843 ;;		 -> dbuf(80), 
  6844 ;;  d               1    6[COMMON] PTR unsigned char 
  6845 ;;		 -> dbuf(80), 
  6846 ;;  tmp             1    4[COMMON] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      PTR void 
  6849 ;; Registers used:
  6850 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6856 ;;      Params:         3       0       0       0       0       0       0       0
  6857 ;;      Locals:         4       0       0       0       0       0       0       0
  6858 ;;      Temps:          1       0       0       0       0       0       0       0
  6859 ;;      Totals:         8       0       0       0       0       0       0       0
  6860 ;;Total ram usage:        8 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_efgtoa
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869     0801                     _memcpy:	
  6870                           ;psect for function _memcpy
  6871                           
  6872                           
  6873                           ;incstack = 0
  6874                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6875                           ;memcpy@d1 stored from wreg
  6876     0801  00F5               	movwf	memcpy@d1
  6877     0802                     l3614:
  6878     0802  0870               	movf	memcpy@s1,w
  6879     0803  00F7               	movwf	memcpy@s
  6880     0804  0875               	movf	memcpy@d1,w
  6881     0805  00F6               	movwf	memcpy@d
  6882     0806  281B               	goto	l1014
  6883     0807                     l3616:
  6884     0807  0877               	movf	memcpy@s,w
  6885     0808  0086               	movwf	6
  6886     0809  3002               	movlw	2	; select bank4/5
  6887     080A  0087               	movwf	7
  6888     080B  0801               	movf	1,w
  6889     080C  00F4               	movwf	memcpy@tmp
  6890     080D                     l3618:
  6891     080D  3001               	movlw	1
  6892     080E  00F3               	movwf	??_memcpy
  6893     080F  0873               	movf	??_memcpy,w
  6894     0810  07F7               	addwf	memcpy@s,f
  6895     0811                     l3620:
  6896     0811  0876               	movf	memcpy@d,w
  6897     0812  0086               	movwf	6
  6898     0813  3002               	movlw	2	; select bank4/5
  6899     0814  0087               	movwf	7
  6900     0815  0874               	movf	memcpy@tmp,w
  6901     0816  0081               	movwf	1
  6902     0817  3001               	movlw	1
  6903     0818  00F3               	movwf	??_memcpy
  6904     0819  0873               	movf	??_memcpy,w
  6905     081A  07F6               	addwf	memcpy@d,f
  6906     081B                     l1014:
  6907     081B  3001               	movlw	1
  6908     081C  02F1               	subwf	memcpy@n,f
  6909     081D  3000               	movlw	0
  6910     081E  3BF2               	subwfb	memcpy@n+1,f
  6911     081F  0A71               	incf	memcpy@n,w
  6912     0820  1D03               	skipz
  6913     0821  2826               	goto	u4931
  6914     0822  0A72               	incf	memcpy@n+1,w
  6915     0823  1D03               	btfss	3,2
  6916     0824  2826               	goto	u4931
  6917     0825  2827               	goto	u4930
  6918     0826                     u4931:
  6919     0826  2807               	goto	l3616
  6920     0827                     u4930:
  6921     0827                     l1017:
  6922     0827  0008               	return
  6923     0828                     __end_of_memcpy:
  6924                           
  6925                           	psect	text13
  6926     1B2F                     __ptext13:	
  6927 ;; *************** function _labs *****************
  6928 ;; Defined at:
  6929 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  a               4    0[COMMON] long 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  4    0[COMMON] long 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6943 ;;      Params:         4       0       0       0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0
  6946 ;;      Totals:         4       0       0       0       0       0       0       0
  6947 ;;Total ram usage:        4 bytes
  6948 ;; Hardware stack levels used: 1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_efgtoa
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956     1B2F                     _labs:	
  6957                           ;psect for function _labs
  6958                           
  6959     1B2F                     l3580:	
  6960                           ;incstack = 0
  6961                           ; Regs used in _labs: [wreg+status,2+status,0]
  6962                           
  6963     1B2F  1BF3               	btfsc	labs@a+3,7
  6964     1B30  2B40               	goto	u4810
  6965     1B31  0873               	movf	labs@a+3,w
  6966     1B32  1D03               	btfss	3,2
  6967     1B33  2B3F               	goto	u4811
  6968     1B34  0872               	movf	labs@a+2,w
  6969     1B35  1D03               	btfss	3,2
  6970     1B36  2B3F               	goto	u4811
  6971     1B37  0871               	movf	labs@a+1,w
  6972     1B38  1D03               	btfss	3,2
  6973     1B39  2B3F               	goto	u4811
  6974     1B3A  3001               	movlw	1
  6975     1B3B  0270               	subwf	labs@a,w
  6976     1B3C  1803               	btfsc	3,0
  6977     1B3D  2B3F               	goto	u4811
  6978     1B3E  2B40               	goto	u4810
  6979     1B3F                     u4811:
  6980     1B3F  2B50               	goto	l1008
  6981     1B40                     u4810:
  6982     1B40                     l3582:
  6983     1B40  0970               	comf	labs@a,w
  6984     1B41  00F0               	movwf	?_labs
  6985     1B42  0971               	comf	labs@a+1,w
  6986     1B43  00F1               	movwf	?_labs+1
  6987     1B44  0972               	comf	labs@a+2,w
  6988     1B45  00F2               	movwf	?_labs+2
  6989     1B46  0973               	comf	labs@a+3,w
  6990     1B47  00F3               	movwf	?_labs+3
  6991     1B48  0AF0               	incf	?_labs,f
  6992     1B49  1903               	skipnz
  6993     1B4A  0AF1               	incf	?_labs+1,f
  6994     1B4B  1903               	skipnz
  6995     1B4C  0AF2               	incf	?_labs+2,f
  6996     1B4D  1903               	skipnz
  6997     1B4E  0AF3               	incf	?_labs+3,f
  6998     1B4F  2B50               	goto	l1011
  6999     1B50                     l1008:
  7000     1B50                     l1011:
  7001     1B50  0008               	return
  7002     1B51                     __end_of_labs:
  7003                           
  7004                           	psect	text14
  7005     121E                     __ptext14:	
  7006 ;; *************** function _floorf *****************
  7007 ;; Defined at:
  7008 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  x               4   52[BANK0 ] float 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  u               4   68[BANK0 ] struct .
  7013 ;;  m               4   62[BANK0 ] unsigned long 
  7014 ;;  e               2   66[BANK0 ] int 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  4   52[BANK0 ] float 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7024 ;;      Params:         0       4       0       0       0       0       0       0
  7025 ;;      Locals:         0      10       0       0       0       0       0       0
  7026 ;;      Temps:          0       6       0       0       0       0       0       0
  7027 ;;      Totals:         0      20       0       0       0       0       0       0
  7028 ;;Total ram usage:       20 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_efgtoa
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037     121E                     _floorf:	
  7038                           ;psect for function _floorf
  7039                           
  7040     121E                     l3584:	
  7041                           ;incstack = 0
  7042                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7043                           
  7044     121E  0023               	movlb	3	; select bank3
  7045     121F  082C               	movf	(floorf@F526+3)^(0+384),w
  7046     1220  0020               	movlb	0	; select bank0
  7047     1221  00E7               	movwf	floorf@u+3
  7048     1222  0023               	movlb	3	; select bank3
  7049     1223  082B               	movf	(floorf@F526+2)^(0+384),w
  7050     1224  0020               	movlb	0	; select bank0
  7051     1225  00E6               	movwf	floorf@u+2
  7052     1226  0023               	movlb	3	; select bank3
  7053     1227  082A               	movf	(floorf@F526+1)^(0+384),w
  7054     1228  0020               	movlb	0	; select bank0
  7055     1229  00E5               	movwf	floorf@u+1
  7056     122A  0023               	movlb	3	; select bank3
  7057     122B  0829               	movf	floorf@F526^(0+384),w
  7058     122C  0020               	movlb	0	; select bank0
  7059     122D  00E4               	movwf	floorf@u
  7060     122E  0857               	movf	floorf@x+3,w
  7061     122F  00E7               	movwf	floorf@u+3
  7062     1230  0856               	movf	floorf@x+2,w
  7063     1231  00E6               	movwf	floorf@u+2
  7064     1232  0855               	movf	floorf@x+1,w
  7065     1233  00E5               	movwf	floorf@u+1
  7066     1234  0854               	movf	floorf@x,w
  7067     1235  00E4               	movwf	floorf@u
  7068     1236                     l3586:
  7069     1236  0864               	movf	floorf@u,w
  7070     1237  00D8               	movwf	??_floorf
  7071     1238  0865               	movf	floorf@u+1,w
  7072     1239  00D9               	movwf	??_floorf+1
  7073     123A  0866               	movf	floorf@u+2,w
  7074     123B  00DA               	movwf	??_floorf+2
  7075     123C  0867               	movf	floorf@u+3,w
  7076     123D  00DB               	movwf	??_floorf+3
  7077     123E  3017               	movlw	23
  7078     123F                     u4825:
  7079     123F  36DB               	lsrf	??_floorf+3,f
  7080     1240  0CDA               	rrf	??_floorf+2,f
  7081     1241  0CD9               	rrf	??_floorf+1,f
  7082     1242  0CD8               	rrf	??_floorf,f
  7083     1243                     u4820:
  7084     1243  0B89               	decfsz	9,f
  7085     1244  2A3F               	goto	u4825
  7086     1245  30FF               	movlw	255
  7087     1246  0558               	andwf	??_floorf,w
  7088     1247  00DC               	movwf	??_floorf+4
  7089     1248  3000               	movlw	0
  7090     1249  0559               	andwf	??_floorf+1,w
  7091     124A  00DD               	movwf	??_floorf+5
  7092     124B  085C               	movf	??_floorf+4,w
  7093     124C  3E81               	addlw	129
  7094     124D  00E2               	movwf	floorf@e
  7095     124E  30FF               	movlw	255
  7096     124F  3D5D               	addwfc	??_floorf+5,w
  7097     1250  00E3               	movwf	floorf@e+1
  7098     1251                     l3588:
  7099     1251  0863               	movf	floorf@e+1,w
  7100     1252  3A80               	xorlw	128
  7101     1253  00D8               	movwf	??_floorf
  7102     1254  3080               	movlw	128
  7103     1255  0258               	subwf	??_floorf,w
  7104     1256  1D03               	skipz
  7105     1257  2A5A               	goto	u4835
  7106     1258  3017               	movlw	23
  7107     1259  0262               	subwf	floorf@e,w
  7108     125A                     u4835:
  7109     125A  1C03               	skipc
  7110     125B  2A5D               	goto	u4831
  7111     125C  2A5E               	goto	u4830
  7112     125D                     u4831:
  7113     125D  2A5F               	goto	l982
  7114     125E                     u4830:
  7115     125E                     l3590:
  7116     125E  2B08               	goto	l983
  7117     125F                     l982:
  7118     125F  0020               	movlb	0	; select bank0
  7119     1260  1BE3               	btfsc	floorf@e+1,7
  7120     1261  2A63               	goto	u4841
  7121     1262  2A64               	goto	u4840
  7122     1263                     u4841:
  7123     1263  2AC1               	goto	l3604
  7124     1264                     u4840:
  7125     1264                     l3592:
  7126     1264  30FF               	movlw	255
  7127     1265  00D8               	movwf	??_floorf
  7128     1266  30FF               	movlw	255
  7129     1267  00D9               	movwf	??_floorf+1
  7130     1268  307F               	movlw	127
  7131     1269  00DA               	movwf	??_floorf+2
  7132     126A  3000               	movlw	0
  7133     126B  00DB               	movwf	??_floorf+3
  7134     126C  0A62               	incf	floorf@e,w
  7135     126D  2A72               	goto	u4850
  7136     126E                     u4855:
  7137     126E  37DB               	asrf	??_floorf+3,f
  7138     126F  0CDA               	rrf	??_floorf+2,f
  7139     1270  0CD9               	rrf	??_floorf+1,f
  7140     1271  0CD8               	rrf	??_floorf,f
  7141     1272                     u4850:
  7142     1272  0B89               	decfsz	9,f
  7143     1273  2A6E               	goto	u4855
  7144     1274  085B               	movf	??_floorf+3,w
  7145     1275  00E1               	movwf	floorf@m+3
  7146     1276  085A               	movf	??_floorf+2,w
  7147     1277  00E0               	movwf	floorf@m+2
  7148     1278  0859               	movf	??_floorf+1,w
  7149     1279  00DF               	movwf	floorf@m+1
  7150     127A  0858               	movf	??_floorf,w
  7151     127B  00DE               	movwf	floorf@m
  7152     127C                     l3594:
  7153     127C  0864               	movf	floorf@u,w
  7154     127D  055E               	andwf	floorf@m,w
  7155     127E  00D8               	movwf	??_floorf
  7156     127F  0865               	movf	floorf@u+1,w
  7157     1280  055F               	andwf	floorf@m+1,w
  7158     1281  00D9               	movwf	??_floorf+1
  7159     1282  0866               	movf	floorf@u+2,w
  7160     1283  0560               	andwf	floorf@m+2,w
  7161     1284  00DA               	movwf	??_floorf+2
  7162     1285  0867               	movf	floorf@u+3,w
  7163     1286  0561               	andwf	floorf@m+3,w
  7164     1287  00DB               	movwf	??_floorf+3
  7165     1288  085B               	movf	??_floorf+3,w
  7166     1289  045A               	iorwf	??_floorf+2,w
  7167     128A  0459               	iorwf	??_floorf+1,w
  7168     128B  0458               	iorwf	??_floorf,w
  7169     128C  1D03               	skipz
  7170     128D  2A8F               	goto	u4861
  7171     128E  2A90               	goto	u4860
  7172     128F                     u4861:
  7173     128F  2A91               	goto	l3598
  7174     1290                     u4860:
  7175     1290  2A5E               	goto	l3590
  7176     1291                     l3598:
  7177     1291  0864               	movf	floorf@u,w
  7178     1292  00D8               	movwf	??_floorf
  7179     1293  0865               	movf	floorf@u+1,w
  7180     1294  00D9               	movwf	??_floorf+1
  7181     1295  0866               	movf	floorf@u+2,w
  7182     1296  00DA               	movwf	??_floorf+2
  7183     1297  0867               	movf	floorf@u+3,w
  7184     1298  00DB               	movwf	??_floorf+3
  7185     1299  301F               	movlw	31
  7186     129A                     u4875:
  7187     129A  36DB               	lsrf	??_floorf+3,f
  7188     129B  0CDA               	rrf	??_floorf+2,f
  7189     129C  0CD9               	rrf	??_floorf+1,f
  7190     129D  0CD8               	rrf	??_floorf,f
  7191     129E                     u4870:
  7192     129E  0B89               	decfsz	9,f
  7193     129F  2A9A               	goto	u4875
  7194     12A0  085B               	movf	??_floorf+3,w
  7195     12A1  045A               	iorwf	??_floorf+2,w
  7196     12A2  0459               	iorwf	??_floorf+1,w
  7197     12A3  0458               	iorwf	??_floorf,w
  7198     12A4  1903               	skipnz
  7199     12A5  2AA7               	goto	u4881
  7200     12A6  2AA8               	goto	u4880
  7201     12A7                     u4881:
  7202     12A7  2AB0               	goto	l3602
  7203     12A8                     u4880:
  7204     12A8                     l3600:
  7205     12A8  085E               	movf	floorf@m,w
  7206     12A9  07E4               	addwf	floorf@u,f
  7207     12AA  085F               	movf	floorf@m+1,w
  7208     12AB  3DE5               	addwfc	floorf@u+1,f
  7209     12AC  0860               	movf	floorf@m+2,w
  7210     12AD  3DE6               	addwfc	floorf@u+2,f
  7211     12AE  0861               	movf	floorf@m+3,w
  7212     12AF  3DE7               	addwfc	floorf@u+3,f
  7213     12B0                     l3602:
  7214     12B0  095E               	comf	floorf@m,w
  7215     12B1  00D8               	movwf	??_floorf
  7216     12B2  095F               	comf	floorf@m+1,w
  7217     12B3  00D9               	movwf	??_floorf+1
  7218     12B4  0960               	comf	floorf@m+2,w
  7219     12B5  00DA               	movwf	??_floorf+2
  7220     12B6  0961               	comf	floorf@m+3,w
  7221     12B7  00DB               	movwf	??_floorf+3
  7222     12B8  0858               	movf	??_floorf,w
  7223     12B9  05E4               	andwf	floorf@u,f
  7224     12BA  0859               	movf	??_floorf+1,w
  7225     12BB  05E5               	andwf	floorf@u+1,f
  7226     12BC  085A               	movf	??_floorf+2,w
  7227     12BD  05E6               	andwf	floorf@u+2,f
  7228     12BE  085B               	movf	??_floorf+3,w
  7229     12BF  05E7               	andwf	floorf@u+3,f
  7230     12C0  2B00               	goto	l987
  7231     12C1                     l3604:
  7232     12C1  0864               	movf	floorf@u,w
  7233     12C2  00D8               	movwf	??_floorf
  7234     12C3  0865               	movf	floorf@u+1,w
  7235     12C4  00D9               	movwf	??_floorf+1
  7236     12C5  0866               	movf	floorf@u+2,w
  7237     12C6  00DA               	movwf	??_floorf+2
  7238     12C7  0867               	movf	floorf@u+3,w
  7239     12C8  00DB               	movwf	??_floorf+3
  7240     12C9  301F               	movlw	31
  7241     12CA                     u4895:
  7242     12CA  36DB               	lsrf	??_floorf+3,f
  7243     12CB  0CDA               	rrf	??_floorf+2,f
  7244     12CC  0CD9               	rrf	??_floorf+1,f
  7245     12CD  0CD8               	rrf	??_floorf,f
  7246     12CE                     u4890:
  7247     12CE  0B89               	decfsz	9,f
  7248     12CF  2ACA               	goto	u4895
  7249     12D0  085B               	movf	??_floorf+3,w
  7250     12D1  045A               	iorwf	??_floorf+2,w
  7251     12D2  0459               	iorwf	??_floorf+1,w
  7252     12D3  0458               	iorwf	??_floorf,w
  7253     12D4  1D03               	skipz
  7254     12D5  2AD7               	goto	u4901
  7255     12D6  2AD8               	goto	u4900
  7256     12D7                     u4901:
  7257     12D7  2AE1               	goto	l3608
  7258     12D8                     u4900:
  7259     12D8                     l3606:
  7260     12D8  3000               	movlw	0
  7261     12D9  00E7               	movwf	floorf@u+3
  7262     12DA  3000               	movlw	0
  7263     12DB  00E6               	movwf	floorf@u+2
  7264     12DC  3000               	movlw	0
  7265     12DD  00E5               	movwf	floorf@u+1
  7266     12DE  3000               	movlw	0
  7267     12DF  00E4               	movwf	floorf@u
  7268     12E0  2B00               	goto	l987
  7269     12E1                     l3608:
  7270     12E1  0864               	movf	floorf@u,w
  7271     12E2  00D8               	movwf	??_floorf
  7272     12E3  0865               	movf	floorf@u+1,w
  7273     12E4  00D9               	movwf	??_floorf+1
  7274     12E5  0866               	movf	floorf@u+2,w
  7275     12E6  00DA               	movwf	??_floorf+2
  7276     12E7  0867               	movf	floorf@u+3,w
  7277     12E8  00DB               	movwf	??_floorf+3
  7278     12E9  3001               	movlw	1
  7279     12EA                     u4915:
  7280     12EA  35D8               	lslf	??_floorf,f
  7281     12EB  0DD9               	rlf	??_floorf+1,f
  7282     12EC  0DDA               	rlf	??_floorf+2,f
  7283     12ED  0DDB               	rlf	??_floorf+3,f
  7284     12EE                     u4910:
  7285     12EE  0B89               	decfsz	9,f
  7286     12EF  2AEA               	goto	u4915
  7287     12F0  085B               	movf	??_floorf+3,w
  7288     12F1  045A               	iorwf	??_floorf+2,w
  7289     12F2  0459               	iorwf	??_floorf+1,w
  7290     12F3  0458               	iorwf	??_floorf,w
  7291     12F4  1903               	skipnz
  7292     12F5  2AF7               	goto	u4921
  7293     12F6  2AF8               	goto	u4920
  7294     12F7                     u4921:
  7295     12F7  2B00               	goto	l987
  7296     12F8                     u4920:
  7297     12F8                     l3610:
  7298     12F8  30BF               	movlw	191
  7299     12F9  00E7               	movwf	floorf@u+3
  7300     12FA  3080               	movlw	128
  7301     12FB  00E6               	movwf	floorf@u+2
  7302     12FC  3000               	movlw	0
  7303     12FD  00E5               	movwf	floorf@u+1
  7304     12FE  3000               	movlw	0
  7305     12FF  00E4               	movwf	floorf@u
  7306     1300                     l987:
  7307     1300  0867               	movf	floorf@u+3,w
  7308     1301  00D7               	movwf	?_floorf+3
  7309     1302  0866               	movf	floorf@u+2,w
  7310     1303  00D6               	movwf	?_floorf+2
  7311     1304  0865               	movf	floorf@u+1,w
  7312     1305  00D5               	movwf	?_floorf+1
  7313     1306  0864               	movf	floorf@u,w
  7314     1307  00D4               	movwf	?_floorf
  7315     1308                     l983:
  7316     1308  0008               	return
  7317     1309                     __end_of_floorf:
  7318                           
  7319                           	psect	text15
  7320     1DC5                     __ptext15:	
  7321 ;; *************** function ___fpclassifyf *****************
  7322 ;; Defined at:
  7323 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  x               4    0[COMMON] float 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  u               4    2[BANK0 ] struct .
  7328 ;;  e               2    0[BANK0 ] int 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    0[COMMON] int 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7338 ;;      Params:         4       0       0       0       0       0       0       0
  7339 ;;      Locals:         0       6       0       0       0       0       0       0
  7340 ;;      Temps:          6       0       0       0       0       0       0       0
  7341 ;;      Totals:        10       6       0       0       0       0       0       0
  7342 ;;Total ram usage:       16 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_efgtoa
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351     1DC5                     ___fpclassifyf:	
  7352                           ;psect for function ___fpclassifyf
  7353                           
  7354     1DC5                     l3552:	
  7355                           ;incstack = 0
  7356                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7357                           
  7358     1DC5  0023               	movlb	3	; select bank3
  7359     1DC6  0830               	movf	(___fpclassifyf@F465+3)^(0+384),w
  7360     1DC7  0020               	movlb	0	; select bank0
  7361     1DC8  00A5               	movwf	___fpclassifyf@u+3
  7362     1DC9  0023               	movlb	3	; select bank3
  7363     1DCA  082F               	movf	(___fpclassifyf@F465+2)^(0+384),w
  7364     1DCB  0020               	movlb	0	; select bank0
  7365     1DCC  00A4               	movwf	___fpclassifyf@u+2
  7366     1DCD  0023               	movlb	3	; select bank3
  7367     1DCE  082E               	movf	(___fpclassifyf@F465+1)^(0+384),w
  7368     1DCF  0020               	movlb	0	; select bank0
  7369     1DD0  00A3               	movwf	___fpclassifyf@u+1
  7370     1DD1  0023               	movlb	3	; select bank3
  7371     1DD2  082D               	movf	___fpclassifyf@F465^(0+384),w
  7372     1DD3  0020               	movlb	0	; select bank0
  7373     1DD4  00A2               	movwf	___fpclassifyf@u
  7374     1DD5  0873               	movf	___fpclassifyf@x+3,w
  7375     1DD6  00A5               	movwf	___fpclassifyf@u+3
  7376     1DD7  0872               	movf	___fpclassifyf@x+2,w
  7377     1DD8  00A4               	movwf	___fpclassifyf@u+2
  7378     1DD9  0871               	movf	___fpclassifyf@x+1,w
  7379     1DDA  00A3               	movwf	___fpclassifyf@u+1
  7380     1DDB  0870               	movf	___fpclassifyf@x,w
  7381     1DDC  00A2               	movwf	___fpclassifyf@u
  7382     1DDD                     l3554:
  7383     1DDD  0822               	movf	___fpclassifyf@u,w
  7384     1DDE  00F4               	movwf	??___fpclassifyf
  7385     1DDF  0823               	movf	___fpclassifyf@u+1,w
  7386     1DE0  00F5               	movwf	??___fpclassifyf+1
  7387     1DE1  0824               	movf	___fpclassifyf@u+2,w
  7388     1DE2  00F6               	movwf	??___fpclassifyf+2
  7389     1DE3  0825               	movf	___fpclassifyf@u+3,w
  7390     1DE4  00F7               	movwf	??___fpclassifyf+3
  7391     1DE5  3017               	movlw	23
  7392     1DE6                     u4725:
  7393     1DE6  36F7               	lsrf	??___fpclassifyf+3,f
  7394     1DE7  0CF6               	rrf	??___fpclassifyf+2,f
  7395     1DE8  0CF5               	rrf	??___fpclassifyf+1,f
  7396     1DE9  0CF4               	rrf	??___fpclassifyf,f
  7397     1DEA                     u4720:
  7398     1DEA  0B89               	decfsz	9,f
  7399     1DEB  2DE6               	goto	u4725
  7400     1DEC  30FF               	movlw	255
  7401     1DED  0574               	andwf	??___fpclassifyf,w
  7402     1DEE  00A0               	movwf	___fpclassifyf@e
  7403     1DEF  3000               	movlw	0
  7404     1DF0  0575               	andwf	??___fpclassifyf+1,w
  7405     1DF1  00A1               	movwf	___fpclassifyf@e+1
  7406     1DF2                     l3556:
  7407     1DF2  0820               	movf	___fpclassifyf@e,w
  7408     1DF3  0421               	iorwf	___fpclassifyf@e+1,w
  7409     1DF4  1D03               	btfss	3,2
  7410     1DF5  2DF7               	goto	u4731
  7411     1DF6  2DF8               	goto	u4730
  7412     1DF7                     u4731:
  7413     1DF7  2E19               	goto	l3566
  7414     1DF8                     u4730:
  7415     1DF8                     l3558:
  7416     1DF8  0822               	movf	___fpclassifyf@u,w
  7417     1DF9  00F4               	movwf	??___fpclassifyf
  7418     1DFA  0823               	movf	___fpclassifyf@u+1,w
  7419     1DFB  00F5               	movwf	??___fpclassifyf+1
  7420     1DFC  0824               	movf	___fpclassifyf@u+2,w
  7421     1DFD  00F6               	movwf	??___fpclassifyf+2
  7422     1DFE  0825               	movf	___fpclassifyf@u+3,w
  7423     1DFF  00F7               	movwf	??___fpclassifyf+3
  7424     1E00  3001               	movlw	1
  7425     1E01                     u4745:
  7426     1E01  35F4               	lslf	??___fpclassifyf,f
  7427     1E02  0DF5               	rlf	??___fpclassifyf+1,f
  7428     1E03  0DF6               	rlf	??___fpclassifyf+2,f
  7429     1E04  0DF7               	rlf	??___fpclassifyf+3,f
  7430     1E05                     u4740:
  7431     1E05  0B89               	decfsz	9,f
  7432     1E06  2E01               	goto	u4745
  7433     1E07  0877               	movf	??___fpclassifyf+3,w
  7434     1E08  0476               	iorwf	??___fpclassifyf+2,w
  7435     1E09  0475               	iorwf	??___fpclassifyf+1,w
  7436     1E0A  0474               	iorwf	??___fpclassifyf,w
  7437     1E0B  1D03               	skipz
  7438     1E0C  2E0E               	goto	u4751
  7439     1E0D  2E0F               	goto	u4750
  7440     1E0E                     u4751:
  7441     1E0E  2E14               	goto	l3562
  7442     1E0F                     u4750:
  7443     1E0F                     l3560:
  7444     1E0F  3002               	movlw	2
  7445     1E10  00F0               	movwf	?___fpclassifyf
  7446     1E11  3000               	movlw	0
  7447     1E12  00F1               	movwf	?___fpclassifyf+1
  7448     1E13  2E43               	goto	l944
  7449     1E14                     l3562:
  7450     1E14  3003               	movlw	3
  7451     1E15  00F0               	movwf	?___fpclassifyf
  7452     1E16  3000               	movlw	0
  7453     1E17  00F1               	movwf	?___fpclassifyf+1
  7454     1E18  2E43               	goto	l944
  7455     1E19                     l3566:
  7456     1E19  0A20               	incf	___fpclassifyf@e,w
  7457     1E1A  0421               	iorwf	___fpclassifyf@e+1,w
  7458     1E1B  1D03               	btfss	3,2
  7459     1E1C  2E1E               	goto	u4761
  7460     1E1D  2E1F               	goto	u4760
  7461     1E1E                     u4761:
  7462     1E1E  2E3F               	goto	l3572
  7463     1E1F                     u4760:
  7464     1E1F                     l3568:
  7465     1E1F  0822               	movf	___fpclassifyf@u,w
  7466     1E20  00F4               	movwf	??___fpclassifyf
  7467     1E21  0823               	movf	___fpclassifyf@u+1,w
  7468     1E22  00F5               	movwf	??___fpclassifyf+1
  7469     1E23  0824               	movf	___fpclassifyf@u+2,w
  7470     1E24  00F6               	movwf	??___fpclassifyf+2
  7471     1E25  0825               	movf	___fpclassifyf@u+3,w
  7472     1E26  00F7               	movwf	??___fpclassifyf+3
  7473     1E27  3009               	movlw	9
  7474     1E28                     u4775:
  7475     1E28  35F4               	lslf	??___fpclassifyf,f
  7476     1E29  0DF5               	rlf	??___fpclassifyf+1,f
  7477     1E2A  0DF6               	rlf	??___fpclassifyf+2,f
  7478     1E2B  0DF7               	rlf	??___fpclassifyf+3,f
  7479     1E2C                     u4770:
  7480     1E2C  0B89               	decfsz	9,f
  7481     1E2D  2E28               	goto	u4775
  7482     1E2E  0877               	movf	??___fpclassifyf+3,w
  7483     1E2F  0476               	iorwf	??___fpclassifyf+2,w
  7484     1E30  0475               	iorwf	??___fpclassifyf+1,w
  7485     1E31  0474               	iorwf	??___fpclassifyf,w
  7486     1E32  1903               	skipnz
  7487     1E33  2E35               	goto	u4781
  7488     1E34  2E37               	goto	u4780
  7489     1E35                     u4781:
  7490     1E35  3001               	movlw	1
  7491     1E36  2E38               	goto	u4790
  7492     1E37                     u4780:
  7493     1E37  3000               	movlw	0
  7494     1E38                     u4790:
  7495     1E38  00F8               	movwf	??___fpclassifyf+4
  7496     1E39  01F9               	clrf	??___fpclassifyf+5
  7497     1E3A  0878               	movf	??___fpclassifyf+4,w
  7498     1E3B  00F0               	movwf	?___fpclassifyf
  7499     1E3C  0879               	movf	??___fpclassifyf+5,w
  7500     1E3D  00F1               	movwf	?___fpclassifyf+1
  7501     1E3E  2E43               	goto	l944
  7502     1E3F                     l3572:
  7503     1E3F  3004               	movlw	4
  7504     1E40  00F0               	movwf	?___fpclassifyf
  7505     1E41  3000               	movlw	0
  7506     1E42  00F1               	movwf	?___fpclassifyf+1
  7507     1E43                     l944:
  7508     1E43  0008               	return
  7509     1E44                     __end_of___fpclassifyf:
  7510                           
  7511                           	psect	text16
  7512     0005                     __ptext16:	
  7513 ;; *************** function ___fltol *****************
  7514 ;; Defined at:
  7515 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  f1              4    0[COMMON] int 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  exp1            1    9[COMMON] unsigned char 
  7520 ;;  sign1           1    8[COMMON] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  4    0[COMMON] long 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7530 ;;      Params:         4       0       0       0       0       0       0       0
  7531 ;;      Locals:         2       0       0       0       0       0       0       0
  7532 ;;      Temps:          4       0       0       0       0       0       0       0
  7533 ;;      Totals:        10       0       0       0       0       0       0       0
  7534 ;;Total ram usage:       10 bytes
  7535 ;; Hardware stack levels used: 1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_efgtoa
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543     0005                     ___fltol:	
  7544                           ;psect for function ___fltol
  7545                           
  7546     0005                     l3212:	
  7547                           ;incstack = 0
  7548                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7549                           
  7550     0005  1003               	clrc
  7551     0006  0D72               	rlf	___fltol@f1+2,w
  7552     0007  0D73               	rlf	___fltol@f1+3,w
  7553     0008  00F9               	movwf	___fltol@exp1
  7554     0009  0879               	movf	___fltol@exp1,w
  7555     000A  1D03               	btfss	3,2
  7556     000B  280D               	goto	u4041
  7557     000C  280E               	goto	u4040
  7558     000D                     u4041:
  7559     000D  2817               	goto	l3218
  7560     000E                     u4040:
  7561     000E                     l3214:
  7562     000E  3000               	movlw	0
  7563     000F  00F3               	movwf	?___fltol+3
  7564     0010  3000               	movlw	0
  7565     0011  00F2               	movwf	?___fltol+2
  7566     0012  3000               	movlw	0
  7567     0013  00F1               	movwf	?___fltol+1
  7568     0014  3000               	movlw	0
  7569     0015  00F0               	movwf	?___fltol
  7570     0016  2874               	goto	l517
  7571     0017                     l3218:
  7572     0017  0870               	movf	___fltol@f1,w
  7573     0018  00F4               	movwf	??___fltol
  7574     0019  0871               	movf	___fltol@f1+1,w
  7575     001A  00F5               	movwf	??___fltol+1
  7576     001B  0872               	movf	___fltol@f1+2,w
  7577     001C  00F6               	movwf	??___fltol+2
  7578     001D  0873               	movf	___fltol@f1+3,w
  7579     001E  00F7               	movwf	??___fltol+3
  7580     001F  301F               	movlw	31
  7581     0020                     u4055:
  7582     0020  36F7               	lsrf	??___fltol+3,f
  7583     0021  0CF6               	rrf	??___fltol+2,f
  7584     0022  0CF5               	rrf	??___fltol+1,f
  7585     0023  0CF4               	rrf	??___fltol,f
  7586     0024                     u4050:
  7587     0024  0B89               	decfsz	9,f
  7588     0025  2820               	goto	u4055
  7589     0026  0874               	movf	??___fltol,w
  7590     0027  00F8               	movwf	___fltol@sign1
  7591     0028                     l3220:
  7592     0028  17F2               	bsf	___fltol@f1+2,7
  7593     0029                     l3222:
  7594     0029  30FF               	movlw	255
  7595     002A  05F0               	andwf	___fltol@f1,f
  7596     002B  30FF               	movlw	255
  7597     002C  05F1               	andwf	___fltol@f1+1,f
  7598     002D  30FF               	movlw	255
  7599     002E  05F2               	andwf	___fltol@f1+2,f
  7600     002F  3000               	movlw	0
  7601     0030  05F3               	andwf	___fltol@f1+3,f
  7602     0031                     l3224:
  7603     0031  3096               	movlw	150
  7604     0032  02F9               	subwf	___fltol@exp1,f
  7605     0033                     l3226:
  7606     0033  1FF9               	btfss	___fltol@exp1,7
  7607     0034  2836               	goto	u4061
  7608     0035  2837               	goto	u4060
  7609     0036                     u4061:
  7610     0036  284F               	goto	l3236
  7611     0037                     u4060:
  7612     0037                     l3228:
  7613     0037  0879               	movf	___fltol@exp1,w
  7614     0038  3A80               	xorlw	128
  7615     0039  3E97               	addlw	151
  7616     003A  1803               	skipnc
  7617     003B  283D               	goto	u4071
  7618     003C  283E               	goto	u4070
  7619     003D                     u4071:
  7620     003D  283F               	goto	l3234
  7621     003E                     u4070:
  7622     003E  280E               	goto	l3214
  7623     003F                     l3234:
  7624     003F  3001               	movlw	1
  7625     0040                     u4085:
  7626     0040  36F3               	lsrf	___fltol@f1+3,f
  7627     0041  0CF2               	rrf	___fltol@f1+2,f
  7628     0042  0CF1               	rrf	___fltol@f1+1,f
  7629     0043  0CF0               	rrf	___fltol@f1,f
  7630     0044  0B89               	decfsz	9,f
  7631     0045  2840               	goto	u4085
  7632     0046  3001               	movlw	1
  7633     0047  00F4               	movwf	??___fltol
  7634     0048  0874               	movf	??___fltol,w
  7635     0049  07F9               	addwf	___fltol@exp1,f
  7636     004A  1D03               	btfss	3,2
  7637     004B  284D               	goto	u4091
  7638     004C  284E               	goto	u4090
  7639     004D                     u4091:
  7640     004D  283F               	goto	l3234
  7641     004E                     u4090:
  7642     004E  2864               	goto	l3244
  7643     004F                     l3236:
  7644     004F  3020               	movlw	32
  7645     0050  0279               	subwf	___fltol@exp1,w
  7646     0051  1C03               	skipc
  7647     0052  2854               	goto	u4101
  7648     0053  2855               	goto	u4100
  7649     0054                     u4101:
  7650     0054  285F               	goto	l524
  7651     0055                     u4100:
  7652     0055  280E               	goto	l3214
  7653     0056                     l3242:
  7654     0056  3001               	movlw	1
  7655     0057                     u4115:
  7656     0057  35F0               	lslf	___fltol@f1,f
  7657     0058  0DF1               	rlf	___fltol@f1+1,f
  7658     0059  0DF2               	rlf	___fltol@f1+2,f
  7659     005A  0DF3               	rlf	___fltol@f1+3,f
  7660     005B  0B89               	decfsz	9,f
  7661     005C  2857               	goto	u4115
  7662     005D  3001               	movlw	1
  7663     005E  02F9               	subwf	___fltol@exp1,f
  7664     005F                     l524:
  7665     005F  0879               	movf	___fltol@exp1,w
  7666     0060  1D03               	btfss	3,2
  7667     0061  2863               	goto	u4121
  7668     0062  2864               	goto	u4120
  7669     0063                     u4121:
  7670     0063  2856               	goto	l3242
  7671     0064                     u4120:
  7672     0064                     l3244:
  7673     0064  0878               	movf	___fltol@sign1,w
  7674     0065  1903               	btfsc	3,2
  7675     0066  2868               	goto	u4131
  7676     0067  2869               	goto	u4130
  7677     0068                     u4131:
  7678     0068  2874               	goto	l527
  7679     0069                     u4130:
  7680     0069                     l3246:
  7681     0069  09F0               	comf	___fltol@f1,f
  7682     006A  09F1               	comf	___fltol@f1+1,f
  7683     006B  09F2               	comf	___fltol@f1+2,f
  7684     006C  09F3               	comf	___fltol@f1+3,f
  7685     006D  0AF0               	incf	___fltol@f1,f
  7686     006E  1903               	skipnz
  7687     006F  0AF1               	incf	___fltol@f1+1,f
  7688     0070  1903               	skipnz
  7689     0071  0AF2               	incf	___fltol@f1+2,f
  7690     0072  1903               	skipnz
  7691     0073  0AF3               	incf	___fltol@f1+3,f
  7692     0074                     l527:
  7693     0074                     l517:
  7694     0074  0008               	return
  7695     0075                     __end_of___fltol:
  7696                           
  7697                           	psect	text17
  7698     1A8D                     __ptext17:	
  7699 ;; *************** function ___flsub *****************
  7700 ;; Defined at:
  7701 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  a               4   26[BANK0 ] long 
  7704 ;;  b               4   30[BANK0 ] long 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  4   26[BANK0 ] long 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0, pclath, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7716 ;;      Params:         0       8       0       0       0       0       0       0
  7717 ;;      Locals:         0       0       0       0       0       0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0
  7719 ;;      Totals:         0       8       0       0       0       0       0       0
  7720 ;;Total ram usage:        8 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; Hardware stack levels required when called: 1
  7723 ;; This function calls:
  7724 ;;		___fladd
  7725 ;; This function is called by:
  7726 ;;		_efgtoa
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730     1A8D                     ___flsub:	
  7731                           ;psect for function ___flsub
  7732                           
  7733     1A8D                     l3248:	
  7734                           ;incstack = 0
  7735                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7736                           
  7737     1A8D  3080               	movlw	128
  7738     1A8E  0020               	movlb	0	; select bank0
  7739     1A8F  06BD               	xorwf	___flsub@a+3,f
  7740     1A90                     l3250:
  7741     1A90  0841               	movf	___flsub@b+3,w
  7742     1A91  00F3               	movwf	___fladd@b+3
  7743     1A92  0840               	movf	___flsub@b+2,w
  7744     1A93  00F2               	movwf	___fladd@b+2
  7745     1A94  083F               	movf	___flsub@b+1,w
  7746     1A95  00F1               	movwf	___fladd@b+1
  7747     1A96  083E               	movf	___flsub@b,w
  7748     1A97  00F0               	movwf	___fladd@b
  7749     1A98  083D               	movf	___flsub@a+3,w
  7750     1A99  00F7               	movwf	___fladd@a+3
  7751     1A9A  083C               	movf	___flsub@a+2,w
  7752     1A9B  00F6               	movwf	___fladd@a+2
  7753     1A9C  083B               	movf	___flsub@a+1,w
  7754     1A9D  00F5               	movwf	___fladd@a+1
  7755     1A9E  083A               	movf	___flsub@a,w
  7756     1A9F  00F4               	movwf	___fladd@a
  7757     1AA0  3195  25F4  319A   	fcall	___fladd
  7758     1AA3  0873               	movf	?___fladd+3,w
  7759     1AA4  0020               	movlb	0	; select bank0
  7760     1AA5  00BD               	movwf	?___flsub+3
  7761     1AA6  0872               	movf	?___fladd+2,w
  7762     1AA7  00BC               	movwf	?___flsub+2
  7763     1AA8  0871               	movf	?___fladd+1,w
  7764     1AA9  00BB               	movwf	?___flsub+1
  7765     1AAA  0870               	movf	?___fladd,w
  7766     1AAB  00BA               	movwf	?___flsub
  7767     1AAC                     l670:
  7768     1AAC  0008               	return
  7769     1AAD                     __end_of___flsub:
  7770                           
  7771                           	psect	text18
  7772     15F4                     __ptext18:	
  7773 ;; *************** function ___fladd *****************
  7774 ;; Defined at:
  7775 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  b               4    0[COMMON] long 
  7778 ;;  a               4    4[COMMON] long 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  grs             1   11[COMMON] unsigned char 
  7781 ;;  bexp            1   10[COMMON] unsigned char 
  7782 ;;  aexp            1    9[COMMON] unsigned char 
  7783 ;;  signs           1    8[COMMON] unsigned char 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  4    0[COMMON] unsigned char 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7793 ;;      Params:         8       0       0       0       0       0       0       0
  7794 ;;      Locals:         4       0       0       0       0       0       0       0
  7795 ;;      Temps:          0       8       0       0       0       0       0       0
  7796 ;;      Totals:        12       8       0       0       0       0       0       0
  7797 ;;Total ram usage:       20 bytes
  7798 ;; Hardware stack levels used: 1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		___flsub
  7803 ;;		_efgtoa
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807     15F4                     ___fladd:	
  7808                           ;psect for function ___fladd
  7809                           
  7810     15F4                     l2874:	
  7811                           ;incstack = 0
  7812                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7813                           
  7814     15F4  0873               	movf	___fladd@b+3,w
  7815     15F5  3980               	andlw	128
  7816     15F6  00F8               	movwf	___fladd@signs
  7817     15F7                     l2876:
  7818     15F7  3573               	lslf	___fladd@b+3,w
  7819     15F8  00FA               	movwf	___fladd@bexp
  7820     15F9                     l2878:
  7821     15F9  1FF2               	btfss	___fladd@b+2,7
  7822     15FA  2DFC               	goto	u3231
  7823     15FB  2DFD               	goto	u3230
  7824     15FC                     u3231:
  7825     15FC  2DFE               	goto	l2882
  7826     15FD                     u3230:
  7827     15FD                     l2880:
  7828     15FD  147A               	bsf	___fladd@bexp,0
  7829     15FE                     l2882:
  7830     15FE  087A               	movf	___fladd@bexp,w
  7831     15FF  1903               	btfsc	3,2
  7832     1600  2E02               	goto	u3241
  7833     1601  2E03               	goto	u3240
  7834     1602                     u3241:
  7835     1602  2E13               	goto	l2892
  7836     1603                     u3240:
  7837     1603                     l2884:
  7838     1603  0A7A               	incf	___fladd@bexp,w
  7839     1604  1D03               	btfss	3,2
  7840     1605  2E07               	goto	u3251
  7841     1606  2E08               	goto	u3250
  7842     1607                     u3251:
  7843     1607  2E10               	goto	l2888
  7844     1608                     u3250:
  7845     1608                     l2886:
  7846     1608  3000               	movlw	0
  7847     1609  00F3               	movwf	___fladd@b+3
  7848     160A  3000               	movlw	0
  7849     160B  00F2               	movwf	___fladd@b+2
  7850     160C  3000               	movlw	0
  7851     160D  00F1               	movwf	___fladd@b+1
  7852     160E  3000               	movlw	0
  7853     160F  00F0               	movwf	___fladd@b
  7854     1610                     l2888:
  7855     1610  17F2               	bsf	___fladd@b+2,7
  7856     1611                     l2890:
  7857     1611  01F3               	clrf	___fladd@b+3
  7858     1612  2E1B               	goto	l2894
  7859     1613                     l2892:
  7860     1613  3000               	movlw	0
  7861     1614  00F3               	movwf	___fladd@b+3
  7862     1615  3000               	movlw	0
  7863     1616  00F2               	movwf	___fladd@b+2
  7864     1617  3000               	movlw	0
  7865     1618  00F1               	movwf	___fladd@b+1
  7866     1619  3000               	movlw	0
  7867     161A  00F0               	movwf	___fladd@b
  7868     161B                     l2894:
  7869     161B  0877               	movf	___fladd@a+3,w
  7870     161C  3980               	andlw	128
  7871     161D  00F9               	movwf	___fladd@aexp
  7872     161E                     l2896:
  7873     161E  0879               	movf	___fladd@aexp,w
  7874     161F  0678               	xorwf	___fladd@signs,w
  7875     1620  1903               	skipnz
  7876     1621  2E23               	goto	u3261
  7877     1622  2E24               	goto	u3260
  7878     1623                     u3261:
  7879     1623  2E25               	goto	l2900
  7880     1624                     u3260:
  7881     1624                     l2898:
  7882     1624  1778               	bsf	___fladd@signs,6
  7883     1625                     l2900:
  7884     1625  3577               	lslf	___fladd@a+3,w
  7885     1626  00F9               	movwf	___fladd@aexp
  7886     1627                     l2902:
  7887     1627  1FF6               	btfss	___fladd@a+2,7
  7888     1628  2E2A               	goto	u3271
  7889     1629  2E2B               	goto	u3270
  7890     162A                     u3271:
  7891     162A  2E2C               	goto	l2906
  7892     162B                     u3270:
  7893     162B                     l2904:
  7894     162B  1479               	bsf	___fladd@aexp,0
  7895     162C                     l2906:
  7896     162C  0879               	movf	___fladd@aexp,w
  7897     162D  1903               	btfsc	3,2
  7898     162E  2E30               	goto	u3281
  7899     162F  2E31               	goto	u3280
  7900     1630                     u3281:
  7901     1630  2E41               	goto	l2916
  7902     1631                     u3280:
  7903     1631                     l2908:
  7904     1631  0A79               	incf	___fladd@aexp,w
  7905     1632  1D03               	btfss	3,2
  7906     1633  2E35               	goto	u3291
  7907     1634  2E36               	goto	u3290
  7908     1635                     u3291:
  7909     1635  2E3E               	goto	l2912
  7910     1636                     u3290:
  7911     1636                     l2910:
  7912     1636  3000               	movlw	0
  7913     1637  00F7               	movwf	___fladd@a+3
  7914     1638  3000               	movlw	0
  7915     1639  00F6               	movwf	___fladd@a+2
  7916     163A  3000               	movlw	0
  7917     163B  00F5               	movwf	___fladd@a+1
  7918     163C  3000               	movlw	0
  7919     163D  00F4               	movwf	___fladd@a
  7920     163E                     l2912:
  7921     163E  17F6               	bsf	___fladd@a+2,7
  7922     163F                     l2914:
  7923     163F  01F7               	clrf	___fladd@a+3
  7924     1640  2E49               	goto	l624
  7925     1641                     l2916:
  7926     1641  3000               	movlw	0
  7927     1642  00F7               	movwf	___fladd@a+3
  7928     1643  3000               	movlw	0
  7929     1644  00F6               	movwf	___fladd@a+2
  7930     1645  3000               	movlw	0
  7931     1646  00F5               	movwf	___fladd@a+1
  7932     1647  3000               	movlw	0
  7933     1648  00F4               	movwf	___fladd@a
  7934     1649                     l624:
  7935     1649  087A               	movf	___fladd@bexp,w
  7936     164A  0279               	subwf	___fladd@aexp,w
  7937     164B  1803               	skipnc
  7938     164C  2E4E               	goto	u3301
  7939     164D  2E4F               	goto	u3300
  7940     164E                     u3301:
  7941     164E  2E76               	goto	l2952
  7942     164F                     u3300:
  7943     164F                     l2918:
  7944     164F  1F78               	btfss	___fladd@signs,6
  7945     1650  2E52               	goto	u3311
  7946     1651  2E53               	goto	u3310
  7947     1652                     u3311:
  7948     1652  2E58               	goto	l2922
  7949     1653                     u3310:
  7950     1653                     l2920:
  7951     1653  3080               	movlw	128
  7952     1654  0020               	movlb	0	; select bank0
  7953     1655  00A0               	movwf	??___fladd
  7954     1656  0820               	movf	??___fladd,w
  7955     1657  06F8               	xorwf	___fladd@signs,f
  7956     1658                     l2922:
  7957     1658  087A               	movf	___fladd@bexp,w
  7958     1659  00FB               	movwf	___fladd@grs
  7959     165A                     l2924:
  7960     165A  0879               	movf	___fladd@aexp,w
  7961     165B  00FA               	movwf	___fladd@bexp
  7962     165C                     l2926:
  7963     165C  087B               	movf	___fladd@grs,w
  7964     165D  00F9               	movwf	___fladd@aexp
  7965     165E                     l2928:
  7966     165E  0870               	movf	___fladd@b,w
  7967     165F  00FB               	movwf	___fladd@grs
  7968     1660                     l2930:
  7969     1660  0874               	movf	___fladd@a,w
  7970     1661  00F0               	movwf	___fladd@b
  7971     1662                     l2932:
  7972     1662  087B               	movf	___fladd@grs,w
  7973     1663  00F4               	movwf	___fladd@a
  7974     1664                     l2934:
  7975     1664  0871               	movf	___fladd@b+1,w
  7976     1665  00FB               	movwf	___fladd@grs
  7977     1666                     l2936:
  7978     1666  0875               	movf	___fladd@a+1,w
  7979     1667  00F1               	movwf	___fladd@b+1
  7980     1668                     l2938:
  7981     1668  087B               	movf	___fladd@grs,w
  7982     1669  00F5               	movwf	___fladd@a+1
  7983     166A                     l2940:
  7984     166A  0872               	movf	___fladd@b+2,w
  7985     166B  00FB               	movwf	___fladd@grs
  7986     166C                     l2942:
  7987     166C  0876               	movf	___fladd@a+2,w
  7988     166D  00F2               	movwf	___fladd@b+2
  7989     166E                     l2944:
  7990     166E  087B               	movf	___fladd@grs,w
  7991     166F  00F6               	movwf	___fladd@a+2
  7992     1670                     l2946:
  7993     1670  0873               	movf	___fladd@b+3,w
  7994     1671  00FB               	movwf	___fladd@grs
  7995     1672                     l2948:
  7996     1672  0877               	movf	___fladd@a+3,w
  7997     1673  00F3               	movwf	___fladd@b+3
  7998     1674                     l2950:
  7999     1674  087B               	movf	___fladd@grs,w
  8000     1675  00F7               	movwf	___fladd@a+3
  8001     1676                     l2952:
  8002     1676  01FB               	clrf	___fladd@grs
  8003     1677                     l2954:
  8004     1677  0879               	movf	___fladd@aexp,w
  8005     1678  0020               	movlb	0	; select bank0
  8006     1679  00A0               	movwf	??___fladd
  8007     167A  01A1               	clrf	??___fladd+1
  8008     167B  0821               	movf	??___fladd+1,w
  8009     167C  00A3               	movwf	??___fladd+3
  8010     167D  087A               	movf	___fladd@bexp,w
  8011     167E  0220               	subwf	??___fladd,w
  8012     167F  00A2               	movwf	??___fladd+2
  8013     1680  1C03               	skipc
  8014     1681  03A3               	decf	??___fladd+3,f
  8015     1682  0823               	movf	??___fladd+3,w
  8016     1683  3A80               	xorlw	128
  8017     1684  00A4               	movwf	??___fladd+4
  8018     1685  3080               	movlw	128
  8019     1686  0224               	subwf	??___fladd+4,w
  8020     1687  1D03               	skipz
  8021     1688  2E8B               	goto	u3325
  8022     1689  301A               	movlw	26
  8023     168A  0222               	subwf	??___fladd+2,w
  8024     168B                     u3325:
  8025     168B  1C03               	skipc
  8026     168C  2E8E               	goto	u3321
  8027     168D  2E8F               	goto	u3320
  8028     168E                     u3321:
  8029     168E  2EC1               	goto	l2970
  8030     168F                     u3320:
  8031     168F                     l2956:
  8032     168F  0873               	movf	___fladd@b+3,w
  8033     1690  0472               	iorwf	___fladd@b+2,w
  8034     1691  0471               	iorwf	___fladd@b+1,w
  8035     1692  0470               	iorwf	___fladd@b,w
  8036     1693  1D03               	skipz
  8037     1694  2E96               	goto	u3331
  8038     1695  2E98               	goto	u3330
  8039     1696                     u3331:
  8040     1696  3001               	movlw	1
  8041     1697  2E99               	goto	u3340
  8042     1698                     u3330:
  8043     1698  3000               	movlw	0
  8044     1699                     u3340:
  8045     1699  00FB               	movwf	___fladd@grs
  8046     169A  3000               	movlw	0
  8047     169B  00F3               	movwf	___fladd@b+3
  8048     169C  3000               	movlw	0
  8049     169D  00F2               	movwf	___fladd@b+2
  8050     169E  3000               	movlw	0
  8051     169F  00F1               	movwf	___fladd@b+1
  8052     16A0  3000               	movlw	0
  8053     16A1  00F0               	movwf	___fladd@b
  8054     16A2  0879               	movf	___fladd@aexp,w
  8055     16A3  00FA               	movwf	___fladd@bexp
  8056     16A4  2EC7               	goto	l628
  8057     16A5                     l630:
  8058     16A5  1C7B               	btfss	___fladd@grs,0
  8059     16A6  2EA8               	goto	u3351
  8060     16A7  2EA9               	goto	u3350
  8061     16A8                     u3351:
  8062     16A8  2EAD               	goto	l2960
  8063     16A9                     u3350:
  8064     16A9                     l2958:
  8065     16A9  367B               	lsrf	___fladd@grs,w
  8066     16AA  3801               	iorlw	1
  8067     16AB  00FB               	movwf	___fladd@grs
  8068     16AC  2EAF               	goto	l2962
  8069     16AD                     l2960:
  8070     16AD  1003               	clrc
  8071     16AE  0CFB               	rrf	___fladd@grs,f
  8072     16AF                     l2962:
  8073     16AF  1C70               	btfss	___fladd@b,0
  8074     16B0  2EB2               	goto	u3361
  8075     16B1  2EB3               	goto	u3360
  8076     16B2                     u3361:
  8077     16B2  2EB4               	goto	l2966
  8078     16B3                     u3360:
  8079     16B3                     l2964:
  8080     16B3  17FB               	bsf	___fladd@grs,7
  8081     16B4                     l2966:
  8082     16B4  3001               	movlw	1
  8083     16B5  0020               	movlb	0	; select bank0
  8084     16B6  00A0               	movwf	??___fladd
  8085     16B7                     u3375:
  8086     16B7  37F3               	asrf	___fladd@b+3,f
  8087     16B8  0CF2               	rrf	___fladd@b+2,f
  8088     16B9  0CF1               	rrf	___fladd@b+1,f
  8089     16BA  0CF0               	rrf	___fladd@b,f
  8090     16BB  0BA0               	decfsz	??___fladd& (0+127),f
  8091     16BC  2EB7               	goto	u3375
  8092     16BD                     l2968:
  8093     16BD  3001               	movlw	1
  8094     16BE  00A0               	movwf	??___fladd
  8095     16BF  0820               	movf	??___fladd,w
  8096     16C0  07FA               	addwf	___fladd@bexp,f
  8097     16C1                     l2970:
  8098     16C1  0879               	movf	___fladd@aexp,w
  8099     16C2  027A               	subwf	___fladd@bexp,w
  8100     16C3  1C03               	skipc
  8101     16C4  2EC6               	goto	u3381
  8102     16C5  2EC7               	goto	u3380
  8103     16C6                     u3381:
  8104     16C6  2EA5               	goto	l630
  8105     16C7                     u3380:
  8106     16C7                     l628:
  8107     16C7  1B78               	btfsc	___fladd@signs,6
  8108     16C8  2ECA               	goto	u3391
  8109     16C9  2ECB               	goto	u3390
  8110     16CA                     u3391:
  8111     16CA  2F02               	goto	l2996
  8112     16CB                     u3390:
  8113     16CB                     l2972:
  8114     16CB  087A               	movf	___fladd@bexp,w
  8115     16CC  1D03               	btfss	3,2
  8116     16CD  2ECF               	goto	u3401
  8117     16CE  2ED0               	goto	u3400
  8118     16CF                     u3401:
  8119     16CF  2ED9               	goto	l2978
  8120     16D0                     u3400:
  8121     16D0                     l2974:
  8122     16D0  3000               	movlw	0
  8123     16D1  00F3               	movwf	?___fladd+3
  8124     16D2  3000               	movlw	0
  8125     16D3  00F2               	movwf	?___fladd+2
  8126     16D4  3000               	movlw	0
  8127     16D5  00F1               	movwf	?___fladd+1
  8128     16D6  3000               	movlw	0
  8129     16D7  00F0               	movwf	?___fladd
  8130     16D8  2FFF               	goto	l637
  8131     16D9                     l2978:
  8132     16D9  0874               	movf	___fladd@a,w
  8133     16DA  07F0               	addwf	___fladd@b,f
  8134     16DB  0875               	movf	___fladd@a+1,w
  8135     16DC  3DF1               	addwfc	___fladd@b+1,f
  8136     16DD  0876               	movf	___fladd@a+2,w
  8137     16DE  3DF2               	addwfc	___fladd@b+2,f
  8138     16DF  0877               	movf	___fladd@a+3,w
  8139     16E0  3DF3               	addwfc	___fladd@b+3,f
  8140     16E1                     l2980:
  8141     16E1  1C73               	btfss	___fladd@b+3,0
  8142     16E2  2EE4               	goto	u3411
  8143     16E3  2EE5               	goto	u3410
  8144     16E4                     u3411:
  8145     16E4  2F8F               	goto	l3030
  8146     16E5                     u3410:
  8147     16E5                     l2982:
  8148     16E5  1C7B               	btfss	___fladd@grs,0
  8149     16E6  2EE8               	goto	u3421
  8150     16E7  2EE9               	goto	u3420
  8151     16E8                     u3421:
  8152     16E8  2EED               	goto	l2986
  8153     16E9                     u3420:
  8154     16E9                     l2984:
  8155     16E9  367B               	lsrf	___fladd@grs,w
  8156     16EA  3801               	iorlw	1
  8157     16EB  00FB               	movwf	___fladd@grs
  8158     16EC  2EEF               	goto	l2988
  8159     16ED                     l2986:
  8160     16ED  1003               	clrc
  8161     16EE  0CFB               	rrf	___fladd@grs,f
  8162     16EF                     l2988:
  8163     16EF  1C70               	btfss	___fladd@b,0
  8164     16F0  2EF2               	goto	u3431
  8165     16F1  2EF3               	goto	u3430
  8166     16F2                     u3431:
  8167     16F2  2EF4               	goto	l2992
  8168     16F3                     u3430:
  8169     16F3                     l2990:
  8170     16F3  17FB               	bsf	___fladd@grs,7
  8171     16F4                     l2992:
  8172     16F4  3001               	movlw	1
  8173     16F5  0020               	movlb	0	; select bank0
  8174     16F6  00A0               	movwf	??___fladd
  8175     16F7                     u3445:
  8176     16F7  37F3               	asrf	___fladd@b+3,f
  8177     16F8  0CF2               	rrf	___fladd@b+2,f
  8178     16F9  0CF1               	rrf	___fladd@b+1,f
  8179     16FA  0CF0               	rrf	___fladd@b,f
  8180     16FB  0BA0               	decfsz	??___fladd& (0+127),f
  8181     16FC  2EF7               	goto	u3445
  8182     16FD                     l2994:
  8183     16FD  3001               	movlw	1
  8184     16FE  00A0               	movwf	??___fladd
  8185     16FF  0820               	movf	??___fladd,w
  8186     1700  07FA               	addwf	___fladd@bexp,f
  8187     1701  2F8F               	goto	l3030
  8188     1702                     l2996:
  8189     1702  0873               	movf	___fladd@b+3,w
  8190     1703  3A80               	xorlw	128
  8191     1704  0020               	movlb	0	; select bank0
  8192     1705  00A0               	movwf	??___fladd
  8193     1706  0877               	movf	___fladd@a+3,w
  8194     1707  3A80               	xorlw	128
  8195     1708  0220               	subwf	??___fladd,w
  8196     1709  1D03               	skipz
  8197     170A  2F15               	goto	u3453
  8198     170B  0876               	movf	___fladd@a+2,w
  8199     170C  0272               	subwf	___fladd@b+2,w
  8200     170D  1D03               	skipz
  8201     170E  2F15               	goto	u3453
  8202     170F  0875               	movf	___fladd@a+1,w
  8203     1710  0271               	subwf	___fladd@b+1,w
  8204     1711  1D03               	skipz
  8205     1712  2F15               	goto	u3453
  8206     1713  0874               	movf	___fladd@a,w
  8207     1714  0270               	subwf	___fladd@b,w
  8208     1715                     u3453:
  8209     1715  1803               	skipnc
  8210     1716  2F18               	goto	u3451
  8211     1717  2F19               	goto	u3450
  8212     1718                     u3451:
  8213     1718  2F51               	goto	l3006
  8214     1719                     u3450:
  8215     1719                     l2998:
  8216     1719  30FF               	movlw	255
  8217     171A  00A0               	movwf	??___fladd
  8218     171B  30FF               	movlw	255
  8219     171C  00A1               	movwf	??___fladd+1
  8220     171D  30FF               	movlw	255
  8221     171E  00A2               	movwf	??___fladd+2
  8222     171F  30FF               	movlw	255
  8223     1720  00A3               	movwf	??___fladd+3
  8224     1721  0870               	movf	___fladd@b,w
  8225     1722  0274               	subwf	___fladd@a,w
  8226     1723  00A4               	movwf	??___fladd+4
  8227     1724  0871               	movf	___fladd@b+1,w
  8228     1725  3B75               	subwfb	___fladd@a+1,w
  8229     1726  00A5               	movwf	??___fladd+5
  8230     1727  0872               	movf	___fladd@b+2,w
  8231     1728  3B76               	subwfb	___fladd@a+2,w
  8232     1729  00A6               	movwf	??___fladd+6
  8233     172A  0873               	movf	___fladd@b+3,w
  8234     172B  3B77               	subwfb	___fladd@a+3,w
  8235     172C  00A7               	movwf	??___fladd+7
  8236     172D  0824               	movf	??___fladd+4,w
  8237     172E  07A0               	addwf	??___fladd,f
  8238     172F  0825               	movf	??___fladd+5,w
  8239     1730  3DA1               	addwfc	??___fladd+1,f
  8240     1731  0826               	movf	??___fladd+6,w
  8241     1732  3DA2               	addwfc	??___fladd+2,f
  8242     1733  0827               	movf	??___fladd+7,w
  8243     1734  3DA3               	addwfc	??___fladd+3,f
  8244     1735  0823               	movf	??___fladd+3,w
  8245     1736  00F3               	movwf	___fladd@b+3
  8246     1737  0822               	movf	??___fladd+2,w
  8247     1738  00F2               	movwf	___fladd@b+2
  8248     1739  0821               	movf	??___fladd+1,w
  8249     173A  00F1               	movwf	___fladd@b+1
  8250     173B  0820               	movf	??___fladd,w
  8251     173C  00F0               	movwf	___fladd@b
  8252     173D                     l3000:
  8253     173D  3080               	movlw	128
  8254     173E  00A0               	movwf	??___fladd
  8255     173F  0820               	movf	??___fladd,w
  8256     1740  06F8               	xorwf	___fladd@signs,f
  8257     1741  09FB               	comf	___fladd@grs,f
  8258     1742  0AFB               	incf	___fladd@grs,f
  8259     1743                     l3002:
  8260     1743  087B               	movf	___fladd@grs,w
  8261     1744  1D03               	btfss	3,2
  8262     1745  2F47               	goto	u3461
  8263     1746  2F48               	goto	u3460
  8264     1747                     u3461:
  8265     1747  2F59               	goto	l645
  8266     1748                     u3460:
  8267     1748                     l3004:
  8268     1748  3001               	movlw	1
  8269     1749  07F0               	addwf	___fladd@b,f
  8270     174A  3000               	movlw	0
  8271     174B  3DF1               	addwfc	___fladd@b+1,f
  8272     174C  3000               	movlw	0
  8273     174D  3DF2               	addwfc	___fladd@b+2,f
  8274     174E  3000               	movlw	0
  8275     174F  3DF3               	addwfc	___fladd@b+3,f
  8276     1750  2F59               	goto	l645
  8277     1751                     l3006:
  8278     1751  0874               	movf	___fladd@a,w
  8279     1752  02F0               	subwf	___fladd@b,f
  8280     1753  0875               	movf	___fladd@a+1,w
  8281     1754  3BF1               	subwfb	___fladd@b+1,f
  8282     1755  0876               	movf	___fladd@a+2,w
  8283     1756  3BF2               	subwfb	___fladd@b+2,f
  8284     1757  0877               	movf	___fladd@a+3,w
  8285     1758  3BF3               	subwfb	___fladd@b+3,f
  8286     1759                     l645:
  8287     1759  0873               	movf	___fladd@b+3,w
  8288     175A  0472               	iorwf	___fladd@b+2,w
  8289     175B  0471               	iorwf	___fladd@b+1,w
  8290     175C  0470               	iorwf	___fladd@b,w
  8291     175D  1D03               	skipz
  8292     175E  2F60               	goto	u3471
  8293     175F  2F61               	goto	u3470
  8294     1760                     u3471:
  8295     1760  2F8B               	goto	l3028
  8296     1761                     u3470:
  8297     1761                     l3008:
  8298     1761  087B               	movf	___fladd@grs,w
  8299     1762  1D03               	btfss	3,2
  8300     1763  2F65               	goto	u3481
  8301     1764  2F66               	goto	u3480
  8302     1765                     u3481:
  8303     1765  2F8B               	goto	l3028
  8304     1766                     u3480:
  8305     1766                     l3010:
  8306     1766  3000               	movlw	0
  8307     1767  00F3               	movwf	?___fladd+3
  8308     1768  3000               	movlw	0
  8309     1769  00F2               	movwf	?___fladd+2
  8310     176A  3000               	movlw	0
  8311     176B  00F1               	movwf	?___fladd+1
  8312     176C  3000               	movlw	0
  8313     176D  00F0               	movwf	?___fladd
  8314     176E  2FFF               	goto	l637
  8315     176F                     l3014:
  8316     176F  3001               	movlw	1
  8317     1770                     u3495:
  8318     1770  35F0               	lslf	___fladd@b,f
  8319     1771  0DF1               	rlf	___fladd@b+1,f
  8320     1772  0DF2               	rlf	___fladd@b+2,f
  8321     1773  0DF3               	rlf	___fladd@b+3,f
  8322     1774  0B89               	decfsz	9,f
  8323     1775  2F70               	goto	u3495
  8324     1776                     l3016:
  8325     1776  1FFB               	btfss	___fladd@grs,7
  8326     1777  2F79               	goto	u3501
  8327     1778  2F7A               	goto	u3500
  8328     1779                     u3501:
  8329     1779  2F7B               	goto	l649
  8330     177A                     u3500:
  8331     177A                     l3018:
  8332     177A  1470               	bsf	___fladd@b,0
  8333     177B                     l649:
  8334     177B  1C7B               	btfss	___fladd@grs,0
  8335     177C  2F7E               	goto	u3511
  8336     177D  2F7F               	goto	u3510
  8337     177E                     u3511:
  8338     177E  2F82               	goto	l3022
  8339     177F                     u3510:
  8340     177F                     l3020:
  8341     177F  1403               	setc
  8342     1780  0DFB               	rlf	___fladd@grs,f
  8343     1781  2F84               	goto	l3024
  8344     1782                     l3022:
  8345     1782  1003               	clrc
  8346     1783  0DFB               	rlf	___fladd@grs,f
  8347     1784                     l3024:
  8348     1784  087A               	movf	___fladd@bexp,w
  8349     1785  1903               	btfsc	3,2
  8350     1786  2F88               	goto	u3521
  8351     1787  2F89               	goto	u3520
  8352     1788                     u3521:
  8353     1788  2F8B               	goto	l3028
  8354     1789                     u3520:
  8355     1789                     l3026:
  8356     1789  3001               	movlw	1
  8357     178A  02FA               	subwf	___fladd@bexp,f
  8358     178B                     l3028:
  8359     178B  1FF2               	btfss	___fladd@b+2,7
  8360     178C  2F8E               	goto	u3531
  8361     178D  2F8F               	goto	u3530
  8362     178E                     u3531:
  8363     178E  2F6F               	goto	l3014
  8364     178F                     u3530:
  8365     178F                     l3030:
  8366     178F  01F9               	clrf	___fladd@aexp
  8367     1790                     l3032:
  8368     1790  1FFB               	btfss	___fladd@grs,7
  8369     1791  2F93               	goto	u3541
  8370     1792  2F94               	goto	u3540
  8371     1793                     u3541:
  8372     1793  2FA2               	goto	l3040
  8373     1794                     u3540:
  8374     1794                     l3034:
  8375     1794  087B               	movf	___fladd@grs,w
  8376     1795  397F               	andlw	127
  8377     1796  1903               	btfsc	3,2
  8378     1797  2F99               	goto	u3551
  8379     1798  2F9A               	goto	u3550
  8380     1799                     u3551:
  8381     1799  2F9D               	goto	l655
  8382     179A                     u3550:
  8383     179A                     l3036:
  8384     179A  01F9               	clrf	___fladd@aexp
  8385     179B  0AF9               	incf	___fladd@aexp,f
  8386     179C  2FA2               	goto	l3040
  8387     179D                     l655:
  8388     179D  1C70               	btfss	___fladd@b,0
  8389     179E  2FA0               	goto	u3561
  8390     179F  2FA1               	goto	u3560
  8391     17A0                     u3561:
  8392     17A0  2FA2               	goto	l3040
  8393     17A1                     u3560:
  8394     17A1  2F9A               	goto	l3036
  8395     17A2                     l3040:
  8396     17A2  0879               	movf	___fladd@aexp,w
  8397     17A3  1903               	btfsc	3,2
  8398     17A4  2FA6               	goto	u3571
  8399     17A5  2FA7               	goto	u3570
  8400     17A6                     u3571:
  8401     17A6  2FD5               	goto	l658
  8402     17A7                     u3570:
  8403     17A7                     l3042:
  8404     17A7  3001               	movlw	1
  8405     17A8  07F0               	addwf	___fladd@b,f
  8406     17A9  3000               	movlw	0
  8407     17AA  3DF1               	addwfc	___fladd@b+1,f
  8408     17AB  3000               	movlw	0
  8409     17AC  3DF2               	addwfc	___fladd@b+2,f
  8410     17AD  3000               	movlw	0
  8411     17AE  3DF3               	addwfc	___fladd@b+3,f
  8412     17AF                     l3044:
  8413     17AF  1C73               	btfss	___fladd@b+3,0
  8414     17B0  2FB2               	goto	u3581
  8415     17B1  2FB3               	goto	u3580
  8416     17B2                     u3581:
  8417     17B2  2FD5               	goto	l658
  8418     17B3                     u3580:
  8419     17B3                     l3046:
  8420     17B3  0870               	movf	___fladd@b,w
  8421     17B4  0020               	movlb	0	; select bank0
  8422     17B5  00A0               	movwf	??___fladd
  8423     17B6  0871               	movf	___fladd@b+1,w
  8424     17B7  00A1               	movwf	??___fladd+1
  8425     17B8  0872               	movf	___fladd@b+2,w
  8426     17B9  00A2               	movwf	??___fladd+2
  8427     17BA  0873               	movf	___fladd@b+3,w
  8428     17BB  00A3               	movwf	??___fladd+3
  8429     17BC  3001               	movlw	1
  8430     17BD  00A4               	movwf	??___fladd+4
  8431     17BE                     u3595:
  8432     17BE  37A3               	asrf	??___fladd+3,f
  8433     17BF  0CA2               	rrf	??___fladd+2,f
  8434     17C0  0CA1               	rrf	??___fladd+1,f
  8435     17C1  0CA0               	rrf	??___fladd,f
  8436     17C2                     u3590:
  8437     17C2  0BA4               	decfsz	??___fladd+4,f
  8438     17C3  2FBE               	goto	u3595
  8439     17C4  0823               	movf	??___fladd+3,w
  8440     17C5  00F3               	movwf	___fladd@b+3
  8441     17C6  0822               	movf	??___fladd+2,w
  8442     17C7  00F2               	movwf	___fladd@b+2
  8443     17C8  0821               	movf	??___fladd+1,w
  8444     17C9  00F1               	movwf	___fladd@b+1
  8445     17CA  0820               	movf	??___fladd,w
  8446     17CB  00F0               	movwf	___fladd@b
  8447     17CC  0A7A               	incf	___fladd@bexp,w
  8448     17CD  1903               	btfsc	3,2
  8449     17CE  2FD0               	goto	u3601
  8450     17CF  2FD1               	goto	u3600
  8451     17D0                     u3601:
  8452     17D0  2FD5               	goto	l658
  8453     17D1                     u3600:
  8454     17D1                     l3048:
  8455     17D1  3001               	movlw	1
  8456     17D2  00A0               	movwf	??___fladd
  8457     17D3  0820               	movf	??___fladd,w
  8458     17D4  07FA               	addwf	___fladd@bexp,f
  8459     17D5                     l658:
  8460     17D5  0A7A               	incf	___fladd@bexp,w
  8461     17D6  1903               	btfsc	3,2
  8462     17D7  2FD9               	goto	u3611
  8463     17D8  2FDA               	goto	u3610
  8464     17D9                     u3611:
  8465     17D9  2FDF               	goto	l3052
  8466     17DA                     u3610:
  8467     17DA                     l3050:
  8468     17DA  087A               	movf	___fladd@bexp,w
  8469     17DB  1D03               	btfss	3,2
  8470     17DC  2FDE               	goto	u3621
  8471     17DD  2FDF               	goto	u3620
  8472     17DE                     u3621:
  8473     17DE  2FED               	goto	l3058
  8474     17DF                     u3620:
  8475     17DF                     l3052:
  8476     17DF  3000               	movlw	0
  8477     17E0  00F3               	movwf	___fladd@b+3
  8478     17E1  3000               	movlw	0
  8479     17E2  00F2               	movwf	___fladd@b+2
  8480     17E3  3000               	movlw	0
  8481     17E4  00F1               	movwf	___fladd@b+1
  8482     17E5  3000               	movlw	0
  8483     17E6  00F0               	movwf	___fladd@b
  8484     17E7                     l3054:
  8485     17E7  087A               	movf	___fladd@bexp,w
  8486     17E8  1D03               	btfss	3,2
  8487     17E9  2FEB               	goto	u3631
  8488     17EA  2FEC               	goto	u3630
  8489     17EB                     u3631:
  8490     17EB  2FED               	goto	l3058
  8491     17EC                     u3630:
  8492     17EC                     l3056:
  8493     17EC  01F8               	clrf	___fladd@signs
  8494     17ED                     l3058:
  8495     17ED  1C7A               	btfss	___fladd@bexp,0
  8496     17EE  2FF0               	goto	u3641
  8497     17EF  2FF1               	goto	u3640
  8498     17F0                     u3641:
  8499     17F0  2FF3               	goto	l3062
  8500     17F1                     u3640:
  8501     17F1                     l3060:
  8502     17F1  17F2               	bsf	___fladd@b+2,7
  8503     17F2  2FF8               	goto	l666
  8504     17F3                     l3062:
  8505     17F3  307F               	movlw	127
  8506     17F4  0020               	movlb	0	; select bank0
  8507     17F5  00A0               	movwf	??___fladd
  8508     17F6  0820               	movf	??___fladd,w
  8509     17F7  05F2               	andwf	___fladd@b+2,f
  8510     17F8                     l666:
  8511     17F8  367A               	lsrf	___fladd@bexp,w
  8512     17F9  00F3               	movwf	___fladd@b+3
  8513     17FA                     l3064:
  8514     17FA  1FF8               	btfss	___fladd@signs,7
  8515     17FB  2FFD               	goto	u3651
  8516     17FC  2FFE               	goto	u3650
  8517     17FD                     u3651:
  8518     17FD  2FFF               	goto	l667
  8519     17FE                     u3650:
  8520     17FE                     l3066:
  8521     17FE  17F3               	bsf	___fladd@b+3,7
  8522     17FF                     l667:
  8523     17FF                     l637:
  8524     17FF  0008               	return
  8525     1800                     __end_of___fladd:
  8526                           
  8527                           	psect	text19
  8528     19E6                     __ptext19:	
  8529 ;; *************** function ___flneg *****************
  8530 ;; Defined at:
  8531 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  f1              4    0[COMMON] unsigned char 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  4    0[COMMON] unsigned char 
  8538 ;; Registers used:
  8539 ;;		wreg
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8545 ;;      Params:         4       0       0       0       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0
  8548 ;;      Totals:         4       0       0       0       0       0       0       0
  8549 ;;Total ram usage:        4 bytes
  8550 ;; Hardware stack levels used: 1
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_efgtoa
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558     19E6                     ___flneg:	
  8559                           ;psect for function ___flneg
  8560                           
  8561     19E6                     l3204:	
  8562                           ;incstack = 0
  8563                           ; Regs used in ___flneg: [wreg]
  8564                           
  8565     19E6  0873               	movf	___flneg@f1+3,w
  8566     19E7  0472               	iorwf	___flneg@f1+2,w
  8567     19E8  0471               	iorwf	___flneg@f1+1,w
  8568     19E9  0470               	iorwf	___flneg@f1,w
  8569     19EA  1903               	skipnz
  8570     19EB  29ED               	goto	u4031
  8571     19EC  29EE               	goto	u4030
  8572     19ED                     u4031:
  8573     19ED  29F0               	goto	l3208
  8574     19EE                     u4030:
  8575     19EE                     l3206:
  8576     19EE  3080               	movlw	128
  8577     19EF  06F3               	xorwf	___flneg@f1+3,f
  8578     19F0                     l3208:
  8579     19F0                     l513:
  8580     19F0  0008               	return
  8581     19F1                     __end_of___flneg:
  8582                           
  8583                           	psect	text20
  8584     1E44                     __ptext20:	
  8585 ;; *************** function ___flge *****************
  8586 ;; Defined at:
  8587 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  ff1             4   26[BANK0 ] unsigned char 
  8590 ;;  ff2             4   30[BANK0 ] unsigned char 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;		None               void
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8602 ;;      Params:         0       8       0       0       0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0
  8604 ;;      Temps:          0       4       0       0       0       0       0       0
  8605 ;;      Totals:         0      12       0       0       0       0       0       0
  8606 ;;Total ram usage:       12 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_main
  8612 ;;		_efgtoa
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616     1E44                     ___flge:	
  8617                           ;psect for function ___flge
  8618                           
  8619     1E44                     l3184:	
  8620                           ;incstack = 0
  8621                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8622                           
  8623     1E44  3000               	movlw	0
  8624     1E45  0020               	movlb	0	; select bank0
  8625     1E46  053A               	andwf	___flge@ff1,w
  8626     1E47  00C2               	movwf	??___flge
  8627     1E48  3000               	movlw	0
  8628     1E49  053B               	andwf	___flge@ff1+1,w
  8629     1E4A  00C3               	movwf	??___flge+1
  8630     1E4B  3080               	movlw	128
  8631     1E4C  053C               	andwf	___flge@ff1+2,w
  8632     1E4D  00C4               	movwf	??___flge+2
  8633     1E4E  307F               	movlw	127
  8634     1E4F  053D               	andwf	___flge@ff1+3,w
  8635     1E50  00C5               	movwf	??___flge+3
  8636     1E51  0845               	movf	??___flge+3,w
  8637     1E52  0444               	iorwf	??___flge+2,w
  8638     1E53  0443               	iorwf	??___flge+1,w
  8639     1E54  0442               	iorwf	??___flge,w
  8640     1E55  1D03               	skipz
  8641     1E56  2E58               	goto	u3981
  8642     1E57  2E59               	goto	u3980
  8643     1E58                     u3981:
  8644     1E58  2E61               	goto	l501
  8645     1E59                     u3980:
  8646     1E59                     l3186:
  8647     1E59  3000               	movlw	0
  8648     1E5A  00BD               	movwf	___flge@ff1+3
  8649     1E5B  3000               	movlw	0
  8650     1E5C  00BC               	movwf	___flge@ff1+2
  8651     1E5D  3000               	movlw	0
  8652     1E5E  00BB               	movwf	___flge@ff1+1
  8653     1E5F  3000               	movlw	0
  8654     1E60  00BA               	movwf	___flge@ff1
  8655     1E61                     l501:
  8656     1E61  3000               	movlw	0
  8657     1E62  053E               	andwf	___flge@ff2,w
  8658     1E63  00C2               	movwf	??___flge
  8659     1E64  3000               	movlw	0
  8660     1E65  053F               	andwf	___flge@ff2+1,w
  8661     1E66  00C3               	movwf	??___flge+1
  8662     1E67  3080               	movlw	128
  8663     1E68  0540               	andwf	___flge@ff2+2,w
  8664     1E69  00C4               	movwf	??___flge+2
  8665     1E6A  307F               	movlw	127
  8666     1E6B  0541               	andwf	___flge@ff2+3,w
  8667     1E6C  00C5               	movwf	??___flge+3
  8668     1E6D  0845               	movf	??___flge+3,w
  8669     1E6E  0444               	iorwf	??___flge+2,w
  8670     1E6F  0443               	iorwf	??___flge+1,w
  8671     1E70  0442               	iorwf	??___flge,w
  8672     1E71  1D03               	skipz
  8673     1E72  2E74               	goto	u3991
  8674     1E73  2E75               	goto	u3990
  8675     1E74                     u3991:
  8676     1E74  2E7D               	goto	l3190
  8677     1E75                     u3990:
  8678     1E75                     l3188:
  8679     1E75  3000               	movlw	0
  8680     1E76  00C1               	movwf	___flge@ff2+3
  8681     1E77  3000               	movlw	0
  8682     1E78  00C0               	movwf	___flge@ff2+2
  8683     1E79  3000               	movlw	0
  8684     1E7A  00BF               	movwf	___flge@ff2+1
  8685     1E7B  3000               	movlw	0
  8686     1E7C  00BE               	movwf	___flge@ff2
  8687     1E7D                     l3190:
  8688     1E7D  1FBD               	btfss	___flge@ff1+3,7
  8689     1E7E  2E80               	goto	u4001
  8690     1E7F  2E81               	goto	u4000
  8691     1E80                     u4001:
  8692     1E80  2E99               	goto	l3194
  8693     1E81                     u4000:
  8694     1E81                     l3192:
  8695     1E81  3000               	movlw	0
  8696     1E82  00C2               	movwf	??___flge
  8697     1E83  3000               	movlw	0
  8698     1E84  00C3               	movwf	??___flge+1
  8699     1E85  3000               	movlw	0
  8700     1E86  00C4               	movwf	??___flge+2
  8701     1E87  3080               	movlw	128
  8702     1E88  00C5               	movwf	??___flge+3
  8703     1E89  083A               	movf	___flge@ff1,w
  8704     1E8A  02C2               	subwf	??___flge,f
  8705     1E8B  083B               	movf	___flge@ff1+1,w
  8706     1E8C  3BC3               	subwfb	??___flge+1,f
  8707     1E8D  083C               	movf	___flge@ff1+2,w
  8708     1E8E  3BC4               	subwfb	??___flge+2,f
  8709     1E8F  083D               	movf	___flge@ff1+3,w
  8710     1E90  3BC5               	subwfb	??___flge+3,f
  8711     1E91  0845               	movf	??___flge+3,w
  8712     1E92  00BD               	movwf	___flge@ff1+3
  8713     1E93  0844               	movf	??___flge+2,w
  8714     1E94  00BC               	movwf	___flge@ff1+2
  8715     1E95  0843               	movf	??___flge+1,w
  8716     1E96  00BB               	movwf	___flge@ff1+1
  8717     1E97  0842               	movf	??___flge,w
  8718     1E98  00BA               	movwf	___flge@ff1
  8719     1E99                     l3194:
  8720     1E99  1FC1               	btfss	___flge@ff2+3,7
  8721     1E9A  2E9C               	goto	u4011
  8722     1E9B  2E9D               	goto	u4010
  8723     1E9C                     u4011:
  8724     1E9C  2EB5               	goto	l504
  8725     1E9D                     u4010:
  8726     1E9D                     l3196:
  8727     1E9D  3000               	movlw	0
  8728     1E9E  00C2               	movwf	??___flge
  8729     1E9F  3000               	movlw	0
  8730     1EA0  00C3               	movwf	??___flge+1
  8731     1EA1  3000               	movlw	0
  8732     1EA2  00C4               	movwf	??___flge+2
  8733     1EA3  3080               	movlw	128
  8734     1EA4  00C5               	movwf	??___flge+3
  8735     1EA5  083E               	movf	___flge@ff2,w
  8736     1EA6  02C2               	subwf	??___flge,f
  8737     1EA7  083F               	movf	___flge@ff2+1,w
  8738     1EA8  3BC3               	subwfb	??___flge+1,f
  8739     1EA9  0840               	movf	___flge@ff2+2,w
  8740     1EAA  3BC4               	subwfb	??___flge+2,f
  8741     1EAB  0841               	movf	___flge@ff2+3,w
  8742     1EAC  3BC5               	subwfb	??___flge+3,f
  8743     1EAD  0845               	movf	??___flge+3,w
  8744     1EAE  00C1               	movwf	___flge@ff2+3
  8745     1EAF  0844               	movf	??___flge+2,w
  8746     1EB0  00C0               	movwf	___flge@ff2+2
  8747     1EB1  0843               	movf	??___flge+1,w
  8748     1EB2  00BF               	movwf	___flge@ff2+1
  8749     1EB3  0842               	movf	??___flge,w
  8750     1EB4  00BE               	movwf	___flge@ff2
  8751     1EB5                     l504:
  8752     1EB5  3080               	movlw	128
  8753     1EB6  06BD               	xorwf	___flge@ff1+3,f
  8754     1EB7  3080               	movlw	128
  8755     1EB8  06C1               	xorwf	___flge@ff2+3,f
  8756     1EB9  0841               	movf	___flge@ff2+3,w
  8757     1EBA  023D               	subwf	___flge@ff1+3,w
  8758     1EBB  1D03               	skipz
  8759     1EBC  2EC7               	goto	u4025
  8760     1EBD  0840               	movf	___flge@ff2+2,w
  8761     1EBE  023C               	subwf	___flge@ff1+2,w
  8762     1EBF  1D03               	skipz
  8763     1EC0  2EC7               	goto	u4025
  8764     1EC1  083F               	movf	___flge@ff2+1,w
  8765     1EC2  023B               	subwf	___flge@ff1+1,w
  8766     1EC3  1D03               	skipz
  8767     1EC4  2EC7               	goto	u4025
  8768     1EC5  083E               	movf	___flge@ff2,w
  8769     1EC6  023A               	subwf	___flge@ff1,w
  8770     1EC7                     u4025:
  8771     1EC7  1803               	skipnc
  8772     1EC8  2ECA               	goto	u4021
  8773     1EC9  2ECB               	goto	u4020
  8774     1ECA                     u4021:
  8775     1ECA  2ECD               	goto	l3200
  8776     1ECB                     u4020:
  8777     1ECB                     l3198:
  8778     1ECB  1003               	clrc
  8779     1ECC  2ECE               	goto	l509
  8780     1ECD                     l3200:
  8781     1ECD  1403               	setc
  8782     1ECE                     l509:
  8783     1ECE  0008               	return
  8784     1ECF                     __end_of___flge:
  8785                           
  8786                           	psect	text21
  8787     1C6D                     __ptext21:	
  8788 ;; *************** function ___fleq *****************
  8789 ;; Defined at:
  8790 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  ff1             4    0[COMMON] unsigned char 
  8793 ;;  ff2             4    4[COMMON] unsigned char 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;		None               void
  8798 ;; Registers used:
  8799 ;;		wreg, status,2, status,0
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8805 ;;      Params:         8       0       0       0       0       0       0       0
  8806 ;;      Locals:         0       0       0       0       0       0       0       0
  8807 ;;      Temps:          4       0       0       0       0       0       0       0
  8808 ;;      Totals:        12       0       0       0       0       0       0       0
  8809 ;;Total ram usage:       12 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_efgtoa
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818     1C6D                     ___fleq:	
  8819                           ;psect for function ___fleq
  8820                           
  8821     1C6D                     l3172:	
  8822                           ;incstack = 0
  8823                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8824                           
  8825     1C6D  3000               	movlw	0
  8826     1C6E  0570               	andwf	___fleq@ff1,w
  8827     1C6F  00F8               	movwf	??___fleq
  8828     1C70  3000               	movlw	0
  8829     1C71  0571               	andwf	___fleq@ff1+1,w
  8830     1C72  00F9               	movwf	??___fleq+1
  8831     1C73  3080               	movlw	128
  8832     1C74  0572               	andwf	___fleq@ff1+2,w
  8833     1C75  00FA               	movwf	??___fleq+2
  8834     1C76  307F               	movlw	127
  8835     1C77  0573               	andwf	___fleq@ff1+3,w
  8836     1C78  00FB               	movwf	??___fleq+3
  8837     1C79  087B               	movf	??___fleq+3,w
  8838     1C7A  047A               	iorwf	??___fleq+2,w
  8839     1C7B  0479               	iorwf	??___fleq+1,w
  8840     1C7C  0478               	iorwf	??___fleq,w
  8841     1C7D  1D03               	skipz
  8842     1C7E  2C80               	goto	u3951
  8843     1C7F  2C81               	goto	u3950
  8844     1C80                     u3951:
  8845     1C80  2C89               	goto	l492
  8846     1C81                     u3950:
  8847     1C81                     l3174:
  8848     1C81  3000               	movlw	0
  8849     1C82  00F3               	movwf	___fleq@ff1+3
  8850     1C83  3000               	movlw	0
  8851     1C84  00F2               	movwf	___fleq@ff1+2
  8852     1C85  3000               	movlw	0
  8853     1C86  00F1               	movwf	___fleq@ff1+1
  8854     1C87  3000               	movlw	0
  8855     1C88  00F0               	movwf	___fleq@ff1
  8856     1C89                     l492:
  8857     1C89  3000               	movlw	0
  8858     1C8A  0574               	andwf	___fleq@ff2,w
  8859     1C8B  00F8               	movwf	??___fleq
  8860     1C8C  3000               	movlw	0
  8861     1C8D  0575               	andwf	___fleq@ff2+1,w
  8862     1C8E  00F9               	movwf	??___fleq+1
  8863     1C8F  3080               	movlw	128
  8864     1C90  0576               	andwf	___fleq@ff2+2,w
  8865     1C91  00FA               	movwf	??___fleq+2
  8866     1C92  307F               	movlw	127
  8867     1C93  0577               	andwf	___fleq@ff2+3,w
  8868     1C94  00FB               	movwf	??___fleq+3
  8869     1C95  087B               	movf	??___fleq+3,w
  8870     1C96  047A               	iorwf	??___fleq+2,w
  8871     1C97  0479               	iorwf	??___fleq+1,w
  8872     1C98  0478               	iorwf	??___fleq,w
  8873     1C99  1D03               	skipz
  8874     1C9A  2C9C               	goto	u3961
  8875     1C9B  2C9D               	goto	u3960
  8876     1C9C                     u3961:
  8877     1C9C  2CA5               	goto	l493
  8878     1C9D                     u3960:
  8879     1C9D                     l3176:
  8880     1C9D  3000               	movlw	0
  8881     1C9E  00F7               	movwf	___fleq@ff2+3
  8882     1C9F  3000               	movlw	0
  8883     1CA0  00F6               	movwf	___fleq@ff2+2
  8884     1CA1  3000               	movlw	0
  8885     1CA2  00F5               	movwf	___fleq@ff2+1
  8886     1CA3  3000               	movlw	0
  8887     1CA4  00F4               	movwf	___fleq@ff2
  8888     1CA5                     l493:
  8889     1CA5  0877               	movf	___fleq@ff2+3,w
  8890     1CA6  0673               	xorwf	___fleq@ff1+3,w
  8891     1CA7  1D03               	skipz
  8892     1CA8  2CB3               	goto	u3975
  8893     1CA9  0876               	movf	___fleq@ff2+2,w
  8894     1CAA  0672               	xorwf	___fleq@ff1+2,w
  8895     1CAB  1D03               	skipz
  8896     1CAC  2CB3               	goto	u3975
  8897     1CAD  0875               	movf	___fleq@ff2+1,w
  8898     1CAE  0671               	xorwf	___fleq@ff1+1,w
  8899     1CAF  1D03               	skipz
  8900     1CB0  2CB3               	goto	u3975
  8901     1CB1  0874               	movf	___fleq@ff2,w
  8902     1CB2  0670               	xorwf	___fleq@ff1,w
  8903     1CB3                     u3975:
  8904     1CB3  1903               	skipnz
  8905     1CB4  2CB6               	goto	u3971
  8906     1CB5  2CB7               	goto	u3970
  8907     1CB6                     u3971:
  8908     1CB6  2CB9               	goto	l3180
  8909     1CB7                     u3970:
  8910     1CB7                     l3178:
  8911     1CB7  1003               	clrc
  8912     1CB8  2CBA               	goto	l498
  8913     1CB9                     l3180:
  8914     1CB9  1403               	setc
  8915     1CBA                     l498:
  8916     1CBA  0008               	return
  8917     1CBB                     __end_of___fleq:
  8918                           
  8919                           	psect	text22
  8920     0075                     __ptext22:	
  8921 ;; *************** function _dtoa *****************
  8922 ;; Defined at:
  8923 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  fp              1    wreg     PTR struct _IO_FILE
  8926 ;;		 -> sprintf@f(10), 
  8927 ;;  d               8   16[BANK0 ] long long 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  8930 ;;		 -> sprintf@f(10), 
  8931 ;;  n               8   32[BANK0 ] long long 
  8932 ;;  i               2   40[BANK0 ] int 
  8933 ;;  w               2   30[BANK0 ] int 
  8934 ;;  p               2   28[BANK0 ] int 
  8935 ;;  s               1   42[BANK0 ] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8945 ;;      Params:         0       8       0       0       0       0       0       0
  8946 ;;      Locals:         0      18       0       0       0       0       0       0
  8947 ;;      Temps:          0       1       0       0       0       0       0       0
  8948 ;;      Totals:         0      27       0       0       0       0       0       0
  8949 ;;Total ram usage:       27 bytes
  8950 ;; Hardware stack levels used: 1
  8951 ;; Hardware stack levels required when called: 4
  8952 ;; This function calls:
  8953 ;;		___aodiv
  8954 ;;		___aomod
  8955 ;;		_abs
  8956 ;;		_pad
  8957 ;; This function is called by:
  8958 ;;		_vfpfcnvrt
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962     0075                     _dtoa:	
  8963                           ;psect for function _dtoa
  8964                           
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8968                           ;dtoa@fp stored from wreg
  8969     0075  0020               	movlb	0	; select bank0
  8970     0076  00BB               	movwf	dtoa@fp
  8971     0077                     l3638:
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8974     0077  0830               	movf	dtoa@d,w
  8975     0078  00C0               	movwf	dtoa@n
  8976     0079  0831               	movf	dtoa@d+1,w
  8977     007A  00C1               	movwf	dtoa@n+1
  8978     007B  0832               	movf	dtoa@d+2,w
  8979     007C  00C2               	movwf	dtoa@n+2
  8980     007D  0833               	movf	dtoa@d+3,w
  8981     007E  00C3               	movwf	dtoa@n+3
  8982     007F  0834               	movf	dtoa@d+4,w
  8983     0080  00C4               	movwf	dtoa@n+4
  8984     0081  0835               	movf	dtoa@d+5,w
  8985     0082  00C5               	movwf	dtoa@n+5
  8986     0083  0836               	movf	dtoa@d+6,w
  8987     0084  00C6               	movwf	dtoa@n+6
  8988     0085  0837               	movf	dtoa@d+7,w
  8989     0086  00C7               	movwf	dtoa@n+7
  8990     0087                     l3640:
  8991                           
  8992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8993     0087  3040               	movlw	low dtoa@n
  8994     0088  0086               	movwf	6
  8995     0089  3000               	movlw	high dtoa@n
  8996     008A  0087               	movwf	7
  8997     008B  3F47               	moviw [7]fsr1
  8998     008C  00B8               	movwf	??_dtoa
  8999     008D  1BB8               	btfsc	??_dtoa,7
  9000     008E  2890               	goto	u4981
  9001     008F  2892               	goto	u4980
  9002     0090                     u4981:
  9003     0090  3001               	movlw	1
  9004     0091  2893               	goto	u4990
  9005     0092                     u4980:
  9006     0092  3000               	movlw	0
  9007     0093                     u4990:
  9008     0093  0020               	movlb	0	; select bank0
  9009     0094  00CA               	movwf	dtoa@s
  9010     0095                     l3642:
  9011                           
  9012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  9013     0095  084A               	movf	dtoa@s,w
  9014     0096  1903               	btfsc	3,2
  9015     0097  2899               	goto	u5001
  9016     0098  289A               	goto	u5000
  9017     0099                     u5001:
  9018     0099  28B8               	goto	l3646
  9019     009A                     u5000:
  9020     009A                     l3644:
  9021                           
  9022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  9023     009A  09C0               	comf	dtoa@n,f
  9024     009B  09C1               	comf	dtoa@n+1,f
  9025     009C  09C2               	comf	dtoa@n+2,f
  9026     009D  09C3               	comf	dtoa@n+3,f
  9027     009E  09C4               	comf	dtoa@n+4,f
  9028     009F  09C5               	comf	dtoa@n+5,f
  9029     00A0  09C6               	comf	dtoa@n+6,f
  9030     00A1  09C7               	comf	dtoa@n+7,f
  9031     00A2  0AC0               	incf	dtoa@n,f
  9032     00A3  1D03               	skipz
  9033     00A4  28B8               	goto	u501lld
  9034     00A5  0AC1               	incf	dtoa@n+1,f
  9035     00A6  1D03               	skipz
  9036     00A7  28B8               	goto	u501lld
  9037     00A8  0AC2               	incf	dtoa@n+2,f
  9038     00A9  1D03               	skipz
  9039     00AA  28B8               	goto	u501lld
  9040     00AB  0AC3               	incf	dtoa@n+3,f
  9041     00AC  1D03               	skipz
  9042     00AD  28B8               	goto	u501lld
  9043     00AE  0AC4               	incf	dtoa@n+4,f
  9044     00AF  1D03               	skipz
  9045     00B0  28B8               	goto	u501lld
  9046     00B1  0AC5               	incf	dtoa@n+5,f
  9047     00B2  1D03               	skipz
  9048     00B3  28B8               	goto	u501lld
  9049     00B4  0AC6               	incf	dtoa@n+6,f
  9050     00B5  1D03               	skipz
  9051     00B6  28B8               	goto	u501lld
  9052     00B7  0AC7               	incf	dtoa@n+7,f
  9053     00B8                     u501lld:
  9054     00B8                     l3646:
  9055                           
  9056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  9057     00B8  0022               	movlb	2	; select bank2
  9058     00B9  086D               	movf	(_prec+1)^(0+256),w
  9059     00BA  3A80               	xorlw	128
  9060     00BB  0020               	movlb	0	; select bank0
  9061     00BC  00B8               	movwf	??_dtoa
  9062     00BD  3080               	movlw	128
  9063     00BE  0238               	subwf	??_dtoa,w
  9064     00BF  1D03               	skipz
  9065     00C0  28C4               	goto	u5025
  9066     00C1  3001               	movlw	1
  9067     00C2  0022               	movlb	2	; select bank2
  9068     00C3  026C               	subwf	_prec^(0+256),w
  9069     00C4                     u5025:
  9070     00C4  1803               	skipnc
  9071     00C5  28C7               	goto	u5021
  9072     00C6  28C8               	goto	u5020
  9073     00C7                     u5021:
  9074     00C7  28CE               	goto	l3650
  9075     00C8                     u5020:
  9076     00C8                     l3648:
  9077     00C8  3001               	movlw	1
  9078     00C9  0020               	movlb	0	; select bank0
  9079     00CA  00BC               	movwf	dtoa@p
  9080     00CB  3000               	movlw	0
  9081     00CC  00BD               	movwf	dtoa@p+1
  9082     00CD  28D6               	goto	l833
  9083     00CE                     l3650:
  9084     00CE  0022               	movlb	2	; select bank2
  9085     00CF  086D               	movf	(_prec+1)^(0+256),w
  9086     00D0  0020               	movlb	0	; select bank0
  9087     00D1  00BD               	movwf	dtoa@p+1
  9088     00D2  0022               	movlb	2	; select bank2
  9089     00D3  086C               	movf	_prec^(0+256),w
  9090     00D4  0020               	movlb	0	; select bank0
  9091     00D5  00BC               	movwf	dtoa@p
  9092     00D6                     l833:
  9093                           
  9094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  9095     00D6  0022               	movlb	2	; select bank2
  9096     00D7  086B               	movf	(_width+1)^(0+256),w
  9097     00D8  0020               	movlb	0	; select bank0
  9098     00D9  00BF               	movwf	dtoa@w+1
  9099     00DA  0022               	movlb	2	; select bank2
  9100     00DB  086A               	movf	_width^(0+256),w
  9101     00DC  0020               	movlb	0	; select bank0
  9102     00DD  00BE               	movwf	dtoa@w
  9103     00DE                     l3652:
  9104                           
  9105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  9106     00DE  084A               	movf	dtoa@s,w
  9107     00DF  1903               	btfsc	3,2
  9108     00E0  28E2               	goto	u5031
  9109     00E1  28E3               	goto	u5030
  9110     00E2                     u5031:
  9111     00E2  28F7               	goto	l834
  9112     00E3                     u5030:
  9113     00E3                     l3654:
  9114                           
  9115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  9116     00E3  30FF               	movlw	255
  9117     00E4  07BE               	addwf	dtoa@w,f
  9118     00E5  30FF               	movlw	255
  9119     00E6  3DBF               	addwfc	dtoa@w+1,f
  9120     00E7                     l3656:
  9121                           
  9122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  9123     00E7  084A               	movf	dtoa@s,w
  9124     00E8  1D03               	btfss	3,2
  9125     00E9  28EB               	goto	u5041
  9126     00EA  28EC               	goto	u5040
  9127     00EB                     u5041:
  9128     00EB  28F1               	goto	l3660
  9129     00EC                     u5040:
  9130     00EC                     l3658:
  9131     00EC  302B               	movlw	43
  9132     00ED  00B9               	movwf	_dtoa$912
  9133     00EE  3000               	movlw	0
  9134     00EF  00BA               	movwf	_dtoa$912+1
  9135     00F0  28F5               	goto	l838
  9136     00F1                     l3660:
  9137     00F1  302D               	movlw	45
  9138     00F2  00B9               	movwf	_dtoa$912
  9139     00F3  3000               	movlw	0
  9140     00F4  00BA               	movwf	_dtoa$912+1
  9141     00F5                     l838:
  9142     00F5  0839               	movf	_dtoa$912,w
  9143     00F6  00CA               	movwf	dtoa@s
  9144     00F7                     l834:	
  9145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 471:     }
  9146                           
  9147                           
  9148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  9149     00F7  304F               	movlw	79
  9150     00F8  00C8               	movwf	dtoa@i
  9151     00F9  3000               	movlw	0
  9152     00FA  00C9               	movwf	dtoa@i+1
  9153     00FB                     l3662:
  9154                           
  9155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  9156     00FB  0024               	movlb	4	; select bank4
  9157     00FC  01EF               	clrf	(_dbuf^(0+512)+79)
  9158                           
  9159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  9160     00FD  2967               	goto	l839
  9161     00FE                     l3664:
  9162                           
  9163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  9164     00FE  30FF               	movlw	255
  9165     00FF  0020               	movlb	0	; select bank0
  9166     0100  07C8               	addwf	dtoa@i,f
  9167     0101  30FF               	movlw	255
  9168     0102  3DC9               	addwfc	dtoa@i+1,f
  9169     0103                     l3666:
  9170                           
  9171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9172     0103  300A               	movlw	10
  9173     0104  00A0               	movwf	___aomod@divisor
  9174     0105  01A1               	clrf	___aomod@divisor+1
  9175     0106  01A2               	clrf	___aomod@divisor+2
  9176     0107  01A3               	clrf	___aomod@divisor+3
  9177     0108  01A4               	clrf	___aomod@divisor+4
  9178     0109  01A5               	clrf	___aomod@divisor+5
  9179     010A  01A6               	clrf	___aomod@divisor+6
  9180     010B  01A7               	clrf	___aomod@divisor+7
  9181     010C  0840               	movf	dtoa@n,w
  9182     010D  00A8               	movwf	___aomod@dividend
  9183     010E  0841               	movf	dtoa@n+1,w
  9184     010F  00A9               	movwf	___aomod@dividend+1
  9185     0110  0842               	movf	dtoa@n+2,w
  9186     0111  00AA               	movwf	___aomod@dividend+2
  9187     0112  0843               	movf	dtoa@n+3,w
  9188     0113  00AB               	movwf	___aomod@dividend+3
  9189     0114  0844               	movf	dtoa@n+4,w
  9190     0115  00AC               	movwf	___aomod@dividend+4
  9191     0116  0845               	movf	dtoa@n+5,w
  9192     0117  00AD               	movwf	___aomod@dividend+5
  9193     0118  0846               	movf	dtoa@n+6,w
  9194     0119  00AE               	movwf	___aomod@dividend+6
  9195     011A  0847               	movf	dtoa@n+7,w
  9196     011B  00AF               	movwf	___aomod@dividend+7
  9197     011C  3191  2134  3180   	fcall	___aomod
  9198     011F  0020               	movlb	0	; select bank0
  9199     0120  0821               	movf	?___aomod+1,w
  9200     0121  00F4               	movwf	abs@a+1
  9201     0122  0820               	movf	?___aomod,w
  9202     0123  00F3               	movwf	abs@a
  9203     0124  319A  2235  3180   	fcall	_abs
  9204     0127  0873               	movf	?_abs,w
  9205     0128  3E30               	addlw	48
  9206     0129  0020               	movlb	0	; select bank0
  9207     012A  00B8               	movwf	??_dtoa
  9208     012B  0848               	movf	dtoa@i,w
  9209     012C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9210     012D  0086               	movwf	6
  9211     012E  3002               	movlw	2	; select bank4/5
  9212     012F  0087               	movwf	7
  9213     0130  0838               	movf	??_dtoa,w
  9214     0131  0081               	movwf	1
  9215     0132                     l3668:
  9216                           
  9217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  9218     0132  30FF               	movlw	255
  9219     0133  07BC               	addwf	dtoa@p,f
  9220     0134  30FF               	movlw	255
  9221     0135  3DBD               	addwfc	dtoa@p+1,f
  9222     0136                     l3670:
  9223                           
  9224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  9225     0136  30FF               	movlw	255
  9226     0137  07BE               	addwf	dtoa@w,f
  9227     0138  30FF               	movlw	255
  9228     0139  3DBF               	addwfc	dtoa@w+1,f
  9229     013A                     l3672:
  9230                           
  9231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  9232     013A  300A               	movlw	10
  9233     013B  00A0               	movwf	___aodiv@divisor
  9234     013C  01A1               	clrf	___aodiv@divisor+1
  9235     013D  01A2               	clrf	___aodiv@divisor+2
  9236     013E  01A3               	clrf	___aodiv@divisor+3
  9237     013F  01A4               	clrf	___aodiv@divisor+4
  9238     0140  01A5               	clrf	___aodiv@divisor+5
  9239     0141  01A6               	clrf	___aodiv@divisor+6
  9240     0142  01A7               	clrf	___aodiv@divisor+7
  9241     0143  0840               	movf	dtoa@n,w
  9242     0144  00A8               	movwf	___aodiv@dividend
  9243     0145  0841               	movf	dtoa@n+1,w
  9244     0146  00A9               	movwf	___aodiv@dividend+1
  9245     0147  0842               	movf	dtoa@n+2,w
  9246     0148  00AA               	movwf	___aodiv@dividend+2
  9247     0149  0843               	movf	dtoa@n+3,w
  9248     014A  00AB               	movwf	___aodiv@dividend+3
  9249     014B  0844               	movf	dtoa@n+4,w
  9250     014C  00AC               	movwf	___aodiv@dividend+4
  9251     014D  0845               	movf	dtoa@n+5,w
  9252     014E  00AD               	movwf	___aodiv@dividend+5
  9253     014F  0846               	movf	dtoa@n+6,w
  9254     0150  00AE               	movwf	___aodiv@dividend+6
  9255     0151  0847               	movf	dtoa@n+7,w
  9256     0152  00AF               	movwf	___aodiv@dividend+7
  9257     0153  3193  2309  3180   	fcall	___aodiv
  9258     0156  0020               	movlb	0	; select bank0
  9259     0157  0820               	movf	?___aodiv,w
  9260     0158  00C0               	movwf	dtoa@n
  9261     0159  0821               	movf	?___aodiv+1,w
  9262     015A  00C1               	movwf	dtoa@n+1
  9263     015B  0822               	movf	?___aodiv+2,w
  9264     015C  00C2               	movwf	dtoa@n+2
  9265     015D  0823               	movf	?___aodiv+3,w
  9266     015E  00C3               	movwf	dtoa@n+3
  9267     015F  0824               	movf	?___aodiv+4,w
  9268     0160  00C4               	movwf	dtoa@n+4
  9269     0161  0825               	movf	?___aodiv+5,w
  9270     0162  00C5               	movwf	dtoa@n+5
  9271     0163  0826               	movf	?___aodiv+6,w
  9272     0164  00C6               	movwf	dtoa@n+6
  9273     0165  0827               	movf	?___aodiv+7,w
  9274     0166  00C7               	movwf	dtoa@n+7
  9275     0167                     l839:	
  9276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 492:     }
  9277                           
  9278                           
  9279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  9280     0167  0020               	movlb	0	; select bank0
  9281     0168  0849               	movf	dtoa@i+1,w
  9282     0169  3A80               	xorlw	128
  9283     016A  00B8               	movwf	??_dtoa
  9284     016B  3080               	movlw	128
  9285     016C  0238               	subwf	??_dtoa,w
  9286     016D  1D03               	skipz
  9287     016E  2971               	goto	u5055
  9288     016F  3001               	movlw	1
  9289     0170  0248               	subwf	dtoa@i,w
  9290     0171                     u5055:
  9291     0171  1C03               	skipc
  9292     0172  2974               	goto	u5051
  9293     0173  2975               	goto	u5050
  9294     0174                     u5051:
  9295     0174  298F               	goto	l3678
  9296     0175                     u5050:
  9297     0175                     l3674:
  9298     0175  0020               	movlb	0	; select bank0
  9299     0176  0840               	movf	dtoa@n,w
  9300     0177  0441               	iorwf	dtoa@n+1,w
  9301     0178  0442               	iorwf	dtoa@n+2,w
  9302     0179  0443               	iorwf	dtoa@n+3,w
  9303     017A  0444               	iorwf	dtoa@n+4,w
  9304     017B  0445               	iorwf	dtoa@n+5,w
  9305     017C  0446               	iorwf	dtoa@n+6,w
  9306     017D  0447               	iorwf	dtoa@n+7,w
  9307     017E  1D03               	skipz
  9308     017F  2981               	goto	u5061
  9309     0180  2982               	goto	u5060
  9310     0181                     u5061:
  9311     0181  28FE               	goto	l3664
  9312     0182                     u5060:
  9313     0182                     l3676:
  9314     0182  083D               	movf	dtoa@p+1,w
  9315     0183  3A80               	xorlw	128
  9316     0184  00B8               	movwf	??_dtoa
  9317     0185  3080               	movlw	128
  9318     0186  0238               	subwf	??_dtoa,w
  9319     0187  1D03               	skipz
  9320     0188  298B               	goto	u5075
  9321     0189  3001               	movlw	1
  9322     018A  023C               	subwf	dtoa@p,w
  9323     018B                     u5075:
  9324     018B  1803               	skipnc
  9325     018C  298E               	goto	u5071
  9326     018D  298F               	goto	u5070
  9327     018E                     u5071:
  9328     018E  28FE               	goto	l3664
  9329     018F                     u5070:
  9330     018F                     l3678:
  9331                           
  9332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  9333     018F  0020               	movlb	0	; select bank0
  9334     0190  084A               	movf	dtoa@s,w
  9335     0191  1903               	btfsc	3,2
  9336     0192  2994               	goto	u5081
  9337     0193  2995               	goto	u5080
  9338     0194                     u5081:
  9339     0194  29A0               	goto	l3684
  9340     0195                     u5080:
  9341     0195                     l3680:
  9342                           
  9343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  9344     0195  30FF               	movlw	255
  9345     0196  07C8               	addwf	dtoa@i,f
  9346     0197  30FF               	movlw	255
  9347     0198  3DC9               	addwfc	dtoa@i+1,f
  9348     0199                     l3682:
  9349                           
  9350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  9351     0199  0848               	movf	dtoa@i,w
  9352     019A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9353     019B  0086               	movwf	6
  9354     019C  3002               	movlw	2	; select bank4/5
  9355     019D  0087               	movwf	7
  9356     019E  084A               	movf	dtoa@s,w
  9357     019F  0081               	movwf	1
  9358     01A0                     l3684:
  9359                           
  9360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  9361     01A0  0848               	movf	dtoa@i,w
  9362     01A1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9363     01A2  00FB               	movwf	pad@buf
  9364     01A3  083F               	movf	dtoa@w+1,w
  9365     01A4  00FD               	movwf	pad@p+1
  9366     01A5  083E               	movf	dtoa@w,w
  9367     01A6  00FC               	movwf	pad@p
  9368     01A7  083B               	movf	dtoa@fp,w
  9369     01A8  319B  23F7  3180   	fcall	_pad
  9370     01AB                     l845:
  9371     01AB  0008               	return
  9372     01AC                     __end_of_dtoa:
  9373                           
  9374                           	psect	text23
  9375     1BF7                     __ptext23:	
  9376 ;; *************** function _pad *****************
  9377 ;; Defined at:
  9378 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  fp              1    wreg     PTR struct _IO_FILE
  9381 ;;		 -> sprintf@f(10), 
  9382 ;;  buf             1   11[COMMON] PTR unsigned char 
  9383 ;;		 -> dbuf(80), 
  9384 ;;  p               2   12[COMMON] int 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  9387 ;;		 -> sprintf@f(10), 
  9388 ;;  w               2    7[BANK0 ] int 
  9389 ;;  i               2    5[BANK0 ] int 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      void 
  9392 ;; Registers used:
  9393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9399 ;;      Params:         3       0       0       0       0       0       0       0
  9400 ;;      Locals:         0       5       0       0       0       0       0       0
  9401 ;;      Temps:          0       1       0       0       0       0       0       0
  9402 ;;      Totals:         3       6       0       0       0       0       0       0
  9403 ;;Total ram usage:        9 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 3
  9406 ;; This function calls:
  9407 ;;		_fputc
  9408 ;;		_fputs
  9409 ;; This function is called by:
  9410 ;;		_dtoa
  9411 ;;		_efgtoa
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415     1BF7                     _pad:	
  9416                           ;psect for function _pad
  9417                           
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9421                           ;pad@fp stored from wreg
  9422     1BF7  0020               	movlb	0	; select bank0
  9423     1BF8  00A9               	movwf	pad@fp
  9424     1BF9                     l3534:
  9425                           
  9426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  9427     1BF9  1BFD               	btfsc	pad@p+1,7
  9428     1BFA  2BFC               	goto	u4691
  9429     1BFB  2BFD               	goto	u4690
  9430     1BFC                     u4691:
  9431     1BFC  2C02               	goto	l3538
  9432     1BFD                     u4690:
  9433     1BFD                     l3536:
  9434     1BFD  087D               	movf	pad@p+1,w
  9435     1BFE  00A8               	movwf	pad@w+1
  9436     1BFF  087C               	movf	pad@p,w
  9437     1C00  00A7               	movwf	pad@w
  9438     1C01  2C04               	goto	l822
  9439     1C02                     l3538:
  9440     1C02  01A7               	clrf	pad@w
  9441     1C03  01A8               	clrf	pad@w+1
  9442     1C04                     l822:
  9443                           
  9444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  9445     1C04  01A5               	clrf	pad@i
  9446     1C05  01A6               	clrf	pad@i+1
  9447                           
  9448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  9449     1C06  2C16               	goto	l3544
  9450     1C07                     l3540:
  9451                           
  9452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  9453     1C07  3020               	movlw	32
  9454     1C08  00F0               	movwf	fputc@c
  9455     1C09  3000               	movlw	0
  9456     1C0A  00F1               	movwf	fputc@c+1
  9457     1C0B  0020               	movlb	0	; select bank0
  9458     1C0C  0829               	movf	pad@fp,w
  9459     1C0D  00F2               	movwf	fputc@fp
  9460     1C0E  319D  250E  319B   	fcall	_fputc
  9461     1C11                     l3542:
  9462                           
  9463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  9464     1C11  3001               	movlw	1
  9465     1C12  0020               	movlb	0	; select bank0
  9466     1C13  07A5               	addwf	pad@i,f
  9467     1C14  3000               	movlw	0
  9468     1C15  3DA6               	addwfc	pad@i+1,f
  9469     1C16                     l3544:
  9470                           
  9471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  9472     1C16  0826               	movf	pad@i+1,w
  9473     1C17  3A80               	xorlw	128
  9474     1C18  00A4               	movwf	??_pad
  9475     1C19  0828               	movf	pad@w+1,w
  9476     1C1A  3A80               	xorlw	128
  9477     1C1B  0224               	subwf	??_pad,w
  9478     1C1C  1D03               	skipz
  9479     1C1D  2C20               	goto	u4705
  9480     1C1E  0827               	movf	pad@w,w
  9481     1C1F  0225               	subwf	pad@i,w
  9482     1C20                     u4705:
  9483     1C20  1C03               	skipc
  9484     1C21  2C23               	goto	u4701
  9485     1C22  2C24               	goto	u4700
  9486     1C23                     u4701:
  9487     1C23  2C07               	goto	l3540
  9488     1C24                     u4700:
  9489     1C24                     l3546:
  9490                           
  9491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  9492     1C24  0020               	movlb	0	; select bank0
  9493     1C25  0829               	movf	pad@fp,w
  9494     1C26  00F8               	movwf	fputs@fp
  9495     1C27  087B               	movf	pad@buf,w
  9496     1C28  319B  2374  319B   	fcall	_fputs
  9497     1C2B                     l826:
  9498     1C2B  0008               	return
  9499     1C2C                     __end_of_pad:
  9500                           
  9501                           	psect	text24
  9502     1B74                     __ptext24:	
  9503 ;; *************** function _fputs *****************
  9504 ;; Defined at:
  9505 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  s               1    wreg     PTR const unsigned char 
  9508 ;;		 -> dbuf(80), 
  9509 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  9510 ;;		 -> sprintf@f(10), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9513 ;;		 -> dbuf(80), 
  9514 ;;  i               2    1[BANK0 ] int 
  9515 ;;  c               1    0[BANK0 ] unsigned char 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  2    8[COMMON] int 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9525 ;;      Params:         1       0       0       0       0       0       0       0
  9526 ;;      Locals:         0       4       0       0       0       0       0       0
  9527 ;;      Temps:          2       0       0       0       0       0       0       0
  9528 ;;      Totals:         3       4       0       0       0       0       0       0
  9529 ;;Total ram usage:        7 bytes
  9530 ;; Hardware stack levels used: 1
  9531 ;; Hardware stack levels required when called: 2
  9532 ;; This function calls:
  9533 ;;		_fputc
  9534 ;; This function is called by:
  9535 ;;		_pad
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539     1B74                     _fputs:	
  9540                           ;psect for function _fputs
  9541                           
  9542                           
  9543                           ;incstack = 0
  9544                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9545                           ;fputs@s stored from wreg
  9546     1B74  0020               	movlb	0	; select bank0
  9547     1B75  00A3               	movwf	fputs@s
  9548     1B76                     l3082:
  9549     1B76  01A1               	clrf	fputs@i
  9550     1B77  01A2               	clrf	fputs@i+1
  9551     1B78  2B8A               	goto	l3088
  9552     1B79                     l3084:
  9553     1B79  0820               	movf	fputs@c,w
  9554     1B7A  00F9               	movwf	??_fputs
  9555     1B7B  01FA               	clrf	??_fputs+1
  9556     1B7C  0879               	movf	??_fputs,w
  9557     1B7D  00F0               	movwf	fputc@c
  9558     1B7E  087A               	movf	??_fputs+1,w
  9559     1B7F  00F1               	movwf	fputc@c+1
  9560     1B80  0878               	movf	fputs@fp,w
  9561     1B81  00F2               	movwf	fputc@fp
  9562     1B82  319D  250E  319B   	fcall	_fputc
  9563     1B85                     l3086:
  9564     1B85  3001               	movlw	1
  9565     1B86  0020               	movlb	0	; select bank0
  9566     1B87  07A1               	addwf	fputs@i,f
  9567     1B88  3000               	movlw	0
  9568     1B89  3DA2               	addwfc	fputs@i+1,f
  9569     1B8A                     l3088:
  9570     1B8A  0821               	movf	fputs@i,w
  9571     1B8B  0723               	addwf	fputs@s,w
  9572     1B8C  00F9               	movwf	??_fputs
  9573     1B8D  0879               	movf	??_fputs,w
  9574     1B8E  0086               	movwf	6
  9575     1B8F  3002               	movlw	2	; select bank4/5
  9576     1B90  0087               	movwf	7
  9577     1B91  0801               	movf	1,w
  9578     1B92  00A0               	movwf	fputs@c
  9579     1B93  0820               	movf	fputs@c,w
  9580     1B94  1D03               	btfss	3,2
  9581     1B95  2B97               	goto	u3691
  9582     1B96  2B98               	goto	u3690
  9583     1B97                     u3691:
  9584     1B97  2B79               	goto	l3084
  9585     1B98                     u3690:
  9586     1B98                     l1037:
  9587     1B98  0008               	return
  9588     1B99                     __end_of_fputs:
  9589                           
  9590                           	psect	text25
  9591     1D0E                     __ptext25:	
  9592 ;; *************** function _fputc *****************
  9593 ;; Defined at:
  9594 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  c               2    0[COMMON] int 
  9597 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  9598 ;;		 -> sprintf@f(10), 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2    0[COMMON] int 
  9603 ;; Registers used:
  9604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9610 ;;      Params:         3       0       0       0       0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0
  9612 ;;      Temps:          5       0       0       0       0       0       0       0
  9613 ;;      Totals:         8       0       0       0       0       0       0       0
  9614 ;;Total ram usage:        8 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; Hardware stack levels required when called: 1
  9617 ;; This function calls:
  9618 ;;		_putch
  9619 ;; This function is called by:
  9620 ;;		_pad
  9621 ;;		_vfpfcnvrt
  9622 ;;		_fputs
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626     1D0E                     _fputc:	
  9627                           ;psect for function _fputc
  9628                           
  9629     1D0E                     l2858:	
  9630                           ;incstack = 0
  9631                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9632                           
  9633     1D0E  0872               	movf	fputc@fp,w
  9634     1D0F  1903               	btfsc	3,2
  9635     1D10  2D12               	goto	u3191
  9636     1D11  2D13               	goto	u3190
  9637     1D12                     u3191:
  9638     1D12  2D18               	goto	l2862
  9639     1D13                     u3190:
  9640     1D13                     l2860:
  9641     1D13  0872               	movf	fputc@fp,w
  9642     1D14  1D03               	btfss	3,2
  9643     1D15  2D17               	goto	u3201
  9644     1D16  2D18               	goto	u3200
  9645     1D17                     u3201:
  9646     1D17  2D1D               	goto	l2864
  9647     1D18                     u3200:
  9648     1D18                     l2862:
  9649     1D18  0870               	movf	fputc@c,w
  9650     1D19  3180  2004  319D   	fcall	_putch
  9651     1D1C  2D64               	goto	l1029
  9652     1D1D                     l2864:
  9653     1D1D  0872               	movf	fputc@fp,w
  9654     1D1E  3E08               	addlw	8
  9655     1D1F  0086               	movwf	6
  9656     1D20  3001               	movlw	1	; select bank2/3
  9657     1D21  0087               	movwf	7
  9658     1D22  0016               	moviw fsr1++
  9659     1D23  0401               	iorwf	1,w
  9660     1D24  1903               	btfsc	3,2
  9661     1D25  2D27               	goto	u3211
  9662     1D26  2D28               	goto	u3210
  9663     1D27                     u3211:
  9664     1D27  2D48               	goto	l2868
  9665     1D28                     u3210:
  9666     1D28                     l2866:
  9667     1D28  0872               	movf	fputc@fp,w
  9668     1D29  3E08               	addlw	8
  9669     1D2A  0086               	movwf	6
  9670     1D2B  3001               	movlw	1	; select bank2/3
  9671     1D2C  0087               	movwf	7
  9672     1D2D  3F40               	moviw [0]fsr1
  9673     1D2E  00F3               	movwf	??_fputc
  9674     1D2F  3F41               	moviw [1]fsr1
  9675     1D30  00F4               	movwf	??_fputc+1
  9676     1D31  0872               	movf	fputc@fp,w
  9677     1D32  3E02               	addlw	2
  9678     1D33  0086               	movwf	6
  9679     1D34  3001               	movlw	1	; select bank2/3
  9680     1D35  0087               	movwf	7
  9681     1D36  3F40               	moviw [0]fsr1
  9682     1D37  00F5               	movwf	??_fputc+2
  9683     1D38  3F41               	moviw [1]fsr1
  9684     1D39  00F6               	movwf	??_fputc+3
  9685     1D3A  0876               	movf	??_fputc+3,w
  9686     1D3B  3A80               	xorlw	128
  9687     1D3C  00F7               	movwf	??_fputc+4
  9688     1D3D  0874               	movf	??_fputc+1,w
  9689     1D3E  3A80               	xorlw	128
  9690     1D3F  0277               	subwf	??_fputc+4,w
  9691     1D40  1D03               	skipz
  9692     1D41  2D44               	goto	u3225
  9693     1D42  0873               	movf	??_fputc,w
  9694     1D43  0275               	subwf	??_fputc+2,w
  9695     1D44                     u3225:
  9696     1D44  1803               	skipnc
  9697     1D45  2D47               	goto	u3221
  9698     1D46  2D48               	goto	u3220
  9699     1D47                     u3221:
  9700     1D47  2D64               	goto	l1029
  9701     1D48                     u3220:
  9702     1D48                     l2868:
  9703     1D48  0872               	movf	fputc@fp,w
  9704     1D49  0086               	movwf	6
  9705     1D4A  3001               	movlw	1	; select bank2/3
  9706     1D4B  0087               	movwf	7
  9707     1D4C  0872               	movf	fputc@fp,w
  9708     1D4D  3E02               	addlw	2
  9709     1D4E  0084               	movwf	4
  9710     1D4F  3001               	movlw	1	; select bank2/3
  9711     1D50  0085               	movwf	5
  9712     1D51  0800               	movf	0,w
  9713     1D52  0701               	addwf	1,w
  9714     1D53  00F3               	movwf	??_fputc
  9715     1D54  0873               	movf	??_fputc,w
  9716     1D55  0086               	movwf	6
  9717     1D56  3001               	movlw	1	; select bank2/3
  9718     1D57  0087               	movwf	7
  9719     1D58  0870               	movf	fputc@c,w
  9720     1D59  0081               	movwf	1
  9721     1D5A                     l2870:
  9722     1D5A  0872               	movf	fputc@fp,w
  9723     1D5B  3E02               	addlw	2
  9724     1D5C  0086               	movwf	6
  9725     1D5D  3001               	movlw	1	; select bank2/3
  9726     1D5E  0087               	movwf	7
  9727     1D5F  3001               	movlw	1
  9728     1D60  0781               	addwf	1,f
  9729     1D61  3141               	addfsr 1,1
  9730     1D62  1803               	skipnc
  9731     1D63  0A81               	incf	1,f
  9732     1D64                     l1029:
  9733     1D64  0008               	return
  9734     1D65                     __end_of_fputc:
  9735                           
  9736                           	psect	text26
  9737     0004                     __ptext26:	
  9738 ;; *************** function _putch *****************
  9739 ;; Defined at:
  9740 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  c               1    wreg     unsigned char 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  c               1    0[COMMON] unsigned char 
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9754 ;;      Params:         0       0       0       0       0       0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_fputc
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767     0004                     _putch:	
  9768                           ;psect for function _putch
  9769                           
  9770     0004                     l1040:	
  9771                           ;incstack = 0
  9772                           ; Regs used in _putch: [wreg]
  9773                           
  9774     0004  0008               	return
  9775     0005                     __end_of_putch:
  9776                           
  9777                           	psect	text27
  9778     1A35                     __ptext27:	
  9779 ;; *************** function _abs *****************
  9780 ;; Defined at:
  9781 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  a               2    3[COMMON] int 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  2    3[COMMON] int 
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9795 ;;      Params:         2       0       0       0       0       0       0       0
  9796 ;;      Locals:         0       0       0       0       0       0       0       0
  9797 ;;      Temps:          2       0       0       0       0       0       0       0
  9798 ;;      Totals:         4       0       0       0       0       0       0       0
  9799 ;;Total ram usage:        4 bytes
  9800 ;; Hardware stack levels used: 1
  9801 ;; This function calls:
  9802 ;;		Nothing
  9803 ;; This function is called by:
  9804 ;;		_dtoa
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808     1A35                     _abs:	
  9809                           ;psect for function _abs
  9810                           
  9811     1A35                     l3548:	
  9812                           ;incstack = 0
  9813                           ; Regs used in _abs: [wreg+status,2+status,0]
  9814                           
  9815     1A35  0874               	movf	abs@a+1,w
  9816     1A36  3A80               	xorlw	128
  9817     1A37  00F5               	movwf	??_abs
  9818     1A38  3080               	movlw	128
  9819     1A39  0275               	subwf	??_abs,w
  9820     1A3A  1D03               	skipz
  9821     1A3B  2A3E               	goto	u4715
  9822     1A3C  3001               	movlw	1
  9823     1A3D  0273               	subwf	abs@a,w
  9824     1A3E                     u4715:
  9825     1A3E  1803               	skipnc
  9826     1A3F  2A41               	goto	u4711
  9827     1A40  2A42               	goto	u4710
  9828     1A41                     u4711:
  9829     1A41  2A4E               	goto	l949
  9830     1A42                     u4710:
  9831     1A42                     l3550:
  9832     1A42  0973               	comf	abs@a,w
  9833     1A43  00F5               	movwf	??_abs
  9834     1A44  0974               	comf	abs@a+1,w
  9835     1A45  00F6               	movwf	??_abs+1
  9836     1A46  0AF5               	incf	??_abs,f
  9837     1A47  1903               	skipnz
  9838     1A48  0AF6               	incf	??_abs+1,f
  9839     1A49  0875               	movf	??_abs,w
  9840     1A4A  00F3               	movwf	?_abs
  9841     1A4B  0876               	movf	??_abs+1,w
  9842     1A4C  00F4               	movwf	?_abs+1
  9843     1A4D  2A4E               	goto	l952
  9844     1A4E                     l949:
  9845     1A4E                     l952:
  9846     1A4E  0008               	return
  9847     1A4F                     __end_of_abs:
  9848                           
  9849                           	psect	text28
  9850     1134                     __ptext28:	
  9851 ;; *************** function ___aomod *****************
  9852 ;; Defined at:
  9853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  divisor         8    0[BANK0 ] long long 
  9856 ;;  dividend        8    8[BANK0 ] long long 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  sign            1    2[COMMON] unsigned char 
  9859 ;;  counter         1    1[COMMON] unsigned char 
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  8    0[BANK0 ] long long 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9869 ;;      Params:         0      16       0       0       0       0       0       0
  9870 ;;      Locals:         2       0       0       0       0       0       0       0
  9871 ;;      Temps:          1       0       0       0       0       0       0       0
  9872 ;;      Totals:         3      16       0       0       0       0       0       0
  9873 ;;Total ram usage:       19 bytes
  9874 ;; Hardware stack levels used: 1
  9875 ;; This function calls:
  9876 ;;		Nothing
  9877 ;; This function is called by:
  9878 ;;		_dtoa
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882     1134                     ___aomod:	
  9883                           ;psect for function ___aomod
  9884                           
  9885     1134                     l3142:	
  9886                           ;incstack = 0
  9887                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9888                           
  9889     1134  01F2               	clrf	___aomod@sign
  9890     1135                     l3144:
  9891     1135  3028               	movlw	low ___aomod@dividend
  9892     1136  0086               	movwf	6
  9893     1137  3000               	movlw	high ___aomod@dividend
  9894     1138  0087               	movwf	7
  9895     1139  3F47               	moviw [7]fsr1
  9896     113A  00F0               	movwf	??___aomod
  9897     113B  1FF0               	btfss	??___aomod,7
  9898     113C  293E               	goto	u3851
  9899     113D  293F               	goto	u3850
  9900     113E                     u3851:
  9901     113E  2960               	goto	l3148
  9902     113F                     u3850:
  9903     113F                     l3146:
  9904     113F  0020               	movlb	0	; select bank0
  9905     1140  09A8               	comf	___aomod@dividend,f
  9906     1141  09A9               	comf	___aomod@dividend+1,f
  9907     1142  09AA               	comf	___aomod@dividend+2,f
  9908     1143  09AB               	comf	___aomod@dividend+3,f
  9909     1144  09AC               	comf	___aomod@dividend+4,f
  9910     1145  09AD               	comf	___aomod@dividend+5,f
  9911     1146  09AE               	comf	___aomod@dividend+6,f
  9912     1147  09AF               	comf	___aomod@dividend+7,f
  9913     1148  0AA8               	incf	___aomod@dividend,f
  9914     1149  1D03               	skipz
  9915     114A  295E               	goto	u386lld
  9916     114B  0AA9               	incf	___aomod@dividend+1,f
  9917     114C  1D03               	skipz
  9918     114D  295E               	goto	u386lld
  9919     114E  0AAA               	incf	___aomod@dividend+2,f
  9920     114F  1D03               	skipz
  9921     1150  295E               	goto	u386lld
  9922     1151  0AAB               	incf	___aomod@dividend+3,f
  9923     1152  1D03               	skipz
  9924     1153  295E               	goto	u386lld
  9925     1154  0AAC               	incf	___aomod@dividend+4,f
  9926     1155  1D03               	skipz
  9927     1156  295E               	goto	u386lld
  9928     1157  0AAD               	incf	___aomod@dividend+5,f
  9929     1158  1D03               	skipz
  9930     1159  295E               	goto	u386lld
  9931     115A  0AAE               	incf	___aomod@dividend+6,f
  9932     115B  1D03               	skipz
  9933     115C  295E               	goto	u386lld
  9934     115D  0AAF               	incf	___aomod@dividend+7,f
  9935     115E                     u386lld:
  9936     115E  01F2               	clrf	___aomod@sign
  9937     115F  0AF2               	incf	___aomod@sign,f
  9938     1160                     l3148:
  9939     1160  3020               	movlw	low ___aomod@divisor
  9940     1161  0086               	movwf	6
  9941     1162  3000               	movlw	high ___aomod@divisor
  9942     1163  0087               	movwf	7
  9943     1164  3F47               	moviw [7]fsr1
  9944     1165  00F0               	movwf	??___aomod
  9945     1166  1FF0               	btfss	??___aomod,7
  9946     1167  2969               	goto	u3871
  9947     1168  296A               	goto	u3870
  9948     1169                     u3871:
  9949     1169  2989               	goto	l3152
  9950     116A                     u3870:
  9951     116A                     l3150:
  9952     116A  0020               	movlb	0	; select bank0
  9953     116B  09A0               	comf	___aomod@divisor,f
  9954     116C  09A1               	comf	___aomod@divisor+1,f
  9955     116D  09A2               	comf	___aomod@divisor+2,f
  9956     116E  09A3               	comf	___aomod@divisor+3,f
  9957     116F  09A4               	comf	___aomod@divisor+4,f
  9958     1170  09A5               	comf	___aomod@divisor+5,f
  9959     1171  09A6               	comf	___aomod@divisor+6,f
  9960     1172  09A7               	comf	___aomod@divisor+7,f
  9961     1173  0AA0               	incf	___aomod@divisor,f
  9962     1174  1D03               	skipz
  9963     1175  2989               	goto	u388lld
  9964     1176  0AA1               	incf	___aomod@divisor+1,f
  9965     1177  1D03               	skipz
  9966     1178  2989               	goto	u388lld
  9967     1179  0AA2               	incf	___aomod@divisor+2,f
  9968     117A  1D03               	skipz
  9969     117B  2989               	goto	u388lld
  9970     117C  0AA3               	incf	___aomod@divisor+3,f
  9971     117D  1D03               	skipz
  9972     117E  2989               	goto	u388lld
  9973     117F  0AA4               	incf	___aomod@divisor+4,f
  9974     1180  1D03               	skipz
  9975     1181  2989               	goto	u388lld
  9976     1182  0AA5               	incf	___aomod@divisor+5,f
  9977     1183  1D03               	skipz
  9978     1184  2989               	goto	u388lld
  9979     1185  0AA6               	incf	___aomod@divisor+6,f
  9980     1186  1D03               	skipz
  9981     1187  2989               	goto	u388lld
  9982     1188  0AA7               	incf	___aomod@divisor+7,f
  9983     1189                     u388lld:
  9984     1189                     l3152:
  9985     1189  0020               	movlb	0	; select bank0
  9986     118A  0820               	movf	___aomod@divisor,w
  9987     118B  0421               	iorwf	___aomod@divisor+1,w
  9988     118C  0422               	iorwf	___aomod@divisor+2,w
  9989     118D  0423               	iorwf	___aomod@divisor+3,w
  9990     118E  0424               	iorwf	___aomod@divisor+4,w
  9991     118F  0425               	iorwf	___aomod@divisor+5,w
  9992     1190  0426               	iorwf	___aomod@divisor+6,w
  9993     1191  0427               	iorwf	___aomod@divisor+7,w
  9994     1192  1903               	skipnz
  9995     1193  2995               	goto	u3891
  9996     1194  2996               	goto	u3890
  9997     1195                     u3891:
  9998     1195  29E9               	goto	l3168
  9999     1196                     u3890:
 10000     1196                     l3154:
 10001     1196  01F1               	clrf	___aomod@counter
 10002     1197  0AF1               	incf	___aomod@counter,f
 10003     1198  29A5               	goto	l3160
 10004     1199                     l3156:
 10005     1199  35A0               	lslf	___aomod@divisor,f
 10006     119A  0DA1               	rlf	___aomod@divisor+1,f
 10007     119B  0DA2               	rlf	___aomod@divisor+2,f
 10008     119C  0DA3               	rlf	___aomod@divisor+3,f
 10009     119D  0DA4               	rlf	___aomod@divisor+4,f
 10010     119E  0DA5               	rlf	___aomod@divisor+5,f
 10011     119F  0DA6               	rlf	___aomod@divisor+6,f
 10012     11A0  0DA7               	rlf	___aomod@divisor+7,f
 10013     11A1                     l3158:
 10014     11A1  3001               	movlw	1
 10015     11A2  00F0               	movwf	??___aomod
 10016     11A3  0870               	movf	??___aomod,w
 10017     11A4  07F1               	addwf	___aomod@counter,f
 10018     11A5                     l3160:
 10019     11A5  1FA7               	btfss	___aomod@divisor+7,7
 10020     11A6  29A8               	goto	u3901
 10021     11A7  29A9               	goto	u3900
 10022     11A8                     u3901:
 10023     11A8  2999               	goto	l3156
 10024     11A9                     u3900:
 10025     11A9                     l3162:
 10026     11A9  0827               	movf	___aomod@divisor+7,w
 10027     11AA  022F               	subwf	___aomod@dividend+7,w
 10028     11AB  1D03               	skipz
 10029     11AC  29C7               	goto	u3915
 10030     11AD  0826               	movf	___aomod@divisor+6,w
 10031     11AE  022E               	subwf	___aomod@dividend+6,w
 10032     11AF  1D03               	skipz
 10033     11B0  29C7               	goto	u3915
 10034     11B1  0825               	movf	___aomod@divisor+5,w
 10035     11B2  022D               	subwf	___aomod@dividend+5,w
 10036     11B3  1D03               	skipz
 10037     11B4  29C7               	goto	u3915
 10038     11B5  0824               	movf	___aomod@divisor+4,w
 10039     11B6  022C               	subwf	___aomod@dividend+4,w
 10040     11B7  1D03               	skipz
 10041     11B8  29C7               	goto	u3915
 10042     11B9  0823               	movf	___aomod@divisor+3,w
 10043     11BA  022B               	subwf	___aomod@dividend+3,w
 10044     11BB  1D03               	skipz
 10045     11BC  29C7               	goto	u3915
 10046     11BD  0822               	movf	___aomod@divisor+2,w
 10047     11BE  022A               	subwf	___aomod@dividend+2,w
 10048     11BF  1D03               	skipz
 10049     11C0  29C7               	goto	u3915
 10050     11C1  0821               	movf	___aomod@divisor+1,w
 10051     11C2  0229               	subwf	___aomod@dividend+1,w
 10052     11C3  1D03               	skipz
 10053     11C4  29C7               	goto	u3915
 10054     11C5  0820               	movf	___aomod@divisor,w
 10055     11C6  0228               	subwf	___aomod@dividend,w
 10056     11C7                     u3915:
 10057     11C7  1C03               	skipc
 10058     11C8  29CA               	goto	u3911
 10059     11C9  29CB               	goto	u3910
 10060     11CA                     u3911:
 10061     11CA  29DB               	goto	l3166
 10062     11CB                     u3910:
 10063     11CB                     l3164:
 10064     11CB  0820               	movf	___aomod@divisor,w
 10065     11CC  02A8               	subwf	___aomod@dividend,f
 10066     11CD  0821               	movf	___aomod@divisor+1,w
 10067     11CE  3BA9               	subwfb	___aomod@dividend+1,f
 10068     11CF  0822               	movf	___aomod@divisor+2,w
 10069     11D0  3BAA               	subwfb	___aomod@dividend+2,f
 10070     11D1  0823               	movf	___aomod@divisor+3,w
 10071     11D2  3BAB               	subwfb	___aomod@dividend+3,f
 10072     11D3  0824               	movf	___aomod@divisor+4,w
 10073     11D4  3BAC               	subwfb	___aomod@dividend+4,f
 10074     11D5  0825               	movf	___aomod@divisor+5,w
 10075     11D6  3BAD               	subwfb	___aomod@dividend+5,f
 10076     11D7  0826               	movf	___aomod@divisor+6,w
 10077     11D8  3BAE               	subwfb	___aomod@dividend+6,f
 10078     11D9  0827               	movf	___aomod@divisor+7,w
 10079     11DA  3BAF               	subwfb	___aomod@dividend+7,f
 10080     11DB                     l3166:
 10081     11DB  36A7               	lsrf	___aomod@divisor+7,f
 10082     11DC  0CA6               	rrf	___aomod@divisor+6,f
 10083     11DD  0CA5               	rrf	___aomod@divisor+5,f
 10084     11DE  0CA4               	rrf	___aomod@divisor+4,f
 10085     11DF  0CA3               	rrf	___aomod@divisor+3,f
 10086     11E0  0CA2               	rrf	___aomod@divisor+2,f
 10087     11E1  0CA1               	rrf	___aomod@divisor+1,f
 10088     11E2  0CA0               	rrf	___aomod@divisor,f
 10089     11E3  3001               	movlw	1
 10090     11E4  02F1               	subwf	___aomod@counter,f
 10091     11E5  1D03               	btfss	3,2
 10092     11E6  29E8               	goto	u3921
 10093     11E7  29E9               	goto	u3920
 10094     11E8                     u3921:
 10095     11E8  29A9               	goto	l3162
 10096     11E9                     u3920:
 10097     11E9                     l3168:
 10098     11E9  0872               	movf	___aomod@sign,w
 10099     11EA  1903               	btfsc	3,2
 10100     11EB  29ED               	goto	u3931
 10101     11EC  29EE               	goto	u3930
 10102     11ED                     u3931:
 10103     11ED  2A0C               	goto	l436
 10104     11EE                     u3930:
 10105     11EE                     l3170:
 10106     11EE  09A8               	comf	___aomod@dividend,f
 10107     11EF  09A9               	comf	___aomod@dividend+1,f
 10108     11F0  09AA               	comf	___aomod@dividend+2,f
 10109     11F1  09AB               	comf	___aomod@dividend+3,f
 10110     11F2  09AC               	comf	___aomod@dividend+4,f
 10111     11F3  09AD               	comf	___aomod@dividend+5,f
 10112     11F4  09AE               	comf	___aomod@dividend+6,f
 10113     11F5  09AF               	comf	___aomod@dividend+7,f
 10114     11F6  0AA8               	incf	___aomod@dividend,f
 10115     11F7  1D03               	skipz
 10116     11F8  2A0C               	goto	u394lld
 10117     11F9  0AA9               	incf	___aomod@dividend+1,f
 10118     11FA  1D03               	skipz
 10119     11FB  2A0C               	goto	u394lld
 10120     11FC  0AAA               	incf	___aomod@dividend+2,f
 10121     11FD  1D03               	skipz
 10122     11FE  2A0C               	goto	u394lld
 10123     11FF  0AAB               	incf	___aomod@dividend+3,f
 10124     1200  1D03               	skipz
 10125     1201  2A0C               	goto	u394lld
 10126     1202  0AAC               	incf	___aomod@dividend+4,f
 10127     1203  1D03               	skipz
 10128     1204  2A0C               	goto	u394lld
 10129     1205  0AAD               	incf	___aomod@dividend+5,f
 10130     1206  1D03               	skipz
 10131     1207  2A0C               	goto	u394lld
 10132     1208  0AAE               	incf	___aomod@dividend+6,f
 10133     1209  1D03               	skipz
 10134     120A  2A0C               	goto	u394lld
 10135     120B  0AAF               	incf	___aomod@dividend+7,f
 10136     120C                     u394lld:
 10137     120C                     l436:
 10138     120C  0020               	movlb	0	; select bank0
 10139     120D  0828               	movf	___aomod@dividend,w
 10140     120E  00A0               	movwf	?___aomod
 10141     120F  0829               	movf	___aomod@dividend+1,w
 10142     1210  00A1               	movwf	?___aomod+1
 10143     1211  082A               	movf	___aomod@dividend+2,w
 10144     1212  00A2               	movwf	?___aomod+2
 10145     1213  082B               	movf	___aomod@dividend+3,w
 10146     1214  00A3               	movwf	?___aomod+3
 10147     1215  082C               	movf	___aomod@dividend+4,w
 10148     1216  00A4               	movwf	?___aomod+4
 10149     1217  082D               	movf	___aomod@dividend+5,w
 10150     1218  00A5               	movwf	?___aomod+5
 10151     1219  082E               	movf	___aomod@dividend+6,w
 10152     121A  00A6               	movwf	?___aomod+6
 10153     121B  082F               	movf	___aomod@dividend+7,w
 10154     121C  00A7               	movwf	?___aomod+7
 10155     121D                     l437:
 10156     121D  0008               	return
 10157     121E                     __end_of___aomod:
 10158                           
 10159                           	psect	text29
 10160     1309                     __ptext29:	
 10161 ;; *************** function ___aodiv *****************
 10162 ;; Defined at:
 10163 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  divisor         8    0[BANK0 ] long long 
 10166 ;;  dividend        8    8[BANK0 ] long long 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;  quotient        8    3[COMMON] long long 
 10169 ;;  sign            1    2[COMMON] unsigned char 
 10170 ;;  counter         1    1[COMMON] unsigned char 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  8    0[BANK0 ] long long 
 10173 ;; Registers used:
 10174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10180 ;;      Params:         0      16       0       0       0       0       0       0
 10181 ;;      Locals:        10       0       0       0       0       0       0       0
 10182 ;;      Temps:          1       0       0       0       0       0       0       0
 10183 ;;      Totals:        11      16       0       0       0       0       0       0
 10184 ;;Total ram usage:       27 bytes
 10185 ;; Hardware stack levels used: 1
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_dtoa
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193     1309                     ___aodiv:	
 10194                           ;psect for function ___aodiv
 10195                           
 10196     1309                     l3104:	
 10197                           ;incstack = 0
 10198                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 10199                           
 10200     1309  01F2               	clrf	___aodiv@sign
 10201     130A                     l3106:
 10202     130A  3020               	movlw	low ___aodiv@divisor
 10203     130B  0086               	movwf	6
 10204     130C  3000               	movlw	high ___aodiv@divisor
 10205     130D  0087               	movwf	7
 10206     130E  3F47               	moviw [7]fsr1
 10207     130F  00F0               	movwf	??___aodiv
 10208     1310  1FF0               	btfss	??___aodiv,7
 10209     1311  2B13               	goto	u3741
 10210     1312  2B14               	goto	u3740
 10211     1313                     u3741:
 10212     1313  2B35               	goto	l3110
 10213     1314                     u3740:
 10214     1314                     l3108:
 10215     1314  0020               	movlb	0	; select bank0
 10216     1315  09A0               	comf	___aodiv@divisor,f
 10217     1316  09A1               	comf	___aodiv@divisor+1,f
 10218     1317  09A2               	comf	___aodiv@divisor+2,f
 10219     1318  09A3               	comf	___aodiv@divisor+3,f
 10220     1319  09A4               	comf	___aodiv@divisor+4,f
 10221     131A  09A5               	comf	___aodiv@divisor+5,f
 10222     131B  09A6               	comf	___aodiv@divisor+6,f
 10223     131C  09A7               	comf	___aodiv@divisor+7,f
 10224     131D  0AA0               	incf	___aodiv@divisor,f
 10225     131E  1D03               	skipz
 10226     131F  2B33               	goto	u375lld
 10227     1320  0AA1               	incf	___aodiv@divisor+1,f
 10228     1321  1D03               	skipz
 10229     1322  2B33               	goto	u375lld
 10230     1323  0AA2               	incf	___aodiv@divisor+2,f
 10231     1324  1D03               	skipz
 10232     1325  2B33               	goto	u375lld
 10233     1326  0AA3               	incf	___aodiv@divisor+3,f
 10234     1327  1D03               	skipz
 10235     1328  2B33               	goto	u375lld
 10236     1329  0AA4               	incf	___aodiv@divisor+4,f
 10237     132A  1D03               	skipz
 10238     132B  2B33               	goto	u375lld
 10239     132C  0AA5               	incf	___aodiv@divisor+5,f
 10240     132D  1D03               	skipz
 10241     132E  2B33               	goto	u375lld
 10242     132F  0AA6               	incf	___aodiv@divisor+6,f
 10243     1330  1D03               	skipz
 10244     1331  2B33               	goto	u375lld
 10245     1332  0AA7               	incf	___aodiv@divisor+7,f
 10246     1333                     u375lld:
 10247     1333  01F2               	clrf	___aodiv@sign
 10248     1334  0AF2               	incf	___aodiv@sign,f
 10249     1335                     l3110:
 10250     1335  3028               	movlw	low ___aodiv@dividend
 10251     1336  0086               	movwf	6
 10252     1337  3000               	movlw	high ___aodiv@dividend
 10253     1338  0087               	movwf	7
 10254     1339  3F47               	moviw [7]fsr1
 10255     133A  00F0               	movwf	??___aodiv
 10256     133B  1FF0               	btfss	??___aodiv,7
 10257     133C  2B3E               	goto	u3761
 10258     133D  2B3F               	goto	u3760
 10259     133E                     u3761:
 10260     133E  2B62               	goto	l3116
 10261     133F                     u3760:
 10262     133F                     l3112:
 10263     133F  0020               	movlb	0	; select bank0
 10264     1340  09A8               	comf	___aodiv@dividend,f
 10265     1341  09A9               	comf	___aodiv@dividend+1,f
 10266     1342  09AA               	comf	___aodiv@dividend+2,f
 10267     1343  09AB               	comf	___aodiv@dividend+3,f
 10268     1344  09AC               	comf	___aodiv@dividend+4,f
 10269     1345  09AD               	comf	___aodiv@dividend+5,f
 10270     1346  09AE               	comf	___aodiv@dividend+6,f
 10271     1347  09AF               	comf	___aodiv@dividend+7,f
 10272     1348  0AA8               	incf	___aodiv@dividend,f
 10273     1349  1D03               	skipz
 10274     134A  2B5E               	goto	u377lld
 10275     134B  0AA9               	incf	___aodiv@dividend+1,f
 10276     134C  1D03               	skipz
 10277     134D  2B5E               	goto	u377lld
 10278     134E  0AAA               	incf	___aodiv@dividend+2,f
 10279     134F  1D03               	skipz
 10280     1350  2B5E               	goto	u377lld
 10281     1351  0AAB               	incf	___aodiv@dividend+3,f
 10282     1352  1D03               	skipz
 10283     1353  2B5E               	goto	u377lld
 10284     1354  0AAC               	incf	___aodiv@dividend+4,f
 10285     1355  1D03               	skipz
 10286     1356  2B5E               	goto	u377lld
 10287     1357  0AAD               	incf	___aodiv@dividend+5,f
 10288     1358  1D03               	skipz
 10289     1359  2B5E               	goto	u377lld
 10290     135A  0AAE               	incf	___aodiv@dividend+6,f
 10291     135B  1D03               	skipz
 10292     135C  2B5E               	goto	u377lld
 10293     135D  0AAF               	incf	___aodiv@dividend+7,f
 10294     135E                     u377lld:
 10295     135E                     l3114:
 10296     135E  3001               	movlw	1
 10297     135F  00F0               	movwf	??___aodiv
 10298     1360  0870               	movf	??___aodiv,w
 10299     1361  06F2               	xorwf	___aodiv@sign,f
 10300     1362                     l3116:
 10301     1362  3073               	movlw	low ___aodiv@quotient
 10302     1363  0086               	movwf	6
 10303     1364  3000               	movlw	high ___aodiv@quotient
 10304     1365  0087               	movwf	7
 10305     1366  3008               	movlw	8
 10306     1367  00F0               	movwf	??___aodiv
 10307     1368  3000               	movlw	0
 10308     1369                     u3780:
 10309     1369  001E               	movwi fsr1++
 10310     136A  0BF0               	decfsz	??___aodiv,f
 10311     136B  2B69               	goto	u3780
 10312     136C                     l3118:
 10313     136C  0020               	movlb	0	; select bank0
 10314     136D  0820               	movf	___aodiv@divisor,w
 10315     136E  0421               	iorwf	___aodiv@divisor+1,w
 10316     136F  0422               	iorwf	___aodiv@divisor+2,w
 10317     1370  0423               	iorwf	___aodiv@divisor+3,w
 10318     1371  0424               	iorwf	___aodiv@divisor+4,w
 10319     1372  0425               	iorwf	___aodiv@divisor+5,w
 10320     1373  0426               	iorwf	___aodiv@divisor+6,w
 10321     1374  0427               	iorwf	___aodiv@divisor+7,w
 10322     1375  1903               	skipnz
 10323     1376  2B78               	goto	u3791
 10324     1377  2B79               	goto	u3790
 10325     1378                     u3791:
 10326     1378  2BD5               	goto	l3138
 10327     1379                     u3790:
 10328     1379                     l3120:
 10329     1379  01F1               	clrf	___aodiv@counter
 10330     137A  0AF1               	incf	___aodiv@counter,f
 10331     137B  2B88               	goto	l3126
 10332     137C                     l3122:
 10333     137C  35A0               	lslf	___aodiv@divisor,f
 10334     137D  0DA1               	rlf	___aodiv@divisor+1,f
 10335     137E  0DA2               	rlf	___aodiv@divisor+2,f
 10336     137F  0DA3               	rlf	___aodiv@divisor+3,f
 10337     1380  0DA4               	rlf	___aodiv@divisor+4,f
 10338     1381  0DA5               	rlf	___aodiv@divisor+5,f
 10339     1382  0DA6               	rlf	___aodiv@divisor+6,f
 10340     1383  0DA7               	rlf	___aodiv@divisor+7,f
 10341     1384                     l3124:
 10342     1384  3001               	movlw	1
 10343     1385  00F0               	movwf	??___aodiv
 10344     1386  0870               	movf	??___aodiv,w
 10345     1387  07F1               	addwf	___aodiv@counter,f
 10346     1388                     l3126:
 10347     1388  1FA7               	btfss	___aodiv@divisor+7,7
 10348     1389  2B8B               	goto	u3801
 10349     138A  2B8C               	goto	u3800
 10350     138B                     u3801:
 10351     138B  2B7C               	goto	l3122
 10352     138C                     u3800:
 10353     138C                     l3128:
 10354     138C  35F3               	lslf	___aodiv@quotient,f
 10355     138D  0DF4               	rlf	___aodiv@quotient+1,f
 10356     138E  0DF5               	rlf	___aodiv@quotient+2,f
 10357     138F  0DF6               	rlf	___aodiv@quotient+3,f
 10358     1390  0DF7               	rlf	___aodiv@quotient+4,f
 10359     1391  0DF8               	rlf	___aodiv@quotient+5,f
 10360     1392  0DF9               	rlf	___aodiv@quotient+6,f
 10361     1393  0DFA               	rlf	___aodiv@quotient+7,f
 10362     1394                     l3130:
 10363     1394  0827               	movf	___aodiv@divisor+7,w
 10364     1395  022F               	subwf	___aodiv@dividend+7,w
 10365     1396  1D03               	skipz
 10366     1397  2BB2               	goto	u3815
 10367     1398  0826               	movf	___aodiv@divisor+6,w
 10368     1399  022E               	subwf	___aodiv@dividend+6,w
 10369     139A  1D03               	skipz
 10370     139B  2BB2               	goto	u3815
 10371     139C  0825               	movf	___aodiv@divisor+5,w
 10372     139D  022D               	subwf	___aodiv@dividend+5,w
 10373     139E  1D03               	skipz
 10374     139F  2BB2               	goto	u3815
 10375     13A0  0824               	movf	___aodiv@divisor+4,w
 10376     13A1  022C               	subwf	___aodiv@dividend+4,w
 10377     13A2  1D03               	skipz
 10378     13A3  2BB2               	goto	u3815
 10379     13A4  0823               	movf	___aodiv@divisor+3,w
 10380     13A5  022B               	subwf	___aodiv@dividend+3,w
 10381     13A6  1D03               	skipz
 10382     13A7  2BB2               	goto	u3815
 10383     13A8  0822               	movf	___aodiv@divisor+2,w
 10384     13A9  022A               	subwf	___aodiv@dividend+2,w
 10385     13AA  1D03               	skipz
 10386     13AB  2BB2               	goto	u3815
 10387     13AC  0821               	movf	___aodiv@divisor+1,w
 10388     13AD  0229               	subwf	___aodiv@dividend+1,w
 10389     13AE  1D03               	skipz
 10390     13AF  2BB2               	goto	u3815
 10391     13B0  0820               	movf	___aodiv@divisor,w
 10392     13B1  0228               	subwf	___aodiv@dividend,w
 10393     13B2                     u3815:
 10394     13B2  1C03               	skipc
 10395     13B3  2BB5               	goto	u3811
 10396     13B4  2BB6               	goto	u3810
 10397     13B5                     u3811:
 10398     13B5  2BC7               	goto	l3136
 10399     13B6                     u3810:
 10400     13B6                     l3132:
 10401     13B6  0820               	movf	___aodiv@divisor,w
 10402     13B7  02A8               	subwf	___aodiv@dividend,f
 10403     13B8  0821               	movf	___aodiv@divisor+1,w
 10404     13B9  3BA9               	subwfb	___aodiv@dividend+1,f
 10405     13BA  0822               	movf	___aodiv@divisor+2,w
 10406     13BB  3BAA               	subwfb	___aodiv@dividend+2,f
 10407     13BC  0823               	movf	___aodiv@divisor+3,w
 10408     13BD  3BAB               	subwfb	___aodiv@dividend+3,f
 10409     13BE  0824               	movf	___aodiv@divisor+4,w
 10410     13BF  3BAC               	subwfb	___aodiv@dividend+4,f
 10411     13C0  0825               	movf	___aodiv@divisor+5,w
 10412     13C1  3BAD               	subwfb	___aodiv@dividend+5,f
 10413     13C2  0826               	movf	___aodiv@divisor+6,w
 10414     13C3  3BAE               	subwfb	___aodiv@dividend+6,f
 10415     13C4  0827               	movf	___aodiv@divisor+7,w
 10416     13C5  3BAF               	subwfb	___aodiv@dividend+7,f
 10417     13C6                     l3134:
 10418     13C6  1473               	bsf	___aodiv@quotient,0
 10419     13C7                     l3136:
 10420     13C7  36A7               	lsrf	___aodiv@divisor+7,f
 10421     13C8  0CA6               	rrf	___aodiv@divisor+6,f
 10422     13C9  0CA5               	rrf	___aodiv@divisor+5,f
 10423     13CA  0CA4               	rrf	___aodiv@divisor+4,f
 10424     13CB  0CA3               	rrf	___aodiv@divisor+3,f
 10425     13CC  0CA2               	rrf	___aodiv@divisor+2,f
 10426     13CD  0CA1               	rrf	___aodiv@divisor+1,f
 10427     13CE  0CA0               	rrf	___aodiv@divisor,f
 10428     13CF  3001               	movlw	1
 10429     13D0  02F1               	subwf	___aodiv@counter,f
 10430     13D1  1D03               	btfss	3,2
 10431     13D2  2BD4               	goto	u3821
 10432     13D3  2BD5               	goto	u3820
 10433     13D4                     u3821:
 10434     13D4  2B8C               	goto	l3128
 10435     13D5                     u3820:
 10436     13D5                     l3138:
 10437     13D5  0872               	movf	___aodiv@sign,w
 10438     13D6  1903               	btfsc	3,2
 10439     13D7  2BD9               	goto	u3831
 10440     13D8  2BDA               	goto	u3830
 10441     13D9                     u3831:
 10442     13D9  2BF8               	goto	l423
 10443     13DA                     u3830:
 10444     13DA                     l3140:
 10445     13DA  09F3               	comf	___aodiv@quotient,f
 10446     13DB  09F4               	comf	___aodiv@quotient+1,f
 10447     13DC  09F5               	comf	___aodiv@quotient+2,f
 10448     13DD  09F6               	comf	___aodiv@quotient+3,f
 10449     13DE  09F7               	comf	___aodiv@quotient+4,f
 10450     13DF  09F8               	comf	___aodiv@quotient+5,f
 10451     13E0  09F9               	comf	___aodiv@quotient+6,f
 10452     13E1  09FA               	comf	___aodiv@quotient+7,f
 10453     13E2  0AF3               	incf	___aodiv@quotient,f
 10454     13E3  1D03               	skipz
 10455     13E4  2BF8               	goto	u384lld
 10456     13E5  0AF4               	incf	___aodiv@quotient+1,f
 10457     13E6  1D03               	skipz
 10458     13E7  2BF8               	goto	u384lld
 10459     13E8  0AF5               	incf	___aodiv@quotient+2,f
 10460     13E9  1D03               	skipz
 10461     13EA  2BF8               	goto	u384lld
 10462     13EB  0AF6               	incf	___aodiv@quotient+3,f
 10463     13EC  1D03               	skipz
 10464     13ED  2BF8               	goto	u384lld
 10465     13EE  0AF7               	incf	___aodiv@quotient+4,f
 10466     13EF  1D03               	skipz
 10467     13F0  2BF8               	goto	u384lld
 10468     13F1  0AF8               	incf	___aodiv@quotient+5,f
 10469     13F2  1D03               	skipz
 10470     13F3  2BF8               	goto	u384lld
 10471     13F4  0AF9               	incf	___aodiv@quotient+6,f
 10472     13F5  1D03               	skipz
 10473     13F6  2BF8               	goto	u384lld
 10474     13F7  0AFA               	incf	___aodiv@quotient+7,f
 10475     13F8                     u384lld:
 10476     13F8                     l423:
 10477     13F8  0873               	movf	___aodiv@quotient,w
 10478     13F9  0020               	movlb	0	; select bank0
 10479     13FA  00A0               	movwf	?___aodiv
 10480     13FB  0874               	movf	___aodiv@quotient+1,w
 10481     13FC  00A1               	movwf	?___aodiv+1
 10482     13FD  0875               	movf	___aodiv@quotient+2,w
 10483     13FE  00A2               	movwf	?___aodiv+2
 10484     13FF  0876               	movf	___aodiv@quotient+3,w
 10485     1400  00A3               	movwf	?___aodiv+3
 10486     1401  0877               	movf	___aodiv@quotient+4,w
 10487     1402  00A4               	movwf	?___aodiv+4
 10488     1403  0878               	movf	___aodiv@quotient+5,w
 10489     1404  00A5               	movwf	?___aodiv+5
 10490     1405  0879               	movf	___aodiv@quotient+6,w
 10491     1406  00A6               	movwf	?___aodiv+6
 10492     1407  087A               	movf	___aodiv@quotient+7,w
 10493     1408  00A7               	movwf	?___aodiv+7
 10494     1409                     l424:
 10495     1409  0008               	return
 10496     140A                     __end_of___aodiv:
 10497                           
 10498                           	psect	text30
 10499     1ECF                     __ptext30:	
 10500 ;; *************** function _atoi *****************
 10501 ;; Defined at:
 10502 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  s               2    9[COMMON] PTR const unsigned char 
 10505 ;;		 -> STR_2(3), STR_1(5), 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  n               2    2[BANK0 ] int 
 10508 ;;  neg             2    0[BANK0 ] int 
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  2    9[COMMON] int 
 10511 ;; Registers used:
 10512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10518 ;;      Params:         2       0       0       0       0       0       0       0
 10519 ;;      Locals:         0       4       0       0       0       0       0       0
 10520 ;;      Temps:          3       0       0       0       0       0       0       0
 10521 ;;      Totals:         5       4       0       0       0       0       0       0
 10522 ;;Total ram usage:        9 bytes
 10523 ;; Hardware stack levels used: 1
 10524 ;; Hardware stack levels required when called: 1
 10525 ;; This function calls:
 10526 ;;		___wmul
 10527 ;;		_isdigit
 10528 ;;		_isspace
 10529 ;; This function is called by:
 10530 ;;		_vfpfcnvrt
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534     1ECF                     _atoi:	
 10535                           ;psect for function _atoi
 10536                           
 10537     1ECF                     l3890:	
 10538                           ;incstack = 0
 10539                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10540                           
 10541     1ECF  0020               	movlb	0	; select bank0
 10542     1ED0  01A2               	clrf	atoi@n
 10543     1ED1  01A3               	clrf	atoi@n+1
 10544     1ED2  01A0               	clrf	atoi@neg
 10545     1ED3  01A1               	clrf	atoi@neg+1
 10546     1ED4  2ED9               	goto	l3896
 10547     1ED5                     l3892:
 10548     1ED5  3001               	movlw	1
 10549     1ED6  07F9               	addwf	atoi@s,f
 10550     1ED7  3000               	movlw	0
 10551     1ED8  3DFA               	addwfc	atoi@s+1,f
 10552     1ED9                     l3896:
 10553     1ED9  0879               	movf	atoi@s,w
 10554     1EDA  0084               	movwf	4
 10555     1EDB  087A               	movf	atoi@s+1,w
 10556     1EDC  0085               	movwf	5
 10557     1EDD  0012               	moviw fsr0++
 10558     1EDE  3A20               	xorlw	32
 10559     1EDF  1903               	btfsc	3,2
 10560     1EE0  2EE2               	goto	u5411
 10561     1EE1  2EE3               	goto	u5410
 10562     1EE2                     u5411:
 10563     1EE2  2ED5               	goto	l3892
 10564     1EE3                     u5410:
 10565     1EE3                     l3898:
 10566     1EE3  0879               	movf	atoi@s,w
 10567     1EE4  0084               	movwf	4
 10568     1EE5  087A               	movf	atoi@s+1,w
 10569     1EE6  0085               	movwf	5
 10570     1EE7  0800               	movf	0,w	;code access
 10571     1EE8  3EF7               	addlw	247
 10572     1EE9  00FB               	movwf	??_atoi
 10573     1EEA  30FF               	movlw	255
 10574     1EEB  1803               	skipnc
 10575     1EEC  3000               	movlw	0
 10576     1EED  00FC               	movwf	??_atoi+1
 10577     1EEE  3000               	movlw	0
 10578     1EEF  027C               	subwf	??_atoi+1,w
 10579     1EF0  3005               	movlw	5
 10580     1EF1  1903               	skipnz
 10581     1EF2  027B               	subwf	??_atoi,w
 10582     1EF3  1C03               	skipc
 10583     1EF4  2EF6               	goto	u5421
 10584     1EF5  2EF7               	goto	u5420
 10585     1EF6                     u5421:
 10586     1EF6  2ED5               	goto	l3892
 10587     1EF7                     u5420:
 10588     1EF7  2F02               	goto	l3902
 10589     1EF8                     l3900:
 10590     1EF8  3001               	movlw	1
 10591     1EF9  0020               	movlb	0	; select bank0
 10592     1EFA  00A0               	movwf	atoi@neg
 10593     1EFB  3000               	movlw	0
 10594     1EFC  00A1               	movwf	atoi@neg+1
 10595     1EFD                     l966:
 10596     1EFD  3001               	movlw	1
 10597     1EFE  07F9               	addwf	atoi@s,f
 10598     1EFF  3000               	movlw	0
 10599     1F00  3DFA               	addwfc	atoi@s+1,f
 10600     1F01  2F37               	goto	l3910
 10601     1F02                     l3902:
 10602     1F02  0879               	movf	atoi@s,w
 10603     1F03  0084               	movwf	4
 10604     1F04  087A               	movf	atoi@s+1,w
 10605     1F05  0085               	movwf	5
 10606     1F06  0800               	movf	0,w	;code access
 10607     1F07  00FB               	movwf	??_atoi
 10608     1F08  01FC               	clrf	??_atoi+1
 10609                           
 10610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10611                           ; Switch size 1, requested type "simple"
 10612                           ; Number of cases is 1, Range of values is 0 to 0
 10613                           ; switch strategies available:
 10614                           ; Name         Instructions Cycles
 10615                           ; simple_byte            4     3 (average)
 10616                           ; direct_byte            8     6 (fixed)
 10617                           ; jumptable            260     6 (fixed)
 10618                           ;	Chosen strategy is simple_byte
 10619     1F09  087C               	movf	??_atoi+1,w
 10620     1F0A  3A00               	xorlw	0	; case 0
 10621     1F0B  1903               	skipnz
 10622     1F0C  2F0E               	goto	l4674
 10623     1F0D  2F37               	goto	l3910
 10624     1F0E                     l4674:
 10625                           
 10626                           ; Switch size 1, requested type "simple"
 10627                           ; Number of cases is 2, Range of values is 43 to 45
 10628                           ; switch strategies available:
 10629                           ; Name         Instructions Cycles
 10630                           ; simple_byte            7     4 (average)
 10631                           ; direct_byte           15     9 (fixed)
 10632                           ; jumptable            263     9 (fixed)
 10633                           ;	Chosen strategy is simple_byte
 10634     1F0E  087B               	movf	??_atoi,w
 10635     1F0F  3A2B               	xorlw	43	; case 43
 10636     1F10  1903               	skipnz
 10637     1F11  2EFD               	goto	l966
 10638     1F12  3A06               	xorlw	6	; case 45
 10639     1F13  1903               	skipnz
 10640     1F14  2EF8               	goto	l3900
 10641     1F15  2F37               	goto	l3910
 10642     1F16                     l3904:
 10643     1F16  0879               	movf	atoi@s,w
 10644     1F17  0084               	movwf	4
 10645     1F18  087A               	movf	atoi@s+1,w
 10646     1F19  0085               	movwf	5
 10647     1F1A  0800               	movf	0,w	;code access
 10648     1F1B  00FB               	movwf	??_atoi
 10649     1F1C  0020               	movlb	0	; select bank0
 10650     1F1D  0823               	movf	atoi@n+1,w
 10651     1F1E  00F4               	movwf	___wmul@multiplier+1
 10652     1F1F  0822               	movf	atoi@n,w
 10653     1F20  00F3               	movwf	___wmul@multiplier
 10654     1F21  300A               	movlw	10
 10655     1F22  00F5               	movwf	___wmul@multiplicand
 10656     1F23  3000               	movlw	0
 10657     1F24  00F6               	movwf	___wmul@multiplicand+1
 10658     1F25  319A  224F  319E   	fcall	___wmul
 10659     1F28  0874               	movf	?___wmul+1,w
 10660     1F29  00FD               	movwf	??_atoi+2
 10661     1F2A  087B               	movf	??_atoi,w
 10662     1F2B  0273               	subwf	?___wmul,w
 10663     1F2C  00FC               	movwf	??_atoi+1
 10664     1F2D  1C03               	skipc
 10665     1F2E  03FD               	decf	??_atoi+2,f
 10666     1F2F  087C               	movf	??_atoi+1,w
 10667     1F30  3E30               	addlw	48
 10668     1F31  0020               	movlb	0	; select bank0
 10669     1F32  00A2               	movwf	atoi@n
 10670     1F33  3000               	movlw	0
 10671     1F34  3D7D               	addwfc	??_atoi+2,w
 10672     1F35  00A3               	movwf	atoi@n+1
 10673     1F36  2EFD               	goto	l966
 10674     1F37                     l3910:
 10675     1F37  0879               	movf	atoi@s,w
 10676     1F38  0084               	movwf	4
 10677     1F39  087A               	movf	atoi@s+1,w
 10678     1F3A  0085               	movwf	5
 10679     1F3B  0800               	movf	0,w	;code access
 10680     1F3C  3ED0               	addlw	208
 10681     1F3D  00FB               	movwf	??_atoi
 10682     1F3E  30FF               	movlw	255
 10683     1F3F  1803               	skipnc
 10684     1F40  3000               	movlw	0
 10685     1F41  00FC               	movwf	??_atoi+1
 10686     1F42  3000               	movlw	0
 10687     1F43  027C               	subwf	??_atoi+1,w
 10688     1F44  300A               	movlw	10
 10689     1F45  1903               	skipnz
 10690     1F46  027B               	subwf	??_atoi,w
 10691     1F47  1C03               	skipc
 10692     1F48  2F4A               	goto	u5431
 10693     1F49  2F4B               	goto	u5430
 10694     1F4A                     u5431:
 10695     1F4A  2F16               	goto	l3904
 10696     1F4B                     u5430:
 10697     1F4B                     l3912:
 10698     1F4B  0020               	movlb	0	; select bank0
 10699     1F4C  0820               	movf	atoi@neg,w
 10700     1F4D  0421               	iorwf	atoi@neg+1,w
 10701     1F4E  1D03               	btfss	3,2
 10702     1F4F  2F51               	goto	u5441
 10703     1F50  2F52               	goto	u5440
 10704     1F51                     u5441:
 10705     1F51  2F5E               	goto	l3916
 10706     1F52                     u5440:
 10707     1F52                     l3914:
 10708     1F52  0922               	comf	atoi@n,w
 10709     1F53  00FB               	movwf	??_atoi
 10710     1F54  0923               	comf	atoi@n+1,w
 10711     1F55  00FC               	movwf	??_atoi+1
 10712     1F56  0AFB               	incf	??_atoi,f
 10713     1F57  1903               	skipnz
 10714     1F58  0AFC               	incf	??_atoi+1,f
 10715     1F59  087B               	movf	??_atoi,w
 10716     1F5A  00F9               	movwf	?_atoi
 10717     1F5B  087C               	movf	??_atoi+1,w
 10718     1F5C  00FA               	movwf	?_atoi+1
 10719     1F5D  2F62               	goto	l977
 10720     1F5E                     l3916:
 10721     1F5E  0823               	movf	atoi@n+1,w
 10722     1F5F  00FA               	movwf	?_atoi+1
 10723     1F60  0822               	movf	atoi@n,w
 10724     1F61  00F9               	movwf	?_atoi
 10725     1F62                     l977:
 10726     1F62  0008               	return
 10727     1F63                     __end_of_atoi:
 10728                           
 10729                           	psect	text31
 10730     1AED                     __ptext31:	
 10731 ;; *************** function _isspace *****************
 10732 ;; Defined at:
 10733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  c               2    0[COMMON] int 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;		None
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  2    0[COMMON] int 
 10740 ;; Registers used:
 10741 ;;		wreg, status,2, status,0
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10747 ;;      Params:         2       0       0       0       0       0       0       0
 10748 ;;      Locals:         1       0       0       0       0       0       0       0
 10749 ;;      Temps:          2       0       0       0       0       0       0       0
 10750 ;;      Totals:         5       0       0       0       0       0       0       0
 10751 ;;Total ram usage:        5 bytes
 10752 ;; Hardware stack levels used: 1
 10753 ;; This function calls:
 10754 ;;		Nothing
 10755 ;; This function is called by:
 10756 ;;		_atoi
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760     1AED                     _isspace:	
 10761                           ;psect for function _isspace
 10762                           
 10763     1AED                     l3626:	
 10764                           ;incstack = 0
 10765                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10766                           
 10767     1AED  01F4               	clrf	_isspace$1023
 10768     1AEE  0AF4               	incf	_isspace$1023,f
 10769     1AEF                     l3628:
 10770     1AEF  3020               	movlw	32
 10771     1AF0  0670               	xorwf	isspace@c,w
 10772     1AF1  0471               	iorwf	isspace@c+1,w
 10773     1AF2  1903               	btfsc	3,2
 10774     1AF3  2AF5               	goto	u4961
 10775     1AF4  2AF6               	goto	u4960
 10776     1AF5                     u4961:
 10777     1AF5  2B06               	goto	l3634
 10778     1AF6                     u4960:
 10779     1AF6                     l3630:
 10780     1AF6  0870               	movf	isspace@c,w
 10781     1AF7  3EF7               	addlw	247
 10782     1AF8  00F2               	movwf	??_isspace
 10783     1AF9  30FF               	movlw	255
 10784     1AFA  3D71               	addwfc	isspace@c+1,w
 10785     1AFB  00F3               	movwf	??_isspace+1
 10786     1AFC  3000               	movlw	0
 10787     1AFD  0273               	subwf	??_isspace+1,w
 10788     1AFE  3005               	movlw	5
 10789     1AFF  1903               	skipnz
 10790     1B00  0272               	subwf	??_isspace,w
 10791     1B01  1C03               	skipc
 10792     1B02  2B04               	goto	u4971
 10793     1B03  2B05               	goto	u4970
 10794     1B04                     u4971:
 10795     1B04  2B06               	goto	l3634
 10796     1B05                     u4970:
 10797     1B05                     l3632:
 10798     1B05  01F4               	clrf	_isspace$1023
 10799     1B06                     l3634:
 10800     1B06  0874               	movf	_isspace$1023,w
 10801     1B07  00F2               	movwf	??_isspace
 10802     1B08  01F3               	clrf	??_isspace+1
 10803     1B09  0872               	movf	??_isspace,w
 10804     1B0A  00F0               	movwf	?_isspace
 10805     1B0B  0873               	movf	??_isspace+1,w
 10806     1B0C  00F1               	movwf	?_isspace+1
 10807     1B0D                     l1001:
 10808     1B0D  0008               	return
 10809     1B0E                     __end_of_isspace:
 10810                           
 10811                           	psect	text32
 10812     1A1D                     __ptext32:	
 10813 ;; *************** function _isdigit *****************
 10814 ;; Defined at:
 10815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  c               2    0[COMMON] int 
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;		None
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  2    0[COMMON] int 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2, status,0
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10829 ;;      Params:         2       0       0       0       0       0       0       0
 10830 ;;      Locals:         0       0       0       0       0       0       0       0
 10831 ;;      Temps:          4       0       0       0       0       0       0       0
 10832 ;;      Totals:         6       0       0       0       0       0       0       0
 10833 ;;Total ram usage:        6 bytes
 10834 ;; Hardware stack levels used: 1
 10835 ;; This function calls:
 10836 ;;		Nothing
 10837 ;; This function is called by:
 10838 ;;		_vfpfcnvrt
 10839 ;;		_atoi
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843     1A1D                     _isdigit:	
 10844                           ;psect for function _isdigit
 10845                           
 10846     1A1D                     l3622:	
 10847                           ;incstack = 0
 10848                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10849                           
 10850     1A1D  0870               	movf	isdigit@c,w
 10851     1A1E  3ED0               	addlw	208
 10852     1A1F  00F2               	movwf	??_isdigit
 10853     1A20  30FF               	movlw	255
 10854     1A21  3D71               	addwfc	isdigit@c+1,w
 10855     1A22  00F3               	movwf	??_isdigit+1
 10856     1A23  3000               	movlw	0
 10857     1A24  0273               	subwf	??_isdigit+1,w
 10858     1A25  300A               	movlw	10
 10859     1A26  1903               	skipnz
 10860     1A27  0272               	subwf	??_isdigit,w
 10861     1A28  1C03               	skipc
 10862     1A29  2A2B               	goto	u4941
 10863     1A2A  2A2D               	goto	u4940
 10864     1A2B                     u4941:
 10865     1A2B  3001               	movlw	1
 10866     1A2C  2A2E               	goto	u4950
 10867     1A2D                     u4940:
 10868     1A2D  3000               	movlw	0
 10869     1A2E                     u4950:
 10870     1A2E  00F4               	movwf	??_isdigit+2
 10871     1A2F  01F5               	clrf	??_isdigit+3
 10872     1A30  0874               	movf	??_isdigit+2,w
 10873     1A31  00F0               	movwf	?_isdigit
 10874     1A32  0875               	movf	??_isdigit+3,w
 10875     1A33  00F1               	movwf	?_isdigit+1
 10876     1A34                     l993:
 10877     1A34  0008               	return
 10878     1A35                     __end_of_isdigit:
 10879                           
 10880                           	psect	text33
 10881     1A4F                     __ptext33:	
 10882 ;; *************** function ___wmul *****************
 10883 ;; Defined at:
 10884 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;  multiplier      2    3[COMMON] unsigned int 
 10887 ;;  multiplicand    2    5[COMMON] unsigned int 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  product         2    7[COMMON] unsigned int 
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  2    3[COMMON] unsigned int 
 10892 ;; Registers used:
 10893 ;;		wreg, status,2, status,0
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10899 ;;      Params:         4       0       0       0       0       0       0       0
 10900 ;;      Locals:         2       0       0       0       0       0       0       0
 10901 ;;      Temps:          0       0       0       0       0       0       0       0
 10902 ;;      Totals:         6       0       0       0       0       0       0       0
 10903 ;;Total ram usage:        6 bytes
 10904 ;; Hardware stack levels used: 1
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_main
 10909 ;;		_atoi
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913     1A4F                     ___wmul:	
 10914                           ;psect for function ___wmul
 10915                           
 10916     1A4F                     l3090:	
 10917                           ;incstack = 0
 10918                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10919                           
 10920     1A4F  01F7               	clrf	___wmul@product
 10921     1A50  01F8               	clrf	___wmul@product+1
 10922     1A51                     l3092:
 10923     1A51  1C73               	btfss	___wmul@multiplier,0
 10924     1A52  2A54               	goto	u3701
 10925     1A53  2A55               	goto	u3700
 10926     1A54                     u3701:
 10927     1A54  2A59               	goto	l323
 10928     1A55                     u3700:
 10929     1A55                     l3094:
 10930     1A55  0875               	movf	___wmul@multiplicand,w
 10931     1A56  07F7               	addwf	___wmul@product,f
 10932     1A57  0876               	movf	___wmul@multiplicand+1,w
 10933     1A58  3DF8               	addwfc	___wmul@product+1,f
 10934     1A59                     l323:
 10935     1A59  3001               	movlw	1
 10936     1A5A                     u3715:
 10937     1A5A  35F5               	lslf	___wmul@multiplicand,f
 10938     1A5B  0DF6               	rlf	___wmul@multiplicand+1,f
 10939     1A5C  0B89               	decfsz	9,f
 10940     1A5D  2A5A               	goto	u3715
 10941     1A5E                     l3096:
 10942     1A5E  3001               	movlw	1
 10943     1A5F                     u3725:
 10944     1A5F  36F4               	lsrf	___wmul@multiplier+1,f
 10945     1A60  0CF3               	rrf	___wmul@multiplier,f
 10946     1A61  0B89               	decfsz	9,f
 10947     1A62  2A5F               	goto	u3725
 10948     1A63                     l3098:
 10949     1A63  0873               	movf	___wmul@multiplier,w
 10950     1A64  0474               	iorwf	___wmul@multiplier+1,w
 10951     1A65  1D03               	btfss	3,2
 10952     1A66  2A68               	goto	u3731
 10953     1A67  2A69               	goto	u3730
 10954     1A68                     u3731:
 10955     1A68  2A51               	goto	l3092
 10956     1A69                     u3730:
 10957     1A69                     l3100:
 10958     1A69  0878               	movf	___wmul@product+1,w
 10959     1A6A  00F4               	movwf	?___wmul+1
 10960     1A6B  0877               	movf	___wmul@product,w
 10961     1A6C  00F3               	movwf	?___wmul
 10962     1A6D                     l325:
 10963     1A6D  0008               	return
 10964     1A6E                     __end_of___wmul:
 10965                           
 10966                           	psect	text34
 10967     1A06                     __ptext34:	
 10968 ;; *************** function _lcd_DisplayString *****************
 10969 ;; Defined at:
 10970 ;;		line 77 in file "main.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  str             2    2[COMMON] PTR unsigned char 
 10973 ;;		 -> STR_14(5), STR_13(15), STR_12(6), STR_11(8), 
 10974 ;;		 -> STR_10(12), STR_9(7), STR_8(15), STR_7(14), 
 10975 ;;		 -> STR_6(12), STR_5(14), main@inputTime(6), main@inputTemp(3), 
 10976 ;;		 -> STR_4(9), STR_3(12), display_int@str(16), display_float@str(16), 
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;		None
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  1    wreg      void 
 10981 ;; Registers used:
 10982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10988 ;;      Params:         2       0       0       0       0       0       0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0
 10990 ;;      Temps:          1       0       0       0       0       0       0       0
 10991 ;;      Totals:         3       0       0       0       0       0       0       0
 10992 ;;Total ram usage:        3 bytes
 10993 ;; Hardware stack levels used: 1
 10994 ;; Hardware stack levels required when called: 1
 10995 ;; This function calls:
 10996 ;;		_lcd_char
 10997 ;; This function is called by:
 10998 ;;		_display_float
 10999 ;;		_display_int
 11000 ;;		_main
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004     1A06                     _lcd_DisplayString:	
 11005                           ;psect for function _lcd_DisplayString
 11006                           
 11007     1A06                     l4042:	
 11008                           ;incstack = 0
 11009                           ; Regs used in _lcd_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11010                           
 11011                           
 11012                           ;main.c: 78:     while(*str)
 11013     1A06  2A13               	goto	l4048
 11014     1A07                     l4044:
 11015                           
 11016                           ;main.c: 79:     {;main.c: 80:         lcd_char(*str);
 11017     1A07  0872               	movf	lcd_DisplayString@str,w
 11018     1A08  0084               	movwf	4
 11019     1A09  0873               	movf	lcd_DisplayString@str+1,w
 11020     1A0A  0085               	movwf	5
 11021     1A0B  0800               	movf	0,w	;code access
 11022     1A0C  319B  23C7  319A   	fcall	_lcd_char
 11023     1A0F                     l4046:
 11024                           
 11025                           ;main.c: 81:         str++;
 11026     1A0F  3001               	movlw	1
 11027     1A10  07F2               	addwf	lcd_DisplayString@str,f
 11028     1A11  3000               	movlw	0
 11029     1A12  3DF3               	addwfc	lcd_DisplayString@str+1,f
 11030     1A13                     l4048:
 11031                           
 11032                           ;main.c: 78:     while(*str)
 11033     1A13  0872               	movf	lcd_DisplayString@str,w
 11034     1A14  0084               	movwf	4
 11035     1A15  0873               	movf	lcd_DisplayString@str+1,w
 11036     1A16  0085               	movwf	5
 11037     1A17  0012               	moviw fsr0++
 11038     1A18  1D03               	btfss	3,2
 11039     1A19  2A1B               	goto	u5551
 11040     1A1A  2A1C               	goto	u5550
 11041     1A1B                     u5551:
 11042     1A1B  2A07               	goto	l4044
 11043     1A1C                     u5550:
 11044     1A1C                     l49:
 11045     1A1C  0008               	return
 11046     1A1D                     __end_of_lcd_DisplayString:
 11047                           
 11048                           	psect	text35
 11049     1BC7                     __ptext35:	
 11050 ;; *************** function _lcd_char *****************
 11051 ;; Defined at:
 11052 ;;		line 67 in file "main.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  c               1    wreg     unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  c               1    1[COMMON] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11066 ;;      Params:         0       0       0       0       0       0       0       0
 11067 ;;      Locals:         1       0       0       0       0       0       0       0
 11068 ;;      Temps:          1       0       0       0       0       0       0       0
 11069 ;;      Totals:         2       0       0       0       0       0       0       0
 11070 ;;Total ram usage:        2 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		_lcd_DisplayString
 11076 ;;		_main
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080     1BC7                     _lcd_char:	
 11081                           ;psect for function _lcd_char
 11082                           
 11083                           
 11084                           ;incstack = 0
 11085                           ; Regs used in _lcd_char: [wreg+status,2+status,0]
 11086                           ;lcd_char@c stored from wreg
 11087     1BC7  00F1               	movwf	lcd_char@c
 11088     1BC8                     l4022:
 11089                           
 11090                           ;main.c: 67: void lcd_char(unsigned char c);main.c: 68: {;main.c: 69:     LATB = 0x30 + 
      +                          ((c >> 4) & 0x0f);
 11091     1BC8  0871               	movf	lcd_char@c,w
 11092     1BC9  00F0               	movwf	??_lcd_char
 11093     1BCA  3004               	movlw	4
 11094     1BCB                     u5525:
 11095     1BCB  36F0               	lsrf	??_lcd_char,f
 11096     1BCC  0B89               	decfsz	9,f
 11097     1BCD  2BCB               	goto	u5525
 11098     1BCE  0870               	movf	??_lcd_char,w
 11099     1BCF  390F               	andlw	15
 11100     1BD0  3E30               	addlw	48
 11101     1BD1  0022               	movlb	2	; select bank2
 11102     1BD2  008D               	movwf	13	;volatile
 11103                           
 11104                           ;main.c: 70:     LATB = 0x20 + ((c >> 4) & 0x0f);
 11105     1BD3  0871               	movf	lcd_char@c,w
 11106     1BD4  00F0               	movwf	??_lcd_char
 11107     1BD5  3004               	movlw	4
 11108     1BD6                     u5535:
 11109     1BD6  36F0               	lsrf	??_lcd_char,f
 11110     1BD7  0B89               	decfsz	9,f
 11111     1BD8  2BD6               	goto	u5535
 11112     1BD9  0870               	movf	??_lcd_char,w
 11113     1BDA  390F               	andlw	15
 11114     1BDB  3E20               	addlw	32
 11115     1BDC  008D               	movwf	13	;volatile
 11116     1BDD                     l4024:
 11117                           
 11118                           ;main.c: 71:     _delay((unsigned long)((2)*(19600000/4000.0)));
 11119     1BDD  300D               	movlw	13
 11120     1BDE  00F0               	movwf	??_lcd_char
 11121     1BDF  30B9               	movlw	185
 11122     1BE0                     u6547:
 11123     1BE0  0B89               	decfsz	9,f
 11124     1BE1  2BE0               	goto	u6547
 11125     1BE2  0BF0               	decfsz	??_lcd_char,f
 11126     1BE3  2BE0               	goto	u6547
 11127     1BE4  0000               	nop
 11128     1BE5                     l4026:
 11129                           
 11130                           ;main.c: 72:     LATB = 0x30 + (c & 0x0f);
 11131     1BE5  0871               	movf	lcd_char@c,w
 11132     1BE6  390F               	andlw	15
 11133     1BE7  3E30               	addlw	48
 11134     1BE8  0022               	movlb	2	; select bank2
 11135     1BE9  008D               	movwf	13	;volatile
 11136     1BEA                     l4028:
 11137                           
 11138                           ;main.c: 73:     LATB = 0x20 + (c & 0x0f);
 11139     1BEA  0871               	movf	lcd_char@c,w
 11140     1BEB  390F               	andlw	15
 11141     1BEC  3E20               	addlw	32
 11142     1BED  008D               	movwf	13	;volatile
 11143     1BEE                     l4030:
 11144                           
 11145                           ;main.c: 74:     _delay((unsigned long)((2)*(19600000/4000.0)));
 11146     1BEE  300D               	movlw	13
 11147     1BEF  00F0               	movwf	??_lcd_char
 11148     1BF0  30B9               	movlw	185
 11149     1BF1                     u6557:
 11150     1BF1  0B89               	decfsz	9,f
 11151     1BF2  2BF1               	goto	u6557
 11152     1BF3  0BF0               	decfsz	??_lcd_char,f
 11153     1BF4  2BF1               	goto	u6557
 11154     1BF5  0000               	nop
 11155     1BF6                     l43:
 11156     1BF6  0008               	return
 11157     1BF7                     __end_of_lcd_char:
 11158                           
 11159                           	psect	text36
 11160     1CBB                     __ptext36:	
 11161 ;; *************** function ___awmod *****************
 11162 ;; Defined at:
 11163 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  divisor         2    0[COMMON] int 
 11166 ;;  dividend        2    2[COMMON] int 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  sign            1    6[COMMON] unsigned char 
 11169 ;;  counter         1    5[COMMON] unsigned char 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  2    0[COMMON] int 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11179 ;;      Params:         4       0       0       0       0       0       0       0
 11180 ;;      Locals:         2       0       0       0       0       0       0       0
 11181 ;;      Temps:          1       0       0       0       0       0       0       0
 11182 ;;      Totals:         7       0       0       0       0       0       0       0
 11183 ;;Total ram usage:        7 bytes
 11184 ;; Hardware stack levels used: 1
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		_main
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192     1CBB                     ___awmod:	
 11193                           ;psect for function ___awmod
 11194                           
 11195     1CBB                     l4316:	
 11196                           ;incstack = 0
 11197                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11198                           
 11199     1CBB  01F6               	clrf	___awmod@sign
 11200     1CBC                     l4318:
 11201     1CBC  1FF3               	btfss	___awmod@dividend+1,7
 11202     1CBD  2CBF               	goto	u6101
 11203     1CBE  2CC0               	goto	u6100
 11204     1CBF                     u6101:
 11205     1CBF  2CC7               	goto	l4324
 11206     1CC0                     u6100:
 11207     1CC0                     l4320:
 11208     1CC0  09F2               	comf	___awmod@dividend,f
 11209     1CC1  09F3               	comf	___awmod@dividend+1,f
 11210     1CC2  0AF2               	incf	___awmod@dividend,f
 11211     1CC3  1903               	skipnz
 11212     1CC4  0AF3               	incf	___awmod@dividend+1,f
 11213     1CC5                     l4322:
 11214     1CC5  01F6               	clrf	___awmod@sign
 11215     1CC6  0AF6               	incf	___awmod@sign,f
 11216     1CC7                     l4324:
 11217     1CC7  1FF1               	btfss	___awmod@divisor+1,7
 11218     1CC8  2CCA               	goto	u6111
 11219     1CC9  2CCB               	goto	u6110
 11220     1CCA                     u6111:
 11221     1CCA  2CD0               	goto	l4328
 11222     1CCB                     u6110:
 11223     1CCB                     l4326:
 11224     1CCB  09F0               	comf	___awmod@divisor,f
 11225     1CCC  09F1               	comf	___awmod@divisor+1,f
 11226     1CCD  0AF0               	incf	___awmod@divisor,f
 11227     1CCE  1903               	skipnz
 11228     1CCF  0AF1               	incf	___awmod@divisor+1,f
 11229     1CD0                     l4328:
 11230     1CD0  0870               	movf	___awmod@divisor,w
 11231     1CD1  0471               	iorwf	___awmod@divisor+1,w
 11232     1CD2  1903               	btfsc	3,2
 11233     1CD3  2CD5               	goto	u6121
 11234     1CD4  2CD6               	goto	u6120
 11235     1CD5                     u6121:
 11236     1CD5  2CFF               	goto	l4346
 11237     1CD6                     u6120:
 11238     1CD6                     l4330:
 11239     1CD6  01F5               	clrf	___awmod@counter
 11240     1CD7  0AF5               	incf	___awmod@counter,f
 11241     1CD8  2CE2               	goto	l4336
 11242     1CD9                     l4332:
 11243     1CD9  3001               	movlw	1
 11244     1CDA                     u6135:
 11245     1CDA  35F0               	lslf	___awmod@divisor,f
 11246     1CDB  0DF1               	rlf	___awmod@divisor+1,f
 11247     1CDC  0B89               	decfsz	9,f
 11248     1CDD  2CDA               	goto	u6135
 11249     1CDE                     l4334:
 11250     1CDE  3001               	movlw	1
 11251     1CDF  00F4               	movwf	??___awmod
 11252     1CE0  0874               	movf	??___awmod,w
 11253     1CE1  07F5               	addwf	___awmod@counter,f
 11254     1CE2                     l4336:
 11255     1CE2  1FF1               	btfss	___awmod@divisor+1,7
 11256     1CE3  2CE5               	goto	u6141
 11257     1CE4  2CE6               	goto	u6140
 11258     1CE5                     u6141:
 11259     1CE5  2CD9               	goto	l4332
 11260     1CE6                     u6140:
 11261     1CE6                     l4338:
 11262     1CE6  0871               	movf	___awmod@divisor+1,w
 11263     1CE7  0273               	subwf	___awmod@dividend+1,w
 11264     1CE8  1D03               	skipz
 11265     1CE9  2CEC               	goto	u6155
 11266     1CEA  0870               	movf	___awmod@divisor,w
 11267     1CEB  0272               	subwf	___awmod@dividend,w
 11268     1CEC                     u6155:
 11269     1CEC  1C03               	skipc
 11270     1CED  2CEF               	goto	u6151
 11271     1CEE  2CF0               	goto	u6150
 11272     1CEF                     u6151:
 11273     1CEF  2CF4               	goto	l4342
 11274     1CF0                     u6150:
 11275     1CF0                     l4340:
 11276     1CF0  0870               	movf	___awmod@divisor,w
 11277     1CF1  02F2               	subwf	___awmod@dividend,f
 11278     1CF2  0871               	movf	___awmod@divisor+1,w
 11279     1CF3  3BF3               	subwfb	___awmod@dividend+1,f
 11280     1CF4                     l4342:
 11281     1CF4  3001               	movlw	1
 11282     1CF5                     u6165:
 11283     1CF5  36F1               	lsrf	___awmod@divisor+1,f
 11284     1CF6  0CF0               	rrf	___awmod@divisor,f
 11285     1CF7  0B89               	decfsz	9,f
 11286     1CF8  2CF5               	goto	u6165
 11287     1CF9                     l4344:
 11288     1CF9  3001               	movlw	1
 11289     1CFA  02F5               	subwf	___awmod@counter,f
 11290     1CFB  1D03               	btfss	3,2
 11291     1CFC  2CFE               	goto	u6171
 11292     1CFD  2CFF               	goto	u6170
 11293     1CFE                     u6171:
 11294     1CFE  2CE6               	goto	l4338
 11295     1CFF                     u6170:
 11296     1CFF                     l4346:
 11297     1CFF  0876               	movf	___awmod@sign,w
 11298     1D00  1903               	btfsc	3,2
 11299     1D01  2D03               	goto	u6181
 11300     1D02  2D04               	goto	u6180
 11301     1D03                     u6181:
 11302     1D03  2D09               	goto	l4350
 11303     1D04                     u6180:
 11304     1D04                     l4348:
 11305     1D04  09F2               	comf	___awmod@dividend,f
 11306     1D05  09F3               	comf	___awmod@dividend+1,f
 11307     1D06  0AF2               	incf	___awmod@dividend,f
 11308     1D07  1903               	skipnz
 11309     1D08  0AF3               	incf	___awmod@dividend+1,f
 11310     1D09                     l4350:
 11311     1D09  0873               	movf	___awmod@dividend+1,w
 11312     1D0A  00F1               	movwf	?___awmod+1
 11313     1D0B  0872               	movf	___awmod@dividend,w
 11314     1D0C  00F0               	movwf	?___awmod
 11315     1D0D                     l489:
 11316     1D0D  0008               	return
 11317     1D0E                     __end_of___awmod:
 11318                           
 11319                           	psect	text37
 11320     1D65                     __ptext37:	
 11321 ;; *************** function ___awdiv *****************
 11322 ;; Defined at:
 11323 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  divisor         2    7[COMMON] int 
 11326 ;;  dividend        2    9[COMMON] int 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;  quotient        2    2[BANK0 ] int 
 11329 ;;  sign            1    1[BANK0 ] unsigned char 
 11330 ;;  counter         1    0[BANK0 ] unsigned char 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  2    7[COMMON] int 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11340 ;;      Params:         4       0       0       0       0       0       0       0
 11341 ;;      Locals:         0       4       0       0       0       0       0       0
 11342 ;;      Temps:          1       0       0       0       0       0       0       0
 11343 ;;      Totals:         5       4       0       0       0       0       0       0
 11344 ;;Total ram usage:        9 bytes
 11345 ;; Hardware stack levels used: 1
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_main
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353     1D65                     ___awdiv:	
 11354                           ;psect for function ___awdiv
 11355                           
 11356     1D65                     l4272:	
 11357                           ;incstack = 0
 11358                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11359                           
 11360     1D65  0020               	movlb	0	; select bank0
 11361     1D66  01A1               	clrf	___awdiv@sign
 11362     1D67                     l4274:
 11363     1D67  1FF8               	btfss	___awdiv@divisor+1,7
 11364     1D68  2D6A               	goto	u6001
 11365     1D69  2D6B               	goto	u6000
 11366     1D6A                     u6001:
 11367     1D6A  2D72               	goto	l4280
 11368     1D6B                     u6000:
 11369     1D6B                     l4276:
 11370     1D6B  09F7               	comf	___awdiv@divisor,f
 11371     1D6C  09F8               	comf	___awdiv@divisor+1,f
 11372     1D6D  0AF7               	incf	___awdiv@divisor,f
 11373     1D6E  1903               	skipnz
 11374     1D6F  0AF8               	incf	___awdiv@divisor+1,f
 11375     1D70                     l4278:
 11376     1D70  01A1               	clrf	___awdiv@sign
 11377     1D71  0AA1               	incf	___awdiv@sign,f
 11378     1D72                     l4280:
 11379     1D72  1FFA               	btfss	___awdiv@dividend+1,7
 11380     1D73  2D75               	goto	u6011
 11381     1D74  2D76               	goto	u6010
 11382     1D75                     u6011:
 11383     1D75  2D7F               	goto	l4286
 11384     1D76                     u6010:
 11385     1D76                     l4282:
 11386     1D76  09F9               	comf	___awdiv@dividend,f
 11387     1D77  09FA               	comf	___awdiv@dividend+1,f
 11388     1D78  0AF9               	incf	___awdiv@dividend,f
 11389     1D79  1903               	skipnz
 11390     1D7A  0AFA               	incf	___awdiv@dividend+1,f
 11391     1D7B                     l4284:
 11392     1D7B  3001               	movlw	1
 11393     1D7C  00FB               	movwf	??___awdiv
 11394     1D7D  087B               	movf	??___awdiv,w
 11395     1D7E  06A1               	xorwf	___awdiv@sign,f
 11396     1D7F                     l4286:
 11397     1D7F  01A2               	clrf	___awdiv@quotient
 11398     1D80  01A3               	clrf	___awdiv@quotient+1
 11399     1D81                     l4288:
 11400     1D81  0877               	movf	___awdiv@divisor,w
 11401     1D82  0478               	iorwf	___awdiv@divisor+1,w
 11402     1D83  1903               	btfsc	3,2
 11403     1D84  2D86               	goto	u6021
 11404     1D85  2D87               	goto	u6020
 11405     1D86                     u6021:
 11406     1D86  2DB6               	goto	l4308
 11407     1D87                     u6020:
 11408     1D87                     l4290:
 11409     1D87  01A0               	clrf	___awdiv@counter
 11410     1D88  0AA0               	incf	___awdiv@counter,f
 11411     1D89  2D93               	goto	l4296
 11412     1D8A                     l4292:
 11413     1D8A  3001               	movlw	1
 11414     1D8B                     u6035:
 11415     1D8B  35F7               	lslf	___awdiv@divisor,f
 11416     1D8C  0DF8               	rlf	___awdiv@divisor+1,f
 11417     1D8D  0B89               	decfsz	9,f
 11418     1D8E  2D8B               	goto	u6035
 11419     1D8F                     l4294:
 11420     1D8F  3001               	movlw	1
 11421     1D90  00FB               	movwf	??___awdiv
 11422     1D91  087B               	movf	??___awdiv,w
 11423     1D92  07A0               	addwf	___awdiv@counter,f
 11424     1D93                     l4296:
 11425     1D93  1FF8               	btfss	___awdiv@divisor+1,7
 11426     1D94  2D96               	goto	u6041
 11427     1D95  2D97               	goto	u6040
 11428     1D96                     u6041:
 11429     1D96  2D8A               	goto	l4292
 11430     1D97                     u6040:
 11431     1D97                     l4298:
 11432     1D97  3001               	movlw	1
 11433     1D98                     u6055:
 11434     1D98  35A2               	lslf	___awdiv@quotient,f
 11435     1D99  0DA3               	rlf	___awdiv@quotient+1,f
 11436     1D9A  0B89               	decfsz	9,f
 11437     1D9B  2D98               	goto	u6055
 11438     1D9C  0878               	movf	___awdiv@divisor+1,w
 11439     1D9D  027A               	subwf	___awdiv@dividend+1,w
 11440     1D9E  1D03               	skipz
 11441     1D9F  2DA2               	goto	u6065
 11442     1DA0  0877               	movf	___awdiv@divisor,w
 11443     1DA1  0279               	subwf	___awdiv@dividend,w
 11444     1DA2                     u6065:
 11445     1DA2  1C03               	skipc
 11446     1DA3  2DA5               	goto	u6061
 11447     1DA4  2DA6               	goto	u6060
 11448     1DA5                     u6061:
 11449     1DA5  2DAB               	goto	l4304
 11450     1DA6                     u6060:
 11451     1DA6                     l4300:
 11452     1DA6  0877               	movf	___awdiv@divisor,w
 11453     1DA7  02F9               	subwf	___awdiv@dividend,f
 11454     1DA8  0878               	movf	___awdiv@divisor+1,w
 11455     1DA9  3BFA               	subwfb	___awdiv@dividend+1,f
 11456     1DAA                     l4302:
 11457     1DAA  1422               	bsf	___awdiv@quotient,0
 11458     1DAB                     l4304:
 11459     1DAB  3001               	movlw	1
 11460     1DAC                     u6075:
 11461     1DAC  36F8               	lsrf	___awdiv@divisor+1,f
 11462     1DAD  0CF7               	rrf	___awdiv@divisor,f
 11463     1DAE  0B89               	decfsz	9,f
 11464     1DAF  2DAC               	goto	u6075
 11465     1DB0                     l4306:
 11466     1DB0  3001               	movlw	1
 11467     1DB1  02A0               	subwf	___awdiv@counter,f
 11468     1DB2  1D03               	btfss	3,2
 11469     1DB3  2DB5               	goto	u6081
 11470     1DB4  2DB6               	goto	u6080
 11471     1DB5                     u6081:
 11472     1DB5  2D97               	goto	l4298
 11473     1DB6                     u6080:
 11474     1DB6                     l4308:
 11475     1DB6  0821               	movf	___awdiv@sign,w
 11476     1DB7  1903               	btfsc	3,2
 11477     1DB8  2DBA               	goto	u6091
 11478     1DB9  2DBB               	goto	u6090
 11479     1DBA                     u6091:
 11480     1DBA  2DC0               	goto	l4312
 11481     1DBB                     u6090:
 11482     1DBB                     l4310:
 11483     1DBB  09A2               	comf	___awdiv@quotient,f
 11484     1DBC  09A3               	comf	___awdiv@quotient+1,f
 11485     1DBD  0AA2               	incf	___awdiv@quotient,f
 11486     1DBE  1903               	skipnz
 11487     1DBF  0AA3               	incf	___awdiv@quotient+1,f
 11488     1DC0                     l4312:
 11489     1DC0  0823               	movf	___awdiv@quotient+1,w
 11490     1DC1  00F8               	movwf	?___awdiv+1
 11491     1DC2  0822               	movf	___awdiv@quotient,w
 11492     1DC3  00F7               	movwf	?___awdiv
 11493     1DC4                     l476:
 11494     1DC4  0008               	return
 11495     1DC5                     __end_of___awdiv:
 11496                           
 11497                           	psect	text38
 11498     1000                     __ptext38:	
 11499 ;; *************** function _ADC_init *****************
 11500 ;; Defined at:
 11501 ;;		line 97 in file "main.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;		None
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;		None
 11506 ;; Return value:  Size  Location     Type
 11507 ;;                  1    wreg      void 
 11508 ;; Registers used:
 11509 ;;		wreg, status,2, status,0
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/0
 11512 ;;		On exit  : 0/0
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11515 ;;      Params:         0       0       0       0       0       0       0       0
 11516 ;;      Locals:         0       0       0       0       0       0       0       0
 11517 ;;      Temps:          0       0       0       0       0       0       0       0
 11518 ;;      Totals:         0       0       0       0       0       0       0       0
 11519 ;;Total ram usage:        0 bytes
 11520 ;; Hardware stack levels used: 1
 11521 ;; This function calls:
 11522 ;;		Nothing
 11523 ;; This function is called by:
 11524 ;;		_main
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528     1000                     _ADC_init:	
 11529                           ;psect for function _ADC_init
 11530                           
 11531     1000                     l4126:	
 11532                           ;incstack = 0
 11533                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 11534                           
 11535                           
 11536                           ;main.c: 99:     ADCON0bits.ADON = 1;
 11537     1000  0021               	movlb	1	; select bank1
 11538     1001  141D               	bsf	29,0	;volatile
 11539                           
 11540                           ;main.c: 100:     ADCON1bits.ADFM = 1;
 11541     1002  179E               	bsf	30,7	;volatile
 11542     1003                     l4128:
 11543                           
 11544                           ;main.c: 101:     ADCON1bits.ADCS = 011;
 11545     1003  081E               	movf	30,w	;volatile
 11546     1004  398F               	andlw	-113
 11547     1005  3810               	iorlw	16
 11548     1006  009E               	movwf	30	;volatile
 11549     1007                     l4130:
 11550                           
 11551                           ;main.c: 102:     ADRESH = 0;
 11552     1007  019C               	clrf	28	;volatile
 11553     1008                     l4132:
 11554                           
 11555                           ;main.c: 103:     ADRESL = 0;
 11556     1008  019B               	clrf	27	;volatile
 11557     1009                     l58:
 11558     1009  0008               	return
 11559     100A                     __end_of_ADC_init:
 11560                           
 11561                           	psect	text39
 11562     100A                     __ptext39:	
 11563 ;; *************** function _ADC_Convert *****************
 11564 ;; Defined at:
 11565 ;;		line 106 in file "main.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  chan            2   52[BANK0 ] int 
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  voltage         4   58[BANK0 ] float 
 11570 ;;  result          2   62[BANK0 ] unsigned int 
 11571 ;; Return value:  Size  Location     Type
 11572 ;;                  4   52[BANK0 ] float 
 11573 ;; Registers used:
 11574 ;;		wreg, status,2, status,0, pclath, cstack
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11580 ;;      Params:         0       4       0       0       0       0       0       0
 11581 ;;      Locals:         0       6       0       0       0       0       0       0
 11582 ;;      Temps:          0       2       0       0       0       0       0       0
 11583 ;;      Totals:         0      12       0       0       0       0       0       0
 11584 ;;Total ram usage:       12 bytes
 11585 ;; Hardware stack levels used: 1
 11586 ;; Hardware stack levels required when called: 2
 11587 ;; This function calls:
 11588 ;;		___fldiv
 11589 ;;		___flmul
 11590 ;;		___xxtofl
 11591 ;; This function is called by:
 11592 ;;		_main
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596     100A                     _ADC_Convert:	
 11597                           ;psect for function _ADC_Convert
 11598                           
 11599     100A                     l4134:	
 11600                           ;incstack = 0
 11601                           ; Regs used in _ADC_Convert: [wreg+status,2+status,0+pclath+cstack]
 11602                           
 11603                           
 11604                           ;main.c: 106: float ADC_Convert(int chan);main.c: 107: {;main.c: 108:     if(chan == 0){
 11605     100A  0020               	movlb	0	; select bank0
 11606     100B  0854               	movf	ADC_Convert@chan,w
 11607     100C  0455               	iorwf	ADC_Convert@chan+1,w
 11608     100D  1D03               	btfss	3,2
 11609     100E  2810               	goto	u5721
 11610     100F  2811               	goto	u5720
 11611     1010                     u5721:
 11612     1010  2815               	goto	l4138
 11613     1011                     u5720:
 11614     1011                     l4136:
 11615                           
 11616                           ;main.c: 109:       ADCON0bits.CHS = 00000 ;
 11617     1011  3083               	movlw	-125
 11618     1012  0021               	movlb	1	; select bank1
 11619     1013  059D               	andwf	29,f	;volatile
 11620                           
 11621                           ;main.c: 110:     }
 11622     1014  282D               	goto	l4146
 11623     1015                     l4138:
 11624     1015  0354               	decf	ADC_Convert@chan,w
 11625     1016  0455               	iorwf	ADC_Convert@chan+1,w
 11626     1017  1D03               	btfss	3,2
 11627     1018  281A               	goto	u5731
 11628     1019  281B               	goto	u5730
 11629     101A                     u5731:
 11630     101A  2821               	goto	l4142
 11631     101B                     u5730:
 11632     101B                     l4140:
 11633                           
 11634                           ;main.c: 112:       ADCON0bits.CHS = 00001 ;
 11635     101B  0021               	movlb	1	; select bank1
 11636     101C  081D               	movf	29,w	;volatile
 11637     101D  3983               	andlw	-125
 11638     101E  3804               	iorlw	4
 11639     101F  009D               	movwf	29	;volatile
 11640                           
 11641                           ;main.c: 113:     }
 11642     1020  282D               	goto	l4146
 11643     1021                     l4142:
 11644     1021  3002               	movlw	2
 11645     1022  0654               	xorwf	ADC_Convert@chan,w
 11646     1023  0455               	iorwf	ADC_Convert@chan+1,w
 11647     1024  1D03               	btfss	3,2
 11648     1025  2827               	goto	u5741
 11649     1026  2828               	goto	u5740
 11650     1027                     u5741:
 11651     1027  282D               	goto	l4146
 11652     1028                     u5740:
 11653     1028                     l4144:
 11654                           
 11655                           ;main.c: 115:       ADCON0bits.CHS = 2 ;
 11656     1028  0021               	movlb	1	; select bank1
 11657     1029  081D               	movf	29,w	;volatile
 11658     102A  3983               	andlw	-125
 11659     102B  3808               	iorlw	8
 11660     102C  009D               	movwf	29	;volatile
 11661     102D                     l4146:
 11662                           
 11663                           ;main.c: 117:     _delay((unsigned long)((1)*(19600000/4000.0)));
 11664     102D  3007               	movlw	7
 11665     102E  0020               	movlb	0	; select bank0
 11666     102F  00D8               	movwf	??_ADC_Convert
 11667     1030  305B               	movlw	91
 11668     1031                     u6567:
 11669     1031  0B89               	decfsz	9,f
 11670     1032  2831               	goto	u6567
 11671     1033  0BD8               	decfsz	??_ADC_Convert,f
 11672     1034  2831               	goto	u6567
 11673     1035  3200               	nop2
 11674     1036                     l4148:
 11675                           
 11676                           ;main.c: 118:     ADCON0bits.GO_nDONE = 1;
 11677     1036  0021               	movlb	1	; select bank1
 11678     1037  149D               	bsf	29,1	;volatile
 11679     1038                     l4150:
 11680                           
 11681                           ;main.c: 119:     ADCON0bits.ADGO = 1;
 11682     1038  149D               	bsf	29,1	;volatile
 11683     1039                     l66:	
 11684                           ;main.c: 120:     while(ADCON0bits.GO_nDONE);
 11685                           
 11686     1039  189D               	btfsc	29,1	;volatile
 11687     103A  283C               	goto	u5751
 11688     103B  283D               	goto	u5750
 11689     103C                     u5751:
 11690     103C  2839               	goto	l66
 11691     103D                     u5750:
 11692     103D                     l4152:
 11693                           
 11694                           ;main.c: 121:     unsigned int result = (ADRESH>>8) + ADRESL;
 11695     103D  081C               	movf	28,w	;volatile
 11696     103E  081B               	movf	27,w	;volatile
 11697     103F  0020               	movlb	0	; select bank0
 11698     1040  00D8               	movwf	??_ADC_Convert
 11699     1041  01D9               	clrf	??_ADC_Convert+1
 11700     1042  0858               	movf	??_ADC_Convert,w
 11701     1043  00DE               	movwf	ADC_Convert@result
 11702     1044  0859               	movf	??_ADC_Convert+1,w
 11703     1045  00DF               	movwf	ADC_Convert@result+1
 11704     1046                     l4154:
 11705                           
 11706                           ;main.c: 122:     float voltage = (result * 5.0) / 1023;
 11707     1046  3044               	movlw	68
 11708     1047  00BD               	movwf	___fldiv@a+3
 11709     1048  307F               	movlw	127
 11710     1049  00BC               	movwf	___fldiv@a+2
 11711     104A  30C0               	movlw	192
 11712     104B  00BB               	movwf	___fldiv@a+1
 11713     104C  3000               	movlw	0
 11714     104D  00BA               	movwf	___fldiv@a
 11715     104E  3040               	movlw	64
 11716     104F  00A3               	movwf	___flmul@b+3
 11717     1050  30A0               	movlw	160
 11718     1051  00A2               	movwf	___flmul@b+2
 11719     1052  3000               	movlw	0
 11720     1053  00A1               	movwf	___flmul@b+1
 11721     1054  3000               	movlw	0
 11722     1055  00A0               	movwf	___flmul@b
 11723     1056  085E               	movf	ADC_Convert@result,w
 11724     1057  00F0               	movwf	___xxtofl@val
 11725     1058  085F               	movf	ADC_Convert@result+1,w
 11726     1059  00F1               	movwf	___xxtofl@val+1
 11727     105A  01F2               	clrf	___xxtofl@val+2
 11728     105B  01F3               	clrf	___xxtofl@val+3
 11729     105C  3000               	movlw	0
 11730     105D  3190  208A  3190   	fcall	___xxtofl
 11731     1060  0873               	movf	?___xxtofl+3,w
 11732     1061  0020               	movlb	0	; select bank0
 11733     1062  00A7               	movwf	___flmul@a+3
 11734     1063  0872               	movf	?___xxtofl+2,w
 11735     1064  00A6               	movwf	___flmul@a+2
 11736     1065  0871               	movf	?___xxtofl+1,w
 11737     1066  00A5               	movwf	___flmul@a+1
 11738     1067  0870               	movf	?___xxtofl,w
 11739     1068  00A4               	movwf	___flmul@a
 11740     1069  3189  21D2  3190   	fcall	___flmul
 11741     106C  0020               	movlb	0	; select bank0
 11742     106D  0823               	movf	?___flmul+3,w
 11743     106E  00C1               	movwf	___fldiv@b+3
 11744     106F  0822               	movf	?___flmul+2,w
 11745     1070  00C0               	movwf	___fldiv@b+2
 11746     1071  0821               	movf	?___flmul+1,w
 11747     1072  00BF               	movwf	___fldiv@b+1
 11748     1073  0820               	movf	?___flmul,w
 11749     1074  00BE               	movwf	___fldiv@b
 11750     1075  3188  2028  3190   	fcall	___fldiv
 11751     1078  0020               	movlb	0	; select bank0
 11752     1079  083D               	movf	?___fldiv+3,w
 11753     107A  00DD               	movwf	ADC_Convert@voltage+3
 11754     107B  083C               	movf	?___fldiv+2,w
 11755     107C  00DC               	movwf	ADC_Convert@voltage+2
 11756     107D  083B               	movf	?___fldiv+1,w
 11757     107E  00DB               	movwf	ADC_Convert@voltage+1
 11758     107F  083A               	movf	?___fldiv,w
 11759     1080  00DA               	movwf	ADC_Convert@voltage
 11760     1081                     l4156:
 11761                           
 11762                           ;main.c: 123:     return voltage;
 11763     1081  085D               	movf	ADC_Convert@voltage+3,w
 11764     1082  00D7               	movwf	?_ADC_Convert+3
 11765     1083  085C               	movf	ADC_Convert@voltage+2,w
 11766     1084  00D6               	movwf	?_ADC_Convert+2
 11767     1085  085B               	movf	ADC_Convert@voltage+1,w
 11768     1086  00D5               	movwf	?_ADC_Convert+1
 11769     1087  085A               	movf	ADC_Convert@voltage,w
 11770     1088  00D4               	movwf	?_ADC_Convert
 11771     1089                     l69:
 11772     1089  0008               	return
 11773     108A                     __end_of_ADC_Convert:
 11774                           
 11775                           	psect	text40
 11776     108A                     __ptext40:	
 11777 ;; *************** function ___xxtofl *****************
 11778 ;; Defined at:
 11779 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  sign            1    wreg     unsigned char 
 11782 ;;  val             4    0[COMMON] long 
 11783 ;; Auto vars:     Size  Location     Type
 11784 ;;  sign            1    8[COMMON] unsigned char 
 11785 ;;  arg             4   10[COMMON] unsigned long 
 11786 ;;  exp             1    9[COMMON] unsigned char 
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  4    0[COMMON] unsigned char 
 11789 ;; Registers used:
 11790 ;;		wreg, status,2, status,0
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11796 ;;      Params:         4       0       0       0       0       0       0       0
 11797 ;;      Locals:         6       0       0       0       0       0       0       0
 11798 ;;      Temps:          4       0       0       0       0       0       0       0
 11799 ;;      Totals:        14       0       0       0       0       0       0       0
 11800 ;;Total ram usage:       14 bytes
 11801 ;; Hardware stack levels used: 1
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_ADC_Convert
 11806 ;;		_main
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810     108A                     ___xxtofl:	
 11811                           ;psect for function ___xxtofl
 11812                           
 11813                           
 11814                           ;incstack = 0
 11815                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11816                           ;___xxtofl@sign stored from wreg
 11817     108A  00F8               	movwf	___xxtofl@sign
 11818     108B                     l4062:
 11819     108B  0878               	movf	___xxtofl@sign,w
 11820     108C  1903               	btfsc	3,2
 11821     108D  288F               	goto	u5561
 11822     108E  2890               	goto	u5560
 11823     108F                     u5561:
 11824     108F  28A4               	goto	l4068
 11825     1090                     u5560:
 11826     1090                     l4064:
 11827     1090  1FF3               	btfss	___xxtofl@val+3,7
 11828     1091  2893               	goto	u5571
 11829     1092  2894               	goto	u5570
 11830     1093                     u5571:
 11831     1093  28A4               	goto	l4068
 11832     1094                     u5570:
 11833     1094                     l4066:
 11834     1094  0970               	comf	___xxtofl@val,w
 11835     1095  00FA               	movwf	___xxtofl@arg
 11836     1096  0971               	comf	___xxtofl@val+1,w
 11837     1097  00FB               	movwf	___xxtofl@arg+1
 11838     1098  0972               	comf	___xxtofl@val+2,w
 11839     1099  00FC               	movwf	___xxtofl@arg+2
 11840     109A  0973               	comf	___xxtofl@val+3,w
 11841     109B  00FD               	movwf	___xxtofl@arg+3
 11842     109C  0AFA               	incf	___xxtofl@arg,f
 11843     109D  1903               	skipnz
 11844     109E  0AFB               	incf	___xxtofl@arg+1,f
 11845     109F  1903               	skipnz
 11846     10A0  0AFC               	incf	___xxtofl@arg+2,f
 11847     10A1  1903               	skipnz
 11848     10A2  0AFD               	incf	___xxtofl@arg+3,f
 11849     10A3  28AC               	goto	l764
 11850     10A4                     l4068:
 11851     10A4  0873               	movf	___xxtofl@val+3,w
 11852     10A5  00FD               	movwf	___xxtofl@arg+3
 11853     10A6  0872               	movf	___xxtofl@val+2,w
 11854     10A7  00FC               	movwf	___xxtofl@arg+2
 11855     10A8  0871               	movf	___xxtofl@val+1,w
 11856     10A9  00FB               	movwf	___xxtofl@arg+1
 11857     10AA  0870               	movf	___xxtofl@val,w
 11858     10AB  00FA               	movwf	___xxtofl@arg
 11859     10AC                     l764:
 11860     10AC  0873               	movf	___xxtofl@val+3,w
 11861     10AD  0472               	iorwf	___xxtofl@val+2,w
 11862     10AE  0471               	iorwf	___xxtofl@val+1,w
 11863     10AF  0470               	iorwf	___xxtofl@val,w
 11864     10B0  1D03               	skipz
 11865     10B1  28B3               	goto	u5581
 11866     10B2  28B4               	goto	u5580
 11867     10B3                     u5581:
 11868     10B3  28BD               	goto	l4074
 11869     10B4                     u5580:
 11870     10B4                     l4070:
 11871     10B4  3000               	movlw	0
 11872     10B5  00F3               	movwf	?___xxtofl+3
 11873     10B6  3000               	movlw	0
 11874     10B7  00F2               	movwf	?___xxtofl+2
 11875     10B8  3000               	movlw	0
 11876     10B9  00F1               	movwf	?___xxtofl+1
 11877     10BA  3000               	movlw	0
 11878     10BB  00F0               	movwf	?___xxtofl
 11879     10BC  2933               	goto	l766
 11880     10BD                     l4074:
 11881     10BD  3096               	movlw	150
 11882     10BE  00F9               	movwf	___xxtofl@exp
 11883     10BF  28CB               	goto	l4078
 11884     10C0                     l4076:
 11885     10C0  3001               	movlw	1
 11886     10C1  00F4               	movwf	??___xxtofl
 11887     10C2  0874               	movf	??___xxtofl,w
 11888     10C3  07F9               	addwf	___xxtofl@exp,f
 11889     10C4  3001               	movlw	1
 11890     10C5                     u5595:
 11891     10C5  36FD               	lsrf	___xxtofl@arg+3,f
 11892     10C6  0CFC               	rrf	___xxtofl@arg+2,f
 11893     10C7  0CFB               	rrf	___xxtofl@arg+1,f
 11894     10C8  0CFA               	rrf	___xxtofl@arg,f
 11895     10C9  0B89               	decfsz	9,f
 11896     10CA  28C5               	goto	u5595
 11897     10CB                     l4078:
 11898     10CB  30FE               	movlw	254
 11899     10CC  057D               	andwf	___xxtofl@arg+3,w
 11900     10CD  1D03               	btfss	3,2
 11901     10CE  28D0               	goto	u5601
 11902     10CF  28D1               	goto	u5600
 11903     10D0                     u5601:
 11904     10D0  28C0               	goto	l4076
 11905     10D1                     u5600:
 11906     10D1  28E5               	goto	l770
 11907     10D2                     l4080:
 11908     10D2  3001               	movlw	1
 11909     10D3  00F4               	movwf	??___xxtofl
 11910     10D4  0874               	movf	??___xxtofl,w
 11911     10D5  07F9               	addwf	___xxtofl@exp,f
 11912     10D6                     l4082:
 11913     10D6  3001               	movlw	1
 11914     10D7  07FA               	addwf	___xxtofl@arg,f
 11915     10D8  3000               	movlw	0
 11916     10D9  3DFB               	addwfc	___xxtofl@arg+1,f
 11917     10DA  3000               	movlw	0
 11918     10DB  3DFC               	addwfc	___xxtofl@arg+2,f
 11919     10DC  3000               	movlw	0
 11920     10DD  3DFD               	addwfc	___xxtofl@arg+3,f
 11921     10DE                     l4084:
 11922     10DE  3001               	movlw	1
 11923     10DF                     u5615:
 11924     10DF  36FD               	lsrf	___xxtofl@arg+3,f
 11925     10E0  0CFC               	rrf	___xxtofl@arg+2,f
 11926     10E1  0CFB               	rrf	___xxtofl@arg+1,f
 11927     10E2  0CFA               	rrf	___xxtofl@arg,f
 11928     10E3  0B89               	decfsz	9,f
 11929     10E4  28DF               	goto	u5615
 11930     10E5                     l770:
 11931     10E5  30FF               	movlw	255
 11932     10E6  057D               	andwf	___xxtofl@arg+3,w
 11933     10E7  1D03               	btfss	3,2
 11934     10E8  28EA               	goto	u5621
 11935     10E9  28EB               	goto	u5620
 11936     10EA                     u5621:
 11937     10EA  28D2               	goto	l4080
 11938     10EB                     u5620:
 11939     10EB  28F5               	goto	l4088
 11940     10EC                     l4086:
 11941     10EC  3001               	movlw	1
 11942     10ED  02F9               	subwf	___xxtofl@exp,f
 11943     10EE  3001               	movlw	1
 11944     10EF                     u5635:
 11945     10EF  35FA               	lslf	___xxtofl@arg,f
 11946     10F0  0DFB               	rlf	___xxtofl@arg+1,f
 11947     10F1  0DFC               	rlf	___xxtofl@arg+2,f
 11948     10F2  0DFD               	rlf	___xxtofl@arg+3,f
 11949     10F3  0B89               	decfsz	9,f
 11950     10F4  28EF               	goto	u5635
 11951     10F5                     l4088:
 11952     10F5  1BFC               	btfsc	___xxtofl@arg+2,7
 11953     10F6  28F8               	goto	u5641
 11954     10F7  28F9               	goto	u5640
 11955     10F8                     u5641:
 11956     10F8  28FF               	goto	l777
 11957     10F9                     u5640:
 11958     10F9                     l4090:
 11959     10F9  3002               	movlw	2
 11960     10FA  0279               	subwf	___xxtofl@exp,w
 11961     10FB  1803               	skipnc
 11962     10FC  28FE               	goto	u5651
 11963     10FD  28FF               	goto	u5650
 11964     10FE                     u5651:
 11965     10FE  28EC               	goto	l4086
 11966     10FF                     u5650:
 11967     10FF                     l777:
 11968     10FF  1879               	btfsc	___xxtofl@exp,0
 11969     1100  2902               	goto	u5661
 11970     1101  2903               	goto	u5660
 11971     1102                     u5661:
 11972     1102  290B               	goto	l778
 11973     1103                     u5660:
 11974     1103                     l4092:
 11975     1103  30FF               	movlw	255
 11976     1104  05FA               	andwf	___xxtofl@arg,f
 11977     1105  30FF               	movlw	255
 11978     1106  05FB               	andwf	___xxtofl@arg+1,f
 11979     1107  307F               	movlw	127
 11980     1108  05FC               	andwf	___xxtofl@arg+2,f
 11981     1109  30FF               	movlw	255
 11982     110A  05FD               	andwf	___xxtofl@arg+3,f
 11983     110B                     l778:
 11984     110B  1003               	clrc
 11985     110C  0CF9               	rrf	___xxtofl@exp,f
 11986     110D                     l4094:
 11987     110D  0879               	movf	___xxtofl@exp,w
 11988     110E  00F4               	movwf	??___xxtofl
 11989     110F  01F5               	clrf	??___xxtofl+1
 11990     1110  01F6               	clrf	??___xxtofl+2
 11991     1111  01F7               	clrf	??___xxtofl+3
 11992     1112  3018               	movlw	24
 11993     1113                     u5675:
 11994     1113  35F4               	lslf	??___xxtofl,f
 11995     1114  0DF5               	rlf	??___xxtofl+1,f
 11996     1115  0DF6               	rlf	??___xxtofl+2,f
 11997     1116  0DF7               	rlf	??___xxtofl+3,f
 11998     1117                     u5670:
 11999     1117  0B89               	decfsz	9,f
 12000     1118  2913               	goto	u5675
 12001     1119  0874               	movf	??___xxtofl,w
 12002     111A  04FA               	iorwf	___xxtofl@arg,f
 12003     111B  0875               	movf	??___xxtofl+1,w
 12004     111C  04FB               	iorwf	___xxtofl@arg+1,f
 12005     111D  0876               	movf	??___xxtofl+2,w
 12006     111E  04FC               	iorwf	___xxtofl@arg+2,f
 12007     111F  0877               	movf	??___xxtofl+3,w
 12008     1120  04FD               	iorwf	___xxtofl@arg+3,f
 12009     1121                     l4096:
 12010     1121  0878               	movf	___xxtofl@sign,w
 12011     1122  1903               	btfsc	3,2
 12012     1123  2925               	goto	u5681
 12013     1124  2926               	goto	u5680
 12014     1125                     u5681:
 12015     1125  292B               	goto	l4102
 12016     1126                     u5680:
 12017     1126                     l4098:
 12018     1126  1FF3               	btfss	___xxtofl@val+3,7
 12019     1127  2929               	goto	u5691
 12020     1128  292A               	goto	u5690
 12021     1129                     u5691:
 12022     1129  292B               	goto	l4102
 12023     112A                     u5690:
 12024     112A                     l4100:
 12025     112A  17FD               	bsf	___xxtofl@arg+3,7
 12026     112B                     l4102:
 12027     112B  087D               	movf	___xxtofl@arg+3,w
 12028     112C  00F3               	movwf	?___xxtofl+3
 12029     112D  087C               	movf	___xxtofl@arg+2,w
 12030     112E  00F2               	movwf	?___xxtofl+2
 12031     112F  087B               	movf	___xxtofl@arg+1,w
 12032     1130  00F1               	movwf	?___xxtofl+1
 12033     1131  087A               	movf	___xxtofl@arg,w
 12034     1132  00F0               	movwf	?___xxtofl
 12035     1133                     l766:
 12036     1133  0008               	return
 12037     1134                     __end_of___xxtofl:
 12038                           
 12039                           	psect	text41
 12040     09D2                     __ptext41:	
 12041 ;; *************** function ___flmul *****************
 12042 ;; Defined at:
 12043 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  b               4    0[BANK0 ] unsigned char 
 12046 ;;  a               4    4[BANK0 ] unsigned char 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  prod            4   20[BANK0 ] struct .
 12049 ;;  grs             4   14[BANK0 ] unsigned long 
 12050 ;;  temp            2   24[BANK0 ] struct .
 12051 ;;  bexp            1   19[BANK0 ] unsigned char 
 12052 ;;  aexp            1   18[BANK0 ] unsigned char 
 12053 ;;  sign            1   13[BANK0 ] unsigned char 
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  4    0[BANK0 ] unsigned char 
 12056 ;; Registers used:
 12057 ;;		wreg, status,2, status,0, pclath, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12063 ;;      Params:         0       8       0       0       0       0       0       0
 12064 ;;      Locals:         0      13       0       0       0       0       0       0
 12065 ;;      Temps:          0       5       0       0       0       0       0       0
 12066 ;;      Totals:         0      26       0       0       0       0       0       0
 12067 ;;Total ram usage:       26 bytes
 12068 ;; Hardware stack levels used: 1
 12069 ;; Hardware stack levels required when called: 1
 12070 ;; This function calls:
 12071 ;;		__Umul8_16
 12072 ;; This function is called by:
 12073 ;;		_ADC_Convert
 12074 ;;		_main
 12075 ;;		_efgtoa
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079     09D2                     ___flmul:	
 12080                           ;psect for function ___flmul
 12081                           
 12082     09D2                     l3394:	
 12083                           ;incstack = 0
 12084                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 12085                           
 12086     09D2  0020               	movlb	0	; select bank0
 12087     09D3  0823               	movf	___flmul@b+3,w
 12088     09D4  3980               	andlw	128
 12089     09D5  00AD               	movwf	___flmul@sign
 12090     09D6                     l3396:
 12091     09D6  3523               	lslf	___flmul@b+3,w
 12092     09D7  00B3               	movwf	___flmul@bexp
 12093     09D8                     l3398:
 12094     09D8  1FA2               	btfss	___flmul@b+2,7
 12095     09D9  29DB               	goto	u4431
 12096     09DA  29DC               	goto	u4430
 12097     09DB                     u4431:
 12098     09DB  29DD               	goto	l3402
 12099     09DC                     u4430:
 12100     09DC                     l3400:
 12101     09DC  1433               	bsf	___flmul@bexp,0
 12102     09DD                     l3402:
 12103     09DD  0833               	movf	___flmul@bexp,w
 12104     09DE  1903               	btfsc	3,2
 12105     09DF  29E1               	goto	u4441
 12106     09E0  29E2               	goto	u4440
 12107     09E1                     u4441:
 12108     09E1  29F1               	goto	l3410
 12109     09E2                     u4440:
 12110     09E2                     l3404:
 12111     09E2  0A33               	incf	___flmul@bexp,w
 12112     09E3  1D03               	btfss	3,2
 12113     09E4  29E6               	goto	u4451
 12114     09E5  29E7               	goto	u4450
 12115     09E6                     u4451:
 12116     09E6  29EF               	goto	l3408
 12117     09E7                     u4450:
 12118     09E7                     l3406:
 12119     09E7  3000               	movlw	0
 12120     09E8  00A3               	movwf	___flmul@b+3
 12121     09E9  3000               	movlw	0
 12122     09EA  00A2               	movwf	___flmul@b+2
 12123     09EB  3000               	movlw	0
 12124     09EC  00A1               	movwf	___flmul@b+1
 12125     09ED  3000               	movlw	0
 12126     09EE  00A0               	movwf	___flmul@b
 12127     09EF                     l3408:
 12128     09EF  17A2               	bsf	___flmul@b+2,7
 12129     09F0  29F9               	goto	l3412
 12130     09F1                     l3410:
 12131     09F1  3000               	movlw	0
 12132     09F2  00A3               	movwf	___flmul@b+3
 12133     09F3  3000               	movlw	0
 12134     09F4  00A2               	movwf	___flmul@b+2
 12135     09F5  3000               	movlw	0
 12136     09F6  00A1               	movwf	___flmul@b+1
 12137     09F7  3000               	movlw	0
 12138     09F8  00A0               	movwf	___flmul@b
 12139     09F9                     l3412:
 12140     09F9  0827               	movf	___flmul@a+3,w
 12141     09FA  3980               	andlw	128
 12142     09FB  00A8               	movwf	??___flmul
 12143     09FC  0828               	movf	??___flmul,w
 12144     09FD  06AD               	xorwf	___flmul@sign,f
 12145     09FE                     l3414:
 12146     09FE  3527               	lslf	___flmul@a+3,w
 12147     09FF  00B2               	movwf	___flmul@aexp
 12148     0A00                     l3416:
 12149     0A00  1FA6               	btfss	___flmul@a+2,7
 12150     0A01  2A03               	goto	u4461
 12151     0A02  2A04               	goto	u4460
 12152     0A03                     u4461:
 12153     0A03  2A05               	goto	l3420
 12154     0A04                     u4460:
 12155     0A04                     l3418:
 12156     0A04  1432               	bsf	___flmul@aexp,0
 12157     0A05                     l3420:
 12158     0A05  0832               	movf	___flmul@aexp,w
 12159     0A06  1903               	btfsc	3,2
 12160     0A07  2A09               	goto	u4471
 12161     0A08  2A0A               	goto	u4470
 12162     0A09                     u4471:
 12163     0A09  2A19               	goto	l3428
 12164     0A0A                     u4470:
 12165     0A0A                     l3422:
 12166     0A0A  0A32               	incf	___flmul@aexp,w
 12167     0A0B  1D03               	btfss	3,2
 12168     0A0C  2A0E               	goto	u4481
 12169     0A0D  2A0F               	goto	u4480
 12170     0A0E                     u4481:
 12171     0A0E  2A17               	goto	l3426
 12172     0A0F                     u4480:
 12173     0A0F                     l3424:
 12174     0A0F  3000               	movlw	0
 12175     0A10  00A7               	movwf	___flmul@a+3
 12176     0A11  3000               	movlw	0
 12177     0A12  00A6               	movwf	___flmul@a+2
 12178     0A13  3000               	movlw	0
 12179     0A14  00A5               	movwf	___flmul@a+1
 12180     0A15  3000               	movlw	0
 12181     0A16  00A4               	movwf	___flmul@a
 12182     0A17                     l3426:
 12183     0A17  17A6               	bsf	___flmul@a+2,7
 12184     0A18  2A21               	goto	l3430
 12185     0A19                     l3428:
 12186     0A19  3000               	movlw	0
 12187     0A1A  00A7               	movwf	___flmul@a+3
 12188     0A1B  3000               	movlw	0
 12189     0A1C  00A6               	movwf	___flmul@a+2
 12190     0A1D  3000               	movlw	0
 12191     0A1E  00A5               	movwf	___flmul@a+1
 12192     0A1F  3000               	movlw	0
 12193     0A20  00A4               	movwf	___flmul@a
 12194     0A21                     l3430:
 12195     0A21  0832               	movf	___flmul@aexp,w
 12196     0A22  1903               	btfsc	3,2
 12197     0A23  2A25               	goto	u4491
 12198     0A24  2A26               	goto	u4490
 12199     0A25                     u4491:
 12200     0A25  2A2B               	goto	l3434
 12201     0A26                     u4490:
 12202     0A26                     l3432:
 12203     0A26  0833               	movf	___flmul@bexp,w
 12204     0A27  1D03               	btfss	3,2
 12205     0A28  2A2A               	goto	u4501
 12206     0A29  2A2B               	goto	u4500
 12207     0A2A                     u4501:
 12208     0A2A  2A34               	goto	l3438
 12209     0A2B                     u4500:
 12210     0A2B                     l3434:
 12211     0A2B  3000               	movlw	0
 12212     0A2C  00A3               	movwf	?___flmul+3
 12213     0A2D  3000               	movlw	0
 12214     0A2E  00A2               	movwf	?___flmul+2
 12215     0A2F  3000               	movlw	0
 12216     0A30  00A1               	movwf	?___flmul+1
 12217     0A31  3000               	movlw	0
 12218     0A32  00A0               	movwf	?___flmul
 12219     0A33  2C0C               	goto	l720
 12220     0A34                     l3438:
 12221     0A34  0820               	movf	___flmul@b,w
 12222     0A35  00F0               	movwf	__Umul8_16@multiplicand
 12223     0A36  0826               	movf	___flmul@a+2,w
 12224     0A37  319B  2351  3189   	fcall	__Umul8_16
 12225     0A3A  0871               	movf	?__Umul8_16+1,w
 12226     0A3B  0020               	movlb	0	; select bank0
 12227     0A3C  00B9               	movwf	___flmul@temp+1
 12228     0A3D  0870               	movf	?__Umul8_16,w
 12229     0A3E  00B8               	movwf	___flmul@temp
 12230     0A3F                     l3440:
 12231     0A3F  0838               	movf	___flmul@temp,w
 12232     0A40  00A8               	movwf	??___flmul
 12233     0A41  01A9               	clrf	??___flmul+1
 12234     0A42  01AA               	clrf	??___flmul+2
 12235     0A43  01AB               	clrf	??___flmul+3
 12236     0A44  082B               	movf	??___flmul+3,w
 12237     0A45  00B1               	movwf	___flmul@grs+3
 12238     0A46  082A               	movf	??___flmul+2,w
 12239     0A47  00B0               	movwf	___flmul@grs+2
 12240     0A48  0829               	movf	??___flmul+1,w
 12241     0A49  00AF               	movwf	___flmul@grs+1
 12242     0A4A  0828               	movf	??___flmul,w
 12243     0A4B  00AE               	movwf	___flmul@grs
 12244     0A4C                     l3442:
 12245     0A4C  0839               	movf	___flmul@temp+1,w
 12246     0A4D  00A8               	movwf	??___flmul
 12247     0A4E  01A9               	clrf	??___flmul+1
 12248     0A4F  01AA               	clrf	??___flmul+2
 12249     0A50  01AB               	clrf	??___flmul+3
 12250     0A51  082B               	movf	??___flmul+3,w
 12251     0A52  00B7               	movwf	___flmul@prod+3
 12252     0A53  082A               	movf	??___flmul+2,w
 12253     0A54  00B6               	movwf	___flmul@prod+2
 12254     0A55  0829               	movf	??___flmul+1,w
 12255     0A56  00B5               	movwf	___flmul@prod+1
 12256     0A57  0828               	movf	??___flmul,w
 12257     0A58  00B4               	movwf	___flmul@prod
 12258     0A59  0821               	movf	___flmul@b+1,w
 12259     0A5A  00F0               	movwf	__Umul8_16@multiplicand
 12260     0A5B  0825               	movf	___flmul@a+1,w
 12261     0A5C  319B  2351  3189   	fcall	__Umul8_16
 12262     0A5F  0871               	movf	?__Umul8_16+1,w
 12263     0A60  0020               	movlb	0	; select bank0
 12264     0A61  00B9               	movwf	___flmul@temp+1
 12265     0A62  0870               	movf	?__Umul8_16,w
 12266     0A63  00B8               	movwf	___flmul@temp
 12267     0A64                     l3444:
 12268     0A64  0838               	movf	___flmul@temp,w
 12269     0A65  00A8               	movwf	??___flmul
 12270     0A66  01A9               	clrf	??___flmul+1
 12271     0A67  01AA               	clrf	??___flmul+2
 12272     0A68  01AB               	clrf	??___flmul+3
 12273     0A69  0828               	movf	??___flmul,w
 12274     0A6A  07AE               	addwf	___flmul@grs,f
 12275     0A6B  0829               	movf	??___flmul+1,w
 12276     0A6C  3DAF               	addwfc	___flmul@grs+1,f
 12277     0A6D  082A               	movf	??___flmul+2,w
 12278     0A6E  3DB0               	addwfc	___flmul@grs+2,f
 12279     0A6F  082B               	movf	??___flmul+3,w
 12280     0A70  3DB1               	addwfc	___flmul@grs+3,f
 12281     0A71                     l3446:
 12282     0A71  0839               	movf	___flmul@temp+1,w
 12283     0A72  00A8               	movwf	??___flmul
 12284     0A73  01A9               	clrf	??___flmul+1
 12285     0A74  01AA               	clrf	??___flmul+2
 12286     0A75  01AB               	clrf	??___flmul+3
 12287     0A76  0828               	movf	??___flmul,w
 12288     0A77  07B4               	addwf	___flmul@prod,f
 12289     0A78  0829               	movf	??___flmul+1,w
 12290     0A79  3DB5               	addwfc	___flmul@prod+1,f
 12291     0A7A  082A               	movf	??___flmul+2,w
 12292     0A7B  3DB6               	addwfc	___flmul@prod+2,f
 12293     0A7C  082B               	movf	??___flmul+3,w
 12294     0A7D  3DB7               	addwfc	___flmul@prod+3,f
 12295     0A7E  0822               	movf	___flmul@b+2,w
 12296     0A7F  00F0               	movwf	__Umul8_16@multiplicand
 12297     0A80  0824               	movf	___flmul@a,w
 12298     0A81  319B  2351  3189   	fcall	__Umul8_16
 12299     0A84  0871               	movf	?__Umul8_16+1,w
 12300     0A85  0020               	movlb	0	; select bank0
 12301     0A86  00B9               	movwf	___flmul@temp+1
 12302     0A87  0870               	movf	?__Umul8_16,w
 12303     0A88  00B8               	movwf	___flmul@temp
 12304     0A89                     l3448:
 12305     0A89  0838               	movf	___flmul@temp,w
 12306     0A8A  00A8               	movwf	??___flmul
 12307     0A8B  01A9               	clrf	??___flmul+1
 12308     0A8C  01AA               	clrf	??___flmul+2
 12309     0A8D  01AB               	clrf	??___flmul+3
 12310     0A8E  0828               	movf	??___flmul,w
 12311     0A8F  07AE               	addwf	___flmul@grs,f
 12312     0A90  0829               	movf	??___flmul+1,w
 12313     0A91  3DAF               	addwfc	___flmul@grs+1,f
 12314     0A92  082A               	movf	??___flmul+2,w
 12315     0A93  3DB0               	addwfc	___flmul@grs+2,f
 12316     0A94  082B               	movf	??___flmul+3,w
 12317     0A95  3DB1               	addwfc	___flmul@grs+3,f
 12318     0A96                     l3450:
 12319     0A96  0839               	movf	___flmul@temp+1,w
 12320     0A97  00A8               	movwf	??___flmul
 12321     0A98  01A9               	clrf	??___flmul+1
 12322     0A99  01AA               	clrf	??___flmul+2
 12323     0A9A  01AB               	clrf	??___flmul+3
 12324     0A9B  0828               	movf	??___flmul,w
 12325     0A9C  07B4               	addwf	___flmul@prod,f
 12326     0A9D  0829               	movf	??___flmul+1,w
 12327     0A9E  3DB5               	addwfc	___flmul@prod+1,f
 12328     0A9F  082A               	movf	??___flmul+2,w
 12329     0AA0  3DB6               	addwfc	___flmul@prod+2,f
 12330     0AA1  082B               	movf	??___flmul+3,w
 12331     0AA2  3DB7               	addwfc	___flmul@prod+3,f
 12332     0AA3                     l3452:
 12333     0AA3  3008               	movlw	8
 12334     0AA4                     u4515:
 12335     0AA4  35AE               	lslf	___flmul@grs,f
 12336     0AA5  0DAF               	rlf	___flmul@grs+1,f
 12337     0AA6  0DB0               	rlf	___flmul@grs+2,f
 12338     0AA7  0DB1               	rlf	___flmul@grs+3,f
 12339     0AA8  0B89               	decfsz	9,f
 12340     0AA9  2AA4               	goto	u4515
 12341     0AAA                     l3454:
 12342     0AAA  0821               	movf	___flmul@b+1,w
 12343     0AAB  00F0               	movwf	__Umul8_16@multiplicand
 12344     0AAC  0824               	movf	___flmul@a,w
 12345     0AAD  319B  2351  3189   	fcall	__Umul8_16
 12346     0AB0  0871               	movf	?__Umul8_16+1,w
 12347     0AB1  0020               	movlb	0	; select bank0
 12348     0AB2  00B9               	movwf	___flmul@temp+1
 12349     0AB3  0870               	movf	?__Umul8_16,w
 12350     0AB4  00B8               	movwf	___flmul@temp
 12351     0AB5                     l3456:
 12352     0AB5  0838               	movf	___flmul@temp,w
 12353     0AB6  07AE               	addwf	___flmul@grs,f
 12354     0AB7  0839               	movf	___flmul@temp+1,w
 12355     0AB8  3DAF               	addwfc	___flmul@grs+1,f
 12356     0AB9  3000               	movlw	0
 12357     0ABA  3DB0               	addwfc	___flmul@grs+2,f
 12358     0ABB  3DB1               	addwfc	___flmul@grs+3,f
 12359     0ABC                     l3458:
 12360     0ABC  0820               	movf	___flmul@b,w
 12361     0ABD  00F0               	movwf	__Umul8_16@multiplicand
 12362     0ABE  0825               	movf	___flmul@a+1,w
 12363     0ABF  319B  2351  3189   	fcall	__Umul8_16
 12364     0AC2  0871               	movf	?__Umul8_16+1,w
 12365     0AC3  0020               	movlb	0	; select bank0
 12366     0AC4  00B9               	movwf	___flmul@temp+1
 12367     0AC5  0870               	movf	?__Umul8_16,w
 12368     0AC6  00B8               	movwf	___flmul@temp
 12369     0AC7                     l3460:
 12370     0AC7  0838               	movf	___flmul@temp,w
 12371     0AC8  07AE               	addwf	___flmul@grs,f
 12372     0AC9  0839               	movf	___flmul@temp+1,w
 12373     0ACA  3DAF               	addwfc	___flmul@grs+1,f
 12374     0ACB  3000               	movlw	0
 12375     0ACC  3DB0               	addwfc	___flmul@grs+2,f
 12376     0ACD  3DB1               	addwfc	___flmul@grs+3,f
 12377     0ACE                     l3462:
 12378     0ACE  3008               	movlw	8
 12379     0ACF                     u4525:
 12380     0ACF  35AE               	lslf	___flmul@grs,f
 12381     0AD0  0DAF               	rlf	___flmul@grs+1,f
 12382     0AD1  0DB0               	rlf	___flmul@grs+2,f
 12383     0AD2  0DB1               	rlf	___flmul@grs+3,f
 12384     0AD3  0B89               	decfsz	9,f
 12385     0AD4  2ACF               	goto	u4525
 12386     0AD5  0820               	movf	___flmul@b,w
 12387     0AD6  00F0               	movwf	__Umul8_16@multiplicand
 12388     0AD7  0824               	movf	___flmul@a,w
 12389     0AD8  319B  2351  3189   	fcall	__Umul8_16
 12390     0ADB  0871               	movf	?__Umul8_16+1,w
 12391     0ADC  0020               	movlb	0	; select bank0
 12392     0ADD  00B9               	movwf	___flmul@temp+1
 12393     0ADE  0870               	movf	?__Umul8_16,w
 12394     0ADF  00B8               	movwf	___flmul@temp
 12395     0AE0                     l3464:
 12396     0AE0  0838               	movf	___flmul@temp,w
 12397     0AE1  07AE               	addwf	___flmul@grs,f
 12398     0AE2  0839               	movf	___flmul@temp+1,w
 12399     0AE3  3DAF               	addwfc	___flmul@grs+1,f
 12400     0AE4  3000               	movlw	0
 12401     0AE5  3DB0               	addwfc	___flmul@grs+2,f
 12402     0AE6  3DB1               	addwfc	___flmul@grs+3,f
 12403     0AE7                     l3466:
 12404     0AE7  0821               	movf	___flmul@b+1,w
 12405     0AE8  00F0               	movwf	__Umul8_16@multiplicand
 12406     0AE9  0826               	movf	___flmul@a+2,w
 12407     0AEA  319B  2351  3189   	fcall	__Umul8_16
 12408     0AED  0871               	movf	?__Umul8_16+1,w
 12409     0AEE  0020               	movlb	0	; select bank0
 12410     0AEF  00B9               	movwf	___flmul@temp+1
 12411     0AF0  0870               	movf	?__Umul8_16,w
 12412     0AF1  00B8               	movwf	___flmul@temp
 12413     0AF2  0838               	movf	___flmul@temp,w
 12414     0AF3  07B4               	addwf	___flmul@prod,f
 12415     0AF4  0839               	movf	___flmul@temp+1,w
 12416     0AF5  3DB5               	addwfc	___flmul@prod+1,f
 12417     0AF6  3000               	movlw	0
 12418     0AF7  3DB6               	addwfc	___flmul@prod+2,f
 12419     0AF8  3DB7               	addwfc	___flmul@prod+3,f
 12420     0AF9                     l3468:
 12421     0AF9  0822               	movf	___flmul@b+2,w
 12422     0AFA  00F0               	movwf	__Umul8_16@multiplicand
 12423     0AFB  0825               	movf	___flmul@a+1,w
 12424     0AFC  319B  2351  3189   	fcall	__Umul8_16
 12425     0AFF  0871               	movf	?__Umul8_16+1,w
 12426     0B00  0020               	movlb	0	; select bank0
 12427     0B01  00B9               	movwf	___flmul@temp+1
 12428     0B02  0870               	movf	?__Umul8_16,w
 12429     0B03  00B8               	movwf	___flmul@temp
 12430     0B04                     l3470:
 12431     0B04  0838               	movf	___flmul@temp,w
 12432     0B05  07B4               	addwf	___flmul@prod,f
 12433     0B06  0839               	movf	___flmul@temp+1,w
 12434     0B07  3DB5               	addwfc	___flmul@prod+1,f
 12435     0B08  3000               	movlw	0
 12436     0B09  3DB6               	addwfc	___flmul@prod+2,f
 12437     0B0A  3DB7               	addwfc	___flmul@prod+3,f
 12438     0B0B  0822               	movf	___flmul@b+2,w
 12439     0B0C  00F0               	movwf	__Umul8_16@multiplicand
 12440     0B0D  0826               	movf	___flmul@a+2,w
 12441     0B0E  319B  2351  3189   	fcall	__Umul8_16
 12442     0B11  0871               	movf	?__Umul8_16+1,w
 12443     0B12  0020               	movlb	0	; select bank0
 12444     0B13  00B9               	movwf	___flmul@temp+1
 12445     0B14  0870               	movf	?__Umul8_16,w
 12446     0B15  00B8               	movwf	___flmul@temp
 12447     0B16                     l3472:
 12448     0B16  0838               	movf	___flmul@temp,w
 12449     0B17  00A8               	movwf	??___flmul
 12450     0B18  0839               	movf	___flmul@temp+1,w
 12451     0B19  00A9               	movwf	??___flmul+1
 12452     0B1A  01AA               	clrf	??___flmul+2
 12453     0B1B  01AB               	clrf	??___flmul+3
 12454     0B1C  3008               	movlw	8
 12455     0B1D                     u4535:
 12456     0B1D  35A8               	lslf	??___flmul,f
 12457     0B1E  0DA9               	rlf	??___flmul+1,f
 12458     0B1F  0DAA               	rlf	??___flmul+2,f
 12459     0B20  0DAB               	rlf	??___flmul+3,f
 12460     0B21                     u4530:
 12461     0B21  0B89               	decfsz	9,f
 12462     0B22  2B1D               	goto	u4535
 12463     0B23  0828               	movf	??___flmul,w
 12464     0B24  07B4               	addwf	___flmul@prod,f
 12465     0B25  0829               	movf	??___flmul+1,w
 12466     0B26  3DB5               	addwfc	___flmul@prod+1,f
 12467     0B27  082A               	movf	??___flmul+2,w
 12468     0B28  3DB6               	addwfc	___flmul@prod+2,f
 12469     0B29  082B               	movf	??___flmul+3,w
 12470     0B2A  3DB7               	addwfc	___flmul@prod+3,f
 12471     0B2B                     l3474:
 12472     0B2B  082E               	movf	___flmul@grs,w
 12473     0B2C  00A8               	movwf	??___flmul
 12474     0B2D  082F               	movf	___flmul@grs+1,w
 12475     0B2E  00A9               	movwf	??___flmul+1
 12476     0B2F  0830               	movf	___flmul@grs+2,w
 12477     0B30  00AA               	movwf	??___flmul+2
 12478     0B31  0831               	movf	___flmul@grs+3,w
 12479     0B32  00AB               	movwf	??___flmul+3
 12480     0B33  3018               	movlw	24
 12481     0B34                     u4545:
 12482     0B34  36AB               	lsrf	??___flmul+3,f
 12483     0B35  0CAA               	rrf	??___flmul+2,f
 12484     0B36  0CA9               	rrf	??___flmul+1,f
 12485     0B37  0CA8               	rrf	??___flmul,f
 12486     0B38                     u4540:
 12487     0B38  0B89               	decfsz	9,f
 12488     0B39  2B34               	goto	u4545
 12489     0B3A  0828               	movf	??___flmul,w
 12490     0B3B  07B4               	addwf	___flmul@prod,f
 12491     0B3C  0829               	movf	??___flmul+1,w
 12492     0B3D  3DB5               	addwfc	___flmul@prod+1,f
 12493     0B3E  082A               	movf	??___flmul+2,w
 12494     0B3F  3DB6               	addwfc	___flmul@prod+2,f
 12495     0B40  082B               	movf	??___flmul+3,w
 12496     0B41  3DB7               	addwfc	___flmul@prod+3,f
 12497     0B42                     l3476:
 12498     0B42  3008               	movlw	8
 12499     0B43                     u4555:
 12500     0B43  35AE               	lslf	___flmul@grs,f
 12501     0B44  0DAF               	rlf	___flmul@grs+1,f
 12502     0B45  0DB0               	rlf	___flmul@grs+2,f
 12503     0B46  0DB1               	rlf	___flmul@grs+3,f
 12504     0B47  0B89               	decfsz	9,f
 12505     0B48  2B43               	goto	u4555
 12506     0B49                     l3478:
 12507     0B49  0833               	movf	___flmul@bexp,w
 12508     0B4A  0732               	addwf	___flmul@aexp,w
 12509     0B4B  00A8               	movwf	??___flmul
 12510     0B4C  01A9               	clrf	??___flmul+1
 12511     0B4D  0DA9               	rlf	??___flmul+1,f
 12512     0B4E  0828               	movf	??___flmul,w
 12513     0B4F  3E82               	addlw	130
 12514     0B50  00B8               	movwf	___flmul@temp
 12515     0B51  30FF               	movlw	255
 12516     0B52  3D29               	addwfc	??___flmul+1,w
 12517     0B53  00B9               	movwf	___flmul@temp+1
 12518     0B54  2B6C               	goto	l3490
 12519     0B55                     l3480:
 12520     0B55  3001               	movlw	1
 12521     0B56                     u4565:
 12522     0B56  35B4               	lslf	___flmul@prod,f
 12523     0B57  0DB5               	rlf	___flmul@prod+1,f
 12524     0B58  0DB6               	rlf	___flmul@prod+2,f
 12525     0B59  0DB7               	rlf	___flmul@prod+3,f
 12526     0B5A  0B89               	decfsz	9,f
 12527     0B5B  2B56               	goto	u4565
 12528     0B5C                     l3482:
 12529     0B5C  1FB1               	btfss	___flmul@grs+3,7
 12530     0B5D  2B5F               	goto	u4571
 12531     0B5E  2B60               	goto	u4570
 12532     0B5F                     u4571:
 12533     0B5F  2B61               	goto	l3486
 12534     0B60                     u4570:
 12535     0B60                     l3484:
 12536     0B60  1434               	bsf	___flmul@prod,0
 12537     0B61                     l3486:
 12538     0B61  3001               	movlw	1
 12539     0B62                     u4585:
 12540     0B62  35AE               	lslf	___flmul@grs,f
 12541     0B63  0DAF               	rlf	___flmul@grs+1,f
 12542     0B64  0DB0               	rlf	___flmul@grs+2,f
 12543     0B65  0DB1               	rlf	___flmul@grs+3,f
 12544     0B66  0B89               	decfsz	9,f
 12545     0B67  2B62               	goto	u4585
 12546     0B68                     l3488:
 12547     0B68  30FF               	movlw	255
 12548     0B69  07B8               	addwf	___flmul@temp,f
 12549     0B6A  30FF               	movlw	255
 12550     0B6B  3DB9               	addwfc	___flmul@temp+1,f
 12551     0B6C                     l3490:
 12552     0B6C  1FB6               	btfss	___flmul@prod+2,7
 12553     0B6D  2B6F               	goto	u4591
 12554     0B6E  2B70               	goto	u4590
 12555     0B6F                     u4591:
 12556     0B6F  2B55               	goto	l3480
 12557     0B70                     u4590:
 12558     0B70                     l3492:
 12559     0B70  01B2               	clrf	___flmul@aexp
 12560     0B71                     l3494:
 12561     0B71  1FB1               	btfss	___flmul@grs+3,7
 12562     0B72  2B74               	goto	u4601
 12563     0B73  2B75               	goto	u4600
 12564     0B74                     u4601:
 12565     0B74  2B91               	goto	l3502
 12566     0B75                     u4600:
 12567     0B75                     l3496:
 12568     0B75  30FF               	movlw	255
 12569     0B76  052E               	andwf	___flmul@grs,w
 12570     0B77  00A8               	movwf	??___flmul
 12571     0B78  30FF               	movlw	255
 12572     0B79  052F               	andwf	___flmul@grs+1,w
 12573     0B7A  00A9               	movwf	??___flmul+1
 12574     0B7B  30FF               	movlw	255
 12575     0B7C  0530               	andwf	___flmul@grs+2,w
 12576     0B7D  00AA               	movwf	??___flmul+2
 12577     0B7E  307F               	movlw	127
 12578     0B7F  0531               	andwf	___flmul@grs+3,w
 12579     0B80  00AB               	movwf	??___flmul+3
 12580     0B81  082B               	movf	??___flmul+3,w
 12581     0B82  042A               	iorwf	??___flmul+2,w
 12582     0B83  0429               	iorwf	??___flmul+1,w
 12583     0B84  0428               	iorwf	??___flmul,w
 12584     0B85  1903               	skipnz
 12585     0B86  2B88               	goto	u4611
 12586     0B87  2B89               	goto	u4610
 12587     0B88                     u4611:
 12588     0B88  2B8C               	goto	l726
 12589     0B89                     u4610:
 12590     0B89                     l3498:
 12591     0B89  01B2               	clrf	___flmul@aexp
 12592     0B8A  0AB2               	incf	___flmul@aexp,f
 12593     0B8B  2B91               	goto	l3502
 12594     0B8C                     l726:
 12595     0B8C  1C34               	btfss	___flmul@prod,0
 12596     0B8D  2B8F               	goto	u4621
 12597     0B8E  2B90               	goto	u4620
 12598     0B8F                     u4621:
 12599     0B8F  2B91               	goto	l3502
 12600     0B90                     u4620:
 12601     0B90  2B89               	goto	l3498
 12602     0B91                     l3502:
 12603     0B91  0832               	movf	___flmul@aexp,w
 12604     0B92  1903               	btfsc	3,2
 12605     0B93  2B95               	goto	u4631
 12606     0B94  2B96               	goto	u4630
 12607     0B95                     u4631:
 12608     0B95  2BBE               	goto	l3512
 12609     0B96                     u4630:
 12610     0B96                     l3504:
 12611     0B96  3001               	movlw	1
 12612     0B97  07B4               	addwf	___flmul@prod,f
 12613     0B98  3000               	movlw	0
 12614     0B99  3DB5               	addwfc	___flmul@prod+1,f
 12615     0B9A  3000               	movlw	0
 12616     0B9B  3DB6               	addwfc	___flmul@prod+2,f
 12617     0B9C  3000               	movlw	0
 12618     0B9D  3DB7               	addwfc	___flmul@prod+3,f
 12619     0B9E                     l3506:
 12620     0B9E  1C37               	btfss	___flmul@prod+3,0
 12621     0B9F  2BA1               	goto	u4641
 12622     0BA0  2BA2               	goto	u4640
 12623     0BA1                     u4641:
 12624     0BA1  2BBE               	goto	l3512
 12625     0BA2                     u4640:
 12626     0BA2                     l3508:
 12627     0BA2  0834               	movf	___flmul@prod,w
 12628     0BA3  00A8               	movwf	??___flmul
 12629     0BA4  0835               	movf	___flmul@prod+1,w
 12630     0BA5  00A9               	movwf	??___flmul+1
 12631     0BA6  0836               	movf	___flmul@prod+2,w
 12632     0BA7  00AA               	movwf	??___flmul+2
 12633     0BA8  0837               	movf	___flmul@prod+3,w
 12634     0BA9  00AB               	movwf	??___flmul+3
 12635     0BAA  3001               	movlw	1
 12636     0BAB  00AC               	movwf	??___flmul+4
 12637     0BAC                     u4655:
 12638     0BAC  37AB               	asrf	??___flmul+3,f
 12639     0BAD  0CAA               	rrf	??___flmul+2,f
 12640     0BAE  0CA9               	rrf	??___flmul+1,f
 12641     0BAF  0CA8               	rrf	??___flmul,f
 12642     0BB0                     u4650:
 12643     0BB0  0BAC               	decfsz	??___flmul+4,f
 12644     0BB1  2BAC               	goto	u4655
 12645     0BB2  082B               	movf	??___flmul+3,w
 12646     0BB3  00B7               	movwf	___flmul@prod+3
 12647     0BB4  082A               	movf	??___flmul+2,w
 12648     0BB5  00B6               	movwf	___flmul@prod+2
 12649     0BB6  0829               	movf	??___flmul+1,w
 12650     0BB7  00B5               	movwf	___flmul@prod+1
 12651     0BB8  0828               	movf	??___flmul,w
 12652     0BB9  00B4               	movwf	___flmul@prod
 12653     0BBA                     l3510:
 12654     0BBA  3001               	movlw	1
 12655     0BBB  07B8               	addwf	___flmul@temp,f
 12656     0BBC  3000               	movlw	0
 12657     0BBD  3DB9               	addwfc	___flmul@temp+1,f
 12658     0BBE                     l3512:
 12659     0BBE  0839               	movf	___flmul@temp+1,w
 12660     0BBF  3A80               	xorlw	128
 12661     0BC0  00A8               	movwf	??___flmul
 12662     0BC1  3080               	movlw	128
 12663     0BC2  0228               	subwf	??___flmul,w
 12664     0BC3  1D03               	skipz
 12665     0BC4  2BC7               	goto	u4665
 12666     0BC5  30FF               	movlw	255
 12667     0BC6  0238               	subwf	___flmul@temp,w
 12668     0BC7                     u4665:
 12669     0BC7  1C03               	skipc
 12670     0BC8  2BCA               	goto	u4661
 12671     0BC9  2BCB               	goto	u4660
 12672     0BCA                     u4661:
 12673     0BCA  2BD5               	goto	l3516
 12674     0BCB                     u4660:
 12675     0BCB                     l3514:
 12676     0BCB  307F               	movlw	127
 12677     0BCC  0020               	movlb	0	; select bank0
 12678     0BCD  00B7               	movwf	___flmul@prod+3
 12679     0BCE  3080               	movlw	128
 12680     0BCF  00B6               	movwf	___flmul@prod+2
 12681     0BD0  3000               	movlw	0
 12682     0BD1  00B5               	movwf	___flmul@prod+1
 12683     0BD2  3000               	movlw	0
 12684     0BD3  00B4               	movwf	___flmul@prod
 12685     0BD4  2C00               	goto	l732
 12686     0BD5                     l3516:
 12687     0BD5  0020               	movlb	0	; select bank0
 12688     0BD6  0839               	movf	___flmul@temp+1,w
 12689     0BD7  3A80               	xorlw	128
 12690     0BD8  00A8               	movwf	??___flmul
 12691     0BD9  3080               	movlw	128
 12692     0BDA  0228               	subwf	??___flmul,w
 12693     0BDB  1D03               	skipz
 12694     0BDC  2BDF               	goto	u4675
 12695     0BDD  3001               	movlw	1
 12696     0BDE  0238               	subwf	___flmul@temp,w
 12697     0BDF                     u4675:
 12698     0BDF  1803               	skipnc
 12699     0BE0  2BE2               	goto	u4671
 12700     0BE1  2BE3               	goto	u4670
 12701     0BE2                     u4671:
 12702     0BE2  2BEE               	goto	l3522
 12703     0BE3                     u4670:
 12704     0BE3                     l3518:
 12705     0BE3  3000               	movlw	0
 12706     0BE4  0020               	movlb	0	; select bank0
 12707     0BE5  00B7               	movwf	___flmul@prod+3
 12708     0BE6  3000               	movlw	0
 12709     0BE7  00B6               	movwf	___flmul@prod+2
 12710     0BE8  3000               	movlw	0
 12711     0BE9  00B5               	movwf	___flmul@prod+1
 12712     0BEA  3000               	movlw	0
 12713     0BEB  00B4               	movwf	___flmul@prod
 12714     0BEC                     l3520:
 12715     0BEC  01AD               	clrf	___flmul@sign
 12716     0BED  2C00               	goto	l732
 12717     0BEE                     l3522:
 12718     0BEE  0020               	movlb	0	; select bank0
 12719     0BEF  0838               	movf	___flmul@temp,w
 12720     0BF0  00B3               	movwf	___flmul@bexp
 12721     0BF1  30FF               	movlw	255
 12722     0BF2  05B4               	andwf	___flmul@prod,f
 12723     0BF3  30FF               	movlw	255
 12724     0BF4  05B5               	andwf	___flmul@prod+1,f
 12725     0BF5  307F               	movlw	127
 12726     0BF6  05B6               	andwf	___flmul@prod+2,f
 12727     0BF7  3000               	movlw	0
 12728     0BF8  05B7               	andwf	___flmul@prod+3,f
 12729     0BF9                     l3524:
 12730     0BF9  1C33               	btfss	___flmul@bexp,0
 12731     0BFA  2BFC               	goto	u4681
 12732     0BFB  2BFD               	goto	u4680
 12733     0BFC                     u4681:
 12734     0BFC  2BFE               	goto	l3528
 12735     0BFD                     u4680:
 12736     0BFD                     l3526:
 12737     0BFD  17B6               	bsf	___flmul@prod+2,7
 12738     0BFE                     l3528:
 12739     0BFE  3633               	lsrf	___flmul@bexp,w
 12740     0BFF  00B7               	movwf	___flmul@prod+3
 12741     0C00                     l732:
 12742     0C00  082D               	movf	___flmul@sign,w
 12743     0C01  00A8               	movwf	??___flmul
 12744     0C02  0828               	movf	??___flmul,w
 12745     0C03  04B7               	iorwf	___flmul@prod+3,f
 12746     0C04                     l3530:
 12747     0C04  0837               	movf	___flmul@prod+3,w
 12748     0C05  00A3               	movwf	?___flmul+3
 12749     0C06  0836               	movf	___flmul@prod+2,w
 12750     0C07  00A2               	movwf	?___flmul+2
 12751     0C08  0835               	movf	___flmul@prod+1,w
 12752     0C09  00A1               	movwf	?___flmul+1
 12753     0C0A  0834               	movf	___flmul@prod,w
 12754     0C0B  00A0               	movwf	?___flmul
 12755     0C0C                     l720:
 12756     0C0C  0008               	return
 12757     0C0D                     __end_of___flmul:
 12758                           
 12759                           	psect	text42
 12760     1B51                     __ptext42:	
 12761 ;; *************** function __Umul8_16 *****************
 12762 ;; Defined at:
 12763 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  multiplier      1    wreg     unsigned char 
 12766 ;;  multiplicand    1    0[COMMON] unsigned char 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;  multiplier      1    8[COMMON] unsigned char 
 12769 ;;  word_mpld       2    6[COMMON] unsigned int 
 12770 ;;  product         2    4[COMMON] unsigned int 
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  2    0[COMMON] unsigned int 
 12773 ;; Registers used:
 12774 ;;		wreg, status,2, status,0
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12780 ;;      Params:         2       0       0       0       0       0       0       0
 12781 ;;      Locals:         5       0       0       0       0       0       0       0
 12782 ;;      Temps:          2       0       0       0       0       0       0       0
 12783 ;;      Totals:         9       0       0       0       0       0       0       0
 12784 ;;Total ram usage:        9 bytes
 12785 ;; Hardware stack levels used: 1
 12786 ;; This function calls:
 12787 ;;		Nothing
 12788 ;; This function is called by:
 12789 ;;		___flmul
 12790 ;; This function uses a non-reentrant model
 12791 ;;
 12792                           
 12793     1B51                     __Umul8_16:	
 12794                           ;psect for function __Umul8_16
 12795                           
 12796                           
 12797                           ;incstack = 0
 12798                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12799                           ;__Umul8_16@multiplier stored from wreg
 12800     1B51  00F8               	movwf	__Umul8_16@multiplier
 12801     1B52                     l3068:
 12802     1B52  01F4               	clrf	__Umul8_16@product
 12803     1B53  01F5               	clrf	__Umul8_16@product+1
 12804     1B54                     l3070:
 12805     1B54  0870               	movf	__Umul8_16@multiplicand,w
 12806     1B55  00F2               	movwf	??__Umul8_16
 12807     1B56  01F3               	clrf	??__Umul8_16+1
 12808     1B57  0872               	movf	??__Umul8_16,w
 12809     1B58  00F6               	movwf	__Umul8_16@word_mpld
 12810     1B59  0873               	movf	??__Umul8_16+1,w
 12811     1B5A  00F7               	movwf	__Umul8_16@word_mpld+1
 12812     1B5B                     l3072:
 12813     1B5B  1C78               	btfss	__Umul8_16@multiplier,0
 12814     1B5C  2B5E               	goto	u3661
 12815     1B5D  2B5F               	goto	u3660
 12816     1B5E                     u3661:
 12817     1B5E  2B63               	goto	l739
 12818     1B5F                     u3660:
 12819     1B5F                     l3074:
 12820     1B5F  0876               	movf	__Umul8_16@word_mpld,w
 12821     1B60  07F4               	addwf	__Umul8_16@product,f
 12822     1B61  0877               	movf	__Umul8_16@word_mpld+1,w
 12823     1B62  3DF5               	addwfc	__Umul8_16@product+1,f
 12824     1B63                     l739:
 12825     1B63  3001               	movlw	1
 12826     1B64                     u3675:
 12827     1B64  35F6               	lslf	__Umul8_16@word_mpld,f
 12828     1B65  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 12829     1B66  0B89               	decfsz	9,f
 12830     1B67  2B64               	goto	u3675
 12831     1B68  1003               	clrc
 12832     1B69  0CF8               	rrf	__Umul8_16@multiplier,f
 12833     1B6A                     l3076:
 12834     1B6A  0878               	movf	__Umul8_16@multiplier,w
 12835     1B6B  1D03               	btfss	3,2
 12836     1B6C  2B6E               	goto	u3681
 12837     1B6D  2B6F               	goto	u3680
 12838     1B6E                     u3681:
 12839     1B6E  2B5B               	goto	l3072
 12840     1B6F                     u3680:
 12841     1B6F                     l3078:
 12842     1B6F  0875               	movf	__Umul8_16@product+1,w
 12843     1B70  00F1               	movwf	?__Umul8_16+1
 12844     1B71  0874               	movf	__Umul8_16@product,w
 12845     1B72  00F0               	movwf	?__Umul8_16
 12846     1B73                     l741:
 12847     1B73  0008               	return
 12848     1B74                     __end_of__Umul8_16:
 12849                           
 12850                           	psect	text43
 12851     0828                     __ptext43:	
 12852 ;; *************** function ___fldiv *****************
 12853 ;; Defined at:
 12854 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;  a               4   26[BANK0 ] unsigned int 
 12857 ;;  b               4   30[BANK0 ] unsigned int 
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;  grs             4   46[BANK0 ] unsigned long 
 12860 ;;  rem             4   39[BANK0 ] unsigned long 
 12861 ;;  new_exp         2   44[BANK0 ] int 
 12862 ;;  aexp            1   51[BANK0 ] unsigned char 
 12863 ;;  bexp            1   50[BANK0 ] unsigned char 
 12864 ;;  sign            1   43[BANK0 ] unsigned char 
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  4   26[BANK0 ] unsigned char 
 12867 ;; Registers used:
 12868 ;;		wreg, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12874 ;;      Params:         0       8       0       0       0       0       0       0
 12875 ;;      Locals:         0      13       0       0       0       0       0       0
 12876 ;;      Temps:          0       5       0       0       0       0       0       0
 12877 ;;      Totals:         0      26       0       0       0       0       0       0
 12878 ;;Total ram usage:       26 bytes
 12879 ;; Hardware stack levels used: 1
 12880 ;; This function calls:
 12881 ;;		Nothing
 12882 ;; This function is called by:
 12883 ;;		_ADC_Convert
 12884 ;;		_efgtoa
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888     0828                     ___fldiv:	
 12889                           ;psect for function ___fldiv
 12890                           
 12891     0828                     l3254:	
 12892                           ;incstack = 0
 12893                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12894                           
 12895     0828  0020               	movlb	0	; select bank0
 12896     0829  0841               	movf	___fldiv@b+3,w
 12897     082A  3980               	andlw	128
 12898     082B  00CB               	movwf	___fldiv@sign
 12899     082C                     l3256:
 12900     082C  3541               	lslf	___fldiv@b+3,w
 12901     082D  00D2               	movwf	___fldiv@bexp
 12902     082E                     l3258:
 12903     082E  1FC0               	btfss	___fldiv@b+2,7
 12904     082F  2831               	goto	u4141
 12905     0830  2832               	goto	u4140
 12906     0831                     u4141:
 12907     0831  2833               	goto	l3262
 12908     0832                     u4140:
 12909     0832                     l3260:
 12910     0832  1452               	bsf	___fldiv@bexp,0
 12911     0833                     l3262:
 12912     0833  0852               	movf	___fldiv@bexp,w
 12913     0834  1903               	btfsc	3,2
 12914     0835  2837               	goto	u4151
 12915     0836  2838               	goto	u4150
 12916     0837                     u4151:
 12917     0837  2848               	goto	l3272
 12918     0838                     u4150:
 12919     0838                     l3264:
 12920     0838  0A52               	incf	___fldiv@bexp,w
 12921     0839  1D03               	btfss	3,2
 12922     083A  283C               	goto	u4161
 12923     083B  283D               	goto	u4160
 12924     083C                     u4161:
 12925     083C  2845               	goto	l3268
 12926     083D                     u4160:
 12927     083D                     l3266:
 12928     083D  3000               	movlw	0
 12929     083E  00C1               	movwf	___fldiv@b+3
 12930     083F  3000               	movlw	0
 12931     0840  00C0               	movwf	___fldiv@b+2
 12932     0841  3000               	movlw	0
 12933     0842  00BF               	movwf	___fldiv@b+1
 12934     0843  3000               	movlw	0
 12935     0844  00BE               	movwf	___fldiv@b
 12936     0845                     l3268:
 12937     0845  17C0               	bsf	___fldiv@b+2,7
 12938     0846                     l3270:
 12939     0846  01C1               	clrf	___fldiv@b+3
 12940     0847  2850               	goto	l3274
 12941     0848                     l3272:
 12942     0848  3000               	movlw	0
 12943     0849  00C1               	movwf	___fldiv@b+3
 12944     084A  3000               	movlw	0
 12945     084B  00C0               	movwf	___fldiv@b+2
 12946     084C  3000               	movlw	0
 12947     084D  00BF               	movwf	___fldiv@b+1
 12948     084E  3000               	movlw	0
 12949     084F  00BE               	movwf	___fldiv@b
 12950     0850                     l3274:
 12951     0850  083D               	movf	___fldiv@a+3,w
 12952     0851  3980               	andlw	128
 12953     0852  00C2               	movwf	??___fldiv
 12954     0853  0842               	movf	??___fldiv,w
 12955     0854  06CB               	xorwf	___fldiv@sign,f
 12956     0855                     l3276:
 12957     0855  353D               	lslf	___fldiv@a+3,w
 12958     0856  00D3               	movwf	___fldiv@aexp
 12959     0857                     l3278:
 12960     0857  1FBC               	btfss	___fldiv@a+2,7
 12961     0858  285A               	goto	u4171
 12962     0859  285B               	goto	u4170
 12963     085A                     u4171:
 12964     085A  285C               	goto	l3282
 12965     085B                     u4170:
 12966     085B                     l3280:
 12967     085B  1453               	bsf	___fldiv@aexp,0
 12968     085C                     l3282:
 12969     085C  0853               	movf	___fldiv@aexp,w
 12970     085D  1903               	btfsc	3,2
 12971     085E  2860               	goto	u4181
 12972     085F  2861               	goto	u4180
 12973     0860                     u4181:
 12974     0860  2871               	goto	l3292
 12975     0861                     u4180:
 12976     0861                     l3284:
 12977     0861  0A53               	incf	___fldiv@aexp,w
 12978     0862  1D03               	btfss	3,2
 12979     0863  2865               	goto	u4191
 12980     0864  2866               	goto	u4190
 12981     0865                     u4191:
 12982     0865  286E               	goto	l3288
 12983     0866                     u4190:
 12984     0866                     l3286:
 12985     0866  3000               	movlw	0
 12986     0867  00BD               	movwf	___fldiv@a+3
 12987     0868  3000               	movlw	0
 12988     0869  00BC               	movwf	___fldiv@a+2
 12989     086A  3000               	movlw	0
 12990     086B  00BB               	movwf	___fldiv@a+1
 12991     086C  3000               	movlw	0
 12992     086D  00BA               	movwf	___fldiv@a
 12993     086E                     l3288:
 12994     086E  17BC               	bsf	___fldiv@a+2,7
 12995     086F                     l3290:
 12996     086F  01BD               	clrf	___fldiv@a+3
 12997     0870  2879               	goto	l680
 12998     0871                     l3292:
 12999     0871  3000               	movlw	0
 13000     0872  00BD               	movwf	___fldiv@a+3
 13001     0873  3000               	movlw	0
 13002     0874  00BC               	movwf	___fldiv@a+2
 13003     0875  3000               	movlw	0
 13004     0876  00BB               	movwf	___fldiv@a+1
 13005     0877  3000               	movlw	0
 13006     0878  00BA               	movwf	___fldiv@a
 13007     0879                     l680:
 13008     0879  083D               	movf	___fldiv@a+3,w
 13009     087A  043C               	iorwf	___fldiv@a+2,w
 13010     087B  043B               	iorwf	___fldiv@a+1,w
 13011     087C  043A               	iorwf	___fldiv@a,w
 13012     087D  1D03               	skipz
 13013     087E  2880               	goto	u4201
 13014     087F  2881               	goto	u4200
 13015     0880                     u4201:
 13016     0880  289A               	goto	l3302
 13017     0881                     u4200:
 13018     0881                     l3294:
 13019     0881  3000               	movlw	0
 13020     0882  00C1               	movwf	___fldiv@b+3
 13021     0883  3000               	movlw	0
 13022     0884  00C0               	movwf	___fldiv@b+2
 13023     0885  3000               	movlw	0
 13024     0886  00BF               	movwf	___fldiv@b+1
 13025     0887  3000               	movlw	0
 13026     0888  00BE               	movwf	___fldiv@b
 13027     0889  3080               	movlw	128
 13028     088A  04C0               	iorwf	___fldiv@b+2,f
 13029     088B  307F               	movlw	127
 13030     088C  04C1               	iorwf	___fldiv@b+3,f
 13031     088D                     l3296:
 13032     088D  084B               	movf	___fldiv@sign,w
 13033     088E  00C2               	movwf	??___fldiv
 13034     088F  0842               	movf	??___fldiv,w
 13035     0890  04C1               	iorwf	___fldiv@b+3,f
 13036     0891                     l3298:
 13037     0891  0841               	movf	___fldiv@b+3,w
 13038     0892  00BD               	movwf	?___fldiv+3
 13039     0893  0840               	movf	___fldiv@b+2,w
 13040     0894  00BC               	movwf	?___fldiv+2
 13041     0895  083F               	movf	___fldiv@b+1,w
 13042     0896  00BB               	movwf	?___fldiv+1
 13043     0897  083E               	movf	___fldiv@b,w
 13044     0898  00BA               	movwf	?___fldiv
 13045     0899  29D1               	goto	l682
 13046     089A                     l3302:
 13047     089A  0852               	movf	___fldiv@bexp,w
 13048     089B  1D03               	btfss	3,2
 13049     089C  289E               	goto	u4211
 13050     089D  289F               	goto	u4210
 13051     089E                     u4211:
 13052     089E  28A8               	goto	l3308
 13053     089F                     u4210:
 13054     089F                     l3304:
 13055     089F  3000               	movlw	0
 13056     08A0  00BD               	movwf	?___fldiv+3
 13057     08A1  3000               	movlw	0
 13058     08A2  00BC               	movwf	?___fldiv+2
 13059     08A3  3000               	movlw	0
 13060     08A4  00BB               	movwf	?___fldiv+1
 13061     08A5  3000               	movlw	0
 13062     08A6  00BA               	movwf	?___fldiv
 13063     08A7  29D1               	goto	l682
 13064     08A8                     l3308:
 13065     08A8  0852               	movf	___fldiv@bexp,w
 13066     08A9  00C2               	movwf	??___fldiv
 13067     08AA  01C3               	clrf	??___fldiv+1
 13068     08AB  0843               	movf	??___fldiv+1,w
 13069     08AC  00C5               	movwf	??___fldiv+3
 13070     08AD  0853               	movf	___fldiv@aexp,w
 13071     08AE  0242               	subwf	??___fldiv,w
 13072     08AF  00C4               	movwf	??___fldiv+2
 13073     08B0  1C03               	skipc
 13074     08B1  03C5               	decf	??___fldiv+3,f
 13075     08B2  0844               	movf	??___fldiv+2,w
 13076     08B3  3E7F               	addlw	127
 13077     08B4  00CC               	movwf	___fldiv@new_exp
 13078     08B5  3000               	movlw	0
 13079     08B6  3D45               	addwfc	??___fldiv+3,w
 13080     08B7  00CD               	movwf	___fldiv@new_exp+1
 13081     08B8                     l3310:
 13082     08B8  0841               	movf	___fldiv@b+3,w
 13083     08B9  00CA               	movwf	___fldiv@rem+3
 13084     08BA  0840               	movf	___fldiv@b+2,w
 13085     08BB  00C9               	movwf	___fldiv@rem+2
 13086     08BC  083F               	movf	___fldiv@b+1,w
 13087     08BD  00C8               	movwf	___fldiv@rem+1
 13088     08BE  083E               	movf	___fldiv@b,w
 13089     08BF  00C7               	movwf	___fldiv@rem
 13090     08C0                     l3312:
 13091     08C0  3000               	movlw	0
 13092     08C1  00C1               	movwf	___fldiv@b+3
 13093     08C2  3000               	movlw	0
 13094     08C3  00C0               	movwf	___fldiv@b+2
 13095     08C4  3000               	movlw	0
 13096     08C5  00BF               	movwf	___fldiv@b+1
 13097     08C6  3000               	movlw	0
 13098     08C7  00BE               	movwf	___fldiv@b
 13099     08C8                     l3314:
 13100     08C8  3000               	movlw	0
 13101     08C9  00D1               	movwf	___fldiv@grs+3
 13102     08CA  3000               	movlw	0
 13103     08CB  00D0               	movwf	___fldiv@grs+2
 13104     08CC  3000               	movlw	0
 13105     08CD  00CF               	movwf	___fldiv@grs+1
 13106     08CE  3000               	movlw	0
 13107     08CF  00CE               	movwf	___fldiv@grs
 13108     08D0                     l3316:
 13109     08D0  01D3               	clrf	___fldiv@aexp
 13110     08D1  2910               	goto	l3336
 13111     08D2                     l3318:
 13112     08D2  0853               	movf	___fldiv@aexp,w
 13113     08D3  1903               	btfsc	3,2
 13114     08D4  28D6               	goto	u4221
 13115     08D5  28D7               	goto	u4220
 13116     08D6                     u4221:
 13117     08D6  28F1               	goto	l3328
 13118     08D7                     u4220:
 13119     08D7                     l3320:
 13120     08D7  3001               	movlw	1
 13121     08D8                     u4235:
 13122     08D8  35C7               	lslf	___fldiv@rem,f
 13123     08D9  0DC8               	rlf	___fldiv@rem+1,f
 13124     08DA  0DC9               	rlf	___fldiv@rem+2,f
 13125     08DB  0DCA               	rlf	___fldiv@rem+3,f
 13126     08DC  0B89               	decfsz	9,f
 13127     08DD  28D8               	goto	u4235
 13128     08DE  3001               	movlw	1
 13129     08DF                     u4245:
 13130     08DF  35BE               	lslf	___fldiv@b,f
 13131     08E0  0DBF               	rlf	___fldiv@b+1,f
 13132     08E1  0DC0               	rlf	___fldiv@b+2,f
 13133     08E2  0DC1               	rlf	___fldiv@b+3,f
 13134     08E3  0B89               	decfsz	9,f
 13135     08E4  28DF               	goto	u4245
 13136     08E5                     l3322:
 13137     08E5  1FD1               	btfss	___fldiv@grs+3,7
 13138     08E6  28E8               	goto	u4251
 13139     08E7  28E9               	goto	u4250
 13140     08E8                     u4251:
 13141     08E8  28EA               	goto	l3326
 13142     08E9                     u4250:
 13143     08E9                     l3324:
 13144     08E9  143E               	bsf	___fldiv@b,0
 13145     08EA                     l3326:
 13146     08EA  3001               	movlw	1
 13147     08EB                     u4265:
 13148     08EB  35CE               	lslf	___fldiv@grs,f
 13149     08EC  0DCF               	rlf	___fldiv@grs+1,f
 13150     08ED  0DD0               	rlf	___fldiv@grs+2,f
 13151     08EE  0DD1               	rlf	___fldiv@grs+3,f
 13152     08EF  0B89               	decfsz	9,f
 13153     08F0  28EB               	goto	u4265
 13154     08F1                     l3328:
 13155     08F1  083D               	movf	___fldiv@a+3,w
 13156     08F2  024A               	subwf	___fldiv@rem+3,w
 13157     08F3  1D03               	skipz
 13158     08F4  28FF               	goto	u4275
 13159     08F5  083C               	movf	___fldiv@a+2,w
 13160     08F6  0249               	subwf	___fldiv@rem+2,w
 13161     08F7  1D03               	skipz
 13162     08F8  28FF               	goto	u4275
 13163     08F9  083B               	movf	___fldiv@a+1,w
 13164     08FA  0248               	subwf	___fldiv@rem+1,w
 13165     08FB  1D03               	skipz
 13166     08FC  28FF               	goto	u4275
 13167     08FD  083A               	movf	___fldiv@a,w
 13168     08FE  0247               	subwf	___fldiv@rem,w
 13169     08FF                     u4275:
 13170     08FF  1C03               	skipc
 13171     0900  2902               	goto	u4271
 13172     0901  2903               	goto	u4270
 13173     0902                     u4271:
 13174     0902  290C               	goto	l3334
 13175     0903                     u4270:
 13176     0903                     l3330:
 13177     0903  1751               	bsf	___fldiv@grs+3,6
 13178     0904                     l3332:
 13179     0904  083A               	movf	___fldiv@a,w
 13180     0905  02C7               	subwf	___fldiv@rem,f
 13181     0906  083B               	movf	___fldiv@a+1,w
 13182     0907  3BC8               	subwfb	___fldiv@rem+1,f
 13183     0908  083C               	movf	___fldiv@a+2,w
 13184     0909  3BC9               	subwfb	___fldiv@rem+2,f
 13185     090A  083D               	movf	___fldiv@a+3,w
 13186     090B  3BCA               	subwfb	___fldiv@rem+3,f
 13187     090C                     l3334:
 13188     090C  3001               	movlw	1
 13189     090D  00C2               	movwf	??___fldiv
 13190     090E  0842               	movf	??___fldiv,w
 13191     090F  07D3               	addwf	___fldiv@aexp,f
 13192     0910                     l3336:
 13193     0910  301A               	movlw	26
 13194     0911  0253               	subwf	___fldiv@aexp,w
 13195     0912  1C03               	skipc
 13196     0913  2915               	goto	u4281
 13197     0914  2916               	goto	u4280
 13198     0915                     u4281:
 13199     0915  28D2               	goto	l3318
 13200     0916                     u4280:
 13201     0916                     l3338:
 13202     0916  084A               	movf	___fldiv@rem+3,w
 13203     0917  0449               	iorwf	___fldiv@rem+2,w
 13204     0918  0448               	iorwf	___fldiv@rem+1,w
 13205     0919  0447               	iorwf	___fldiv@rem,w
 13206     091A  1903               	skipnz
 13207     091B  291D               	goto	u4291
 13208     091C  291E               	goto	u4290
 13209     091D                     u4291:
 13210     091D  2937               	goto	l3352
 13211     091E                     u4290:
 13212     091E                     l3340:
 13213     091E  144E               	bsf	___fldiv@grs,0
 13214     091F  2937               	goto	l3352
 13215     0920                     l3342:
 13216     0920  3001               	movlw	1
 13217     0921                     u4305:
 13218     0921  35BE               	lslf	___fldiv@b,f
 13219     0922  0DBF               	rlf	___fldiv@b+1,f
 13220     0923  0DC0               	rlf	___fldiv@b+2,f
 13221     0924  0DC1               	rlf	___fldiv@b+3,f
 13222     0925  0B89               	decfsz	9,f
 13223     0926  2921               	goto	u4305
 13224     0927                     l3344:
 13225     0927  1FD1               	btfss	___fldiv@grs+3,7
 13226     0928  292A               	goto	u4311
 13227     0929  292B               	goto	u4310
 13228     092A                     u4311:
 13229     092A  292C               	goto	l3348
 13230     092B                     u4310:
 13231     092B                     l3346:
 13232     092B  143E               	bsf	___fldiv@b,0
 13233     092C                     l3348:
 13234     092C  3001               	movlw	1
 13235     092D                     u4325:
 13236     092D  35CE               	lslf	___fldiv@grs,f
 13237     092E  0DCF               	rlf	___fldiv@grs+1,f
 13238     092F  0DD0               	rlf	___fldiv@grs+2,f
 13239     0930  0DD1               	rlf	___fldiv@grs+3,f
 13240     0931  0B89               	decfsz	9,f
 13241     0932  292D               	goto	u4325
 13242     0933                     l3350:
 13243     0933  30FF               	movlw	255
 13244     0934  07CC               	addwf	___fldiv@new_exp,f
 13245     0935  30FF               	movlw	255
 13246     0936  3DCD               	addwfc	___fldiv@new_exp+1,f
 13247     0937                     l3352:
 13248     0937  1FC0               	btfss	___fldiv@b+2,7
 13249     0938  293A               	goto	u4331
 13250     0939  293B               	goto	u4330
 13251     093A                     u4331:
 13252     093A  2920               	goto	l3342
 13253     093B                     u4330:
 13254     093B                     l3354:
 13255     093B  01D3               	clrf	___fldiv@aexp
 13256     093C                     l3356:
 13257     093C  1FD1               	btfss	___fldiv@grs+3,7
 13258     093D  293F               	goto	u4341
 13259     093E  2940               	goto	u4340
 13260     093F                     u4341:
 13261     093F  295C               	goto	l3364
 13262     0940                     u4340:
 13263     0940                     l3358:
 13264     0940  30FF               	movlw	255
 13265     0941  054E               	andwf	___fldiv@grs,w
 13266     0942  00C2               	movwf	??___fldiv
 13267     0943  30FF               	movlw	255
 13268     0944  054F               	andwf	___fldiv@grs+1,w
 13269     0945  00C3               	movwf	??___fldiv+1
 13270     0946  30FF               	movlw	255
 13271     0947  0550               	andwf	___fldiv@grs+2,w
 13272     0948  00C4               	movwf	??___fldiv+2
 13273     0949  307F               	movlw	127
 13274     094A  0551               	andwf	___fldiv@grs+3,w
 13275     094B  00C5               	movwf	??___fldiv+3
 13276     094C  0845               	movf	??___fldiv+3,w
 13277     094D  0444               	iorwf	??___fldiv+2,w
 13278     094E  0443               	iorwf	??___fldiv+1,w
 13279     094F  0442               	iorwf	??___fldiv,w
 13280     0950  1903               	skipnz
 13281     0951  2953               	goto	u4351
 13282     0952  2954               	goto	u4350
 13283     0953                     u4351:
 13284     0953  2957               	goto	l696
 13285     0954                     u4350:
 13286     0954                     l3360:
 13287     0954  01D3               	clrf	___fldiv@aexp
 13288     0955  0AD3               	incf	___fldiv@aexp,f
 13289     0956  295C               	goto	l3364
 13290     0957                     l696:
 13291     0957  1C3E               	btfss	___fldiv@b,0
 13292     0958  295A               	goto	u4361
 13293     0959  295B               	goto	u4360
 13294     095A                     u4361:
 13295     095A  295C               	goto	l3364
 13296     095B                     u4360:
 13297     095B  2954               	goto	l3360
 13298     095C                     l3364:
 13299     095C  0853               	movf	___fldiv@aexp,w
 13300     095D  1903               	btfsc	3,2
 13301     095E  2960               	goto	u4371
 13302     095F  2961               	goto	u4370
 13303     0960                     u4371:
 13304     0960  2989               	goto	l3374
 13305     0961                     u4370:
 13306     0961                     l3366:
 13307     0961  3001               	movlw	1
 13308     0962  07BE               	addwf	___fldiv@b,f
 13309     0963  3000               	movlw	0
 13310     0964  3DBF               	addwfc	___fldiv@b+1,f
 13311     0965  3000               	movlw	0
 13312     0966  3DC0               	addwfc	___fldiv@b+2,f
 13313     0967  3000               	movlw	0
 13314     0968  3DC1               	addwfc	___fldiv@b+3,f
 13315     0969                     l3368:
 13316     0969  1C41               	btfss	___fldiv@b+3,0
 13317     096A  296C               	goto	u4381
 13318     096B  296D               	goto	u4380
 13319     096C                     u4381:
 13320     096C  2989               	goto	l3374
 13321     096D                     u4380:
 13322     096D                     l3370:
 13323     096D  083E               	movf	___fldiv@b,w
 13324     096E  00C2               	movwf	??___fldiv
 13325     096F  083F               	movf	___fldiv@b+1,w
 13326     0970  00C3               	movwf	??___fldiv+1
 13327     0971  0840               	movf	___fldiv@b+2,w
 13328     0972  00C4               	movwf	??___fldiv+2
 13329     0973  0841               	movf	___fldiv@b+3,w
 13330     0974  00C5               	movwf	??___fldiv+3
 13331     0975  3001               	movlw	1
 13332     0976  00C6               	movwf	??___fldiv+4
 13333     0977                     u4395:
 13334     0977  37C5               	asrf	??___fldiv+3,f
 13335     0978  0CC4               	rrf	??___fldiv+2,f
 13336     0979  0CC3               	rrf	??___fldiv+1,f
 13337     097A  0CC2               	rrf	??___fldiv,f
 13338     097B                     u4390:
 13339     097B  0BC6               	decfsz	??___fldiv+4,f
 13340     097C  2977               	goto	u4395
 13341     097D  0845               	movf	??___fldiv+3,w
 13342     097E  00C1               	movwf	___fldiv@b+3
 13343     097F  0844               	movf	??___fldiv+2,w
 13344     0980  00C0               	movwf	___fldiv@b+2
 13345     0981  0843               	movf	??___fldiv+1,w
 13346     0982  00BF               	movwf	___fldiv@b+1
 13347     0983  0842               	movf	??___fldiv,w
 13348     0984  00BE               	movwf	___fldiv@b
 13349     0985                     l3372:
 13350     0985  3001               	movlw	1
 13351     0986  07CC               	addwf	___fldiv@new_exp,f
 13352     0987  3000               	movlw	0
 13353     0988  3DCD               	addwfc	___fldiv@new_exp+1,f
 13354     0989                     l3374:
 13355     0989  084D               	movf	___fldiv@new_exp+1,w
 13356     098A  3A80               	xorlw	128
 13357     098B  00C2               	movwf	??___fldiv
 13358     098C  3080               	movlw	128
 13359     098D  0242               	subwf	??___fldiv,w
 13360     098E  1D03               	skipz
 13361     098F  2992               	goto	u4405
 13362     0990  30FF               	movlw	255
 13363     0991  024C               	subwf	___fldiv@new_exp,w
 13364     0992                     u4405:
 13365     0992  1C03               	skipc
 13366     0993  2995               	goto	u4401
 13367     0994  2996               	goto	u4400
 13368     0995                     u4401:
 13369     0995  29A3               	goto	l701
 13370     0996                     u4400:
 13371     0996                     l3376:
 13372     0996  30FF               	movlw	255
 13373     0997  0020               	movlb	0	; select bank0
 13374     0998  00CC               	movwf	___fldiv@new_exp
 13375     0999  3000               	movlw	0
 13376     099A  00CD               	movwf	___fldiv@new_exp+1
 13377     099B  3000               	movlw	0
 13378     099C  00C1               	movwf	___fldiv@b+3
 13379     099D  3000               	movlw	0
 13380     099E  00C0               	movwf	___fldiv@b+2
 13381     099F  3000               	movlw	0
 13382     09A0  00BF               	movwf	___fldiv@b+1
 13383     09A1  3000               	movlw	0
 13384     09A2  00BE               	movwf	___fldiv@b
 13385     09A3                     l701:
 13386     09A3  0020               	movlb	0	; select bank0
 13387     09A4  084D               	movf	___fldiv@new_exp+1,w
 13388     09A5  3A80               	xorlw	128
 13389     09A6  00C2               	movwf	??___fldiv
 13390     09A7  3080               	movlw	128
 13391     09A8  0242               	subwf	??___fldiv,w
 13392     09A9  1D03               	skipz
 13393     09AA  29AD               	goto	u4415
 13394     09AB  3001               	movlw	1
 13395     09AC  024C               	subwf	___fldiv@new_exp,w
 13396     09AD                     u4415:
 13397     09AD  1803               	skipnc
 13398     09AE  29B0               	goto	u4411
 13399     09AF  29B1               	goto	u4410
 13400     09B0                     u4411:
 13401     09B0  29BD               	goto	l702
 13402     09B1                     u4410:
 13403     09B1                     l3378:
 13404     09B1  0020               	movlb	0	; select bank0
 13405     09B2  01CC               	clrf	___fldiv@new_exp
 13406     09B3  01CD               	clrf	___fldiv@new_exp+1
 13407     09B4                     l3380:
 13408     09B4  3000               	movlw	0
 13409     09B5  00C1               	movwf	___fldiv@b+3
 13410     09B6  3000               	movlw	0
 13411     09B7  00C0               	movwf	___fldiv@b+2
 13412     09B8  3000               	movlw	0
 13413     09B9  00BF               	movwf	___fldiv@b+1
 13414     09BA  3000               	movlw	0
 13415     09BB  00BE               	movwf	___fldiv@b
 13416     09BC                     l3382:
 13417     09BC  01CB               	clrf	___fldiv@sign
 13418     09BD                     l702:
 13419     09BD  0020               	movlb	0	; select bank0
 13420     09BE  084C               	movf	___fldiv@new_exp,w
 13421     09BF  00D2               	movwf	___fldiv@bexp
 13422     09C0                     l3384:
 13423     09C0  1C52               	btfss	___fldiv@bexp,0
 13424     09C1  29C3               	goto	u4421
 13425     09C2  29C4               	goto	u4420
 13426     09C3                     u4421:
 13427     09C3  29C6               	goto	l3388
 13428     09C4                     u4420:
 13429     09C4                     l3386:
 13430     09C4  17C0               	bsf	___fldiv@b+2,7
 13431     09C5  29CA               	goto	l704
 13432     09C6                     l3388:
 13433     09C6  307F               	movlw	127
 13434     09C7  00C2               	movwf	??___fldiv
 13435     09C8  0842               	movf	??___fldiv,w
 13436     09C9  05C0               	andwf	___fldiv@b+2,f
 13437     09CA                     l704:
 13438     09CA  3652               	lsrf	___fldiv@bexp,w
 13439     09CB  00C1               	movwf	___fldiv@b+3
 13440     09CC  084B               	movf	___fldiv@sign,w
 13441     09CD  00C2               	movwf	??___fldiv
 13442     09CE  0842               	movf	??___fldiv,w
 13443     09CF  04C1               	iorwf	___fldiv@b+3,f
 13444     09D0  2891               	goto	l3298
 13445     09D1                     l682:
 13446     09D1  0008               	return
 13447     09D2                     __end_of___fldiv:
 13448     007E                     btemp	set	126	;btemp
 13449     007E                     wtemp0	set	126
 13450                           
 13451                           	psect	idloc
 13452                           
 13453                           ;Config register IDLOC0 @ 0x8000
 13454                           ;	unspecified, using default values
 13455     8000                     	org	32768
 13456     8000  3FFF               	dw	16383
 13457                           
 13458                           ;Config register IDLOC1 @ 0x8001
 13459                           ;	unspecified, using default values
 13460     8001                     	org	32769
 13461     8001  3FFF               	dw	16383
 13462                           
 13463                           ;Config register IDLOC2 @ 0x8002
 13464                           ;	unspecified, using default values
 13465     8002                     	org	32770
 13466     8002  3FFF               	dw	16383
 13467                           
 13468                           ;Config register IDLOC3 @ 0x8003
 13469                           ;	unspecified, using default values
 13470     8003                     	org	32771
 13471     8003  3FFF               	dw	16383
 13472                           
 13473                           	psect	config
 13474                           
 13475                           ;Config register CONFIG1 @ 0x8007
 13476                           ;	Oscillator Selection
 13477                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 13478                           ;	Watchdog Timer Enable
 13479                           ;	WDTE = OFF, WDT disabled
 13480                           ;	Power-up Timer Enable
 13481                           ;	PWRTE = OFF, PWRT disabled
 13482                           ;	MCLR Pin Function Select
 13483                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13484                           ;	Flash Program Memory Code Protection
 13485                           ;	CP = OFF, Program memory code protection is disabled
 13486                           ;	Data Memory Code Protection
 13487                           ;	CPD = OFF, Data memory code protection is disabled
 13488                           ;	Brown-out Reset Enable
 13489                           ;	BOREN = OFF, Brown-out Reset disabled
 13490                           ;	Clock Out Enable
 13491                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13492                           ;	Internal/External Switchover
 13493                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 13494                           ;	Fail-Safe Clock Monitor Enable
 13495                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 13496     8007                     	org	32775
 13497     8007  09E2               	dw	2530
 13498                           
 13499                           ;Config register CONFIG2 @ 0x8008
 13500                           ;	Flash Memory Self-Write Protection
 13501                           ;	WRT = OFF, Write protection off
 13502                           ;	Voltage Regulator Capacitor Enable
 13503                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 13504                           ;	PLL Enable
 13505                           ;	PLLEN = OFF, 4x PLL disabled
 13506                           ;	Stack Overflow/Underflow Reset Enable
 13507                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
 13508                           ;	Brown-out Reset Voltage Selection
 13509                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13510                           ;	Low-Voltage Programming Enable
 13511                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 13512     8008                     	org	32776
 13513     8008  1CFF               	dw	7423

Data Sizes:
    Strings     145
    Constant    0
    Data        9
    BSS         93
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     74      79
    BANK3            80      0      17
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_15(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_15(CODE[4]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[3]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[3]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[3]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[3]), STR_1(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S874$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[3]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> display_int@str(BANK2[16]), display_float@str(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S790$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S790$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    lcd_DisplayString@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[5]), STR_13(CODE[15]), STR_12(CODE[6]), STR_11(CODE[8]), 
		 -> STR_10(CODE[12]), STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[14]), 
		 -> STR_6(CODE[12]), STR_5(CODE[14]), main@inputTime(BANK2[6]), main@inputTemp(BANK2[3]), 
		 -> STR_4(CODE[9]), STR_3(CODE[12]), display_int@str(BANK2[16]), display_float@str(BANK2[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _vfpfcnvrt->_atoi
    _efgtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->_getInteger
    _lcd_DisplayString->_lcd_char
    ___awdiv->___awmod
    _ADC_Convert->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _ADC_Convert->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_display_int
    _display_int->_sprintf
    _display_float->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_display_float
    _display_int->_sprintf
    _display_float->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   76045
                                             32 BANK2     42    42      0
                        _ADC_Convert
                           _ADC_init
                            ___awdiv
                            ___awmod
                             ___flge
                            ___flmul
                             ___wmul
                           ___xxtofl
                      _display_float
                        _display_int
                         _getInteger
                             _keypad
                  _lcd_DisplayString
                           _lcd_char
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getInteger                                           3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _display_int                                         18    16      2   29777
                                             78 BANK1      2     0      2
                                             12 BANK2     16    16      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                  _lcd_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _display_float                                       20    16      4   29397
                                             12 BANK2     20    16      4
                  _lcd_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   27900
                                             71 BANK1      7     1      6
                                              0 BANK2     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   27477
                                             79 BANK0      1     1      0
                                             65 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    20      2   27156
                                             77 BANK0      2     0      2
                                             49 BANK1     16    16      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              55    50      5   19251
                                             72 BANK0      5     0      5
                                              0 BANK1     49    49      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     314
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1246
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                27    19      8    4075
                                             16 BANK0     27    19      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2468
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1925
                                              9 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1156
                                              3 COMMON     6     2      4
                         _getInteger (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_DisplayString                                    3     1      2    1349
                                              2 COMMON     3     1      2
                           _lcd_char
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                         12     8      4    6252
                                             52 BANK0     12     8      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3481
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2033
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _ADC_init
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___flge
     ___flmul (ARG)
   ___flmul
   ___wmul
     _getInteger (ARG)
   ___xxtofl
   _display_float
     _lcd_DisplayString
       _lcd_char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   _display_int
     ___awdiv (ARG)
     ___awmod (ARG)
     _lcd_DisplayString (ARG)
     _sprintf (ARG)
   _getInteger
   _keypad
   _lcd_DisplayString
   _lcd_char
   _lcd_cmd
   _lcd_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     15E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     50      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     4A      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      11      12       21.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     15E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 31 23:41:54 2023

             ___fldiv@aexp 0053               ___fldiv@bexp 0052               ___fldiv@sign 004B  
                       l40 1BC6                         l43 1BF6                         l52 1B2E  
                       l37 1C6C               ?_display_int 00EE                         l55 1A05  
                       l72 1F76                         l49 1A1C                         l73 1F70  
                       l66 1039                         l58 1009                         l83 1F8A  
                       l92 1FA7                         l84 1F84                         l76 1FFF  
                       l69 1089                         l93 1FA1                         l77 1F94  
                       l78 1F80                         l79 1F7A                         l96 1FC5  
                       l97 1FB1                         l89 1F8E                         l98 1FAB  
             ___awdiv@sign 0021        ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0076  
                      l102 1FBB                        l111 1FD8                        l103 1FB5  
                      l112 1FD2                        l121 1FEC                        l122 1FE6  
                      l115 1FF6                        l132 19DC                        l116 1FE2  
                      l108 1FBF                        l117 1FDC                        l127 1FF0  
                      l170 0FB9                        l146 0D2D                        l323 1A59  
                      l325 1A6D                        l501 1E61                        l166 0F4B  
                      l423 13F8                        l424 1409                        l504 1EB5  
                      l168 0FA7                        l513 19F0                        l436 120C  
                      l524 005F                        l701 09A3                        l437 121D  
                      l509 1ECE                        l517 0074                        l702 09BD  
                      l630 16A5                        l527 0074                        l704 09CA  
                      l720 0C0C                        l624 1649                        l732 0C00  
                      l476 1DC4                        l492 1C89                        l628 16C7  
                      l741 1B73                        l493 1CA5                        l645 1759  
                      l637 17FF                        l726 0B8C                        l822 1C04  
                      l670 1AAC                        l655 179D                        l680 0879  
                      l912 15F3                        l489 1D0D                        l833 00D6  
                      l649 177B                        l682 09D1                        l770 10E5  
                      l826 1C2B                        l834 00F7                        l498 1CBA  
                      l666 17F8                        l658 17D5                        l739 1B63  
                      l667 17FF                        l764 10AC                        l845 01AB  
                      l853 0212                        l766 1133                        l838 00F5  
                      l934 1ACC                        l839 0167                        l696 0957  
                      l952 1A4E                        l944 1E43                        l872 0403  
                      l856 07DA                        l777 10FF                        l778 110B  
                      l882 062A                        l786 1AEC                        l949 1A4E  
                      l966 1EFD                        l982 125F                        l983 1308  
                      l993 1A34                        l977 1F62                        l987 1300  
                      _abs 1A35                        _pad 1BF7               ___awmod@sign 0076  
                      wreg 0009               ___flmul@aexp 0032               ___flmul@bexp 0033  
             ___flmul@sign 002D               ___flmul@temp 0038               ___flmul@prod 0034  
             ___fltol@exp1 0079                       l1001 1B0D                       l1011 1B50  
                     l1014 081B                       l1040 0004                       l1008 1B50  
                     l1017 0827                       ?_abs 0073                       l1029 1D64  
                     l1037 1B98                       l1046 1A8C                       l3000 173D  
                     l3010 1766                       l3002 1743                       l3100 1A69  
                     l3020 177F                       l3004 1748                       l3110 1335  
                     l3022 1782                       l3014 176F                       l3006 1751  
                     l3030 178F                       l3120 1379                       l3112 133F  
                     l3104 1309                       l3200 1ECD                       l3040 17A2  
                     l3032 1790                       l3024 1784                       l3016 1776  
                     l3008 1761                       l4000 15CF                       l3130 1394  
                     l3122 137C                       l3114 135E                       l3106 130A  
                     l3050 17DA                       l3042 17A7                       l3034 1794  
                     l3026 1789                       l3018 177A                       l4100 112A  
                     l3140 13DA                       l3132 13B6                       l3124 1384  
                     l3116 1362                       l3108 1314                       l3204 19E6  
                     l3060 17F1                       l3052 17DF                       l3044 17AF  
                     l3036 179A                       l3028 178B                       l3220 0028  
                     l3212 0005                       l4004 15D9                       l3310 08B8  
                     l3302 089A                       l3070 1B54                       l4102 112B  
                     l4030 1BEE                       l4022 1BC8                       l3134 13C6  
                     l3126 1388                       l3118 136C                       l3150 116A  
                     l3142 1134                       l3206 19EE                       l3062 17F3  
                     l3054 17E7                       l3046 17B3                       l3222 0029  
                     l3214 000E                       l4110 1BAE                       l3320 08D7  
                     l3312 08C0                       l3304 089F                       l3072 1B5B  
                     l3400 09DC                       l4024 1BDD                       l3136 13C7  
                     l3128 138C                       l3160 11A5                       l3152 1189  
                     l3144 1135                       l3208 19F0                       l3064 17FA  
                     l3056 17EC                       l3048 17D1                       l3224 0031  
                     l4032 1AAF                       l4120 1B27                       l4112 1BB6  
                     l3330 0903                       l3322 08E5                       l3314 08C8  
                     l3074 1B5F                       l3410 09F1                       l3402 09DD  
                     l4130 1007                       l4026 1BE5                       l4042 1A06  
                     l3090 1A4F                       l3138 13D5                       l3170 11EE  
                     l3162 11A9                       l3154 1196                       l3146 113F  
                     l3082 1B76                       l3066 17FE                       l3058 17ED  
                     l3250 1A90                       l3242 0056                       l3234 003F  
                     l3226 0033                       l3218 0017                       l4034 1AB4  
                     l4050 1ACF                       l4122 19F1                       l4210 1FAF  
                     l4202 1FA5                       l4114 1BBB                       l4106 1C2C  
                     l3340 091E                       l3332 0904                       l3324 08E9  
                     l3316 08D0                       l3308 08A8                       l3260 0832  
                     l3076 1B6A                       l3068 1B52                       l3420 0A05  
                     l3412 09F9                       l3404 09E2                       l4140 101B  
                     l4132 1008                       l4300 1DA6                       l4028 1BEA  
                     l4044 1A07                       l3092 1A51                       l3164 11CB  
                     l3156 1199                       l3148 1160                       l3084 1B79  
                     l3180 1CB9                       l3172 1C6D                       l3244 0064  
                     l3228 0037                       l3236 004F                       l4036 1AC0  
                     l4052 1AD3                       l4124 19FE                       l4116 1BBE  
                     l4108 1B9A                       l3350 0933                       l3342 0920  
                     l3334 090C                       l3326 08EA                       l3318 08D2  
                     l3270 0846                       l3262 0833                       l3254 0828  
                     l3078 1B6F                       l3510 0BBA                       l3502 0B91  
                     l3430 0A21                       l3422 0A0A                       l3414 09FE  
                     l3406 09E7                       l4070 10B4                       l4062 108B  
                     l4150 1038                       l4142 1021                       l4134 100A  
                     l4126 1000                       l4310 1DBB                       l4302 1DAA  
                     l4046 1A0F                       l3094 1A55                       l3166 11DB  
                     l3158 11A1                       l3086 1B85                       l3174 1C81  
                     l3190 1E7D                       l3246 0069                       l4038 1ACA  
                     l4054 1AD5                       l4118 1B0E                       l4230 1FC9  
                     l3360 0954                       l3344 0927                       l3352 0937  
                     l3328 08F1                       l3336 0910                       l3280 085B  
                     l3264 0838                       l3272 0848                       l3256 082C  
                     l3520 0BEC                       l3504 0B96                       l3512 0BBE  
                     l3440 0A3F                       l3432 0A26                       l3424 0A0F  
                     l3416 0A00                       l3408 09EF                       l4080 10D2  
                     l4064 1090                       l4152 103D                       l4144 1028  
                     l4136 1011                       l4128 1003                       l4312 1DC0  
                     l4304 1DAB                       l4320 1CC0                       l4048 1A13  
                     l3096 1A5E                       l3168 11E9                       l3088 1B8A  
                     l3176 1C9D                       l3192 1E81                       l3184 1E44  
                     l3248 1A8D                       l3600 12A8                       l4056 1AD7  
                     l4232 1FCD                       l4160 1F63                       l4400 0C77  
                     l3370 096D                       l3354 093B                       l3346 092B  
                     l3338 0916                       l3290 086F                       l3282 085C  
                     l3274 0850                       l3266 083D                       l3258 082E  
                     l3530 0C04                       l3522 0BEE                       l3514 0BCB  
                     l3506 0B9E                       l3450 0A96                       l3442 0A4C  
                     l3434 0A2B                       l3426 0A17                       l3418 0A04  
                     l4090 10F9                       l4082 10D6                       l4074 10BD  
                     l4066 1094                       l4154 1046                       l4146 102D  
                     l4138 1015                       l4306 1DB0                       l4330 1CD6  
                     l4322 1CC5                       l3098 1A63                       l3178 1CB7  
                     l3194 1E99                       l3186 1E59                       l3610 12F8  
                     l3602 12B0                       l4058 1AE2                       l4226 1FC3  
                     l4218 1FB9                       l4162 1F67                       l4410 0C87  
                     l4402 0C79                       l3380 09B4                       l3372 0985  
                     l3364 095C                       l3356 093C                       l3348 092C  
                     l3284 0861                       l3292 0871                       l3276 0855  
                     l3268 0845                       l3524 0BF9                       l3516 0BD5  
                     l3508 0BA2                       l3460 0AC7                       l3452 0AA3  
                     l3444 0A64                       l3428 0A19                       l4092 1103  
                     l4084 10DE                       l4076 10C0                       l4068 10A4  
                     l4156 1081                       l4148 1036                       l4308 1DB6  
                     l4340 1CF0                       l4332 1CD9                       l4324 1CC7  
                     l4316 1CBB                       l3540 1C07                       l3196 1E9D  
                     l3188 1E75                       l2900 1625                       l3604 12C1  
                     l3620 0811                       l3700 01F7                       l4260 1FF4  
                     l4252 1FEA                       l4244 1FE0                       l4236 1FD6  
                     l4164 1F6B                       l4500 0E12                       l4420 0CAE  
                     l4412 0C8B                       l4404 0C7A                       l3382 09BC  
                     l3366 0961                       l3374 0989                       l3358 0940  
                     l3294 0881                       l3286 0866                       l3278 0857  
                     l3526 0BFD                       l3518 0BE3                       l3470 0B04  
                     l3462 0ACE                       l3454 0AAA                       l3446 0A71  
                     l3438 0A34                       l4094 110D                       l4086 10EC  
                     l4078 10CB                       l4350 1D09                       l4342 1CF4  
                     l4334 1CDE                       l4326 1CCB                       l4318 1CBC  
                     l3622 1A1D                       l3630 1AF6                       l3550 1A42  
                     l3542 1C11                       l3534 1BF9                       l3198 1ECB  
                     l2910 1636                       l2902 1627                       l3606 12D8  
                     l3614 0802                       l3710 0214                       l3702 01FF  
                     l4510 0E34                       l4502 0E1B                       l4430 0CC2  
                     l4422 0CB0                       l4414 0C92                       l4406 0C7B  
                     l3384 09C0                       l3376 0996                       l3368 0969  
                     l3296 088D                       l3288 086E                       l3528 0BFE  
                     l3480 0B55                       l3472 0B16                       l3464 0AE0  
                     l3456 0AB5                       l3448 0A89                       l4096 1121  
                     l4088 10F5                       l4280 1D72                       l4272 1D65  
                     l4344 1CF9                       l4336 1CE2                       l4328 1CD0  
                     l3632 1B05                       l3544 1C16                       l3536 1BFD  
                     l3640 0087                       l2920 1653                       l2912 163E  
                     l2904 162B                       l3560 1E0F                       l3552 1DC5  
                     l3608 12E1                       l3616 0807                       l3800 0573  
                     l3712 0225                       l3704 0204                       l4264 1FFA  
                     l4192 1F92                       l4184 1F88                       l4176 1F7E  
                     l4168 1F74                       l4520 0E7B                       l4512 0E39  
                     l4504 0E21                       l4440 0D19                       l4432 0CCD  
                     l4424 0CB2                       l4416 0C96                       l4408 0C81  
                     l4360 0C14                       l3386 09C4                       l3378 09B1  
                     l3298 0891                       l3482 0B5C                       l3490 0B6C  
                     l3474 0B2B                       l3466 0AE7                       l3458 0ABC  
                     l3394 09D2                       l4098 1126                       l4290 1D87  
                     l4282 1D76                       l4274 1D67                       l4338 1CE6  
                     l4346 1CFF                       l3634 1B06                       l3626 1AED  
                     l3546 1C24                       l3538 1C02                       l3650 00CE  
                     l3642 0095                       l2930 1660                       l2922 1658  
                     l2914 163F                       l2906 162C                       l3562 1E14  
                     l3554 1DDD                       l3618 080D                       l3810 05EF  
                     l3802 058B                       l3730 027D                       l3714 022B  
                     l3722 0250                       l3706 0209                       l4530 0EBA  
                     l4522 0E7F                       l4514 0E5C                       l4450 0D39  
                     l4506 0E2A                       l4442 0D20                       l4434 0CD2  
                     l4418 0CA1                       l4426 0CB7                       l4370 0C22  
                     l4362 0C15                       l4354 0C0D                       l3388 09C6  
                     l3492 0B70                       l3484 0B60                       l3476 0B42  
                     l3468 0AF9                       l3396 09D6                       l4292 1D8A  
                     l4284 1D7B                       l4276 1D6B                       l4348 1D04  
                     l3628 1AEF                       l3900 1EF8                       l3548 1A35  
                     l2860 1D13                       l3660 00F1                       l3652 00DE  
                     l3644 009A                       l2940 166A                       l2932 1662  
                     l2924 165A                       l2908 1631                       l2916 1641  
                     l3572 1E3F                       l3556 1DF2                       l3580 1B2F  
                     l3820 0638                       l3812 05F4                       l3804 0590  
                     l3724 0262                       l3716 0237                       l3708 020E  
                     l4268 19D5                       l4196 1F98                       l4540 0F48  
                     l4532 0ED1                       l4524 0E9E                       l4516 0E60  
                     l4508 0E2F                       l4460 0D59                       l4452 0D3F  
                     l4444 0D26                       l4436 0CD8                       l4428 0CBB  
                     l4380 0C39                       l4372 0C26                       l4364 0C18  
                     l4356 0C10                       l3494 0B71                       l3486 0B61  
                     l3478 0B49                       l3398 09D8                       l4294 1D8F  
                     l4286 1D7F                       l4278 1D70                       l3910 1F37  
                     l3902 1F02                       l2870 1D5A                       l2862 1D18  
                     l3670 0136                       l3662 00FB                       l3654 00E3  
                     l3646 00B8                       l3638 0077                       l2950 1674  
                     l2942 166C                       l2934 1664                       l2926 165C  
                     l2918 164F                       l3558 1DF8                       l3566 1E19  
                     l3590 125E                       l3582 1B40                       l3830 06AC  
                     l3822 063A                       l3814 0620                       l3806 0598  
                     l3750 0338                       l3742 02B0                       l3726 0268  
                     l3734 028D                       l3718 0240                       l4198 1F9C  
                     l4542 0F4D                       l4534 0EFD                       l4526 0EA2  
                     l4518 0E67                       l4550 0FAC                       l4470 0D7D  
                     l4462 0D5D                       l4454 0D43                       l4438 0D13  
                     l4446 0D2E                       l4390 0C57                       l4382 0C3D  
                     l4374 0C2A                       l4366 0C1B                       l4358 0C12  
                     ?_pad 007B                       l3496 0B75                       l3488 0B68  
                     l4296 1D93                       l4288 1D81                       l3912 1F4B  
                     l3904 1F16                       l2864 1D1D                       l3680 0195  
                     l3672 013A                       l3664 00FE                       l3656 00E7  
                     l3648 00C8                       l2960 16AD                       l2944 166E  
                     l2936 1666                       l2928 165E                       l2952 1676  
                     l2880 15FD                       l3568 1E1F                       l3592 1264  
                     l3584 121E                       l3576 1A6F                       l3840 06C4  
                     l3832 06B1                       l3824 063D                       l3816 0626  
                     l3808 05B5                       l3752 0361                       l3744 02BD  
                     l3736 0296                       l3728 0274                       l4560 0FCE  
                     l4552 0FBE                       l4544 0F5A                       l4536 0F10  
                     l4528 0EB6                       l4480 0DA0                       l4472 0D84  
                     l4464 0D68                       l4456 0D4A                       l4448 0D33  
                     l4392 0C63                       l4384 0C44                       l4376 0C2E  
                     l4368 0C1E                       l3498 0B89                       l4298 1D97  
                     l3914 1F52                       l2866 1D28                       l2858 1D0E  
                     l3682 0199                       l3674 0175                       l3666 0103  
                     l3658 00EC                       l2962 16AF                       l2970 16C1  
                     l2954 1677                       l2946 1670                       l2938 1668  
                     l2890 1611                       l2882 15FE                       l2874 15F4  
                     l3594 127C                       l3586 1236                       l3578 1A75  
                     l3842 06C7                       l3834 06B5                       l3850 06DA  
                     l3826 0695                       l3818 0637                       l3770 03FE  
                     l3754 036B                       l3762 03C4                       l3746 02E9  
                     l3738 0298                       l3690 01AF                       l3930 1430  
                     l4570 0FEB                       l4562 0FD5                       l4546 0F5E  
                     l4538 0F28                       l4554 0FBF                       l4490 0DB2  
                     l4482 0DA2                       l4474 0D88                       l4466 0D75  
                     l4458 0D4E                       l4394 0C71                       l4386 0C50  
                     l4378 0C32                       l3916 1F5E                       l2868 1D48  
                     l3684 01A0                       l3676 0182                       l3668 0132  
                     l2980 16E1                       l2972 16CB                       l2964 16B3  
                     l2956 168F                       l2948 1672                       l2884 1603  
                     l2892 1613                       l2876 15F7                       l3588 1251  
                     l3860 073E                       l3852 06E0                       l3844 06CE  
                     l3836 06BC                       l3828 06A7                       l3780 041F  
                     l3772 040B                       l3756 0397                       l3748 0311  
                     l3764 03EB                       l3692 01BF                       l3940 1465  
                     l3932 1434                       l3924 140C                       l4580 0FF5  
                     l4572 0FED                       l4564 0FE2                       l4556 0FC3  
                     l4548 0FA1                       l4492 0DBD                       l4484 0DA4  
                     l4476 0D8F                       l4468 0D79                       l4396 0C73  
                     l4388 0C54                       l3678 018F                       l2990 16F3  
                     l2982 16E5                       l2974 16D0                       l2966 16B4  
                     l2958 16A9                       l2894 161B                       l2886 1608  
                     l2878 15F9                       l3598 1291                       l3870 078E  
                     l3862 076A                       l3854 06E8                       l3846 06D2  
                     l3838 06C0                       l3790 043C                       l3782 0425  
                     l3774 0411                       l3766 03F1                       l3758 039B  
                     l3694 01DD                       l4670 1589                       l3950 1497  
                     l3942 146E                       l3934 1447                       l3926 141F  
                     l4582 0FF7                       l4574 0FEF                       l4566 0FE6  
                     l4558 0FCA                       l4494 0DC2                       l4478 0D9C  
                     l4486 0DA7                       l4398 0C75                       l2992 16F4  
                     l2984 16E9                       l2968 16BD                       l2896 161E  
                     l2888 1610                       l3880 07BB                       l3872 0793  
                     l3864 076E                       l3856 06EC                       l3848 06D6  
                     l3792 0505                       l3776 0415                       l3784 0429  
                     l3768 03F6                       l3696 01E0                       l3688 01AE  
                     l4672 15CA                       l3960 14ED                       l3944 147D  
                     l3936 144A                       l3952 14B4                       l3928 1428  
                     l4584 0FF9                       l4576 0FF1                       l4568 0FE9  
                     l4496 0DC8                       l4488 0DAB                       l4674 1F0E  
                     l3890 1ECF                       l2994 16FD                       l2986 16ED  
                     l2978 16D9                       l2898 1624                       l3882 07C0  
                     l3874 0799                       l3858 06F0                       l3866 0772  
                     l3794 0509                       l3786 042B                       l3778 041D  
                     l3698 01F4                       l3970 1531                       l3962 14FC  
                     l3954 14BD                       l3946 148E                       l3938 1453  
                     l4586 0FFB                       l4578 0FF3                       l4498 0E0C  
                     l3892 1ED5                       l2988 16EF                       l2996 1702  
                     l3884 07CB                       l3876 07A7                       l3868 0780  
                     l3796 0517                       l3788 0433                       l4668 1543  
                     l3972 1536                       l3980 154E                       l3956 14C7  
                     l2998 1719                       l3886 07CF                       l3878 07AE  
                     l3798 0569                       l3990 1591                       l3982 1559  
                     l3974 1539                       l3966 1521                       l3958 14D1  
                     l3896 1ED9                       l3992 15A1                       l3984 156D  
                     l3968 152A                       l3898 1EE3                       l3978 153B  
                     l3988 1581                       l3998 15BE                       STR_1 1881  
                     STR_2 188E                       STR_3 1852                       STR_4 185E  
                     STR_5 182C                       STR_6 1846                       STR_7 181E  
                     STR_8 1800                       STR_9 186F             ?_display_float 012C  
                     _LATB 010D                       u3200 1D18                       u4000 1E81  
                     u3201 1D17                       u4001 1E80                       u3210 1D28  
                     u4010 1E9D                       u3211 1D27                       u4011 1E9C  
                     u3220 1D48                       u4020 1ECB                       u3300 164F  
                     u4100 0055                       u3221 1D47                       u4021 1ECA  
                     u3301 164E                       u4101 0054                       u4030 19EE  
                     u3310 1653                       u3230 15FD                       u4031 19ED  
                     u3311 1652                       u3231 15FC                       u4200 0881  
                     u5000 009A                       u3400 16D0                       u3320 168F  
                     u3240 1603                       u4120 0064                       u4040 000E  
                     u4201 0880                       u3225 1D44                       u5001 0099  
                     u4025 1EC7                       u3401 16CF                       u3321 168E  
                     u3241 1602                       u4121 0063                       u4041 000D  
                     u4210 089F                       u3410 16E5                       u3330 1698  
                     u3250 1608                       u4130 0069                       u4050 0024  
                     u4211 089E                       u3411 16E4                       u3331 1696  
                     u3251 1607                       u4131 0068                       u4115 0057  
                     u4220 08D7                       u4140 0832                       u5020 00C8  
                     u3500 177A                       u3420 16E9                       u3340 1699  
                     u3260 1624                       u4060 0037                       u5100 0204  
                     u4221 08D6                       u4141 0831                       u5021 00C7  
                     u3501 1779                       u3421 16E8                       u3325 168B  
                     u3261 1623                       u4061 0036                       u5101 0203  
                     u4310 092B                       u4150 0838                       u3190 1D13  
                     u5030 00E3                       u3510 177F                       u3430 16F3  
                     u3350 16A9                       u3270 162B                       u4070 003E  
                     u5110 0209                       u4311 092A                       u4151 0837  
                     u3191 1D12                       u5031 00E2                       u3511 177E  
                     u3431 16F2                       u3351 16A8                       u3271 162A  
                     u4071 003D                       u4055 0020                       u5111 0208  
                     u4400 0996                       u4160 083D                       u6000 1D6B  
                     u5040 00EC                       u3600 17D1                       u3520 1789  
                     u3360 16B3                       u3280 1631                       u5200 03C3  
                     u5120 0225                       u4401 0995                       u4305 0921  
                     u4161 083C                       u6001 1D6A                       u5041 00EB  
                     u5025 00C4                       u3601 17D0                       u3521 1788  
                     u3361 16B2                       u3281 1630                       u5201 03C2  
                     u5121 0224                       u4410 09B1                       u4330 093B  
                     u4250 08E9                       u4170 085B                       u6010 1D76  
                     u5050 0175                       u3610 17DA                       u3530 178F  
                     u3450 1719                       u3290 1636                       u4090 004E  
                     u5210 03EB                       u5130 022B                       u4411 09B0  
                     u4331 093A                       u4251 08E8                       u4235 08D8  
                     u4171 085A                       u6011 1D75                       u5051 0174  
                     u3611 17D9                       u3531 178E                       u3451 1718  
                     u3291 1635                       u4091 004D                       u5211 03EA  
                     u5131 022A                       u4420 09C4                       u4340 0940  
                     u4180 0861                       u4500 0A2B                       u6020 1D87  
                     u6100 1CC0                       u3700 1A55                       u5060 0182  
                     u3620 17DF                       u3540 1794                       u3460 1748  
                     u3380 16C7                       u5300 05EF                       u5220 03F6  
                     u5140 0262                       u4421 09C3                       u4405 0992  
                     u4341 093F                       u4325 092D                       u4245 08DF  
                     u4181 0860                       u4501 0A2A                       u6021 1D86  
                     u6101 1CBF                       u3701 1A54                       u5061 0181  
                     u3621 17DE                       u3541 1793                       u3461 1747  
                     u3453 1715                       u3445 16F7                       u3381 16C6  
                     u4085 0040                       u5301 05EE                       u5221 03F5  
                     u5141 0261                       u4350 0954                       u4270 0903  
                     u4190 0866                       u4430 09DC                       u6110 1CCB  
                     u5070 018F                       u3630 17EC                       u3550 179A  
                     u3470 1761                       u3390 16CB                       u5310 0626  
                     u5230 0411                       u5150 0268                       u4415 09AD  
                     u4351 0953                       u4271 0902                       u4191 0865  
                     u4431 09DB                       u6111 1CCA                       u5071 018E  
                     u5055 0171                       u3631 17EB                       u3551 1799  
                     u3471 1760                       u3391 16CA                       u3375 16B7  
                     u5311 0625                       u5231 0410                       u5151 0267  
                     u4360 095B                       u4280 0916                       u4600 0B75  
                     u4440 09E2                       u6040 1D97                       u6120 1CD6  
                     u3800 138C                       u5080 0195                       u3640 17F1  
                     u3560 17A1                       u3480 1766                       u5400 07C0  
                     u5320 0695                       u5240 0415                       u5160 02AF  
                     u6200 0C81                       u4361 095A                       u4281 0915  
                     u4265 08EB                       u4601 0B74                       u4441 09E1  
                     u6041 1D96                       u6121 1CD5                       u3801 138B  
                     u5081 0194                       u3641 17F0                       u3561 17A0  
                     u3481 1765                       u5401 07BF                       u5321 0694  
                     u5241 0414                       u5161 02AE                       u6201 0C80  
                     u4370 0961                       u4290 091E                       u4610 0B89  
                     u4530 0B21                       u4450 09E7                       u3730 1A69  
                     u5410 1EE3                       u3810 13B6                       u3650 17FE  
                     u3570 17A7                       u5330 06B1                       u5250 0425  
                     u5170 0311                       u5090 01DD                       u6210 0C87  
                     u4371 0960                       u4291 091D                       u4275 08FF  
                     u4611 0B88                       u4515 0AA4                       u4451 09E6  
                     u6035 1D8B                       u3731 1A68                       u3715 1A5A  
                     u5411 1EE2                       u3811 13B5                       u5075 018B  
                     u3651 17FD                       u3571 17A6                       u5331 06B0  
                     u5251 0424                       u5171 0310                       u5091 01DC  
                     u6211 0C86                       u4380 096D                       u3660 1B5F  
                     u4620 0B90                       u4540 0B38                       u4460 0A04  
                     u6060 1DA6                       u6140 1CE6                       u5420 1EF7  
                     u3820 13D5                       u3740 1314                       u3900 11A9  
                     u4700 1C24                       u3580 17B3                       u5340 06B5  
                     u5260 0517                       u5180 0338                       u5500 14D1  
                     u6300 0E21                       u6220 0CD8                       u4381 096C  
                     u3661 1B5E                       u4621 0B8F                       u4525 0ACF  
                     u4461 0A03                       u6061 1DA5                       u6141 1CE5  
                     u3725 1A5F                       u5421 1EF6                       u3821 13D4  
                     u3741 1313                       u3901 11A8                       u4701 1C23  
                     u3581 17B2                       u5341 06B4                       u5325 0691  
                     u5261 0516                       u5181 0337                       u5501 14D0  
                     u6301 0E20                       u6221 0CD7                       u4390 097B  
                     u4630 0B96                       u4470 0A0A                       u6150 1CF0  
                     u5430 1F4B                       u3830 13DA                       u3910 11CB  
                     u4710 1A42                       u3590 17C2                       u5350 06E0  
                     u5270 0569                       u5190 0361                       u5510 1558  
                     u6310 0E2F                       u6230 0D19                       u4631 0B95  
                     u4535 0B1D                       u4471 0A09                       u6055 1D98  
                     u6151 1CEF                       u6135 1CDA                       u5431 1F4A  
                     u3831 13D9                       u3815 13B2                       u3911 11CA  
                     u4711 1A41                       u3495 1770                       u5351 06DF  
                     u5271 0568                       u5191 0360                       u5511 1557  
                     u6311 0E2E                       u6231 0D18                       u3680 1B6F  
                     u4640 0BA2                       u4480 0A0F                       u5600 10D1  
                     u6080 1DB6                       u5440 1F52                       u3760 133F  
                     u3920 11E9                       u4720 1DEA                       u4800 1A8C  
                     u5360 0780                       u5280 058B                       u6320 0E34  
                     u6240 0D26                       u3681 1B6E                       u4641 0BA1  
                     u4545 0B34                       u4481 0A0E                       u5601 10D0  
                     u6081 1DB5                       u6065 1DA2                       u5441 1F51  
                     u3761 133E                       u3921 11E8                       u4705 1C20  
                     u4801 1A8B                       u5361 077F                       u5281 058A  
                     u5265 0513                       u6321 0E33                       u6241 0D25  
                     u4650 0BB0                       u4570 0B60                       u4490 0A26  
                     u6090 1DBB                       u6170 1CFF                       u3930 11EE  
                     u3850 113F                       u3690 1B98                       u4730 1DF8  
                     u4810 1B40                       u5370 078E                       u5290 0590  
                     u5450 141F                       u6330 0E39                       u6250 0D33  
                     u4395 0977                       u3675 1B64                       u4571 0B5F  
                     u4555 0B43                       u4491 0A25                       u6091 1DBA  
                     u6075 1DAC                       u6171 1CFE                       u6155 1CEC  
                     u3931 11ED                       u3915 11C7                       u3851 113E  
                     u4715 1A3E                       u3691 1B97                       u3595 17BE  
                     u4731 1DF7                       u4811 1B3F                       u5371 078D  
                     u5291 058F                       u5451 141E                       u6331 0E38  
                     u6251 0D32                       u4660 0BCB                       u5620 10EB  
                     u6180 1D04                       u3780 1369                       u4740 1E05  
                     u4900 12D8                       u4820 1243                       u5380 07B4  
                     u5460 1447                       u5540 1ACA                       u6340 0F48  
                     u6260 0D39                       u4661 0BCA                       u4565 0B56  
                     u5621 10EA                       u6181 1D03                       u6165 1CF5  
                     u5525 1BCB                       u4725 1DE6                       u4901 12D7  
                     u5381 07B2                       u5365 077C                       u5461 1446  
                     u5541 1AC9                       u6341 0F47                       u6261 0D38  
                     u4670 0BE3                       u4590 0B70                       u5550 1A1C  
                     u3790 1379                       u3870 116A                       u3950 1C81  
                     u4750 1E0F                       u4910 12EE                       u4830 125E  
                     u5390 07B5                       u5470 1465                       u6350 0FA1  
                     u6270 0D3F                       u6190 0C6D                       u4671 0BE2  
                     u4655 0BAC                       u4591 0B6F                       u5615 10DF  
                     u5535 1BD6                       u5551 1A1B                       u3791 1378  
                     u3871 1169                       u3951 1C80                       u4751 1E0E  
                     u4831 125D                       u5375 078A                       u5471 1464  
                     u6351 0FA0                       u6407 0D95                       u6271 0D3E  
                     u4680 0BFD                       u5640 10F9                       u5560 1090  
                     u5720 1011                       u3960 1C9D                       u4760 1E1F  
                     u4920 12F8                       u4840 1264                       u5480 14B4  
                     u5800 1F84                       u6360 0FB9                       u6280 0DC8  
                     u4681 0BFC                       u4665 0BC7                       u4585 0B62  
                     u5641 10F8                       u5561 108F                       u5721 1010  
                     u3961 1C9C                       u4761 1E1E                       u4745 1E01  
                     u4921 12F7                       u4841 1263                       u4825 123F  
                     u5481 14B3                       u5801 1F83                       u5705 1B9D  
                     u6361 0FB8                       u6417 0F53                       u6281 0DC7  
                     u5650 10FF                       u5570 1094                       u5730 101B  
                     u3890 1196                       u4690 1BFD                       u3970 1CB7  
                     u4770 1E2C                       u4850 1272                       u4930 0827  
                     u5490 14C7                       u5810 1F88                       u6290 0E12  
                     u4675 0BDF                       u5651 10FE                       u5635 10EF  
                     u5571 1093                       u5731 101A                       u3891 1195  
                     u4691 1BFC                       u3971 1CB6                       u4915 12EA  
                     u4835 125A                       u4931 0826                       u5491 14C6  
                     u5811 1F87                       u6507 1F68                       u5715 1BA8  
                     u6427 0FDB                       u6291 0E11                       u5660 1103  
                     u5580 10B4                       u5740 1028                       u4940 1A2D  
                     u3980 1E59                       u4780 1E37                       u4860 1290  
                     u5900 1FBF                       u5820 1F8E                       u5661 1102  
                     u5581 10B3                       u5741 1027                       u4941 1A2B  
                     u3981 1E58                       u4781 1E35                       u4861 128F  
                     u5901 1FBE                       u6517 1F99                       u5821 1F8D  
                     u6437 1C31                       u6365 0FB5                       u5670 1117  
                     u5750 103D                       u4950 1A2E                       u3990 1E75  
                     u4790 1E38                       u4870 129E                       u5910 1FC3  
                     u5830 1F92                       u5751 103C                       u3975 1CB3  
                     u3991 1E74                       u4775 1E28                       u4855 126E  
                     u6527 1FCA                       u5911 1FC2                       u5831 1F91  
                     u6447 1C40                       u5680 1126                       u4960 1AF6  
                     u4880 12A8                       u5920 1FD2                       u5840 1FA1  
                     u5760 1F70                       u5681 1125                       u4961 1AF5  
                     u4881 12A7                       u6537 1FFB                       u5921 1FD1  
                     u5841 1FA0                       u5761 1F6F                       u6457 1C4D  
                     u6377 0C4A                       u5690 112A                       u4970 1B05  
                     u4890 12CE                       u5930 1FD6                       u5850 1FA5  
                     u5770 1F74                       u5691 1129                       u5675 1113  
                     u5595 10C5                       u6547 1BE0                       u4971 1B04  
                     u4875 129A                       u5931 1FD5                       u5851 1FA4  
                     u5771 1F73                       u6467 1C5A                       u6387 0CA7  
                     u4980 0092                       u5940 1FDC                       u5860 1FAB  
                     u5780 1F7A                       u6557 1BF1                       u4981 0090  
                     u5941 1FDB                       u5861 1FAA                       u5781 1F79  
                     u6477 1C67                       u6397 0D6E                       u4990 0093  
                     u5950 1FE0                       u5870 1FAF                       u5790 1F7E  
                     u6567 1031                       u4895 12CA                       u5951 1FDF  
                     u5871 1FAE                       u5791 1F7D                       u6487 1BB1  
                     u5960 1FE6                       u5880 1FB5                       u5961 1FE5  
                     u5881 1FB4                       u6497 1BC1                       u5970 1FEA  
                     u5890 1FB9                       u5971 1FE9                       u5891 1FB8  
                     u5980 1FF0                       u5981 1FEF                       u5990 1FF4  
                     u5991 1FF3                       abs@a 0073                main@seconds 0163  
                     _dbuf 0220                       _labs 1B2F                       _atoi 1ECF  
                     _main 0C0D                       _dtoa 0075                       _prec 016C  
                     pad@i 0025                       pad@p 007C                       fsr0h 0005  
                     fsr1h 0007                       indf0 0000                       fsr0l 0004  
                     indf1 0001                       fsr1l 0006                       pad@w 0027  
                     btemp 007E              ___fpclassifyf 1DC5                       start 0002  
         __end_of_ADC_init 100A            ___fldiv@new_exp 004C                      ??_abs 0075  
                    ??_pad 0024              ___fltol@sign1 0078            __end_of___aodiv 140A  
                    ?_labs 0070                      ?_atoi 0079            __end_of___fladd 1800  
                    ?_main 0070                      ?_dtoa 0030            __end_of___aomod 121E  
          __end_of___fldiv 09D2            __end_of___awdiv 1DC5            __end_of___flneg 19F1  
                    STR_10 183A                      STR_11 1867                      STR_12 1876  
                    STR_13 180F                      STR_14 187C                      STR_15 1886  
                    STR_18 188A            __end_of___awmod 1D0E            __end_of___flmul 0C0D  
          __end_of___flsub 1AAD            __end_of___fltol 0075            ___awdiv@divisor 0077  
          ___awdiv@counter 0020               vfpfcnvrt@fmt 006D                      _TRISA 008C  
                    _TRISB 008D                      _TRISC 008E                      _TRISD 008F  
          __end_of_lcd_cmd 1BC7                      _flags 016E               main@tempBool 0155  
                    _fputc 1D0E                      _fputs 1B74            __end_of_isdigit 1A35  
             main@timeBool 0156                      labs@a 0070                      atoi@n 0022  
                    pad@fp 0029                      atoi@s 0079                      _width 016A  
                    _putch 0004                      dtoa@d 0030                      dtoa@i 0048  
                    main@v 0165                      dtoa@n 0040                      dtoa@p 003C  
                    dtoa@s 004A                      dtoa@w 003E            __end_of_isspace 1B0E  
                    status 0003                      wtemp0 007E            __end_of_sprintf 1AED  
           ?___fpclassifyf 0070            __initialization 07DB               __end_of_labs 1B51  
             __end_of_atoi 1F63               __end_of_main 1000               __end_of_dtoa 01AC  
          ADC_Convert@chan 0054                     ??_labs 0074                     ??_atoi 007B  
                   ??_main 0140                     ??_dtoa 0038            ??_display_float 007E  
                   ?_fputc 0070                     ?_fputs 0078                     _ADRESH 009C  
                   _ADRESL 009B           ___awdiv@dividend 0079                     _ANSELA 018C  
                   ?_putch 0070                     _ANSELD 018F                     u501lld 00B8  
                   u375lld 1333                     u384lld 13F8                     u377lld 135E  
                   u394lld 120C                     u386lld 115E                     u388lld 1189  
         __end_of___xxtofl 1134           __end_of_lcd_char 1BF7              main@inputTemp 0167  
            main@inputTime 015D               vfprintf@cfmt 00E5           __end_of_lcd_init 1C6D  
                   ___flge 1E44                     ___fleq 1C6D                  ??___aodiv 0070  
                ??___fladd 0020                  ??___aomod 0070                     ___wmul 1A4F  
                ??___fldiv 0042                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 0028                  ??___flsub 007E  
                ??___fltol 0074                     _efgtoa 01AC                     _floorf 121E  
                   _memcpy 0801                     _keypad 1F63     main@currentTemperature 0151  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                   pad@buf 007B                  ??_lcd_cmd 0070                     main@hr 0159  
       ADC_Convert@voltage 005A                     dtoa@fp 003B                     _strcpy 1A6E  
                   fputc@c 0070                     fputs@c 0020                     fputs@i 0021  
                   fputs@s 0023                  ??_isdigit 0072            ___fpclassifyf@e 0020  
          ___fpclassifyf@u 0022            ___fpclassifyf@x 0070                  ??_isspace 0072  
                ?_ADC_init 0070                     putch@c 0070           __end_of_vfprintf 1ACD  
                ??_sprintf 00ED                 ___flge@ff1 003A                 ___flge@ff2 003E  
          ??___fpclassifyf 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FD                 ___flneg@f1 0070                 ___fltol@f1 0070  
           __pcstackCOMMON 0070               __pidataBANK3 19DD              __end_of_fputc 1D65  
            __end_of_fputs 1B99              __end_of_putch 0005                 ??_ADC_init 0070  
                  ??_fputc 0073                    ??_fputs 0079                    ??_putch 0070  
               __pbssBANK2 016A                 __pbssBANK3 01A9                 __pbssBANK4 0220  
        __end_of__Umul8_16 1B74                 _efgtoa$943 00AA                 __pmaintext 0C0D  
                  ?___flge 003A                    ?___fleq 0070                    ?___wmul 0073  
                  ?_efgtoa 0068                    ?_floorf 0054                 _getInteger 19D4  
                  ?_memcpy 0070                    ?_keypad 0070                    ?_strcpy 0070  
           main@ldrVoltage 0148                  ?___xxtofl 0070              ??_ADC_Convert 0058  
        _lcd_DisplayString 1A06                  ?_lcd_char 0070         ?_lcd_DisplayString 0072  
                ?_lcd_init 0070        ??_lcd_DisplayString 0074                    ___aodiv 1309  
                  ___fladd 15F4                    ___aomod 1134                    ___fldiv 0828  
                  ___awdiv 1D65                    ___flneg 19E6                    ___awmod 1CBB  
                  ___flmul 09D2                    ___flsub 1A8D                    ___fltol 0005  
                ?_vfprintf 00E1                    __ptext1 1C2C                    __ptext2 1B99  
                  __ptext3 1F63                    __ptext4 19D4                    __ptext5 19F1  
                  __ptext6 1B0E                    __ptext7 1ACD                    __ptext8 1AAD  
                  __ptext9 140A                    _lcd_cmd 1B99       lcd_DisplayString@str 0072  
__end_of_lcd_DisplayString 1A1D                    _isdigit 1A1D                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _isspace 1AED                    efgtoa@c 006C  
                  efgtoa@d 00AF                    efgtoa@e 00B4                    efgtoa@f 0068  
                  efgtoa@g 00C9                    efgtoa@h 00BE                    efgtoa@i 00BC  
                  efgtoa@l 00C2                    efgtoa@m 00B1                    efgtoa@n 00C7  
                  efgtoa@p 00A6                    efgtoa@t 00A8                    efgtoa@u 00CD  
                  efgtoa@w 00B6                    atoi@neg 0020                 ??_lcd_char 0070  
                  _sprintf 1ACD                    main@key 0166                    main@min 015B  
                  clrloop0 19C9                 ??_lcd_init 0070       end_of_initialization 07FD  
                  floorf@e 0062                    floorf@m 005E                    floorf@u 0064  
                  floorf@x 0054        __end_of_ADC_Convert 108A                    memcpy@d 0076  
                  memcpy@n 0071                    memcpy@s 0077                    fputc@fp 0072  
                  init_ram 19CE                    fputs@fp 0078                    initloop 19CF  
           display_int@num 00EE             display_int@str 012C          __end_of_vfpfcnvrt 15F4  
               efgtoa@mode 00AD                 efgtoa@sign 00C6           vfpfcnvrt@convarg 00D5  
               ??_vfprintf 006F                ?_getInteger 0070                    strcpy@d 0076  
                  strcpy@s 0074                  _PORTCbits 000E                  _PORTDbits 000F  
              ___fladd@grs 007B              ___xxtofl@sign 0078                 lcd_cmd@cmd 0071  
              ___fldiv@grs 004E                ___fldiv@rem 0047      __end_of_display_float 1B2F  
              ___flmul@grs 002E              ??_display_int 007E             __end_of___flge 1ECF  
           __end_of___fleq 1CBB                vfpfcnvrt@ap 006E                vfpfcnvrt@cp 00DF  
              vfpfcnvrt@fp 00DE             __end_of___wmul 1A6E             __end_of_efgtoa 07DB  
           __end_of_floorf 1309             __end_of_memcpy 0828                 floorf@F526 01A9  
           __end_of_keypad 2000             __end_of_strcpy 1A8D        start_initialization 07DB  
              _ADC_Convert 100A                __end_of_abs 1A4F                __end_of_pad 1C2C  
    __end_of___fpclassifyf 1E44                vfprintf@fmt 00E1                   ??___flge 0042  
                 ??___fleq 0078                   ??___wmul 0077          ADC_Convert@result 005E  
                 ??_efgtoa 00A0                  __Umul8_16 1B51                __pdataBANK3 01A0  
                 ??_floorf 0058                   ??_memcpy 0073                   ??_keypad 0070  
                 ??_strcpy 0072                  ___fladd@a 0074                  ___fladd@b 0070  
                ___fldiv@a 003A                  ___fldiv@b 003E        __end_of_display_int 1A06  
                ___flmul@a 0024                  ___flmul@b 0020                  ___flsub@a 003A  
                ___flsub@b 003E                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0              __pcstackBANK2 0120           ___aodiv@dividend 0028  
     main@inputTemperature 014C                   ?___aodiv 0020                   ?___fladd 0070  
                 ?___aomod 0020                   ?___fldiv 003A                   ?___awdiv 0077  
         ___aodiv@quotient 0073                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0020                   ?___flsub 003A                   ?___fltol 0070  
               ?__Umul8_16 0070                   ?_lcd_cmd 0070                   ?_isdigit 0070  
                 ?_isspace 0070                   _ADC_init 1000                   ?_sprintf 00E7  
           ___wmul@product 0077                   _LATCbits 010E                   _LATDbits 010F  
                clear_ram0 19C8                  main@F3471 01A0                  main@F3469 01A6  
             ??_getInteger 0072                _display_int 19F1                  _vfpfcnvrt 140A  
                lcd_char@c 0071                 _ADCON0bits 009D                 _ADCON1bits 009E  
        ___wmul@multiplier 0073                  main@start 0150               _isspace$1023 0074  
               vfpfcnvrt@c 00DD         __end_of_getInteger 19DD                  memcpy@tmp 0074  
               vfprintf@ap 00E3                 vfprintf@fp 00E4              getInteger@num 0072  
              ??__Umul8_16 0072                 ?_vfpfcnvrt 006D            ___aodiv@divisor 0020  
          ___aodiv@counter 0071         ___fpclassifyf@F465 01AD                 sprintf@fmt 00E7  
                 ___xxtofl 108A               ?_ADC_Convert 0054                   _dtoa$912 0039  
                 __ptext10 01AC                   __ptext11 1A6E                   __ptext20 1E44  
                 __ptext12 0801                   __ptext21 1C6D                   __ptext13 1B2F  
                 __ptext30 1ECF                   __ptext22 0075                   __ptext14 121E  
                 __ptext31 1AED                   __ptext23 1BF7                   __ptext15 1DC5  
                 __ptext40 108A                   __ptext32 1A1D                   __ptext24 1B74  
                 __ptext16 0005                   __ptext41 09D2                   __ptext33 1A4F  
                 __ptext25 1D0E                   __ptext17 1A8D                   __ptext42 1B51  
                 __ptext34 1A06                   __ptext26 0004                   __ptext18 15F4  
                 __ptext43 0828                   __ptext35 1BC7                   __ptext27 1A35  
                 __ptext19 19E6                   __ptext36 1CBB                   __ptext28 1134  
                 __ptext37 1D65                   __ptext29 1309                   __ptext38 1000  
                 __ptext39 100A                   _lcd_char 1BC7                   _lcd_init 1C2C  
               strcpy@dest 0077           display_float@num 012C           display_float@str 0130  
                 efgtoa@fp 00B3                   efgtoa@ne 00A4                   efgtoa@pp 00AC  
                 efgtoa@ou 00B8            main@tempVoltage 0144                   _vfprintf 1AAD  
                 main@temp 0157           ___aomod@dividend 0028                   memcpy@d1 0075  
                 memcpy@s1 0070             __pstringtext10 186F             __pstringtext11 1876  
           __pstringtext12 187C             __pstringtext13 1881             __pstringtext14 1886  
           __pstringtext15 188A             __pstringtext16 188E             __pstringtext17 0000  
                 isdigit@c 0070                  sprintf@ap 0121                   isspace@c 0070  
                strcpy@src 0070                efgtoa@nmode 00AE            ___aomod@divisor 0020  
              ??_vfpfcnvrt 00D1            ___aomod@counter 0071              __pstringtext1 1800  
            __pstringtext2 180F              __pstringtext3 181E              __pstringtext4 182C  
            __pstringtext5 183A              __pstringtext6 1846              __pstringtext7 1852  
            __pstringtext8 185E              __pstringtext9 1867     __Umul8_16@multiplicand 0070  
                 sprintf@f 0122                   sprintf@s 0120              ___fladd@signs 0078  
             ___aodiv@sign 0072              _display_float 1B0E               ___fladd@aexp 0079  
             ___fladd@bexp 007A       __Umul8_16@multiplier 0078               ___aomod@sign 0072  
        __Umul8_16@product 0074  
