

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 24 18:32:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    25                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    27                           	psect	inittext,global,class=CODE,delta=2
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text33,local,class=CODE,merge=1,delta=2
    68                           	psect	text34,local,class=CODE,merge=1,delta=2
    69                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text37,local,class=CODE,merge=1,delta=2
    72                           	psect	text38,local,class=CODE,merge=1,delta=2
    73                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    79                           	dabs	1,0x7E,2
    80     0000                     
    81                           ; Version 2.40
    82                           ; Generated 17/11/2021 GMT
    83                           ; 
    84                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F1937 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     008F                     	;# 
   151     0090                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     0110                     	;# 
   171     0111                     	;# 
   172     0112                     	;# 
   173     0113                     	;# 
   174     0114                     	;# 
   175     0115                     	;# 
   176     0116                     	;# 
   177     0117                     	;# 
   178     0118                     	;# 
   179     0119                     	;# 
   180     011A                     	;# 
   181     011B                     	;# 
   182     011D                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     018F                     	;# 
   186     0190                     	;# 
   187     0191                     	;# 
   188     0191                     	;# 
   189     0192                     	;# 
   190     0193                     	;# 
   191     0193                     	;# 
   192     0193                     	;# 
   193     0194                     	;# 
   194     0195                     	;# 
   195     0196                     	;# 
   196     0199                     	;# 
   197     019A                     	;# 
   198     019B                     	;# 
   199     019B                     	;# 
   200     019B                     	;# 
   201     019B                     	;# 
   202     019C                     	;# 
   203     019C                     	;# 
   204     019D                     	;# 
   205     019E                     	;# 
   206     019F                     	;# 
   207     020D                     	;# 
   208     0210                     	;# 
   209     0211                     	;# 
   210     0212                     	;# 
   211     0213                     	;# 
   212     0214                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0216                     	;# 
   216     0217                     	;# 
   217     0291                     	;# 
   218     0291                     	;# 
   219     0292                     	;# 
   220     0293                     	;# 
   221     0294                     	;# 
   222     0295                     	;# 
   223     0295                     	;# 
   224     0296                     	;# 
   225     0298                     	;# 
   226     0298                     	;# 
   227     0299                     	;# 
   228     029A                     	;# 
   229     029B                     	;# 
   230     029C                     	;# 
   231     029C                     	;# 
   232     029D                     	;# 
   233     029E                     	;# 
   234     029F                     	;# 
   235     0311                     	;# 
   236     0311                     	;# 
   237     0312                     	;# 
   238     0313                     	;# 
   239     0314                     	;# 
   240     0315                     	;# 
   241     0315                     	;# 
   242     0316                     	;# 
   243     0318                     	;# 
   244     0318                     	;# 
   245     0319                     	;# 
   246     031A                     	;# 
   247     031C                     	;# 
   248     031C                     	;# 
   249     031D                     	;# 
   250     031E                     	;# 
   251     0394                     	;# 
   252     0395                     	;# 
   253     0396                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0791                     	;# 
   261     0792                     	;# 
   262     0793                     	;# 
   263     0794                     	;# 
   264     0795                     	;# 
   265     0798                     	;# 
   266     0799                     	;# 
   267     079A                     	;# 
   268     07A0                     	;# 
   269     07A1                     	;# 
   270     07A2                     	;# 
   271     07A3                     	;# 
   272     07A4                     	;# 
   273     07A5                     	;# 
   274     07A6                     	;# 
   275     07A7                     	;# 
   276     07A8                     	;# 
   277     07A9                     	;# 
   278     07AA                     	;# 
   279     07AB                     	;# 
   280     0FE4                     	;# 
   281     0FE5                     	;# 
   282     0FE6                     	;# 
   283     0FE7                     	;# 
   284     0FE8                     	;# 
   285     0FE9                     	;# 
   286     0FEA                     	;# 
   287     0FEB                     	;# 
   288     0FED                     	;# 
   289     0FEE                     	;# 
   290     0FEF                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0015                     	;# 
   312     0016                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001C                     	;# 
   320     001E                     	;# 
   321     001F                     	;# 
   322     008C                     	;# 
   323     008D                     	;# 
   324     008E                     	;# 
   325     008F                     	;# 
   326     0090                     	;# 
   327     0091                     	;# 
   328     0092                     	;# 
   329     0093                     	;# 
   330     0095                     	;# 
   331     0096                     	;# 
   332     0097                     	;# 
   333     0098                     	;# 
   334     0099                     	;# 
   335     009A                     	;# 
   336     009B                     	;# 
   337     009B                     	;# 
   338     009C                     	;# 
   339     009D                     	;# 
   340     009E                     	;# 
   341     010C                     	;# 
   342     010D                     	;# 
   343     010E                     	;# 
   344     010F                     	;# 
   345     0110                     	;# 
   346     0111                     	;# 
   347     0112                     	;# 
   348     0113                     	;# 
   349     0114                     	;# 
   350     0115                     	;# 
   351     0116                     	;# 
   352     0117                     	;# 
   353     0118                     	;# 
   354     0119                     	;# 
   355     011A                     	;# 
   356     011B                     	;# 
   357     011D                     	;# 
   358     018C                     	;# 
   359     018D                     	;# 
   360     018F                     	;# 
   361     0190                     	;# 
   362     0191                     	;# 
   363     0191                     	;# 
   364     0192                     	;# 
   365     0193                     	;# 
   366     0193                     	;# 
   367     0193                     	;# 
   368     0194                     	;# 
   369     0195                     	;# 
   370     0196                     	;# 
   371     0199                     	;# 
   372     019A                     	;# 
   373     019B                     	;# 
   374     019B                     	;# 
   375     019B                     	;# 
   376     019B                     	;# 
   377     019C                     	;# 
   378     019C                     	;# 
   379     019D                     	;# 
   380     019E                     	;# 
   381     019F                     	;# 
   382     020D                     	;# 
   383     0210                     	;# 
   384     0211                     	;# 
   385     0212                     	;# 
   386     0213                     	;# 
   387     0214                     	;# 
   388     0215                     	;# 
   389     0215                     	;# 
   390     0216                     	;# 
   391     0217                     	;# 
   392     0291                     	;# 
   393     0291                     	;# 
   394     0292                     	;# 
   395     0293                     	;# 
   396     0294                     	;# 
   397     0295                     	;# 
   398     0295                     	;# 
   399     0296                     	;# 
   400     0298                     	;# 
   401     0298                     	;# 
   402     0299                     	;# 
   403     029A                     	;# 
   404     029B                     	;# 
   405     029C                     	;# 
   406     029C                     	;# 
   407     029D                     	;# 
   408     029E                     	;# 
   409     029F                     	;# 
   410     0311                     	;# 
   411     0311                     	;# 
   412     0312                     	;# 
   413     0313                     	;# 
   414     0314                     	;# 
   415     0315                     	;# 
   416     0315                     	;# 
   417     0316                     	;# 
   418     0318                     	;# 
   419     0318                     	;# 
   420     0319                     	;# 
   421     031A                     	;# 
   422     031C                     	;# 
   423     031C                     	;# 
   424     031D                     	;# 
   425     031E                     	;# 
   426     0394                     	;# 
   427     0395                     	;# 
   428     0396                     	;# 
   429     0415                     	;# 
   430     0416                     	;# 
   431     0417                     	;# 
   432     041C                     	;# 
   433     041D                     	;# 
   434     041E                     	;# 
   435     0791                     	;# 
   436     0792                     	;# 
   437     0793                     	;# 
   438     0794                     	;# 
   439     0795                     	;# 
   440     0798                     	;# 
   441     0799                     	;# 
   442     079A                     	;# 
   443     07A0                     	;# 
   444     07A1                     	;# 
   445     07A2                     	;# 
   446     07A3                     	;# 
   447     07A4                     	;# 
   448     07A5                     	;# 
   449     07A6                     	;# 
   450     07A7                     	;# 
   451     07A8                     	;# 
   452     07A9                     	;# 
   453     07AA                     	;# 
   454     07AB                     	;# 
   455     0FE4                     	;# 
   456     0FE5                     	;# 
   457     0FE6                     	;# 
   458     0FE7                     	;# 
   459     0FE8                     	;# 
   460     0FE9                     	;# 
   461     0FEA                     	;# 
   462     0FEB                     	;# 
   463     0FED                     	;# 
   464     0FEE                     	;# 
   465     0FEF                     	;# 
   466                           
   467                           	psect	idataBANK3
   468     1C62                     __pidataBANK3:
   469                           
   470                           ;initializer for main@F3477
   471     1C62  3430               	retlw	48
   472     1C63  3430               	retlw	48
   473     1C64  343A               	retlw	58
   474     1C65  3430               	retlw	48
   475     1C66  3430               	retlw	48
   476     1C67  3400               	retlw	0
   477                           
   478                           ;initializer for main@F3475
   479     1C68  3430               	retlw	48
   480     1C69  3430               	retlw	48
   481     1C6A  3430               	retlw	48
   482     000E                     _PORTCbits	set	14
   483     000F                     _PORTDbits	set	15
   484     008E                     _TRISC	set	142
   485     008D                     _TRISB	set	141
   486     008F                     _TRISD	set	143
   487     009B                     _ADRESL	set	155
   488     009C                     _ADRESH	set	156
   489     009E                     _ADCON1bits	set	158
   490     009D                     _ADCON0bits	set	157
   491     010E                     _LATCbits	set	270
   492     010F                     _LATDbits	set	271
   493     010D                     _LATB	set	269
   494     018C                     _ANSELA	set	396
   495     018F                     _ANSELD	set	399
   496                           
   497                           	psect	stringtext1
   498     1800                     __pstringtext1:
   499     1800                     STR_6:
   500     1800  3449               	retlw	73	;'I'
   501     1801  346E               	retlw	110	;'n'
   502     1802  3470               	retlw	112	;'p'
   503     1803  3475               	retlw	117	;'u'
   504     1804  3474               	retlw	116	;'t'
   505     1805  3465               	retlw	101	;'e'
   506     1806  3464               	retlw	100	;'d'
   507     1807  3420               	retlw	32	;' '
   508     1808  3454               	retlw	84	;'T'
   509     1809  3465               	retlw	101	;'e'
   510     180A  346D               	retlw	109	;'m'
   511     180B  3470               	retlw	112	;'p'
   512     180C  342E               	retlw	46	;'.'
   513     180D  3420               	retlw	32	;' '
   514     180E  343A               	retlw	58	;':'
   515     180F  3400               	retlw	0
   516                           
   517                           	psect	stringtext2
   518     1810                     __pstringtext2:
   519     1810                     STR_9:
   520     1810  344F               	retlw	79	;'O'
   521     1811  3456               	retlw	86	;'V'
   522     1812  3445               	retlw	69	;'E'
   523     1813  344E               	retlw	78	;'N'
   524     1814  3420               	retlw	32	;' '
   525     1815  3453               	retlw	83	;'S'
   526     1816  3454               	retlw	84	;'T'
   527     1817  3441               	retlw	65	;'A'
   528     1818  3452               	retlw	82	;'R'
   529     1819  3454               	retlw	84	;'T'
   530     181A  3449               	retlw	73	;'I'
   531     181B  344E               	retlw	78	;'N'
   532     181C  3447               	retlw	71	;'G'
   533     181D  3420               	retlw	32	;' '
   534     181E  3400               	retlw	0
   535                           
   536                           	psect	stringtext3
   537     181F                     __pstringtext3:
   538     181F                     STR_13:
   539     181F  3454               	retlw	84	;'T'
   540     1820  3449               	retlw	73	;'I'
   541     1821  344D               	retlw	77	;'M'
   542     1822  3445               	retlw	69	;'E'
   543     1823  3452               	retlw	82	;'R'
   544     1824  3420               	retlw	32	;' '
   545     1825  3446               	retlw	70	;'F'
   546     1826  3449               	retlw	73	;'I'
   547     1827  344E               	retlw	78	;'N'
   548     1828  3449               	retlw	73	;'I'
   549     1829  3453               	retlw	83	;'S'
   550     182A  3448               	retlw	72	;'H'
   551     182B  3445               	retlw	69	;'E'
   552     182C  3444               	retlw	68	;'D'
   553     182D  3400               	retlw	0
   554                           
   555                           	psect	stringtext4
   556     182E                     __pstringtext4:
   557     182E                     STR_7:
   558     182E  3445               	retlw	69	;'E'
   559     182F  346E               	retlw	110	;'n'
   560     1830  3474               	retlw	116	;'t'
   561     1831  3465               	retlw	101	;'e'
   562     1832  3472               	retlw	114	;'r'
   563     1833  3420               	retlw	32	;' '
   564     1834  3454               	retlw	84	;'T'
   565     1835  3465               	retlw	101	;'e'
   566     1836  346D               	retlw	109	;'m'
   567     1837  3470               	retlw	112	;'p'
   568     1838  342E               	retlw	46	;'.'
   569     1839  3420               	retlw	32	;' '
   570     183A  343A               	retlw	58	;':'
   571     183B  3400               	retlw	0
   572                           
   573                           	psect	stringtext5
   574     183C                     __pstringtext5:
   575     183C                     STR_8:
   576     183C  3449               	retlw	73	;'I'
   577     183D  346E               	retlw	110	;'n'
   578     183E  3470               	retlw	112	;'p'
   579     183F  3475               	retlw	117	;'u'
   580     1840  3474               	retlw	116	;'t'
   581     1841  3465               	retlw	101	;'e'
   582     1842  3464               	retlw	100	;'d'
   583     1843  3420               	retlw	32	;' '
   584     1844  3454               	retlw	84	;'T'
   585     1845  3469               	retlw	105	;'i'
   586     1846  346D               	retlw	109	;'m'
   587     1847  3465               	retlw	101	;'e'
   588     1848  343A               	retlw	58	;':'
   589     1849  3400               	retlw	0
   590                           
   591                           	psect	stringtext6
   592     184A                     __pstringtext6:
   593     184A                     STR_11:
   594     184A  3445               	retlw	69	;'E'
   595     184B  346E               	retlw	110	;'n'
   596     184C  3474               	retlw	116	;'t'
   597     184D  3465               	retlw	101	;'e'
   598     184E  3472               	retlw	114	;'r'
   599     184F  3420               	retlw	32	;' '
   600     1850  3454               	retlw	84	;'T'
   601     1851  3469               	retlw	105	;'i'
   602     1852  346D               	retlw	109	;'m'
   603     1853  3465               	retlw	101	;'e'
   604     1854  343A               	retlw	58	;':'
   605     1855  3400               	retlw	0
   606                           
   607                           	psect	stringtext7
   608     1856                     __pstringtext7:
   609     1856                     STR_4:
   610     1856  344F               	retlw	79	;'O'
   611     1857  3456               	retlw	86	;'V'
   612     1858  3445               	retlw	69	;'E'
   613     1859  344E               	retlw	78	;'N'
   614     185A  3420               	retlw	32	;' '
   615     185B  3453               	retlw	83	;'S'
   616     185C  3459               	retlw	89	;'Y'
   617     185D  3453               	retlw	83	;'S'
   618     185E  3454               	retlw	84	;'T'
   619     185F  3445               	retlw	69	;'E'
   620     1860  344D               	retlw	77	;'M'
   621     1861  3400               	retlw	0
   622                           
   623                           	psect	stringtext8
   624     1862                     __pstringtext8:
   625     1862                     STR_5:
   626     1862  3447               	retlw	71	;'G'
   627     1863  3452               	retlw	82	;'R'
   628     1864  344F               	retlw	79	;'O'
   629     1865  3455               	retlw	85	;'U'
   630     1866  3450               	retlw	80	;'P'
   631     1867  342D               	retlw	45	;'-'
   632     1868  3420               	retlw	32	;' '
   633     1869  3448               	retlw	72	;'H'
   634     186A  3400               	retlw	0
   635                           
   636                           	psect	stringtext9
   637     186B                     __pstringtext9:
   638     186B                     STR_10:
   639     186B  344E               	retlw	78	;'N'
   640     186C  344F               	retlw	79	;'O'
   641     186D  3457               	retlw	87	;'W'
   642     186E  342E               	retlw	46	;'.'
   643     186F  342E               	retlw	46	;'.'
   644     1870  342E               	retlw	46	;'.'
   645     1871  3400               	retlw	0
   646                           
   647                           	psect	stringtext10
   648     1872                     __pstringtext10:
   649     1872                     STR_12:
   650     1872  3454               	retlw	84	;'T'
   651     1873  3445               	retlw	69	;'E'
   652     1874  344D               	retlw	77	;'M'
   653     1875  3450               	retlw	80	;'P'
   654     1876  343A               	retlw	58	;':'
   655     1877  3400               	retlw	0
   656                           
   657                           	psect	stringtext11
   658     1878                     __pstringtext11:
   659     1878                     STR_14:
   660     1878  342A               	retlw	42	;'*'
   661     1879  342A               	retlw	42	;'*'
   662     187A  342A               	retlw	42	;'*'
   663     187B  342A               	retlw	42	;'*'
   664     187C  3400               	retlw	0
   665                           
   666                           	psect	stringtext12
   667     187D                     __pstringtext12:
   668     187D                     STR_1:
   669     187D  3425               	retlw	37	;'%'
   670     187E  342E               	retlw	46	;'.'
   671     187F  3432               	retlw	50	;'2'
   672     1880  3466               	retlw	102	;'f'
   673     1881  3400               	retlw	0
   674                           
   675                           	psect	stringtext13
   676     1882                     __pstringtext13:
   677     1882                     STR_15:
   678     1882  3469               	retlw	105	;'i'
   679     1883  346E               	retlw	110	;'n'
   680     1884  3466               	retlw	102	;'f'
   681     1885  3400               	retlw	0
   682                           
   683                           	psect	stringtext14
   684     1886                     __pstringtext14:
   685     1886                     STR_18:
   686     1886  346E               	retlw	110	;'n'
   687     1887  3461               	retlw	97	;'a'
   688     1888  346E               	retlw	110	;'n'
   689     1889  3400               	retlw	0
   690                           
   691                           	psect	stringtext15
   692     188A                     __pstringtext15:
   693     188A                     STR_3:
   694     188A  3425               	retlw	37	;'%'
   695     188B  3464               	retlw	100	;'d'
   696     188C  3400               	retlw	0
   697                           
   698                           	psect	stringtext16
   699     188D                     __pstringtext16:
   700     188D                     STR_2:
   701     188D  3425               	retlw	37	;'%'
   702     188E  3466               	retlw	102	;'f'
   703     188F  3400               	retlw	0
   704                           
   705                           	psect	stringtext17
   706     0000                     __pstringtext17:
   707     1882                     
   708                           	psect	cinit
   709     07E0                     start_initialization:	
   710                           ; #config settings
   711                           
   712     07E0                     __initialization:
   713                           
   714                           ; Initialize objects allocated to BANK3
   715     07E0  3062               	movlw	low __pidataBANK3
   716     07E1  0084               	movwf	4
   717     07E2  309C               	movlw	(high __pidataBANK3)| (0+128)
   718     07E3  0085               	movwf	5
   719     07E4  30D4               	movlw	low __pdataBANK3
   720     07E5  0086               	movwf	6
   721     07E6  3001               	movlw	high __pdataBANK3
   722     07E7  0087               	movwf	7
   723     07E8  3009               	movlw	9
   724     07E9  319C  2453  3187   	fcall	init_ram
   725                           
   726                           ; Clear objects allocated to BANK1
   727     07EC  0021               	movlb	1	; select bank1
   728     07ED  01EF               	clrf	__pbssBANK1& (0+127)
   729                           
   730                           ; Clear objects allocated to BANK2
   731     07EE  3043               	movlw	low __pbssBANK2
   732     07EF  0084               	movwf	4
   733     07F0  3001               	movlw	high __pbssBANK2
   734     07F1  0085               	movwf	5
   735     07F2  300C               	movlw	12
   736     07F3  319C  244D  3187   	fcall	clear_ram0
   737                           
   738                           ; Clear objects allocated to BANK4
   739     07F6  3020               	movlw	low __pbssBANK4
   740     07F7  0084               	movwf	4
   741     07F8  3002               	movlw	high __pbssBANK4
   742     07F9  0085               	movwf	5
   743     07FA  3050               	movlw	80
   744     07FB  319C  244D         	fcall	clear_ram0
   745     07FD                     end_of_initialization:	
   746                           ;End of C runtime variable initialization code
   747                           
   748     07FD                     __end_of__initialization:
   749     07FD  0020               	movlb	0
   750     07FE  318C  2C05         	ljmp	_main	;jump to C main() function
   751                           
   752                           	psect	bssBANK1
   753     00EF                     __pbssBANK1:
   754     00EF                     _flags:
   755     00EF                     	ds	1
   756                           
   757                           	psect	bssBANK2
   758     0143                     __pbssBANK2:
   759     0143                     floorf@F526:
   760     0143                     	ds	4
   761     0147                     ___fpclassifyf@F465:
   762     0147                     	ds	4
   763     014B                     _width:
   764     014B                     	ds	2
   765     014D                     _prec:
   766     014D                     	ds	2
   767                           
   768                           	psect	dataBANK3
   769     01D4                     __pdataBANK3:
   770     01D4                     main@F3477:
   771     01D4                     	ds	6
   772     01DA                     main@F3475:
   773     01DA                     	ds	3
   774                           
   775                           	psect	bssBANK4
   776     0220                     __pbssBANK4:
   777     0220                     _dbuf:
   778     0220                     	ds	80
   779                           
   780                           	psect	inittext
   781     1C53                     init_ram:
   782     1C53  00FE               	movwf	126
   783     1C54                     initloop:
   784     1C54  0012               	moviw fsr0++
   785     1C55  001E               	movwi fsr1++
   786     1C56  0BFE               	decfsz	126,f
   787     1C57  2C54               	goto	initloop
   788     1C58  3400               	retlw	0
   789                           
   790                           	psect	clrtext
   791     1C4D                     clear_ram0:	
   792                           ;	Called with FSR0 containing the base address, and
   793                           ;	WREG with the size to clear
   794                           
   795     1C4D  0064               	clrwdt	;clear the watchdog before getting into this loop
   796     1C4E                     clrloop0:
   797     1C4E  0180               	clrf	0	;clear RAM location pointed to by FSR
   798     1C4F  3101               	addfsr 0,1
   799     1C50  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   800     1C51  2C4E               	goto	clrloop0	;have we reached the end yet?
   801     1C52  3400               	retlw	0	;all done for this memory range, return
   802                           
   803                           	psect	cstackBANK3
   804     01A0                     __pcstackBANK3:
   805     01A0                     main@tempVoltage:
   806                           
   807                           ; 4 bytes @ 0x0
   808     01A0                     	ds	4
   809     01A4                     main@inputTemperature:
   810                           
   811                           ; 4 bytes @ 0x4
   812     01A4                     	ds	4
   813     01A8                     main@n0:
   814                           
   815                           ; 2 bytes @ 0x8
   816     01A8                     	ds	2
   817     01AA                     main@n1:
   818                           
   819                           ; 2 bytes @ 0xA
   820     01AA                     	ds	2
   821     01AC                     main@n2:
   822                           
   823                           ; 2 bytes @ 0xC
   824     01AC                     	ds	2
   825     01AE                     main@hr0:
   826                           
   827                           ; 2 bytes @ 0xE
   828     01AE                     	ds	2
   829     01B0                     main@hr1:
   830                           
   831                           ; 2 bytes @ 0x10
   832     01B0                     	ds	2
   833     01B2                     main@min0:
   834                           
   835                           ; 2 bytes @ 0x12
   836     01B2                     	ds	2
   837     01B4                     main@min1:
   838                           
   839                           ; 2 bytes @ 0x14
   840     01B4                     	ds	2
   841     01B6                     main@start:
   842                           
   843                           ; 1 bytes @ 0x16
   844     01B6                     	ds	1
   845     01B7                     main@currentTemperature:
   846                           
   847                           ; 4 bytes @ 0x17
   848     01B7                     	ds	4
   849     01BB                     main@tempBool:
   850                           
   851                           ; 1 bytes @ 0x1B
   852     01BB                     	ds	1
   853     01BC                     main@timeBool:
   854                           
   855                           ; 1 bytes @ 0x1C
   856     01BC                     	ds	1
   857     01BD                     main@temp:
   858                           
   859                           ; 2 bytes @ 0x1D
   860     01BD                     	ds	2
   861     01BF                     main@hr:
   862                           
   863                           ; 2 bytes @ 0x1F
   864     01BF                     	ds	2
   865     01C1                     main@min:
   866                           
   867                           ; 2 bytes @ 0x21
   868     01C1                     	ds	2
   869     01C3                     main@seconds:
   870                           
   871                           ; 2 bytes @ 0x23
   872     01C3                     	ds	2
   873     01C5                     main@v:
   874                           
   875                           ; 1 bytes @ 0x25
   876     01C5                     	ds	1
   877     01C6                     main@key:
   878                           
   879                           ; 1 bytes @ 0x26
   880     01C6                     	ds	1
   881     01C7                     main@count:
   882                           
   883                           ; 2 bytes @ 0x27
   884     01C7                     	ds	2
   885     01C9                     main@inputTime:
   886                           
   887                           ; 6 bytes @ 0x29
   888     01C9                     	ds	6
   889     01CF                     main@inputTemp:
   890                           
   891                           ; 3 bytes @ 0x2F
   892     01CF                     	ds	3
   893     01D2                     main@count2:
   894                           
   895                           ; 2 bytes @ 0x32
   896     01D2                     	ds	2
   897                           
   898                           	psect	cstackBANK2
   899     0120                     __pcstackBANK2:
   900     0120                     sprintf@ap:
   901                           
   902                           ; 1 bytes @ 0x0
   903     0120                     	ds	1
   904     0121                     sprintf@f:
   905                           
   906                           ; 10 bytes @ 0x1
   907     0121                     	ds	10
   908     012B                     ?_display_float:
   909     012B                     ?_display_int:	
   910                           ; 1 bytes @ 0xB
   911                           
   912     012B                     display_int@num:	
   913                           ; 1 bytes @ 0xB
   914                           
   915     012B                     display_float@num:	
   916                           ; 2 bytes @ 0xB
   917                           
   918                           
   919                           ; 4 bytes @ 0xB
   920     012B                     	ds	2
   921     012D                     display_int@str:
   922                           
   923                           ; 16 bytes @ 0xD
   924     012D                     	ds	2
   925     012F                     display_float@str:
   926                           
   927                           ; 16 bytes @ 0xF
   928     012F                     	ds	16
   929     013F                     ??_main:
   930                           
   931                           ; 1 bytes @ 0x1F
   932     013F                     	ds	4
   933                           
   934                           	psect	cstackBANK1
   935     00A0                     __pcstackBANK1:
   936     00A0                     ??_efgtoa:
   937                           
   938                           ; 1 bytes @ 0x0
   939     00A0                     	ds	4
   940     00A4                     efgtoa@ne:
   941                           
   942                           ; 2 bytes @ 0x4
   943     00A4                     	ds	2
   944     00A6                     efgtoa@p:
   945                           
   946                           ; 2 bytes @ 0x6
   947     00A6                     	ds	2
   948     00A8                     efgtoa@t:
   949                           
   950                           ; 2 bytes @ 0x8
   951     00A8                     	ds	2
   952     00AA                     _efgtoa$955:
   953                           
   954                           ; 2 bytes @ 0xA
   955     00AA                     	ds	2
   956     00AC                     efgtoa@pp:
   957                           
   958                           ; 1 bytes @ 0xC
   959     00AC                     	ds	1
   960     00AD                     efgtoa@mode:
   961                           
   962                           ; 1 bytes @ 0xD
   963     00AD                     	ds	1
   964     00AE                     efgtoa@nmode:
   965                           
   966                           ; 1 bytes @ 0xE
   967     00AE                     	ds	1
   968     00AF                     efgtoa@d:
   969                           
   970                           ; 2 bytes @ 0xF
   971     00AF                     	ds	2
   972     00B1                     efgtoa@m:
   973                           
   974                           ; 2 bytes @ 0x11
   975     00B1                     	ds	2
   976     00B3                     efgtoa@fp:
   977                           
   978                           ; 1 bytes @ 0x13
   979     00B3                     	ds	1
   980     00B4                     efgtoa@e:
   981                           
   982                           ; 2 bytes @ 0x14
   983     00B4                     	ds	2
   984     00B6                     efgtoa@w:
   985                           
   986                           ; 2 bytes @ 0x16
   987     00B6                     	ds	2
   988     00B8                     efgtoa@ou:
   989                           
   990                           ; 4 bytes @ 0x18
   991     00B8                     	ds	4
   992     00BC                     efgtoa@i:
   993                           
   994                           ; 2 bytes @ 0x1C
   995     00BC                     	ds	2
   996     00BE                     efgtoa@h:
   997                           
   998                           ; 4 bytes @ 0x1E
   999     00BE                     	ds	4
  1000     00C2                     efgtoa@l:
  1001                           
  1002                           ; 4 bytes @ 0x22
  1003     00C2                     	ds	4
  1004     00C6                     efgtoa@sign:
  1005                           
  1006                           ; 1 bytes @ 0x26
  1007     00C6                     	ds	1
  1008     00C7                     efgtoa@n:
  1009                           
  1010                           ; 2 bytes @ 0x27
  1011     00C7                     	ds	2
  1012     00C9                     efgtoa@g:
  1013                           
  1014                           ; 4 bytes @ 0x29
  1015     00C9                     	ds	4
  1016     00CD                     efgtoa@u:
  1017                           
  1018                           ; 4 bytes @ 0x2D
  1019     00CD                     	ds	4
  1020     00D1                     ??_vfpfcnvrt:
  1021                           
  1022                           ; 1 bytes @ 0x31
  1023     00D1                     	ds	4
  1024     00D5                     vfpfcnvrt@convarg:
  1025                           
  1026                           ; 8 bytes @ 0x35
  1027     00D5                     	ds	8
  1028     00DD                     vfpfcnvrt@c:
  1029                           
  1030                           ; 1 bytes @ 0x3D
  1031     00DD                     	ds	1
  1032     00DE                     vfpfcnvrt@fp:
  1033                           
  1034                           ; 1 bytes @ 0x3E
  1035     00DE                     	ds	1
  1036     00DF                     vfpfcnvrt@cp:
  1037                           
  1038                           ; 2 bytes @ 0x3F
  1039     00DF                     	ds	2
  1040     00E1                     ?_vfprintf:
  1041     00E1                     vfprintf@fmt:	
  1042                           ; 2 bytes @ 0x41
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0x41
  1046     00E1                     	ds	2
  1047     00E3                     vfprintf@ap:
  1048                           
  1049                           ; 1 bytes @ 0x43
  1050     00E3                     	ds	1
  1051     00E4                     vfprintf@fp:
  1052                           
  1053                           ; 1 bytes @ 0x44
  1054     00E4                     	ds	1
  1055     00E5                     vfprintf@cfmt:
  1056                           
  1057                           ; 2 bytes @ 0x45
  1058     00E5                     	ds	2
  1059     00E7                     ?_sprintf:
  1060     00E7                     sprintf@s:	
  1061                           ; 2 bytes @ 0x47
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x47
  1065     00E7                     	ds	2
  1066     00E9                     sprintf@fmt:
  1067                           
  1068                           ; 2 bytes @ 0x49
  1069     00E9                     	ds	6
  1070                           
  1071                           	psect	cstackCOMMON
  1072     0070                     __pcstackCOMMON:
  1073     0070                     ?___fleq:
  1074     0070                     ?_strcpy:	
  1075                           ; 1 bit 
  1076                           
  1077     0070                     ?_memcpy:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080     0070                     ?_putch:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083     0070                     ??_putch:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086     0070                     ?_lcd_init:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089     0070                     ??_lcd_init:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092     0070                     ?_lcd_cmd:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095     0070                     ??_lcd_cmd:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098     0070                     ?_lcd_char:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101     0070                     ??_lcd_char:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104     0070                     ?_ADC_init:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107     0070                     ??_ADC_init:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110     0070                     ?_keypad:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113     0070                     ??_keypad:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116     0070                     ?_main:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119     0070                     ??___aodiv:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122     0070                     ??___aomod:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     0070                     ?__Umul8_16:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128     0070                     ?_fputc:	
  1129                           ; 2 bytes @ 0x0
  1130                           
  1131     0070                     ?___fpclassifyf:	
  1132                           ; 2 bytes @ 0x0
  1133                           
  1134     0070                     ?_isdigit:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137     0070                     ?_isspace:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140     0070                     ?___wmul:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143     0070                     ?___awmod:	
  1144                           ; 2 bytes @ 0x0
  1145                           
  1146     0070                     ?_labs:	
  1147                           ; 2 bytes @ 0x0
  1148                           
  1149     0070                     ?___flneg:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152     0070                     ?___fltol:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155     0070                     ?___fladd:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158     0070                     ?___xxtofl:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161     0070                     __Umul8_16@multiplicand:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164     0070                     memcpy@s1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167     0070                     putch@c:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0070                     ___wmul@multiplier:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173     0070                     ___awmod@divisor:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176     0070                     isdigit@c:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179     0070                     isspace@c:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182     0070                     fputc@c:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185     0070                     strcpy@src:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188     0070                     ___fleq@ff1:	
  1189                           ; 2 bytes @ 0x0
  1190                           
  1191     0070                     ___flneg@f1:	
  1192                           ; 4 bytes @ 0x0
  1193                           
  1194     0070                     ___fltol@f1:	
  1195                           ; 4 bytes @ 0x0
  1196                           
  1197     0070                     ___fladd@b:	
  1198                           ; 4 bytes @ 0x0
  1199                           
  1200     0070                     ___xxtofl@val:	
  1201                           ; 4 bytes @ 0x0
  1202                           
  1203     0070                     ___fpclassifyf@x:	
  1204                           ; 4 bytes @ 0x0
  1205                           
  1206     0070                     labs@a:	
  1207                           ; 4 bytes @ 0x0
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x0
  1211     0070                     	ds	1
  1212     0071                     lcd_cmd@cmd:
  1213     0071                     lcd_char@c:	
  1214                           ; 1 bytes @ 0x1
  1215                           
  1216     0071                     ___aodiv@counter:	
  1217                           ; 1 bytes @ 0x1
  1218                           
  1219     0071                     ___aomod@counter:	
  1220                           ; 1 bytes @ 0x1
  1221                           
  1222     0071                     memcpy@n:	
  1223                           ; 1 bytes @ 0x1
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0x1
  1227     0071                     	ds	1
  1228     0072                     ??__Umul8_16:
  1229     0072                     ??_strcpy:	
  1230                           ; 1 bytes @ 0x2
  1231                           
  1232     0072                     ??_isdigit:	
  1233                           ; 1 bytes @ 0x2
  1234                           
  1235     0072                     ??_isspace:	
  1236                           ; 1 bytes @ 0x2
  1237                           
  1238     0072                     ?_lcd_DisplayString:	
  1239                           ; 1 bytes @ 0x2
  1240                           
  1241     0072                     ___aodiv@sign:	
  1242                           ; 1 bytes @ 0x2
  1243                           
  1244     0072                     ___aomod@sign:	
  1245                           ; 1 bytes @ 0x2
  1246                           
  1247     0072                     fputc@fp:	
  1248                           ; 1 bytes @ 0x2
  1249                           
  1250     0072                     lcd_DisplayString@str:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253     0072                     ___wmul@multiplicand:	
  1254                           ; 2 bytes @ 0x2
  1255                           
  1256     0072                     ___awmod@dividend:	
  1257                           ; 2 bytes @ 0x2
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x2
  1261     0072                     	ds	1
  1262     0073                     ??_fputc:
  1263     0073                     ??_memcpy:	
  1264                           ; 1 bytes @ 0x3
  1265                           
  1266     0073                     ?_abs:	
  1267                           ; 1 bytes @ 0x3
  1268                           
  1269     0073                     abs@a:	
  1270                           ; 2 bytes @ 0x3
  1271                           
  1272     0073                     ___aodiv@quotient:	
  1273                           ; 2 bytes @ 0x3
  1274                           
  1275                           
  1276                           ; 8 bytes @ 0x3
  1277     0073                     	ds	1
  1278     0074                     ??___fpclassifyf:
  1279     0074                     ??_labs:	
  1280                           ; 1 bytes @ 0x4
  1281                           
  1282     0074                     ??_lcd_DisplayString:	
  1283                           ; 1 bytes @ 0x4
  1284                           
  1285     0074                     ??___wmul:	
  1286                           ; 1 bytes @ 0x4
  1287                           
  1288     0074                     ??___awmod:	
  1289                           ; 1 bytes @ 0x4
  1290                           
  1291     0074                     ??___flneg:	
  1292                           ; 1 bytes @ 0x4
  1293                           
  1294     0074                     ??___fltol:	
  1295                           ; 1 bytes @ 0x4
  1296                           
  1297     0074                     ??___xxtofl:	
  1298                           ; 1 bytes @ 0x4
  1299                           
  1300     0074                     _isspace$1035:	
  1301                           ; 1 bytes @ 0x4
  1302                           
  1303     0074                     memcpy@tmp:	
  1304                           ; 1 bytes @ 0x4
  1305                           
  1306     0074                     ___wmul@product:	
  1307                           ; 1 bytes @ 0x4
  1308                           
  1309     0074                     __Umul8_16@product:	
  1310                           ; 2 bytes @ 0x4
  1311                           
  1312     0074                     strcpy@s:	
  1313                           ; 2 bytes @ 0x4
  1314                           
  1315     0074                     ___fleq@ff2:	
  1316                           ; 2 bytes @ 0x4
  1317                           
  1318     0074                     ___fladd@a:	
  1319                           ; 4 bytes @ 0x4
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x4
  1323     0074                     	ds	1
  1324     0075                     ??_abs:
  1325     0075                     ___awmod@counter:	
  1326                           ; 1 bytes @ 0x5
  1327                           
  1328     0075                     memcpy@d1:	
  1329                           ; 1 bytes @ 0x5
  1330                           
  1331                           
  1332                           ; 1 bytes @ 0x5
  1333     0075                     	ds	1
  1334     0076                     ?_atoi:
  1335     0076                     ___awmod@sign:	
  1336                           ; 2 bytes @ 0x6
  1337                           
  1338     0076                     memcpy@d:	
  1339                           ; 1 bytes @ 0x6
  1340                           
  1341     0076                     strcpy@d:	
  1342                           ; 1 bytes @ 0x6
  1343                           
  1344     0076                     __Umul8_16@word_mpld:	
  1345                           ; 1 bytes @ 0x6
  1346                           
  1347     0076                     atoi@s:	
  1348                           ; 2 bytes @ 0x6
  1349                           
  1350                           
  1351                           ; 2 bytes @ 0x6
  1352     0076                     	ds	1
  1353     0077                     ?___awdiv:
  1354     0077                     memcpy@s:	
  1355                           ; 2 bytes @ 0x7
  1356                           
  1357     0077                     strcpy@dest:	
  1358                           ; 1 bytes @ 0x7
  1359                           
  1360     0077                     ___awdiv@divisor:	
  1361                           ; 1 bytes @ 0x7
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0x7
  1365     0077                     	ds	1
  1366     0078                     ??_atoi:
  1367     0078                     ??___fleq:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370     0078                     ?_fputs:	
  1371                           ; 1 bytes @ 0x8
  1372                           
  1373     0078                     ___fltol@sign1:	
  1374                           ; 2 bytes @ 0x8
  1375                           
  1376     0078                     ___fladd@signs:	
  1377                           ; 1 bytes @ 0x8
  1378                           
  1379     0078                     __Umul8_16@multiplier:	
  1380                           ; 1 bytes @ 0x8
  1381                           
  1382     0078                     ___xxtofl@sign:	
  1383                           ; 1 bytes @ 0x8
  1384                           
  1385     0078                     fputs@fp:	
  1386                           ; 1 bytes @ 0x8
  1387                           
  1388                           
  1389                           ; 1 bytes @ 0x8
  1390     0078                     	ds	1
  1391     0079                     ??_fputs:
  1392     0079                     ___fltol@exp1:	
  1393                           ; 1 bytes @ 0x9
  1394                           
  1395     0079                     ___fladd@aexp:	
  1396                           ; 1 bytes @ 0x9
  1397                           
  1398     0079                     ___xxtofl@exp:	
  1399                           ; 1 bytes @ 0x9
  1400                           
  1401     0079                     ___awdiv@dividend:	
  1402                           ; 1 bytes @ 0x9
  1403                           
  1404                           
  1405                           ; 2 bytes @ 0x9
  1406     0079                     	ds	1
  1407     007A                     ___fladd@bexp:
  1408     007A                     ___xxtofl@arg:	
  1409                           ; 1 bytes @ 0xA
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0xA
  1413     007A                     	ds	1
  1414     007B                     ??___awdiv:
  1415     007B                     ?_pad:	
  1416                           ; 1 bytes @ 0xB
  1417                           
  1418     007B                     ___fladd@grs:	
  1419                           ; 1 bytes @ 0xB
  1420                           
  1421     007B                     pad@buf:	
  1422                           ; 1 bytes @ 0xB
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0xB
  1426     007B                     	ds	1
  1427     007C                     pad@p:
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430     007C                     	ds	2
  1431     007E                     ??_sprintf:
  1432     007E                     ??_display_float:	
  1433                           ; 1 bytes @ 0xE
  1434                           
  1435     007E                     ??_display_int:	
  1436                           ; 1 bytes @ 0xE
  1437                           
  1438     007E                     ??___flsub:	
  1439                           ; 1 bytes @ 0xE
  1440                           
  1441                           
  1442                           	psect	cstackBANK0
  1443     0020                     __pcstackBANK0:	
  1444                           ; 1 bytes @ 0xE
  1445                           
  1446     0020                     ??___fladd:
  1447     0020                     ?___flmul:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0020                     ?___aodiv:	
  1451                           ; 4 bytes @ 0x0
  1452                           
  1453     0020                     ?___aomod:	
  1454                           ; 8 bytes @ 0x0
  1455                           
  1456     0020                     ___awdiv@counter:	
  1457                           ; 8 bytes @ 0x0
  1458                           
  1459     0020                     fputs@c:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0020                     ___fpclassifyf@e:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465     0020                     atoi@neg:	
  1466                           ; 2 bytes @ 0x0
  1467                           
  1468     0020                     ___flmul@b:	
  1469                           ; 2 bytes @ 0x0
  1470                           
  1471     0020                     ___aodiv@divisor:	
  1472                           ; 4 bytes @ 0x0
  1473                           
  1474     0020                     ___aomod@divisor:	
  1475                           ; 8 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 8 bytes @ 0x0
  1479     0020                     	ds	1
  1480     0021                     ___awdiv@sign:
  1481     0021                     fputs@i:	
  1482                           ; 1 bytes @ 0x1
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x1
  1486     0021                     	ds	1
  1487     0022                     ___awdiv@quotient:
  1488     0022                     atoi@n:	
  1489                           ; 2 bytes @ 0x2
  1490                           
  1491     0022                     ___fpclassifyf@u:	
  1492                           ; 2 bytes @ 0x2
  1493                           
  1494                           
  1495                           ; 4 bytes @ 0x2
  1496     0022                     	ds	1
  1497     0023                     fputs@s:
  1498                           
  1499                           ; 1 bytes @ 0x3
  1500     0023                     	ds	1
  1501     0024                     ??_pad:
  1502     0024                     ___flmul@a:	
  1503                           ; 1 bytes @ 0x4
  1504                           
  1505                           
  1506                           ; 4 bytes @ 0x4
  1507     0024                     	ds	1
  1508     0025                     pad@i:
  1509                           
  1510                           ; 2 bytes @ 0x5
  1511     0025                     	ds	2
  1512     0027                     pad@w:
  1513                           
  1514                           ; 2 bytes @ 0x7
  1515     0027                     	ds	1
  1516     0028                     ??___flmul:
  1517     0028                     ___aodiv@dividend:	
  1518                           ; 1 bytes @ 0x8
  1519                           
  1520     0028                     ___aomod@dividend:	
  1521                           ; 8 bytes @ 0x8
  1522                           
  1523                           
  1524                           ; 8 bytes @ 0x8
  1525     0028                     	ds	1
  1526     0029                     pad@fp:
  1527                           
  1528                           ; 1 bytes @ 0x9
  1529     0029                     	ds	4
  1530     002D                     ___flmul@sign:
  1531                           
  1532                           ; 1 bytes @ 0xD
  1533     002D                     	ds	1
  1534     002E                     ___flmul@aexp:
  1535                           
  1536                           ; 1 bytes @ 0xE
  1537     002E                     	ds	1
  1538     002F                     ___flmul@grs:
  1539                           
  1540                           ; 4 bytes @ 0xF
  1541     002F                     	ds	1
  1542     0030                     ?_dtoa:
  1543     0030                     dtoa@d:	
  1544                           ; 1 bytes @ 0x10
  1545                           
  1546                           
  1547                           ; 8 bytes @ 0x10
  1548     0030                     	ds	3
  1549     0033                     ___flmul@bexp:
  1550                           
  1551                           ; 1 bytes @ 0x13
  1552     0033                     	ds	1
  1553     0034                     ___flmul@prod:
  1554                           
  1555                           ; 4 bytes @ 0x14
  1556     0034                     	ds	4
  1557     0038                     ??_dtoa:
  1558     0038                     ___flmul@temp:	
  1559                           ; 1 bytes @ 0x18
  1560                           
  1561                           
  1562                           ; 2 bytes @ 0x18
  1563     0038                     	ds	1
  1564     0039                     _dtoa$924:
  1565                           
  1566                           ; 2 bytes @ 0x19
  1567     0039                     	ds	1
  1568     003A                     ?___flge:
  1569     003A                     ?___flsub:	
  1570                           ; 1 bit 
  1571                           
  1572     003A                     ?___fldiv:	
  1573                           ; 4 bytes @ 0x1A
  1574                           
  1575     003A                     ___flge@ff1:	
  1576                           ; 4 bytes @ 0x1A
  1577                           
  1578     003A                     ___flsub@a:	
  1579                           ; 4 bytes @ 0x1A
  1580                           
  1581     003A                     ___fldiv@a:	
  1582                           ; 4 bytes @ 0x1A
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x1A
  1586     003A                     	ds	1
  1587     003B                     dtoa@fp:
  1588                           
  1589                           ; 1 bytes @ 0x1B
  1590     003B                     	ds	1
  1591     003C                     dtoa@p:
  1592                           
  1593                           ; 2 bytes @ 0x1C
  1594     003C                     	ds	2
  1595     003E                     dtoa@w:
  1596     003E                     ___flge@ff2:	
  1597                           ; 2 bytes @ 0x1E
  1598                           
  1599     003E                     ___flsub@b:	
  1600                           ; 4 bytes @ 0x1E
  1601                           
  1602     003E                     ___fldiv@b:	
  1603                           ; 4 bytes @ 0x1E
  1604                           
  1605                           
  1606                           ; 4 bytes @ 0x1E
  1607     003E                     	ds	2
  1608     0040                     dtoa@n:
  1609                           
  1610                           ; 8 bytes @ 0x20
  1611     0040                     	ds	2
  1612     0042                     ??___flge:
  1613     0042                     ??___fldiv:	
  1614                           ; 1 bytes @ 0x22
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0x22
  1618     0042                     	ds	5
  1619     0047                     ___fldiv@rem:
  1620                           
  1621                           ; 4 bytes @ 0x27
  1622     0047                     	ds	1
  1623     0048                     dtoa@i:
  1624                           
  1625                           ; 2 bytes @ 0x28
  1626     0048                     	ds	2
  1627     004A                     dtoa@s:
  1628                           
  1629                           ; 1 bytes @ 0x2A
  1630     004A                     	ds	1
  1631     004B                     ___fldiv@sign:
  1632                           
  1633                           ; 1 bytes @ 0x2B
  1634     004B                     	ds	1
  1635     004C                     ___fldiv@new_exp:
  1636                           
  1637                           ; 2 bytes @ 0x2C
  1638     004C                     	ds	2
  1639     004E                     ___fldiv@grs:
  1640                           
  1641                           ; 4 bytes @ 0x2E
  1642     004E                     	ds	4
  1643     0052                     ___fldiv@bexp:
  1644                           
  1645                           ; 1 bytes @ 0x32
  1646     0052                     	ds	1
  1647     0053                     ___fldiv@aexp:
  1648                           
  1649                           ; 1 bytes @ 0x33
  1650     0053                     	ds	1
  1651     0054                     ?_floorf:
  1652     0054                     ?_ADC_Convert:	
  1653                           ; 4 bytes @ 0x34
  1654                           
  1655     0054                     ADC_Convert@chan:	
  1656                           ; 4 bytes @ 0x34
  1657                           
  1658     0054                     floorf@x:	
  1659                           ; 2 bytes @ 0x34
  1660                           
  1661                           
  1662                           ; 4 bytes @ 0x34
  1663     0054                     	ds	4
  1664     0058                     ??_floorf:
  1665     0058                     ??_ADC_Convert:	
  1666                           ; 1 bytes @ 0x38
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x38
  1670     0058                     	ds	2
  1671     005A                     ADC_Convert@voltage:
  1672                           
  1673                           ; 4 bytes @ 0x3A
  1674     005A                     	ds	4
  1675     005E                     ADC_Convert@result:
  1676     005E                     floorf@m:	
  1677                           ; 2 bytes @ 0x3E
  1678                           
  1679                           
  1680                           ; 4 bytes @ 0x3E
  1681     005E                     	ds	4
  1682     0062                     floorf@e:
  1683                           
  1684                           ; 2 bytes @ 0x42
  1685     0062                     	ds	2
  1686     0064                     floorf@u:
  1687                           
  1688                           ; 4 bytes @ 0x44
  1689     0064                     	ds	4
  1690     0068                     ?_efgtoa:
  1691     0068                     efgtoa@f:	
  1692                           ; 1 bytes @ 0x48
  1693                           
  1694                           
  1695                           ; 4 bytes @ 0x48
  1696     0068                     	ds	4
  1697     006C                     efgtoa@c:
  1698                           
  1699                           ; 1 bytes @ 0x4C
  1700     006C                     	ds	1
  1701     006D                     ?_vfpfcnvrt:
  1702     006D                     vfpfcnvrt@fmt:	
  1703                           ; 1 bytes @ 0x4D
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0x4D
  1707     006D                     	ds	1
  1708     006E                     vfpfcnvrt@ap:
  1709                           
  1710                           ; 1 bytes @ 0x4E
  1711     006E                     	ds	1
  1712     006F                     ??_vfprintf:
  1713                           
  1714                           ; 1 bytes @ 0x4F
  1715     006F                     	ds	1
  1716                           
  1717                           	psect	maintext
  1718     0C05                     __pmaintext:	
  1719 ;;
  1720 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1721 ;;
  1722 ;; *************** function _main *****************
  1723 ;; Defined at:
  1724 ;;		line 215 in file "main.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  currentTempe    4   23[BANK3 ] float 
  1729 ;;  inputTempera    4    4[BANK3 ] float 
  1730 ;;  tempVoltage     4    0[BANK3 ] float 
  1731 ;;  min1            2   20[BANK3 ] int 
  1732 ;;  min0            2   18[BANK3 ] int 
  1733 ;;  hr1             2   16[BANK3 ] int 
  1734 ;;  hr0             2   14[BANK3 ] int 
  1735 ;;  n2              2   12[BANK3 ] int 
  1736 ;;  n1              2   10[BANK3 ] int 
  1737 ;;  n0              2    8[BANK3 ] int 
  1738 ;;  seconds         2   35[BANK3 ] int 
  1739 ;;  key             1   38[BANK3 ] unsigned char 
  1740 ;;  v               1   37[BANK3 ] unsigned char 
  1741 ;;  inputTime       6   41[BANK3 ] unsigned char [6]
  1742 ;;  inputTemp       3   47[BANK3 ] unsigned char [3]
  1743 ;;  count2          2   50[BANK3 ] int 
  1744 ;;  count           2   39[BANK3 ] int 
  1745 ;;  min             2   33[BANK3 ] int 
  1746 ;;  hr              2   31[BANK3 ] int 
  1747 ;;  temp            2   29[BANK3 ] int 
  1748 ;;  timeBool        1   28[BANK3 ] _Bool 
  1749 ;;  tempBool        1   27[BANK3 ] _Bool 
  1750 ;;  start           1   22[BANK3 ] _Bool 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : B1F/0
  1757 ;;		On exit  : 1F/3
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1760 ;;      Params:         0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0      52       0       0       0
  1762 ;;      Temps:          0       0       0       4       0       0       0       0
  1763 ;;      Totals:         0       0       0       4      52       0       0       0
  1764 ;;Total ram usage:       56 bytes
  1765 ;; Hardware stack levels required when called: 9
  1766 ;; This function calls:
  1767 ;;		_ADC_Convert
  1768 ;;		_ADC_init
  1769 ;;		___awdiv
  1770 ;;		___awmod
  1771 ;;		___flge
  1772 ;;		___flmul
  1773 ;;		___wmul
  1774 ;;		___xxtofl
  1775 ;;		_display_float
  1776 ;;		_display_int
  1777 ;;		_keypad
  1778 ;;		_lcd_DisplayString
  1779 ;;		_lcd_char
  1780 ;;		_lcd_cmd
  1781 ;;		_lcd_init
  1782 ;; This function is called by:
  1783 ;;		Startup code after reset
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787     0C05                     _main:	
  1788                           ;psect for function _main
  1789                           
  1790                           
  1791                           ;main.c: 217:     TRISD=0xF0;
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1795     0C05  30F0               	movlw	240
  1796     0C06  0021               	movlb	1	; select bank1
  1797     0C07  008F               	movwf	15	;volatile
  1798                           
  1799                           ;main.c: 218:     ANSELD = 0x00;
  1800     0C08  0023               	movlb	3	; select bank3
  1801     0C09  018F               	clrf	15	;volatile
  1802                           
  1803                           ;main.c: 219:     TRISB=0x00;
  1804     0C0A  0021               	movlb	1	; select bank1
  1805     0C0B  018D               	clrf	13	;volatile
  1806                           
  1807                           ;main.c: 221:     TRISC=0x00;
  1808     0C0C  018E               	clrf	14	;volatile
  1809                           
  1810                           ;main.c: 223:     ANSELA = 0xff;
  1811     0C0D  30FF               	movlw	255
  1812     0C0E  0023               	movlb	3	; select bank3
  1813     0C0F  008C               	movwf	12	;volatile
  1814                           
  1815                           ;main.c: 225:     lcd_init();
  1816     0C10  319E  2680  318C   	fcall	_lcd_init
  1817                           
  1818                           ;main.c: 226:     lcd_cmd(0x28);
  1819     0C13  3028               	movlw	40
  1820     0C14  319E  2622  318C   	fcall	_lcd_cmd
  1821                           
  1822                           ;main.c: 227:     lcd_cmd(0x0C);
  1823     0C17  300C               	movlw	12
  1824     0C18  319E  2622  318C   	fcall	_lcd_cmd
  1825                           
  1826                           ;main.c: 228:     lcd_cmd(0x06);
  1827     0C1B  3006               	movlw	6
  1828     0C1C  319E  2622  318C   	fcall	_lcd_cmd
  1829                           
  1830                           ;main.c: 229:     lcd_cmd(0x01);
  1831     0C1F  3001               	movlw	1
  1832     0C20  319E  2622  318C   	fcall	_lcd_cmd
  1833                           
  1834                           ;main.c: 231:     lcd_cmd(0x82);
  1835     0C23  3082               	movlw	130
  1836     0C24  319E  2622  318C   	fcall	_lcd_cmd
  1837                           
  1838                           ;main.c: 232:     lcd_DisplayString("OVEN SYSTEM");
  1839     0C27  3056               	movlw	low (STR_4| (0+32768))
  1840     0C28  00F2               	movwf	lcd_DisplayString@str
  1841     0C29  3098               	movlw	high (STR_4| (0+32768))
  1842     0C2A  00F3               	movwf	lcd_DisplayString@str+1
  1843     0C2B  319C  246B  318C   	fcall	_lcd_DisplayString
  1844                           
  1845                           ;main.c: 233:     lcd_cmd(0xC4);
  1846     0C2E  30C4               	movlw	196
  1847     0C2F  319E  2622  318C   	fcall	_lcd_cmd
  1848                           
  1849                           ;main.c: 234:     lcd_DisplayString("GROUP- H");
  1850     0C32  3062               	movlw	low (STR_5| (0+32768))
  1851     0C33  00F2               	movwf	lcd_DisplayString@str
  1852     0C34  3098               	movlw	high (STR_5| (0+32768))
  1853     0C35  00F3               	movwf	lcd_DisplayString@str+1
  1854     0C36  319C  246B  318C   	fcall	_lcd_DisplayString
  1855                           
  1856                           ;main.c: 235:     _delay((unsigned long)((5000)*(19600000/4000.0)));
  1857     0C39  307D               	movlw	125
  1858     0C3A  0022               	movlb	2	; select bank2
  1859     0C3B  00C0               	movwf	(??_main^(0+256)+1)
  1860     0C3C  304A               	movlw	74
  1861     0C3D  00BF               	movwf	??_main^(0+256)
  1862     0C3E  30D9               	movlw	217
  1863     0C3F                     u6617:
  1864     0C3F  0B89               	decfsz	9,f
  1865     0C40  2C3F               	goto	u6617
  1866     0C41  0BBF               	decfsz	??_main^(0+256),f
  1867     0C42  2C3F               	goto	u6617
  1868     0C43  0BC0               	decfsz	(??_main^(0+256)+1),f
  1869     0C44  2C3F               	goto	u6617
  1870     0C45  3200               	nop2
  1871                           
  1872                           ;main.c: 236:     lcd_cmd(0x01);
  1873     0C46  3001               	movlw	1
  1874     0C47  319E  2622  318C   	fcall	_lcd_cmd
  1875                           
  1876                           ;main.c: 238:     ADC_init();
  1877     0C4A  3180  2005  318C   	fcall	_ADC_init
  1878                           
  1879                           ;main.c: 240:     char inputTemp[3] = {'0','0','0'};
  1880     0C4D  0023               	movlb	3	; select bank3
  1881     0C4E  085A               	movf	main@F3475^(0+384),w
  1882     0C4F  00CF               	movwf	main@inputTemp^(0+384)
  1883     0C50  085B               	movf	(main@F3475+1)^(0+384),w
  1884     0C51  00D0               	movwf	(main@inputTemp+1)^(0+384)
  1885     0C52  085C               	movf	(main@F3475+2)^(0+384),w
  1886     0C53  00D1               	movwf	(main@inputTemp+2)^(0+384)
  1887                           
  1888                           ;main.c: 241:     char inputTime[6] = {'0','0',':','0','0',0x00};
  1889     0C54  30D4               	movlw	low main@F3477
  1890     0C55  0086               	movwf	6
  1891     0C56  3001               	movlw	high main@F3477
  1892     0C57  0087               	movwf	7
  1893     0C58  30C9               	movlw	low main@inputTime
  1894     0C59  0084               	movwf	4
  1895     0C5A  3001               	movlw	high main@inputTime
  1896     0C5B  0085               	movwf	5
  1897     0C5C  3006               	movlw	6
  1898     0C5D  0022               	movlb	2	; select bank2
  1899     0C5E  00BF               	movwf	??_main^(0+256)
  1900     0C5F                     u6300:
  1901     0C5F  0016               	moviw fsr1++
  1902     0C60  001A               	movwi fsr0++
  1903     0C61  0BBF               	decfsz	??_main^(0+256),f
  1904     0C62  2C5F               	goto	u6300
  1905                           
  1906                           ;main.c: 243:     int temp = 0;
  1907     0C63  0023               	movlb	3	; select bank3
  1908     0C64  01BD               	clrf	main@temp^(0+384)
  1909     0C65  01BE               	clrf	(main@temp+1)^(0+384)
  1910                           
  1911                           ;main.c: 245:     int hr = 0;
  1912     0C66  01BF               	clrf	main@hr^(0+384)
  1913     0C67  01C0               	clrf	(main@hr+1)^(0+384)
  1914                           
  1915                           ;main.c: 246:     int min = 0;
  1916     0C68  01C1               	clrf	main@min^(0+384)
  1917     0C69  01C2               	clrf	(main@min+1)^(0+384)
  1918                           
  1919                           ;main.c: 248:     int count = 0;
  1920     0C6A  01C7               	clrf	main@count^(0+384)
  1921     0C6B  01C8               	clrf	(main@count+1)^(0+384)
  1922                           
  1923                           ;main.c: 249:     int count2 = 0;
  1924     0C6C  01D2               	clrf	main@count2^(0+384)
  1925     0C6D  01D3               	clrf	(main@count2+1)^(0+384)
  1926                           
  1927                           ;main.c: 251:     _Bool tempBool = 1;
  1928     0C6E  01BB               	clrf	main@tempBool^(0+384)
  1929     0C6F  0ABB               	incf	main@tempBool^(0+384),f
  1930                           
  1931                           ;main.c: 252:     _Bool timeBool = 0;
  1932     0C70  01BC               	clrf	main@timeBool^(0+384)
  1933                           
  1934                           ;main.c: 253:     _Bool start = 0;
  1935     0C71  01B6               	clrf	main@start^(0+384)
  1936     0C72  2E78               	goto	l4487
  1937     0C73                     l4489:
  1938                           
  1939                           ;main.c: 256:             if(temp != 0){
  1940     0C73  083D               	movf	main@temp^(0+384),w
  1941     0C74  043E               	iorwf	(main@temp+1)^(0+384),w
  1942     0C75  1903               	btfsc	3,2
  1943     0C76  2CA7               	goto	l4507
  1944                           
  1945                           ;main.c: 257:                 lcd_cmd(0x80);
  1946     0C77  3080               	movlw	128
  1947     0C78  319E  2622  318C   	fcall	_lcd_cmd
  1948                           
  1949                           ;main.c: 258:                 lcd_DisplayString("Inputed Temp. :");
  1950     0C7B  3000               	movlw	low (STR_6| (0+32768))
  1951     0C7C  00F2               	movwf	lcd_DisplayString@str
  1952     0C7D  3098               	movlw	high (STR_6| (0+32768))
  1953     0C7E  00F3               	movwf	lcd_DisplayString@str+1
  1954     0C7F  319C  246B  318C   	fcall	_lcd_DisplayString
  1955                           
  1956                           ;main.c: 259:                 lcd_cmd(0xC0);
  1957     0C82  30C0               	movlw	192
  1958     0C83  319E  2622  318C   	fcall	_lcd_cmd
  1959                           
  1960                           ;main.c: 260:                 display_int(temp);
  1961     0C86  0023               	movlb	3	; select bank3
  1962     0C87  083E               	movf	(main@temp+1)^(0+384),w
  1963     0C88  0022               	movlb	2	; select bank2
  1964     0C89  00AC               	movwf	(display_int@num+1)^(0+256)
  1965     0C8A  0023               	movlb	3	; select bank3
  1966     0C8B  083D               	movf	main@temp^(0+384),w
  1967     0C8C  0022               	movlb	2	; select bank2
  1968     0C8D  00AB               	movwf	display_int@num^(0+256)
  1969     0C8E  319C  24C8  318C   	fcall	_display_int
  1970                           
  1971                           ;main.c: 261:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  1972     0C91  3032               	movlw	50
  1973     0C92  0022               	movlb	2	; select bank2
  1974     0C93  00C0               	movwf	(??_main^(0+256)+1)
  1975     0C94  30B8               	movlw	184
  1976     0C95  00BF               	movwf	??_main^(0+256)
  1977     0C96  3022               	movlw	34
  1978     0C97                     u6627:
  1979     0C97  0B89               	decfsz	9,f
  1980     0C98  2C97               	goto	u6627
  1981     0C99  0BBF               	decfsz	??_main^(0+256),f
  1982     0C9A  2C97               	goto	u6627
  1983     0C9B  0BC0               	decfsz	(??_main^(0+256)+1),f
  1984     0C9C  2C97               	goto	u6627
  1985     0C9D  0000               	nop
  1986                           
  1987                           ;main.c: 262:                 tempBool = 0;
  1988     0C9E  0023               	movlb	3	; select bank3
  1989     0C9F  01BB               	clrf	main@tempBool^(0+384)
  1990                           
  1991                           ;main.c: 263:                 timeBool = 1;
  1992     0CA0  01BC               	clrf	main@timeBool^(0+384)
  1993     0CA1  0ABC               	incf	main@timeBool^(0+384),f
  1994                           
  1995                           ;main.c: 264:                 lcd_cmd(0x01);
  1996     0CA2  3001               	movlw	1
  1997     0CA3  319E  2622  318C   	fcall	_lcd_cmd
  1998                           
  1999                           ;main.c: 265:             }
  2000     0CA6  2E78               	goto	l4487
  2001     0CA7                     l4507:
  2002                           
  2003                           ;main.c: 267:                 lcd_cmd(0x80);
  2004     0CA7  3080               	movlw	128
  2005     0CA8  319E  2622  318C   	fcall	_lcd_cmd
  2006                           
  2007                           ;main.c: 268:                 lcd_DisplayString("Enter Temp. :");
  2008     0CAB  302E               	movlw	low (STR_7| (0+32768))
  2009     0CAC  00F2               	movwf	lcd_DisplayString@str
  2010     0CAD  3098               	movlw	high (STR_7| (0+32768))
  2011     0CAE  00F3               	movwf	lcd_DisplayString@str+1
  2012     0CAF  319C  246B  318C   	fcall	_lcd_DisplayString
  2013                           
  2014                           ;main.c: 269:                 lcd_cmd(0xC0);
  2015     0CB2  30C0               	movlw	192
  2016     0CB3  319E  2622  318C   	fcall	_lcd_cmd
  2017                           
  2018                           ;main.c: 270:                 lcd_DisplayString(inputTemp);
  2019     0CB6  30CF               	movlw	low main@inputTemp
  2020     0CB7  00F2               	movwf	lcd_DisplayString@str
  2021     0CB8  3001               	movlw	high main@inputTemp
  2022     0CB9  00F3               	movwf	lcd_DisplayString@str+1
  2023     0CBA  319C  246B  318C   	fcall	_lcd_DisplayString
  2024                           
  2025                           ;main.c: 271:                 char v = keypad();
  2026     0CBD  3190  2056  318C   	fcall	_keypad
  2027     0CC0  0023               	movlb	3	; select bank3
  2028     0CC1  00C5               	movwf	main@v^(0+384)
  2029                           
  2030                           ;main.c: 272:                 if( v =='#'){
  2031     0CC2  3023               	movlw	35
  2032     0CC3  0645               	xorwf	main@v^(0+384),w
  2033     0CC4  1D03               	btfss	3,2
  2034     0CC5  2D0F               	goto	l4527
  2035                           
  2036                           ;main.c: 273:                     lcd_cmd(0x01);
  2037     0CC6  3001               	movlw	1
  2038     0CC7  319E  2622  318C   	fcall	_lcd_cmd
  2039                           
  2040                           ;main.c: 274:                     int n0 = inputTemp[2]-'0';
  2041     0CCA  0023               	movlb	3	; select bank3
  2042     0CCB  0851               	movf	(main@inputTemp^(0+384)+2),w
  2043     0CCC  3ED0               	addlw	208
  2044     0CCD  00A8               	movwf	main@n0^(0+384)
  2045     0CCE  30FF               	movlw	255
  2046     0CCF  1803               	skipnc
  2047     0CD0  3000               	movlw	0
  2048     0CD1  00A9               	movwf	(main@n0^(0+384)+1)
  2049                           
  2050                           ;main.c: 275:                     int n1 = inputTemp[1]-'0';
  2051     0CD2  0850               	movf	(main@inputTemp^(0+384)+1),w
  2052     0CD3  3ED0               	addlw	208
  2053     0CD4  00AA               	movwf	main@n1^(0+384)
  2054     0CD5  30FF               	movlw	255
  2055     0CD6  1803               	skipnc
  2056     0CD7  3000               	movlw	0
  2057     0CD8  00AB               	movwf	(main@n1^(0+384)+1)
  2058                           
  2059                           ;main.c: 276:                     int n2 = inputTemp[0]-'0';
  2060     0CD9  084F               	movf	main@inputTemp^(0+384),w
  2061     0CDA  3ED0               	addlw	208
  2062     0CDB  00AC               	movwf	main@n2^(0+384)
  2063     0CDC  30FF               	movlw	255
  2064     0CDD  1803               	skipnc
  2065     0CDE  3000               	movlw	0
  2066     0CDF  00AD               	movwf	(main@n2^(0+384)+1)
  2067                           
  2068                           ;main.c: 277:                     temp = n0 + n1*10 + n2*100;
  2069     0CE0  082D               	movf	(main@n2+1)^(0+384),w
  2070     0CE1  00F1               	movwf	___wmul@multiplier+1
  2071     0CE2  082C               	movf	main@n2^(0+384),w
  2072     0CE3  00F0               	movwf	___wmul@multiplier
  2073     0CE4  3064               	movlw	100
  2074     0CE5  00F2               	movwf	___wmul@multiplicand
  2075     0CE6  3000               	movlw	0
  2076     0CE7  00F3               	movwf	___wmul@multiplicand+1
  2077     0CE8  319C  24AD  318C   	fcall	___wmul
  2078     0CEB  0870               	movf	?___wmul,w
  2079     0CEC  0022               	movlb	2	; select bank2
  2080     0CED  00BF               	movwf	??_main^(0+256)
  2081     0CEE  0871               	movf	?___wmul+1,w
  2082     0CEF  00C0               	movwf	(??_main^(0+256)+1)
  2083     0CF0  0023               	movlb	3	; select bank3
  2084     0CF1  082B               	movf	(main@n1+1)^(0+384),w
  2085     0CF2  00F1               	movwf	___wmul@multiplier+1
  2086     0CF3  082A               	movf	main@n1^(0+384),w
  2087     0CF4  00F0               	movwf	___wmul@multiplier
  2088     0CF5  300A               	movlw	10
  2089     0CF6  00F2               	movwf	___wmul@multiplicand
  2090     0CF7  3000               	movlw	0
  2091     0CF8  00F3               	movwf	___wmul@multiplicand+1
  2092     0CF9  319C  24AD  318C   	fcall	___wmul
  2093     0CFC  0870               	movf	?___wmul,w
  2094     0CFD  0022               	movlb	2	; select bank2
  2095     0CFE  073F               	addwf	??_main^(0+256),w
  2096     0CFF  00C1               	movwf	(??_main+2)^(0+256)
  2097     0D00  0871               	movf	?___wmul+1,w
  2098     0D01  3D40               	addwfc	(??_main+1)^(0+256),w
  2099     0D02  00C2               	movwf	(??_main+3)^(0+256)
  2100     0D03  0023               	movlb	3	; select bank3
  2101     0D04  0828               	movf	main@n0^(0+384),w
  2102     0D05  0022               	movlb	2	; select bank2
  2103     0D06  0741               	addwf	(??_main+2)^(0+256),w
  2104     0D07  0023               	movlb	3	; select bank3
  2105     0D08  00BD               	movwf	main@temp^(0+384)
  2106     0D09  0829               	movf	(main@n0+1)^(0+384),w
  2107     0D0A  0022               	movlb	2	; select bank2
  2108     0D0B  3D42               	addwfc	(??_main+3)^(0+256),w
  2109     0D0C  0023               	movlb	3	; select bank3
  2110     0D0D  00BE               	movwf	(main@temp+1)^(0+384)
  2111                           
  2112                           ;main.c: 278:                 }
  2113     0D0E  2E78               	goto	l4487
  2114     0D0F                     l4527:
  2115     0D0F  302A               	movlw	42
  2116     0D10  0645               	xorwf	main@v^(0+384),w
  2117     0D11  1D03               	btfss	3,2
  2118     0D12  2D33               	goto	l4541
  2119                           
  2120                           ;main.c: 280:                     if (count == 1){
  2121     0D13  0347               	decf	main@count^(0+384),w
  2122     0D14  0448               	iorwf	(main@count+1)^(0+384),w
  2123     0D15  1D03               	btfss	3,2
  2124     0D16  2D1A               	goto	l4533
  2125                           
  2126                           ;main.c: 281:                         inputTemp[2] = '0';
  2127     0D17  3030               	movlw	48
  2128     0D18  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2129     0D19  2D2F               	goto	L2
  2130     0D1A                     l4533:	
  2131                           ;main.c: 283:                     }
  2132                           
  2133                           ;main.c: 282:                         count--;
  2134                           
  2135     0D1A  3002               	movlw	2
  2136     0D1B  0647               	xorwf	main@count^(0+384),w
  2137     0D1C  0448               	iorwf	(main@count+1)^(0+384),w
  2138     0D1D  1D03               	btfss	3,2
  2139     0D1E  2D24               	goto	l4537
  2140                           
  2141                           ;main.c: 285:                         inputTemp[2] = inputTemp[1];
  2142     0D1F  0850               	movf	(main@inputTemp^(0+384)+1),w
  2143     0D20  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2144                           
  2145                           ;main.c: 286:                         inputTemp[1] = '0';
  2146     0D21  3030               	movlw	48
  2147     0D22  00D0               	movwf	(main@inputTemp^(0+384)+1)
  2148     0D23  2D2F               	goto	L2
  2149     0D24                     l4537:	
  2150                           ;main.c: 288:                     }
  2151                           
  2152                           ;main.c: 287:                         count--;
  2153                           
  2154     0D24  3003               	movlw	3
  2155     0D25  0647               	xorwf	main@count^(0+384),w
  2156     0D26  0448               	iorwf	(main@count+1)^(0+384),w
  2157     0D27  1D03               	btfss	3,2
  2158     0D28  2E78               	goto	l4487
  2159                           
  2160                           ;main.c: 290:                         inputTemp[2] = inputTemp[1];
  2161     0D29  0850               	movf	(main@inputTemp^(0+384)+1),w
  2162     0D2A  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2163                           
  2164                           ;main.c: 291:                         inputTemp[1] = inputTemp[0];
  2165     0D2B  084F               	movf	main@inputTemp^(0+384),w
  2166     0D2C  00D0               	movwf	(main@inputTemp^(0+384)+1)
  2167                           
  2168                           ;main.c: 292:                         inputTemp[0] ='0';
  2169     0D2D  3030               	movlw	48
  2170     0D2E  00CF               	movwf	main@inputTemp^(0+384)
  2171     0D2F                     L2:
  2172                           
  2173                           ;main.c: 293:                         count--;
  2174     0D2F  30FF               	movlw	255
  2175     0D30  07C7               	addwf	main@count^(0+384),f
  2176     0D31  30FF               	movlw	255
  2177     0D32  2D4D               	goto	L14
  2178     0D33                     l4541:	
  2179                           ;main.c: 295:                 }
  2180                           
  2181     0D33  3020               	movlw	32
  2182     0D34  0645               	xorwf	main@v^(0+384),w
  2183     0D35  1903               	btfsc	3,2
  2184     0D36  2E78               	goto	l4487
  2185                           
  2186                           ;main.c: 297:                     if (count == 0){
  2187     0D37  0847               	movf	main@count^(0+384),w
  2188     0D38  0448               	iorwf	(main@count+1)^(0+384),w
  2189     0D39  1903               	btfsc	3,2
  2190     0D3A  2D48               	goto	L4
  2191                           
  2192                           ;main.c: 300:                     }
  2193                           
  2194                           ;main.c: 299:                         count++;
  2195                           
  2196                           ;main.c: 298:                         inputTemp[2] = v;
  2197     0D3B  0347               	decf	main@count^(0+384),w
  2198     0D3C  0448               	iorwf	(main@count+1)^(0+384),w
  2199     0D3D  1903               	btfsc	3,2
  2200     0D3E  2D46               	goto	L12
  2201                           
  2202                           ;main.c: 305:                     }
  2203                           
  2204                           ;main.c: 304:                         count++;
  2205                           
  2206                           ;main.c: 303:                         inputTemp[2] = v;
  2207                           
  2208                           ;main.c: 302:                         inputTemp[1] = inputTemp[2] ;
  2209     0D3F  3002               	movlw	2
  2210     0D40  0647               	xorwf	main@count^(0+384),w
  2211     0D41  0448               	iorwf	(main@count+1)^(0+384),w
  2212     0D42  1D03               	btfss	3,2
  2213     0D43  2E78               	goto	l4487
  2214                           
  2215                           ;main.c: 307:                         inputTemp[0] = inputTemp[1];
  2216     0D44  0850               	movf	(main@inputTemp^(0+384)+1),w
  2217     0D45  00CF               	movwf	main@inputTemp^(0+384)
  2218     0D46                     L12:
  2219                           
  2220                           ;main.c: 308:                         inputTemp[1] = inputTemp[2];
  2221     0D46  0851               	movf	(main@inputTemp^(0+384)+2),w
  2222     0D47  00D0               	movwf	(main@inputTemp^(0+384)+1)
  2223     0D48                     L4:
  2224                           
  2225                           ;main.c: 309:                         inputTemp[2] = v;
  2226     0D48  0845               	movf	main@v^(0+384),w
  2227     0D49  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2228                           
  2229                           ;main.c: 310:                         count++;
  2230     0D4A  3001               	movlw	1
  2231     0D4B  07C7               	addwf	main@count^(0+384),f
  2232     0D4C  3000               	movlw	0
  2233     0D4D                     L14:
  2234     0D4D  3DC8               	addwfc	(main@count+1)^(0+384),f
  2235     0D4E  2E78               	goto	l4487
  2236     0D4F                     l4557:
  2237                           
  2238                           ;main.c: 316:             if ((hr!=0) || (min!=0)){
  2239     0D4F  083F               	movf	main@hr^(0+384),w
  2240     0D50  0440               	iorwf	(main@hr+1)^(0+384),w
  2241     0D51  1D03               	btfss	3,2
  2242     0D52  2D57               	goto	l4561
  2243     0D53  0841               	movf	main@min^(0+384),w
  2244     0D54  0442               	iorwf	(main@min+1)^(0+384),w
  2245     0D55  1903               	btfsc	3,2
  2246     0D56  2DBF               	goto	l4595
  2247     0D57                     l4561:
  2248                           
  2249                           ;main.c: 317:                 lcd_cmd(0x80);
  2250     0D57  3080               	movlw	128
  2251     0D58  319E  2622  318C   	fcall	_lcd_cmd
  2252                           
  2253                           ;main.c: 318:                 lcd_DisplayString("Inputed Time:");
  2254     0D5B  303C               	movlw	low (STR_8| (0+32768))
  2255     0D5C  00F2               	movwf	lcd_DisplayString@str
  2256     0D5D  3098               	movlw	high (STR_8| (0+32768))
  2257     0D5E  00F3               	movwf	lcd_DisplayString@str+1
  2258     0D5F  319C  246B  318C   	fcall	_lcd_DisplayString
  2259                           
  2260                           ;main.c: 319:                 lcd_cmd(0xC0);
  2261     0D62  30C0               	movlw	192
  2262     0D63  319E  2622  318C   	fcall	_lcd_cmd
  2263                           
  2264                           ;main.c: 320:                 display_int(hr);
  2265     0D66  0023               	movlb	3	; select bank3
  2266     0D67  0840               	movf	(main@hr+1)^(0+384),w
  2267     0D68  0022               	movlb	2	; select bank2
  2268     0D69  00AC               	movwf	(display_int@num+1)^(0+256)
  2269     0D6A  0023               	movlb	3	; select bank3
  2270     0D6B  083F               	movf	main@hr^(0+384),w
  2271     0D6C  0022               	movlb	2	; select bank2
  2272     0D6D  00AB               	movwf	display_int@num^(0+256)
  2273     0D6E  319C  24C8  318C   	fcall	_display_int
  2274                           
  2275                           ;main.c: 321:                 lcd_char(':');
  2276     0D71  303A               	movlw	58
  2277     0D72  319E  2650  318C   	fcall	_lcd_char
  2278                           
  2279                           ;main.c: 322:                 display_int(min);
  2280     0D75  0023               	movlb	3	; select bank3
  2281     0D76  0842               	movf	(main@min+1)^(0+384),w
  2282     0D77  0022               	movlb	2	; select bank2
  2283     0D78  00AC               	movwf	(display_int@num+1)^(0+256)
  2284     0D79  0023               	movlb	3	; select bank3
  2285     0D7A  0841               	movf	main@min^(0+384),w
  2286     0D7B  0022               	movlb	2	; select bank2
  2287     0D7C  00AB               	movwf	display_int@num^(0+256)
  2288     0D7D  319C  24C8  318C   	fcall	_display_int
  2289                           
  2290                           ;main.c: 323:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  2291     0D80  3032               	movlw	50
  2292     0D81  0022               	movlb	2	; select bank2
  2293     0D82  00C0               	movwf	(??_main^(0+256)+1)
  2294     0D83  30B8               	movlw	184
  2295     0D84  00BF               	movwf	??_main^(0+256)
  2296     0D85  3022               	movlw	34
  2297     0D86                     u6637:
  2298     0D86  0B89               	decfsz	9,f
  2299     0D87  2D86               	goto	u6637
  2300     0D88  0BBF               	decfsz	??_main^(0+256),f
  2301     0D89  2D86               	goto	u6637
  2302     0D8A  0BC0               	decfsz	(??_main^(0+256)+1),f
  2303     0D8B  2D86               	goto	u6637
  2304     0D8C  0000               	nop
  2305                           
  2306                           ;main.c: 324:                 lcd_cmd(0x01);
  2307     0D8D  3001               	movlw	1
  2308     0D8E  319E  2622  318C   	fcall	_lcd_cmd
  2309                           
  2310                           ;main.c: 325:                 lcd_cmd(0x80);
  2311     0D91  3080               	movlw	128
  2312     0D92  319E  2622  318C   	fcall	_lcd_cmd
  2313                           
  2314                           ;main.c: 326:                 lcd_DisplayString("OVEN STARTING ");
  2315     0D95  3010               	movlw	low (STR_9| (0+32768))
  2316     0D96  00F2               	movwf	lcd_DisplayString@str
  2317     0D97  3098               	movlw	high (STR_9| (0+32768))
  2318     0D98  00F3               	movwf	lcd_DisplayString@str+1
  2319     0D99  319C  246B  318C   	fcall	_lcd_DisplayString
  2320                           
  2321                           ;main.c: 327:                 lcd_cmd(0xC0);
  2322     0D9C  30C0               	movlw	192
  2323     0D9D  319E  2622  318C   	fcall	_lcd_cmd
  2324                           
  2325                           ;main.c: 328:                 lcd_DisplayString("NOW...");
  2326     0DA0  306B               	movlw	low (STR_10| (0+32768))
  2327     0DA1  00F2               	movwf	lcd_DisplayString@str
  2328     0DA2  3098               	movlw	high (STR_10| (0+32768))
  2329     0DA3  00F3               	movwf	lcd_DisplayString@str+1
  2330     0DA4  319C  246B  318C   	fcall	_lcd_DisplayString
  2331                           
  2332                           ;main.c: 329:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  2333     0DA7  3032               	movlw	50
  2334     0DA8  0022               	movlb	2	; select bank2
  2335     0DA9  00C0               	movwf	(??_main^(0+256)+1)
  2336     0DAA  30B8               	movlw	184
  2337     0DAB  00BF               	movwf	??_main^(0+256)
  2338     0DAC  3022               	movlw	34
  2339     0DAD                     u6647:
  2340     0DAD  0B89               	decfsz	9,f
  2341     0DAE  2DAD               	goto	u6647
  2342     0DAF  0BBF               	decfsz	??_main^(0+256),f
  2343     0DB0  2DAD               	goto	u6647
  2344     0DB1  0BC0               	decfsz	(??_main^(0+256)+1),f
  2345     0DB2  2DAD               	goto	u6647
  2346     0DB3  0000               	nop
  2347                           
  2348                           ;main.c: 330:                 lcd_cmd(0x01);
  2349     0DB4  3001               	movlw	1
  2350     0DB5  319E  2622  318C   	fcall	_lcd_cmd
  2351                           
  2352                           ;main.c: 331:                 timeBool = 0;
  2353     0DB8  0023               	movlb	3	; select bank3
  2354     0DB9  01BC               	clrf	main@timeBool^(0+384)
  2355                           
  2356                           ;main.c: 332:                 start = 1;
  2357     0DBA  01B6               	clrf	main@start^(0+384)
  2358     0DBB  0AB6               	incf	main@start^(0+384),f
  2359                           
  2360                           ;main.c: 334:                 PORTCbits.RC0 = 1;
  2361     0DBC  0020               	movlb	0	; select bank0
  2362     0DBD  140E               	bsf	14,0	;volatile
  2363                           
  2364                           ;main.c: 335:             }
  2365     0DBE  2E78               	goto	l4487
  2366     0DBF                     l4595:
  2367                           
  2368                           ;main.c: 337:                 lcd_cmd(0x80);
  2369     0DBF  3080               	movlw	128
  2370     0DC0  319E  2622  318C   	fcall	_lcd_cmd
  2371                           
  2372                           ;main.c: 338:                 lcd_DisplayString("Enter Time:");
  2373     0DC3  304A               	movlw	low (STR_11| (0+32768))
  2374     0DC4  00F2               	movwf	lcd_DisplayString@str
  2375     0DC5  3098               	movlw	high (STR_11| (0+32768))
  2376     0DC6  00F3               	movwf	lcd_DisplayString@str+1
  2377     0DC7  319C  246B  318C   	fcall	_lcd_DisplayString
  2378                           
  2379                           ;main.c: 339:                 lcd_cmd(0xC0);
  2380     0DCA  30C0               	movlw	192
  2381     0DCB  319E  2622  318C   	fcall	_lcd_cmd
  2382                           
  2383                           ;main.c: 340:                 lcd_DisplayString(inputTime);
  2384     0DCE  30C9               	movlw	low main@inputTime
  2385     0DCF  00F2               	movwf	lcd_DisplayString@str
  2386     0DD0  3001               	movlw	high main@inputTime
  2387     0DD1  00F3               	movwf	lcd_DisplayString@str+1
  2388     0DD2  319C  246B  318C   	fcall	_lcd_DisplayString
  2389                           
  2390                           ;main.c: 342:                 char key = keypad();
  2391     0DD5  3190  2056  318C   	fcall	_keypad
  2392     0DD8  0023               	movlb	3	; select bank3
  2393     0DD9  00C6               	movwf	main@key^(0+384)
  2394                           
  2395                           ;main.c: 343:                 if(key == '#'){
  2396     0DDA  3023               	movlw	35
  2397     0DDB  0646               	xorwf	main@key^(0+384),w
  2398     0DDC  1D03               	btfss	3,2
  2399     0DDD  2E24               	goto	l4615
  2400                           
  2401                           ;main.c: 344:                     lcd_cmd(0x01);
  2402     0DDE  3001               	movlw	1
  2403     0DDF  319E  2622  318C   	fcall	_lcd_cmd
  2404                           
  2405                           ;main.c: 345:                     int hr0 = inputTime[1] - '0';
  2406     0DE2  0023               	movlb	3	; select bank3
  2407     0DE3  084A               	movf	(main@inputTime^(0+384)+1),w
  2408     0DE4  3ED0               	addlw	208
  2409     0DE5  00AE               	movwf	main@hr0^(0+384)
  2410     0DE6  30FF               	movlw	255
  2411     0DE7  1803               	skipnc
  2412     0DE8  3000               	movlw	0
  2413     0DE9  00AF               	movwf	(main@hr0^(0+384)+1)
  2414                           
  2415                           ;main.c: 346:                     int hr1 = inputTime[0] - '0';
  2416     0DEA  0849               	movf	main@inputTime^(0+384),w
  2417     0DEB  3ED0               	addlw	208
  2418     0DEC  00B0               	movwf	main@hr1^(0+384)
  2419     0DED  30FF               	movlw	255
  2420     0DEE  1803               	skipnc
  2421     0DEF  3000               	movlw	0
  2422     0DF0  00B1               	movwf	(main@hr1^(0+384)+1)
  2423                           
  2424                           ;main.c: 348:                     int min0 = inputTime[4] - '0';
  2425     0DF1  084D               	movf	(main@inputTime^(0+384)+4),w
  2426     0DF2  3ED0               	addlw	208
  2427     0DF3  00B2               	movwf	main@min0^(0+384)
  2428     0DF4  30FF               	movlw	255
  2429     0DF5  1803               	skipnc
  2430     0DF6  3000               	movlw	0
  2431     0DF7  00B3               	movwf	(main@min0^(0+384)+1)
  2432                           
  2433                           ;main.c: 349:                     int min1 = inputTime[3] - '0';
  2434     0DF8  084C               	movf	(main@inputTime^(0+384)+3),w
  2435     0DF9  3ED0               	addlw	208
  2436     0DFA  00B4               	movwf	main@min1^(0+384)
  2437     0DFB  30FF               	movlw	255
  2438     0DFC  1803               	skipnc
  2439     0DFD  3000               	movlw	0
  2440     0DFE  00B5               	movwf	(main@min1^(0+384)+1)
  2441                           
  2442                           ;main.c: 351:                     hr = hr0 + (hr1*10);
  2443     0DFF  0831               	movf	(main@hr1+1)^(0+384),w
  2444     0E00  00F1               	movwf	___wmul@multiplier+1
  2445     0E01  0830               	movf	main@hr1^(0+384),w
  2446     0E02  00F0               	movwf	___wmul@multiplier
  2447     0E03  300A               	movlw	10
  2448     0E04  00F2               	movwf	___wmul@multiplicand
  2449     0E05  3000               	movlw	0
  2450     0E06  00F3               	movwf	___wmul@multiplicand+1
  2451     0E07  319C  24AD  318C   	fcall	___wmul
  2452     0E0A  0023               	movlb	3	; select bank3
  2453     0E0B  082E               	movf	main@hr0^(0+384),w
  2454     0E0C  0770               	addwf	?___wmul,w
  2455     0E0D  00BF               	movwf	main@hr^(0+384)
  2456     0E0E  082F               	movf	(main@hr0+1)^(0+384),w
  2457     0E0F  3D71               	addwfc	?___wmul+1,w
  2458     0E10  00C0               	movwf	(main@hr+1)^(0+384)
  2459                           
  2460                           ;main.c: 352:                     min = min0 + (min1*10);
  2461     0E11  0835               	movf	(main@min1+1)^(0+384),w
  2462     0E12  00F1               	movwf	___wmul@multiplier+1
  2463     0E13  0834               	movf	main@min1^(0+384),w
  2464     0E14  00F0               	movwf	___wmul@multiplier
  2465     0E15  300A               	movlw	10
  2466     0E16  00F2               	movwf	___wmul@multiplicand
  2467     0E17  3000               	movlw	0
  2468     0E18  00F3               	movwf	___wmul@multiplicand+1
  2469     0E19  319C  24AD  318C   	fcall	___wmul
  2470     0E1C  0023               	movlb	3	; select bank3
  2471     0E1D  0832               	movf	main@min0^(0+384),w
  2472     0E1E  0770               	addwf	?___wmul,w
  2473     0E1F  00C1               	movwf	main@min^(0+384)
  2474     0E20  0833               	movf	(main@min0+1)^(0+384),w
  2475     0E21  3D71               	addwfc	?___wmul+1,w
  2476     0E22  00C2               	movwf	(main@min+1)^(0+384)
  2477                           
  2478                           ;main.c: 353:                 }
  2479     0E23  2E78               	goto	l4487
  2480     0E24                     l4615:
  2481     0E24  302A               	movlw	42
  2482     0E25  0646               	xorwf	main@key^(0+384),w
  2483     0E26  1D03               	btfss	3,2
  2484     0E27  2E56               	goto	l4633
  2485                           
  2486                           ;main.c: 355:                     if (count2 ==1){
  2487     0E28  0352               	decf	main@count2^(0+384),w
  2488     0E29  0453               	iorwf	(main@count2+1)^(0+384),w
  2489     0E2A  1D03               	btfss	3,2
  2490     0E2B  2E2F               	goto	l4621
  2491                           
  2492                           ;main.c: 356:                         inputTime[4] = '0';
  2493     0E2C  3030               	movlw	48
  2494     0E2D  00CD               	movwf	(main@inputTime^(0+384)+4)
  2495     0E2E  2E52               	goto	L7
  2496     0E2F                     l4621:	
  2497                           ;main.c: 358:                     }
  2498                           
  2499                           ;main.c: 357:                         count2--;
  2500                           
  2501     0E2F  3002               	movlw	2
  2502     0E30  0652               	xorwf	main@count2^(0+384),w
  2503     0E31  0453               	iorwf	(main@count2+1)^(0+384),w
  2504     0E32  1D03               	btfss	3,2
  2505     0E33  2E39               	goto	l4625
  2506                           
  2507                           ;main.c: 360:                         inputTime[4] = inputTime[3];
  2508     0E34  084C               	movf	(main@inputTime^(0+384)+3),w
  2509     0E35  00CD               	movwf	(main@inputTime^(0+384)+4)
  2510                           
  2511                           ;main.c: 361:                         inputTime[3] = '0';
  2512     0E36  3030               	movlw	48
  2513     0E37  00CC               	movwf	(main@inputTime^(0+384)+3)
  2514     0E38  2E52               	goto	L7
  2515     0E39                     l4625:	
  2516                           ;main.c: 363:                     }
  2517                           
  2518                           ;main.c: 362:                         count2--;
  2519                           
  2520     0E39  3003               	movlw	3
  2521     0E3A  0652               	xorwf	main@count2^(0+384),w
  2522     0E3B  0453               	iorwf	(main@count2+1)^(0+384),w
  2523     0E3C  1D03               	btfss	3,2
  2524     0E3D  2E45               	goto	l4629
  2525                           
  2526                           ;main.c: 365:                         inputTime[4] = inputTime[3];
  2527     0E3E  084C               	movf	(main@inputTime^(0+384)+3),w
  2528     0E3F  00CD               	movwf	(main@inputTime^(0+384)+4)
  2529                           
  2530                           ;main.c: 366:                         inputTime[3] = inputTime[1];
  2531     0E40  084A               	movf	(main@inputTime^(0+384)+1),w
  2532     0E41  00CC               	movwf	(main@inputTime^(0+384)+3)
  2533                           
  2534                           ;main.c: 367:                         inputTime[1] = '0';
  2535     0E42  3030               	movlw	48
  2536     0E43  00CA               	movwf	(main@inputTime^(0+384)+1)
  2537     0E44  2E52               	goto	L7
  2538     0E45                     l4629:	
  2539                           ;main.c: 369:                     }
  2540                           
  2541                           ;main.c: 368:                         count2--;
  2542                           
  2543     0E45  3004               	movlw	4
  2544     0E46  0652               	xorwf	main@count2^(0+384),w
  2545     0E47  0453               	iorwf	(main@count2+1)^(0+384),w
  2546     0E48  1D03               	btfss	3,2
  2547     0E49  2E78               	goto	l4487
  2548                           
  2549                           ;main.c: 371:                         inputTime[4] = inputTime[3];
  2550     0E4A  084C               	movf	(main@inputTime^(0+384)+3),w
  2551     0E4B  00CD               	movwf	(main@inputTime^(0+384)+4)
  2552                           
  2553                           ;main.c: 372:                         inputTime[3] = inputTime[1];
  2554     0E4C  084A               	movf	(main@inputTime^(0+384)+1),w
  2555     0E4D  00CC               	movwf	(main@inputTime^(0+384)+3)
  2556                           
  2557                           ;main.c: 373:                         inputTime[1] = inputTime[0];
  2558     0E4E  0849               	movf	main@inputTime^(0+384),w
  2559     0E4F  00CA               	movwf	(main@inputTime^(0+384)+1)
  2560                           
  2561                           ;main.c: 374:                         inputTime[0] = '0';
  2562     0E50  3030               	movlw	48
  2563     0E51  00C9               	movwf	main@inputTime^(0+384)
  2564     0E52                     L7:
  2565                           
  2566                           ;main.c: 375:                         count2--;
  2567     0E52  30FF               	movlw	255
  2568     0E53  07D2               	addwf	main@count2^(0+384),f
  2569     0E54  30FF               	movlw	255
  2570     0E55  2E77               	goto	L11
  2571     0E56                     l4633:
  2572     0E56  3020               	movlw	32
  2573     0E57  0646               	xorwf	main@key^(0+384),w
  2574     0E58  1903               	btfsc	3,2
  2575     0E59  2E78               	goto	l4487
  2576                           
  2577                           ;main.c: 380:                     if (count2 == 0){
  2578     0E5A  0852               	movf	main@count2^(0+384),w
  2579     0E5B  0453               	iorwf	(main@count2+1)^(0+384),w
  2580     0E5C  1903               	btfsc	3,2
  2581     0E5D  2E72               	goto	L15
  2582                           
  2583                           ;main.c: 383:                     }
  2584                           
  2585                           ;main.c: 382:                         count2++;
  2586                           
  2587                           ;main.c: 381:                         inputTime[4] = key;
  2588     0E5E  0352               	decf	main@count2^(0+384),w
  2589     0E5F  0453               	iorwf	(main@count2+1)^(0+384),w
  2590     0E60  1903               	btfsc	3,2
  2591     0E61  2E70               	goto	L13
  2592                           
  2593                           ;main.c: 388:                     }
  2594                           
  2595                           ;main.c: 387:                         count2++;
  2596                           
  2597                           ;main.c: 386:                         inputTime[4] = key;
  2598                           
  2599                           ;main.c: 385:                         inputTime[3] = inputTime[4];
  2600     0E62  3002               	movlw	2
  2601     0E63  0652               	xorwf	main@count2^(0+384),w
  2602     0E64  0453               	iorwf	(main@count2+1)^(0+384),w
  2603     0E65  1903               	btfsc	3,2
  2604     0E66  2E6E               	goto	L16
  2605                           
  2606                           ;main.c: 394:                     }
  2607                           
  2608                           ;main.c: 393:                         count2++;
  2609                           
  2610                           ;main.c: 392:                         inputTime[4] = key;
  2611                           
  2612                           ;main.c: 391:                         inputTime[3] = inputTime[4];
  2613                           
  2614                           ;main.c: 390:                         inputTime[1] = inputTime[3];
  2615     0E67  3003               	movlw	3
  2616     0E68  0652               	xorwf	main@count2^(0+384),w
  2617     0E69  0453               	iorwf	(main@count2+1)^(0+384),w
  2618     0E6A  1D03               	btfss	3,2
  2619     0E6B  2E78               	goto	l4487
  2620                           
  2621                           ;main.c: 396:                         inputTime[0] = inputTime[1];
  2622     0E6C  084A               	movf	(main@inputTime^(0+384)+1),w
  2623     0E6D  00C9               	movwf	main@inputTime^(0+384)
  2624     0E6E                     L16:
  2625                           
  2626                           ;main.c: 397:                         inputTime[1] = inputTime[3];
  2627     0E6E  084C               	movf	(main@inputTime^(0+384)+3),w
  2628     0E6F  00CA               	movwf	(main@inputTime^(0+384)+1)
  2629     0E70                     L13:
  2630                           
  2631                           ;main.c: 398:                         inputTime[3] = inputTime[4];
  2632     0E70  084D               	movf	(main@inputTime^(0+384)+4),w
  2633     0E71  00CC               	movwf	(main@inputTime^(0+384)+3)
  2634     0E72                     L15:
  2635                           
  2636                           ;main.c: 399:                         inputTime[4] = key;
  2637     0E72  0846               	movf	main@key^(0+384),w
  2638     0E73  00CD               	movwf	(main@inputTime^(0+384)+4)
  2639                           
  2640                           ;main.c: 400:                         count2++;
  2641     0E74  3001               	movlw	1
  2642     0E75  07D2               	addwf	main@count2^(0+384),f
  2643     0E76  3000               	movlw	0
  2644     0E77                     L11:
  2645     0E77  3DD3               	addwfc	(main@count2+1)^(0+384),f
  2646     0E78                     l4487:
  2647                           
  2648                           ;main.c: 255:         if (tempBool){
  2649     0E78  0023               	movlb	3	; select bank3
  2650     0E79  083B               	movf	main@tempBool^(0+384),w
  2651     0E7A  1D03               	btfss	3,2
  2652     0E7B  2C73               	goto	l4489
  2653     0E7C  083C               	movf	main@timeBool^(0+384),w
  2654     0E7D  1D03               	btfss	3,2
  2655     0E7E  2D4F               	goto	l4557
  2656     0E7F  083C               	movf	main@timeBool^(0+384),w
  2657     0E80  1D03               	btfss	3,2
  2658     0E81  2E78               	goto	l4487
  2659     0E82  083B               	movf	main@tempBool^(0+384),w
  2660     0E83  1D03               	btfss	3,2
  2661     0E84  2E78               	goto	l4487
  2662                           
  2663                           ;main.c: 406:             if(start){
  2664     0E85  0836               	movf	main@start^(0+384),w
  2665     0E86  1903               	btfsc	3,2
  2666     0E87  2FD3               	goto	l4689
  2667                           
  2668                           ;main.c: 407:                 int seconds = hr*3600 + min * 60;
  2669     0E88  0840               	movf	(main@hr+1)^(0+384),w
  2670     0E89  00F1               	movwf	___wmul@multiplier+1
  2671     0E8A  083F               	movf	main@hr^(0+384),w
  2672     0E8B  00F0               	movwf	___wmul@multiplier
  2673     0E8C  3010               	movlw	16
  2674     0E8D  00F2               	movwf	___wmul@multiplicand
  2675     0E8E  300E               	movlw	14
  2676     0E8F  00F3               	movwf	___wmul@multiplicand+1
  2677     0E90  319C  24AD  318C   	fcall	___wmul
  2678     0E93  0870               	movf	?___wmul,w
  2679     0E94  0022               	movlb	2	; select bank2
  2680     0E95  00BF               	movwf	??_main^(0+256)
  2681     0E96  0871               	movf	?___wmul+1,w
  2682     0E97  00C0               	movwf	(??_main^(0+256)+1)
  2683     0E98  0023               	movlb	3	; select bank3
  2684     0E99  0842               	movf	(main@min+1)^(0+384),w
  2685     0E9A  00F1               	movwf	___wmul@multiplier+1
  2686     0E9B  0841               	movf	main@min^(0+384),w
  2687     0E9C  00F0               	movwf	___wmul@multiplier
  2688     0E9D  303C               	movlw	60
  2689     0E9E  00F2               	movwf	___wmul@multiplicand
  2690     0E9F  3000               	movlw	0
  2691     0EA0  00F3               	movwf	___wmul@multiplicand+1
  2692     0EA1  319C  24AD  318C   	fcall	___wmul
  2693     0EA4  0870               	movf	?___wmul,w
  2694     0EA5  0022               	movlb	2	; select bank2
  2695     0EA6  073F               	addwf	??_main^(0+256),w
  2696     0EA7  0023               	movlb	3	; select bank3
  2697     0EA8  00C3               	movwf	main@seconds^(0+384)
  2698     0EA9  0871               	movf	?___wmul+1,w
  2699     0EAA  0022               	movlb	2	; select bank2
  2700     0EAB  3D40               	addwfc	(??_main+1)^(0+256),w
  2701     0EAC  0023               	movlb	3	; select bank3
  2702     0EAD  00C4               	movwf	(main@seconds+1)^(0+384)
  2703     0EAE                     l4685:	
  2704                           ;main.c: 408:                 while(seconds > 0 ){
  2705                           
  2706                           
  2707                           ;main.c: 408:                 while(seconds > 0 ){
  2708     0EAE  0023               	movlb	3	; select bank3
  2709     0EAF  0844               	movf	(main@seconds+1)^(0+384),w
  2710     0EB0  3A80               	xorlw	128
  2711     0EB1  0022               	movlb	2	; select bank2
  2712     0EB2  00BF               	movwf	??_main^(0+256)
  2713     0EB3  3080               	movlw	128
  2714     0EB4  023F               	subwf	??_main^(0+256),w
  2715     0EB5  1D03               	skipz
  2716     0EB6  2EBA               	goto	u6605
  2717     0EB7  3001               	movlw	1
  2718     0EB8  0023               	movlb	3	; select bank3
  2719     0EB9  0243               	subwf	main@seconds^(0+384),w
  2720     0EBA                     u6605:
  2721     0EBA  1C03               	btfss	3,0
  2722     0EBB  2FCC               	goto	l199
  2723                           
  2724                           ;main.c: 409:                     lcd_cmd(0x80);
  2725     0EBC  3080               	movlw	128
  2726     0EBD  319E  2622  318C   	fcall	_lcd_cmd
  2727                           
  2728                           ;main.c: 410:                     display_int(seconds/3600);
  2729     0EC0  3010               	movlw	16
  2730     0EC1  00F7               	movwf	___awdiv@divisor
  2731     0EC2  300E               	movlw	14
  2732     0EC3  00F8               	movwf	___awdiv@divisor+1
  2733     0EC4  0023               	movlb	3	; select bank3
  2734     0EC5  0844               	movf	(main@seconds+1)^(0+384),w
  2735     0EC6  00FA               	movwf	___awdiv@dividend+1
  2736     0EC7  0843               	movf	main@seconds^(0+384),w
  2737     0EC8  00F9               	movwf	___awdiv@dividend
  2738     0EC9  3190  2004  318C   	fcall	___awdiv
  2739     0ECC  0878               	movf	?___awdiv+1,w
  2740     0ECD  0022               	movlb	2	; select bank2
  2741     0ECE  00AC               	movwf	(display_int@num+1)^(0+256)
  2742     0ECF  0877               	movf	?___awdiv,w
  2743     0ED0  00AB               	movwf	display_int@num^(0+256)
  2744     0ED1  319C  24C8  318C   	fcall	_display_int
  2745                           
  2746                           ;main.c: 411:                     lcd_char(':');
  2747     0ED4  303A               	movlw	58
  2748     0ED5  319E  2650  318C   	fcall	_lcd_char
  2749                           
  2750                           ;main.c: 412:                     display_int((seconds%3600)/60);
  2751     0ED8  303C               	movlw	60
  2752     0ED9  00F7               	movwf	___awdiv@divisor
  2753     0EDA  3000               	movlw	0
  2754     0EDB  00F8               	movwf	___awdiv@divisor+1
  2755     0EDC  0023               	movlb	3	; select bank3
  2756     0EDD  0844               	movf	(main@seconds+1)^(0+384),w
  2757     0EDE  00F3               	movwf	___awmod@dividend+1
  2758     0EDF  0843               	movf	main@seconds^(0+384),w
  2759     0EE0  00F2               	movwf	___awmod@dividend
  2760     0EE1  3010               	movlw	16
  2761     0EE2  00F0               	movwf	___awmod@divisor
  2762     0EE3  300E               	movlw	14
  2763     0EE4  00F1               	movwf	___awmod@divisor+1
  2764     0EE5  319E  26C1  318C   	fcall	___awmod
  2765     0EE8  0871               	movf	?___awmod+1,w
  2766     0EE9  00FA               	movwf	___awdiv@dividend+1
  2767     0EEA  0870               	movf	?___awmod,w
  2768     0EEB  00F9               	movwf	___awdiv@dividend
  2769     0EEC  3190  2004  318C   	fcall	___awdiv
  2770     0EEF  0878               	movf	?___awdiv+1,w
  2771     0EF0  0022               	movlb	2	; select bank2
  2772     0EF1  00AC               	movwf	(display_int@num+1)^(0+256)
  2773     0EF2  0877               	movf	?___awdiv,w
  2774     0EF3  00AB               	movwf	display_int@num^(0+256)
  2775     0EF4  319C  24C8  318C   	fcall	_display_int
  2776                           
  2777                           ;main.c: 413:                     lcd_char(':');
  2778     0EF7  303A               	movlw	58
  2779     0EF8  319E  2650  318C   	fcall	_lcd_char
  2780                           
  2781                           ;main.c: 414:                     display_int(seconds%60);
  2782     0EFB  303C               	movlw	60
  2783     0EFC  00F0               	movwf	___awmod@divisor
  2784     0EFD  3000               	movlw	0
  2785     0EFE  00F1               	movwf	___awmod@divisor+1
  2786     0EFF  0023               	movlb	3	; select bank3
  2787     0F00  0844               	movf	(main@seconds+1)^(0+384),w
  2788     0F01  00F3               	movwf	___awmod@dividend+1
  2789     0F02  0843               	movf	main@seconds^(0+384),w
  2790     0F03  00F2               	movwf	___awmod@dividend
  2791     0F04  319E  26C1  318C   	fcall	___awmod
  2792     0F07  0871               	movf	?___awmod+1,w
  2793     0F08  0022               	movlb	2	; select bank2
  2794     0F09  00AC               	movwf	(display_int@num+1)^(0+256)
  2795     0F0A  0870               	movf	?___awmod,w
  2796     0F0B  00AB               	movwf	display_int@num^(0+256)
  2797     0F0C  319C  24C8  318C   	fcall	_display_int
  2798                           
  2799                           ;main.c: 416:                     lcd_cmd(0xC0);
  2800     0F0F  30C0               	movlw	192
  2801     0F10  319E  2622  318C   	fcall	_lcd_cmd
  2802                           
  2803                           ;main.c: 417:                     float tempVoltage = ADC_Convert(0);
  2804     0F13  3000               	movlw	0
  2805     0F14  0020               	movlb	0	; select bank0
  2806     0F15  00D4               	movwf	ADC_Convert@chan
  2807     0F16  00D5               	movwf	ADC_Convert@chan+1
  2808     0F17  3188  2003  318C   	fcall	_ADC_Convert
  2809     0F1A  0857               	movf	?_ADC_Convert+3,w
  2810     0F1B  0023               	movlb	3	; select bank3
  2811     0F1C  00A3               	movwf	(main@tempVoltage+3)^(0+384)
  2812     0F1D  0020               	movlb	0	; select bank0
  2813     0F1E  0856               	movf	?_ADC_Convert+2,w
  2814     0F1F  0023               	movlb	3	; select bank3
  2815     0F20  00A2               	movwf	(main@tempVoltage+2)^(0+384)
  2816     0F21  0020               	movlb	0	; select bank0
  2817     0F22  0855               	movf	?_ADC_Convert+1,w
  2818     0F23  0023               	movlb	3	; select bank3
  2819     0F24  00A1               	movwf	(main@tempVoltage+1)^(0+384)
  2820     0F25  0020               	movlb	0	; select bank0
  2821     0F26  0854               	movf	?_ADC_Convert,w
  2822     0F27  0023               	movlb	3	; select bank3
  2823     0F28  00A0               	movwf	main@tempVoltage^(0+384)
  2824                           
  2825                           ;main.c: 418:                     float currentTemperature = tempVoltage*100;
  2826     0F29  3042               	movlw	66
  2827     0F2A  0020               	movlb	0	; select bank0
  2828     0F2B  00A3               	movwf	___flmul@b+3
  2829     0F2C  30C8               	movlw	200
  2830     0F2D  00A2               	movwf	___flmul@b+2
  2831     0F2E  3000               	movlw	0
  2832     0F2F  00A1               	movwf	___flmul@b+1
  2833     0F30  3000               	movlw	0
  2834     0F31  00A0               	movwf	___flmul@b
  2835     0F32  0023               	movlb	3	; select bank3
  2836     0F33  0823               	movf	(main@tempVoltage+3)^(0+384),w
  2837     0F34  0020               	movlb	0	; select bank0
  2838     0F35  00A7               	movwf	___flmul@a+3
  2839     0F36  0023               	movlb	3	; select bank3
  2840     0F37  0822               	movf	(main@tempVoltage+2)^(0+384),w
  2841     0F38  0020               	movlb	0	; select bank0
  2842     0F39  00A6               	movwf	___flmul@a+2
  2843     0F3A  0023               	movlb	3	; select bank3
  2844     0F3B  0821               	movf	(main@tempVoltage+1)^(0+384),w
  2845     0F3C  0020               	movlb	0	; select bank0
  2846     0F3D  00A5               	movwf	___flmul@a+1
  2847     0F3E  0023               	movlb	3	; select bank3
  2848     0F3F  0820               	movf	main@tempVoltage^(0+384),w
  2849     0F40  0020               	movlb	0	; select bank0
  2850     0F41  00A4               	movwf	___flmul@a
  2851     0F42  3180  203F  318C   	fcall	___flmul
  2852     0F45  0823               	movf	?___flmul+3,w
  2853     0F46  0023               	movlb	3	; select bank3
  2854     0F47  00BA               	movwf	(main@currentTemperature+3)^(0+384)
  2855     0F48  0020               	movlb	0	; select bank0
  2856     0F49  0822               	movf	?___flmul+2,w
  2857     0F4A  0023               	movlb	3	; select bank3
  2858     0F4B  00B9               	movwf	(main@currentTemperature+2)^(0+384)
  2859     0F4C  0020               	movlb	0	; select bank0
  2860     0F4D  0821               	movf	?___flmul+1,w
  2861     0F4E  0023               	movlb	3	; select bank3
  2862     0F4F  00B8               	movwf	(main@currentTemperature+1)^(0+384)
  2863     0F50  0020               	movlb	0	; select bank0
  2864     0F51  0820               	movf	?___flmul,w
  2865     0F52  0023               	movlb	3	; select bank3
  2866     0F53  00B7               	movwf	main@currentTemperature^(0+384)
  2867                           
  2868                           ;main.c: 419:                     lcd_DisplayString("TEMP:");
  2869     0F54  3072               	movlw	low (STR_12| (0+32768))
  2870     0F55  00F2               	movwf	lcd_DisplayString@str
  2871     0F56  3098               	movlw	high (STR_12| (0+32768))
  2872     0F57  00F3               	movwf	lcd_DisplayString@str+1
  2873     0F58  319C  246B  318C   	fcall	_lcd_DisplayString
  2874                           
  2875                           ;main.c: 420:                     display_float(currentTemperature);
  2876     0F5B  0023               	movlb	3	; select bank3
  2877     0F5C  083A               	movf	(main@currentTemperature+3)^(0+384),w
  2878     0F5D  0022               	movlb	2	; select bank2
  2879     0F5E  00AE               	movwf	(display_float@num+3)^(0+256)
  2880     0F5F  0023               	movlb	3	; select bank3
  2881     0F60  0839               	movf	(main@currentTemperature+2)^(0+384),w
  2882     0F61  0022               	movlb	2	; select bank2
  2883     0F62  00AD               	movwf	(display_float@num+2)^(0+256)
  2884     0F63  0023               	movlb	3	; select bank3
  2885     0F64  0838               	movf	(main@currentTemperature+1)^(0+384),w
  2886     0F65  0022               	movlb	2	; select bank2
  2887     0F66  00AC               	movwf	(display_float@num+1)^(0+256)
  2888     0F67  0023               	movlb	3	; select bank3
  2889     0F68  0837               	movf	main@currentTemperature^(0+384),w
  2890     0F69  0022               	movlb	2	; select bank2
  2891     0F6A  00AB               	movwf	display_float@num^(0+256)
  2892     0F6B  319D  25D9  318C   	fcall	_display_float
  2893                           
  2894                           ;main.c: 421:                     _delay((unsigned long)((990)*(19600000/4000.0)));
  2895     0F6E  3019               	movlw	25
  2896     0F6F  0022               	movlb	2	; select bank2
  2897     0F70  00C0               	movwf	(??_main^(0+256)+1)
  2898     0F71  309C               	movlw	156
  2899     0F72  00BF               	movwf	??_main^(0+256)
  2900     0F73  30ED               	movlw	237
  2901     0F74                     u6657:
  2902     0F74  0B89               	decfsz	9,f
  2903     0F75  2F74               	goto	u6657
  2904     0F76  0BBF               	decfsz	??_main^(0+256),f
  2905     0F77  2F74               	goto	u6657
  2906     0F78  0BC0               	decfsz	(??_main^(0+256)+1),f
  2907     0F79  2F74               	goto	u6657
  2908     0F7A  3200               	nop2
  2909                           
  2910                           ;main.c: 422:                     lcd_cmd(0x01);
  2911     0F7B  3001               	movlw	1
  2912     0F7C  319E  2622  318C   	fcall	_lcd_cmd
  2913                           
  2914                           ;main.c: 423:                     seconds--;
  2915     0F7F  30FF               	movlw	255
  2916     0F80  0023               	movlb	3	; select bank3
  2917     0F81  07C3               	addwf	main@seconds^(0+384),f
  2918     0F82  30FF               	movlw	255
  2919     0F83  3DC4               	addwfc	(main@seconds+1)^(0+384),f
  2920                           
  2921                           ;main.c: 425:                     float inputTemperature = temp+5;
  2922     0F84  083D               	movf	main@temp^(0+384),w
  2923     0F85  3E05               	addlw	5
  2924     0F86  00F0               	movwf	___xxtofl@val
  2925     0F87  3000               	movlw	0
  2926     0F88  3D3E               	addwfc	(main@temp+1)^(0+384),w
  2927     0F89  00F1               	movwf	___xxtofl@val+1
  2928     0F8A  01F2               	clrf	___xxtofl@val+2
  2929     0F8B  1BF1               	btfsc	___xxtofl@val+1,7
  2930     0F8C  03F2               	decf	___xxtofl@val+2,f
  2931     0F8D  0872               	movf	___xxtofl@val+2,w
  2932     0F8E  00F3               	movwf	___xxtofl@val+3
  2933     0F8F  3001               	movlw	1
  2934     0F90  3192  223D  318C   	fcall	___xxtofl
  2935     0F93  0873               	movf	?___xxtofl+3,w
  2936     0F94  0023               	movlb	3	; select bank3
  2937     0F95  00A7               	movwf	(main@inputTemperature+3)^(0+384)
  2938     0F96  0872               	movf	?___xxtofl+2,w
  2939     0F97  00A6               	movwf	(main@inputTemperature+2)^(0+384)
  2940     0F98  0871               	movf	?___xxtofl+1,w
  2941     0F99  00A5               	movwf	(main@inputTemperature+1)^(0+384)
  2942     0F9A  0870               	movf	?___xxtofl,w
  2943     0F9B  00A4               	movwf	main@inputTemperature^(0+384)
  2944                           
  2945                           ;main.c: 426:                     if(inputTemperature >= currentTemperature){
  2946     0F9C  0827               	movf	(main@inputTemperature+3)^(0+384),w
  2947     0F9D  0020               	movlb	0	; select bank0
  2948     0F9E  00BD               	movwf	___flge@ff1+3
  2949     0F9F  0023               	movlb	3	; select bank3
  2950     0FA0  0826               	movf	(main@inputTemperature+2)^(0+384),w
  2951     0FA1  0020               	movlb	0	; select bank0
  2952     0FA2  00BC               	movwf	___flge@ff1+2
  2953     0FA3  0023               	movlb	3	; select bank3
  2954     0FA4  0825               	movf	(main@inputTemperature+1)^(0+384),w
  2955     0FA5  0020               	movlb	0	; select bank0
  2956     0FA6  00BB               	movwf	___flge@ff1+1
  2957     0FA7  0023               	movlb	3	; select bank3
  2958     0FA8  0824               	movf	main@inputTemperature^(0+384),w
  2959     0FA9  0020               	movlb	0	; select bank0
  2960     0FAA  00BA               	movwf	___flge@ff1
  2961     0FAB  0023               	movlb	3	; select bank3
  2962     0FAC  083A               	movf	(main@currentTemperature+3)^(0+384),w
  2963     0FAD  0020               	movlb	0	; select bank0
  2964     0FAE  00C1               	movwf	___flge@ff2+3
  2965     0FAF  0023               	movlb	3	; select bank3
  2966     0FB0  0839               	movf	(main@currentTemperature+2)^(0+384),w
  2967     0FB1  0020               	movlb	0	; select bank0
  2968     0FB2  00C0               	movwf	___flge@ff2+2
  2969     0FB3  0023               	movlb	3	; select bank3
  2970     0FB4  0838               	movf	(main@currentTemperature+1)^(0+384),w
  2971     0FB5  0020               	movlb	0	; select bank0
  2972     0FB6  00BF               	movwf	___flge@ff2+1
  2973     0FB7  0023               	movlb	3	; select bank3
  2974     0FB8  0837               	movf	main@currentTemperature^(0+384),w
  2975     0FB9  0020               	movlb	0	; select bank0
  2976     0FBA  00BE               	movwf	___flge@ff2
  2977     0FBB  3191  213B  318C   	fcall	___flge
  2978     0FBE  1C03               	btfss	3,0
  2979     0FBF  2FC6               	goto	l197
  2980                           
  2981                           ;main.c: 427:                         LATCbits.LATC0 = 1;
  2982     0FC0  0022               	movlb	2	; select bank2
  2983     0FC1  140E               	bsf	14,0	;volatile
  2984                           
  2985                           ;main.c: 428:                         LATCbits.LATC1 = 0;
  2986     0FC2  108E               	bcf	14,1	;volatile
  2987                           
  2988                           ;main.c: 430:                         LATCbits.LATC2 = 0;
  2989     0FC3  110E               	bcf	14,2	;volatile
  2990                           
  2991                           ;main.c: 431:                         LATCbits.LATC3 = 1;
  2992     0FC4  158E               	bsf	14,3	;volatile
  2993                           
  2994                           ;main.c: 432:                     }
  2995     0FC5  2EAE               	goto	l4685
  2996     0FC6                     l197:	
  2997                           ;main.c: 433:                     else{
  2998                           
  2999                           
  3000                           ;main.c: 434:                         LATCbits.LATC0 = 0;
  3001     0FC6  0022               	movlb	2	; select bank2
  3002     0FC7  100E               	bcf	14,0	;volatile
  3003                           
  3004                           ;main.c: 435:                         LATCbits.LATC1 = 1;
  3005     0FC8  148E               	bsf	14,1	;volatile
  3006                           
  3007                           ;main.c: 437:                         LATCbits.LATC2 = 1;
  3008     0FC9  150E               	bsf	14,2	;volatile
  3009                           
  3010                           ;main.c: 438:                         LATCbits.LATC3 = 0;
  3011     0FCA  118E               	bcf	14,3	;volatile
  3012     0FCB  2EAE               	goto	l4685
  3013     0FCC                     l199:
  3014                           
  3015                           ;main.c: 441:                 LATCbits.LATC0 = 0;
  3016     0FCC  0022               	movlb	2	; select bank2
  3017     0FCD  100E               	bcf	14,0	;volatile
  3018                           
  3019                           ;main.c: 442:                 LATCbits.LATC1 = 1;
  3020     0FCE  148E               	bsf	14,1	;volatile
  3021                           
  3022                           ;main.c: 443:                 LATCbits.LATC2 = 0;
  3023     0FCF  110E               	bcf	14,2	;volatile
  3024                           
  3025                           ;main.c: 444:                 LATCbits.LATC3 = 1;
  3026     0FD0  158E               	bsf	14,3	;volatile
  3027                           
  3028                           ;main.c: 446:                 start = 0;
  3029     0FD1  0023               	movlb	3	; select bank3
  3030     0FD2  01B6               	clrf	main@start^(0+384)
  3031     0FD3                     l4689:
  3032                           
  3033                           ;main.c: 448:             lcd_cmd(0x80);
  3034     0FD3  3080               	movlw	128
  3035     0FD4  319E  2622  318C   	fcall	_lcd_cmd
  3036                           
  3037                           ;main.c: 449:             lcd_DisplayString("TIMER FINISHED");
  3038     0FD7  301F               	movlw	low (STR_13| (0+32768))
  3039     0FD8  00F2               	movwf	lcd_DisplayString@str
  3040     0FD9  3098               	movlw	high (STR_13| (0+32768))
  3041     0FDA  00F3               	movwf	lcd_DisplayString@str+1
  3042     0FDB  319C  246B  318C   	fcall	_lcd_DisplayString
  3043                           
  3044                           ;main.c: 450:             lcd_cmd(0xC6);
  3045     0FDE  30C6               	movlw	198
  3046     0FDF  319E  2622  318C   	fcall	_lcd_cmd
  3047                           
  3048                           ;main.c: 451:             lcd_DisplayString("****");
  3049     0FE2  3078               	movlw	low (STR_14| (0+32768))
  3050     0FE3  00F2               	movwf	lcd_DisplayString@str
  3051     0FE4  3098               	movlw	high (STR_14| (0+32768))
  3052     0FE5  00F3               	movwf	lcd_DisplayString@str+1
  3053     0FE6  319C  246B  318C   	fcall	_lcd_DisplayString
  3054                           
  3055                           ;main.c: 452:             _delay((unsigned long)((5000)*(19600000/4000.0)));
  3056     0FE9  307D               	movlw	125
  3057     0FEA  0022               	movlb	2	; select bank2
  3058     0FEB  00C0               	movwf	(??_main^(0+256)+1)
  3059     0FEC  304A               	movlw	74
  3060     0FED  00BF               	movwf	??_main^(0+256)
  3061     0FEE  30D9               	movlw	217
  3062     0FEF                     u6667:
  3063     0FEF  0B89               	decfsz	9,f
  3064     0FF0  2FEF               	goto	u6667
  3065     0FF1  0BBF               	decfsz	??_main^(0+256),f
  3066     0FF2  2FEF               	goto	u6667
  3067     0FF3  0BC0               	decfsz	(??_main^(0+256)+1),f
  3068     0FF4  2FEF               	goto	u6667
  3069     0FF5  3200               	nop2
  3070                           
  3071                           ;main.c: 453:             tempBool = 1;
  3072     0FF6  0023               	movlb	3	; select bank3
  3073     0FF7  01BB               	clrf	main@tempBool^(0+384)
  3074     0FF8  0ABB               	incf	main@tempBool^(0+384),f
  3075                           
  3076                           ;main.c: 454:             temp = 0;
  3077     0FF9  01BD               	clrf	main@temp^(0+384)
  3078     0FFA  01BE               	clrf	(main@temp+1)^(0+384)
  3079                           
  3080                           ;main.c: 455:             hr = 0;
  3081     0FFB  01BF               	clrf	main@hr^(0+384)
  3082     0FFC  01C0               	clrf	(main@hr+1)^(0+384)
  3083                           
  3084                           ;main.c: 456:             min = 0;
  3085     0FFD  01C1               	clrf	main@min^(0+384)
  3086     0FFE  01C2               	clrf	(main@min+1)^(0+384)
  3087     0FFF  2E78               	goto	l4487
  3088     1000                     __end_of_main:
  3089                           
  3090                           	psect	text1
  3091     1E80                     __ptext1:	
  3092 ;; *************** function _lcd_init *****************
  3093 ;; Defined at:
  3094 ;;		line 43 in file "main.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg
  3103 ;; Tracked objects:
  3104 ;;		On entry : B1F/3
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3108 ;;      Params:         0       0       0       0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0
  3110 ;;      Temps:          2       0       0       0       0       0       0       0
  3111 ;;      Totals:         2       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     1E80                     _lcd_init:	
  3122                           ;psect for function _lcd_init
  3123                           
  3124                           
  3125                           ;main.c: 45:     _delay((unsigned long)((60)*(19600000/4000.0)));
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _lcd_init: [wreg]
  3129     1E80  3002               	movlw	2
  3130     1E81  00F1               	movwf	??_lcd_init+1
  3131     1E82  307E               	movlw	126
  3132     1E83  00F0               	movwf	??_lcd_init
  3133     1E84  30CE               	movlw	206
  3134     1E85                     u6677:
  3135     1E85  0B89               	decfsz	9,f
  3136     1E86  2E85               	goto	u6677
  3137     1E87  0BF0               	decfsz	??_lcd_init,f
  3138     1E88  2E85               	goto	u6677
  3139     1E89  0BF1               	decfsz	??_lcd_init+1,f
  3140     1E8A  2E85               	goto	u6677
  3141     1E8B  3200               	nop2
  3142                           
  3143                           ;main.c: 46:     LATB = 0x23;
  3144     1E8C  3023               	movlw	35
  3145     1E8D  0022               	movlb	2	; select bank2
  3146     1E8E  008D               	movwf	13	;volatile
  3147                           
  3148                           ;main.c: 47:     LATB = 0x03;
  3149     1E8F  3003               	movlw	3
  3150     1E90  008D               	movwf	13	;volatile
  3151                           
  3152                           ;main.c: 48:     _delay((unsigned long)((20)*(19600000/4000.0)));
  3153     1E91  3080               	movlw	128
  3154     1E92  00F0               	movwf	??_lcd_init
  3155     1E93  3044               	movlw	68
  3156     1E94                     u6687:
  3157     1E94  0B89               	decfsz	9,f
  3158     1E95  2E94               	goto	u6687
  3159     1E96  0BF0               	decfsz	??_lcd_init,f
  3160     1E97  2E94               	goto	u6687
  3161     1E98  3200               	nop2
  3162                           
  3163                           ;main.c: 49:     LATB = 0x23;
  3164     1E99  3023               	movlw	35
  3165     1E9A  0022               	movlb	2	; select bank2
  3166     1E9B  008D               	movwf	13	;volatile
  3167                           
  3168                           ;main.c: 50:     LATB = 0x03;
  3169     1E9C  3003               	movlw	3
  3170     1E9D  008D               	movwf	13	;volatile
  3171                           
  3172                           ;main.c: 51:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3173     1E9E  3020               	movlw	32
  3174     1E9F  00F0               	movwf	??_lcd_init
  3175     1EA0  30D0               	movlw	208
  3176     1EA1                     u6697:
  3177     1EA1  0B89               	decfsz	9,f
  3178     1EA2  2EA1               	goto	u6697
  3179     1EA3  0BF0               	decfsz	??_lcd_init,f
  3180     1EA4  2EA1               	goto	u6697
  3181     1EA5  3200               	nop2
  3182                           
  3183                           ;main.c: 52:     LATB = 0x23;
  3184     1EA6  3023               	movlw	35
  3185     1EA7  0022               	movlb	2	; select bank2
  3186     1EA8  008D               	movwf	13	;volatile
  3187                           
  3188                           ;main.c: 53:     LATB = 0x03;
  3189     1EA9  3003               	movlw	3
  3190     1EAA  008D               	movwf	13	;volatile
  3191                           
  3192                           ;main.c: 54:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3193     1EAB  3020               	movlw	32
  3194     1EAC  00F0               	movwf	??_lcd_init
  3195     1EAD  30D0               	movlw	208
  3196     1EAE                     u6707:
  3197     1EAE  0B89               	decfsz	9,f
  3198     1EAF  2EAE               	goto	u6707
  3199     1EB0  0BF0               	decfsz	??_lcd_init,f
  3200     1EB1  2EAE               	goto	u6707
  3201     1EB2  3200               	nop2
  3202                           
  3203                           ;main.c: 55:     LATB = 0x23;
  3204     1EB3  3023               	movlw	35
  3205     1EB4  0022               	movlb	2	; select bank2
  3206     1EB5  008D               	movwf	13	;volatile
  3207                           
  3208                           ;main.c: 56:     LATB = 0x03;
  3209     1EB6  3003               	movlw	3
  3210     1EB7  008D               	movwf	13	;volatile
  3211                           
  3212                           ;main.c: 57:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3213     1EB8  3020               	movlw	32
  3214     1EB9  00F0               	movwf	??_lcd_init
  3215     1EBA  30D0               	movlw	208
  3216     1EBB                     u6717:
  3217     1EBB  0B89               	decfsz	9,f
  3218     1EBC  2EBB               	goto	u6717
  3219     1EBD  0BF0               	decfsz	??_lcd_init,f
  3220     1EBE  2EBB               	goto	u6717
  3221     1EBF  3200               	nop2
  3222     1EC0  0008               	return
  3223     1EC1                     __end_of_lcd_init:
  3224                           
  3225                           	psect	text2
  3226     1E22                     __ptext2:	
  3227 ;; *************** function _lcd_cmd *****************
  3228 ;; Defined at:
  3229 ;;		line 60 in file "main.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  cmd             1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  cmd             1    1[COMMON] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/3
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3243 ;;      Params:         0       0       0       0       0       0       0       0
  3244 ;;      Locals:         1       0       0       0       0       0       0       0
  3245 ;;      Temps:          1       0       0       0       0       0       0       0
  3246 ;;      Totals:         2       0       0       0       0       0       0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256     1E22                     _lcd_cmd:	
  3257                           ;psect for function _lcd_cmd
  3258                           
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  3262                           ;lcd_cmd@cmd stored from wreg
  3263     1E22  00F1               	movwf	lcd_cmd@cmd
  3264                           
  3265                           ;main.c: 60: void lcd_cmd(unsigned char cmd);main.c: 61: {;main.c: 62:     LATB = 0x10 +
      +                           ((cmd >> 4) & 0x0f);
  3266     1E23  0871               	movf	lcd_cmd@cmd,w
  3267     1E24  00F0               	movwf	??_lcd_cmd
  3268     1E25  3004               	movlw	4
  3269     1E26                     u5815:
  3270     1E26  36F0               	lsrf	??_lcd_cmd,f
  3271     1E27  0B89               	decfsz	9,f
  3272     1E28  2E26               	goto	u5815
  3273     1E29  0870               	movf	??_lcd_cmd,w
  3274     1E2A  390F               	andlw	15
  3275     1E2B  3E10               	addlw	16
  3276     1E2C  0022               	movlb	2	; select bank2
  3277     1E2D  008D               	movwf	13	;volatile
  3278                           
  3279                           ;main.c: 63:     LATB = ((cmd >> 4) & 0x0f);
  3280     1E2E  0871               	movf	lcd_cmd@cmd,w
  3281     1E2F  00F0               	movwf	??_lcd_cmd
  3282     1E30  3004               	movlw	4
  3283     1E31                     u5825:
  3284     1E31  36F0               	lsrf	??_lcd_cmd,f
  3285     1E32  0B89               	decfsz	9,f
  3286     1E33  2E31               	goto	u5825
  3287     1E34  0870               	movf	??_lcd_cmd,w
  3288     1E35  390F               	andlw	15
  3289     1E36  008D               	movwf	13	;volatile
  3290                           
  3291                           ;main.c: 64:     _delay((unsigned long)((2)*(19600000/4000.0)));
  3292     1E37  300D               	movlw	13
  3293     1E38  00F0               	movwf	??_lcd_cmd
  3294     1E39  30B9               	movlw	185
  3295     1E3A                     u6727:
  3296     1E3A  0B89               	decfsz	9,f
  3297     1E3B  2E3A               	goto	u6727
  3298     1E3C  0BF0               	decfsz	??_lcd_cmd,f
  3299     1E3D  2E3A               	goto	u6727
  3300     1E3E  0000               	nop
  3301                           
  3302                           ;main.c: 65:     LATB = (0x10 + (cmd & 0x0f));
  3303     1E3F  0871               	movf	lcd_cmd@cmd,w
  3304     1E40  390F               	andlw	15
  3305     1E41  3E10               	addlw	16
  3306     1E42  0022               	movlb	2	; select bank2
  3307     1E43  008D               	movwf	13	;volatile
  3308                           
  3309                           ;main.c: 66:     LATB = (cmd & 0x0f);
  3310     1E44  0871               	movf	lcd_cmd@cmd,w
  3311     1E45  390F               	andlw	15
  3312     1E46  008D               	movwf	13	;volatile
  3313                           
  3314                           ;main.c: 67:     _delay((unsigned long)((2)*(19600000/4000.0)));
  3315     1E47  300D               	movlw	13
  3316     1E48  00F0               	movwf	??_lcd_cmd
  3317     1E49  30B9               	movlw	185
  3318     1E4A                     u6737:
  3319     1E4A  0B89               	decfsz	9,f
  3320     1E4B  2E4A               	goto	u6737
  3321     1E4C  0BF0               	decfsz	??_lcd_cmd,f
  3322     1E4D  2E4A               	goto	u6737
  3323     1E4E  0000               	nop
  3324     1E4F  0008               	return
  3325     1E50                     __end_of_lcd_cmd:
  3326                           
  3327                           	psect	text3
  3328     1056                     __ptext3:	
  3329 ;; *************** function _keypad *****************
  3330 ;; Defined at:
  3331 ;;		line 152 in file "main.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  key             1    0        unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      unsigned char 
  3338 ;; Registers used:
  3339 ;;		wreg
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/3
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3345 ;;      Params:         0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358     1056                     _keypad:	
  3359                           ;psect for function _keypad
  3360                           
  3361                           
  3362                           ;main.c: 154:     LATDbits.LATD0 =1; LATDbits.LATD1 = 0; LATDbits.LATD2 = 0;
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _keypad: [wreg]
  3366     1056  0022               	movlb	2	; select bank2
  3367     1057  140F               	bsf	15,0	;volatile
  3368     1058  108F               	bcf	15,1	;volatile
  3369     1059  110F               	bcf	15,2	;volatile
  3370                           
  3371                           ;main.c: 155:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3372     105A  3010               	movlw	16
  3373     105B                     u6747:
  3374     105B  0B89               	decfsz	9,f
  3375     105C  285B               	goto	u6747
  3376     105D  0000               	nop
  3377                           
  3378                           ;main.c: 156:     if(PORTDbits.RD4==1){
  3379     105E  0020               	movlb	0	; select bank0
  3380     105F  1E0F               	btfss	15,4	;volatile
  3381     1060  2865               	goto	l82
  3382     1061                     l83:
  3383     1061  1A0F               	btfsc	15,4	;volatile
  3384     1062  2861               	goto	l83
  3385                           
  3386                           ;main.c: 158:         return '1';
  3387     1063  3031               	movlw	49
  3388     1064  0008               	return
  3389     1065                     l82:	
  3390                           ;main.c: 160:     else if(PORTDbits.RD5==1){
  3391                           
  3392     1065  1E8F               	btfss	15,5	;volatile
  3393     1066  286B               	goto	l88
  3394     1067                     l89:
  3395     1067  1A8F               	btfsc	15,5	;volatile
  3396     1068  2867               	goto	l89
  3397                           
  3398                           ;main.c: 162:         return '4';
  3399     1069  3034               	movlw	52
  3400     106A  0008               	return
  3401     106B                     l88:	
  3402                           ;main.c: 164:     else if(PORTDbits.RD6==1){
  3403                           
  3404     106B  1F0F               	btfss	15,6	;volatile
  3405     106C  2871               	goto	l93
  3406     106D                     l94:
  3407     106D  1B0F               	btfsc	15,6	;volatile
  3408     106E  286D               	goto	l94
  3409                           
  3410                           ;main.c: 166:         return '7';
  3411     106F  3037               	movlw	55
  3412     1070  0008               	return
  3413     1071                     l93:	
  3414                           ;main.c: 168:     else if(PORTDbits.RD7==1){
  3415                           
  3416     1071  1F8F               	btfss	15,7	;volatile
  3417     1072  2877               	goto	l87
  3418     1073                     l99:
  3419     1073  1B8F               	btfsc	15,7	;volatile
  3420     1074  2873               	goto	l99
  3421                           
  3422                           ;main.c: 170:         return '*';
  3423     1075  302A               	movlw	42
  3424     1076  0008               	return
  3425     1077                     l87:
  3426                           
  3427                           ;main.c: 173:     LATDbits.LATD0 =0; LATDbits.LATD1 = 1; LATDbits.LATD2 = 0;
  3428     1077  0022               	movlb	2	; select bank2
  3429     1078  100F               	bcf	15,0	;volatile
  3430     1079  148F               	bsf	15,1	;volatile
  3431     107A  110F               	bcf	15,2	;volatile
  3432                           
  3433                           ;main.c: 174:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3434     107B  3010               	movlw	16
  3435     107C                     u6757:
  3436     107C  0B89               	decfsz	9,f
  3437     107D  287C               	goto	u6757
  3438     107E  0000               	nop
  3439                           
  3440                           ;main.c: 175:     if(PORTDbits.RD4==1){
  3441     107F  0020               	movlb	0	; select bank0
  3442     1080  1E0F               	btfss	15,4	;volatile
  3443     1081  2886               	goto	l102
  3444     1082                     l103:
  3445     1082  1A0F               	btfsc	15,4	;volatile
  3446     1083  2882               	goto	l103
  3447                           
  3448                           ;main.c: 177:         return '2';
  3449     1084  3032               	movlw	50
  3450     1085  0008               	return
  3451     1086                     l102:	
  3452                           ;main.c: 179:     else if(PORTDbits.RD5==1){
  3453                           
  3454     1086  1E8F               	btfss	15,5	;volatile
  3455     1087  288C               	goto	l107
  3456     1088                     l108:
  3457     1088  1A8F               	btfsc	15,5	;volatile
  3458     1089  2888               	goto	l108
  3459                           
  3460                           ;main.c: 181:         return '5';
  3461     108A  3035               	movlw	53
  3462     108B  0008               	return
  3463     108C                     l107:	
  3464                           ;main.c: 183:     else if(PORTDbits.RD6==1){
  3465                           
  3466     108C  1F0F               	btfss	15,6	;volatile
  3467     108D  2892               	goto	l112
  3468     108E                     l113:
  3469     108E  1B0F               	btfsc	15,6	;volatile
  3470     108F  288E               	goto	l113
  3471                           
  3472                           ;main.c: 185:         return '8';
  3473     1090  3038               	movlw	56
  3474     1091  0008               	return
  3475     1092                     l112:	
  3476                           ;main.c: 187:     else if(PORTDbits.RD7==1){
  3477                           
  3478     1092  1F8F               	btfss	15,7	;volatile
  3479     1093  2898               	goto	l106
  3480     1094                     l118:
  3481     1094  1B8F               	btfsc	15,7	;volatile
  3482     1095  2894               	goto	l118
  3483                           
  3484                           ;main.c: 189:         return '0';
  3485     1096  3030               	movlw	48
  3486     1097  0008               	return
  3487     1098                     l106:
  3488                           
  3489                           ;main.c: 192:     LATDbits.LATD0 =0; LATDbits.LATD1 = 0; LATDbits.LATD2 = 1;
  3490     1098  0022               	movlb	2	; select bank2
  3491     1099  100F               	bcf	15,0	;volatile
  3492     109A  108F               	bcf	15,1	;volatile
  3493     109B  150F               	bsf	15,2	;volatile
  3494                           
  3495                           ;main.c: 193:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3496     109C  3010               	movlw	16
  3497     109D                     u6767:
  3498     109D  0B89               	decfsz	9,f
  3499     109E  289D               	goto	u6767
  3500     109F  0000               	nop
  3501                           
  3502                           ;main.c: 194:     if(PORTDbits.RD4==1){
  3503     10A0  0020               	movlb	0	; select bank0
  3504     10A1  1E0F               	btfss	15,4	;volatile
  3505     10A2  28A7               	goto	l121
  3506     10A3                     l122:
  3507     10A3  1A0F               	btfsc	15,4	;volatile
  3508     10A4  28A3               	goto	l122
  3509                           
  3510                           ;main.c: 196:         return '3';
  3511     10A5  3033               	movlw	51
  3512     10A6  0008               	return
  3513     10A7                     l121:	
  3514                           ;main.c: 198:     else if(PORTDbits.RD5==1){
  3515                           
  3516     10A7  1E8F               	btfss	15,5	;volatile
  3517     10A8  28AD               	goto	l126
  3518     10A9                     l127:
  3519     10A9  1A8F               	btfsc	15,5	;volatile
  3520     10AA  28A9               	goto	l127
  3521                           
  3522                           ;main.c: 200:         return '6';
  3523     10AB  3036               	movlw	54
  3524     10AC  0008               	return
  3525     10AD                     l126:	
  3526                           ;main.c: 202:     else if(PORTDbits.RD6==1){
  3527                           
  3528     10AD  1F0F               	btfss	15,6	;volatile
  3529     10AE  28B3               	goto	l131
  3530     10AF                     l132:
  3531     10AF  1B0F               	btfsc	15,6	;volatile
  3532     10B0  28AF               	goto	l132
  3533                           
  3534                           ;main.c: 204:         return'9';
  3535     10B1  3039               	movlw	57
  3536     10B2  0008               	return
  3537     10B3                     l131:	
  3538                           ;main.c: 206:     else if(PORTDbits.RD7==1){
  3539                           
  3540     10B3  1F8F               	btfss	15,7	;volatile
  3541     10B4  28B9               	goto	l125
  3542     10B5                     l137:
  3543     10B5  1B8F               	btfsc	15,7	;volatile
  3544     10B6  28B5               	goto	l137
  3545                           
  3546                           ;main.c: 208:         return '#';
  3547     10B7  3023               	movlw	35
  3548     10B8  0008               	return
  3549     10B9                     l125:
  3550                           
  3551                           ;main.c: 210:     LATDbits.LATD0 =0; LATDbits.LATD1 = 0; LATDbits.LATD2 = 0;
  3552     10B9  0022               	movlb	2	; select bank2
  3553     10BA  100F               	bcf	15,0	;volatile
  3554     10BB  108F               	bcf	15,1	;volatile
  3555     10BC  110F               	bcf	15,2	;volatile
  3556                           
  3557                           ;main.c: 211:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3558     10BD  3010               	movlw	16
  3559     10BE                     u6777:
  3560     10BE  0B89               	decfsz	9,f
  3561     10BF  28BE               	goto	u6777
  3562     10C0  0000               	nop
  3563                           
  3564                           ;main.c: 212:     return key;
  3565     10C1  3020               	movlw	32
  3566     10C2  0008               	return
  3567     10C3                     __end_of_keypad:
  3568                           
  3569                           	psect	text4
  3570     1CC8                     __ptext4:	
  3571 ;; *************** function _display_int *****************
  3572 ;; Defined at:
  3573 ;;		line 102 in file "main.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  num             2   11[BANK2 ] int 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  str            16   13[BANK2 ] unsigned char [16]
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 1F/2
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3587 ;;      Params:         0       0       0       2       0       0       0       0
  3588 ;;      Locals:         0       0       0      16       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0
  3590 ;;      Totals:         0       0       0      18       0       0       0       0
  3591 ;;Total ram usage:       18 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 8
  3594 ;; This function calls:
  3595 ;;		_lcd_DisplayString
  3596 ;;		_sprintf
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602     1CC8                     _display_int:	
  3603                           ;psect for function _display_int
  3604                           
  3605                           
  3606                           ;main.c: 103:     char str[16];;main.c: 104:     sprintf(str, "%d", num);
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _display_int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3610     1CC8  302D               	movlw	low display_int@str
  3611     1CC9  0021               	movlb	1	; select bank1
  3612     1CCA  00E7               	movwf	sprintf@s^(0+128)
  3613     1CCB  3001               	movlw	high display_int@str
  3614     1CCC  00E8               	movwf	(sprintf@s+1)^(0+128)
  3615     1CCD  308A               	movlw	low (STR_3| (0+32768))
  3616     1CCE  00E9               	movwf	sprintf@fmt^(0+128)
  3617     1CCF  3098               	movlw	high (STR_3| (0+32768))
  3618     1CD0  00EA               	movwf	(sprintf@fmt^(0+128)+1)
  3619     1CD1  0022               	movlb	2	; select bank2
  3620     1CD2  082C               	movf	(display_int@num+1)^(0+256),w
  3621     1CD3  0021               	movlb	1	; select bank1
  3622     1CD4  00EC               	movwf	((?_sprintf+1)^(0+128)+4)
  3623     1CD5  0022               	movlb	2	; select bank2
  3624     1CD6  082B               	movf	display_int@num^(0+256),w
  3625     1CD7  0021               	movlb	1	; select bank1
  3626     1CD8  00EB               	movwf	(?_sprintf^(0+128)+4)
  3627     1CD9  319D  25FC  319C   	fcall	_sprintf
  3628                           
  3629                           ;main.c: 105:     lcd_DisplayString(str);
  3630     1CDC  302D               	movlw	low display_int@str
  3631     1CDD  00F2               	movwf	lcd_DisplayString@str
  3632     1CDE  3001               	movlw	high display_int@str
  3633     1CDF  00F3               	movwf	lcd_DisplayString@str+1
  3634     1CE0  319C  246B         	fcall	_lcd_DisplayString
  3635     1CE2  0008               	return
  3636     1CE3                     __end_of_display_int:
  3637                           
  3638                           	psect	text5
  3639     1DD9                     __ptext5:	
  3640 ;; *************** function _display_float *****************
  3641 ;; Defined at:
  3642 ;;		line 89 in file "main.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  num             4   11[BANK2 ] float 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  str            16   15[BANK2 ] unsigned char [16]
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 1F/2
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3656 ;;      Params:         0       0       0       4       0       0       0       0
  3657 ;;      Locals:         0       0       0      16       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0
  3659 ;;      Totals:         0       0       0      20       0       0       0       0
  3660 ;;Total ram usage:       20 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 8
  3663 ;; This function calls:
  3664 ;;		_lcd_DisplayString
  3665 ;;		_sprintf
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671     1DD9                     _display_float:	
  3672                           ;psect for function _display_float
  3673                           
  3674                           
  3675                           ;main.c: 90:     char str[16];;main.c: 91:     sprintf(str, "%.2f", num);
  3676                           
  3677                           ;incstack = 0
  3678                           ; Regs used in _display_float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3679     1DD9  302F               	movlw	low display_float@str
  3680     1DDA  0021               	movlb	1	; select bank1
  3681     1DDB  00E7               	movwf	sprintf@s^(0+128)
  3682     1DDC  3001               	movlw	high display_float@str
  3683     1DDD  00E8               	movwf	(sprintf@s+1)^(0+128)
  3684     1DDE  307D               	movlw	low (STR_1| (0+32768))
  3685     1DDF  00E9               	movwf	sprintf@fmt^(0+128)
  3686     1DE0  3098               	movlw	high (STR_1| (0+32768))
  3687     1DE1  00EA               	movwf	(sprintf@fmt^(0+128)+1)
  3688     1DE2  0022               	movlb	2	; select bank2
  3689     1DE3  082E               	movf	(display_float@num+3)^(0+256),w
  3690     1DE4  0021               	movlb	1	; select bank1
  3691     1DE5  00EE               	movwf	((?_sprintf+3)^(0+128)+4)
  3692     1DE6  0022               	movlb	2	; select bank2
  3693     1DE7  082D               	movf	(display_float@num+2)^(0+256),w
  3694     1DE8  0021               	movlb	1	; select bank1
  3695     1DE9  00ED               	movwf	((?_sprintf+2)^(0+128)+4)
  3696     1DEA  0022               	movlb	2	; select bank2
  3697     1DEB  082C               	movf	(display_float@num+1)^(0+256),w
  3698     1DEC  0021               	movlb	1	; select bank1
  3699     1DED  00EC               	movwf	((?_sprintf+1)^(0+128)+4)
  3700     1DEE  0022               	movlb	2	; select bank2
  3701     1DEF  082B               	movf	display_float@num^(0+256),w
  3702     1DF0  0021               	movlb	1	; select bank1
  3703     1DF1  00EB               	movwf	(?_sprintf^(0+128)+4)
  3704     1DF2  319D  25FC  319D   	fcall	_sprintf
  3705                           
  3706                           ;main.c: 92:     lcd_DisplayString(str);
  3707     1DF5  302F               	movlw	low display_float@str
  3708     1DF6  00F2               	movwf	lcd_DisplayString@str
  3709     1DF7  3001               	movlw	high display_float@str
  3710     1DF8  00F3               	movwf	lcd_DisplayString@str+1
  3711     1DF9  319C  246B         	fcall	_lcd_DisplayString
  3712     1DFB  0008               	return
  3713     1DFC                     __end_of_display_float:
  3714                           
  3715                           	psect	text6
  3716     1DFC                     __ptext6:	
  3717 ;; *************** function _sprintf *****************
  3718 ;; Defined at:
  3719 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  s               2   71[BANK1 ] PTR unsigned char 
  3722 ;;		 -> display_int@str(16), display_float2@str(16), display_float@str(16), 
  3723 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  3724 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  f              10    1[BANK2 ] struct _IO_FILE
  3727 ;;  ret             2    0        int 
  3728 ;;  ap              1    0[BANK2 ] PTR void [1]
  3729 ;;		 -> ?_sprintf(2), 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2   71[BANK1 ] int 
  3732 ;; Registers used:
  3733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 1F/1
  3736 ;;		On exit  : 1F/1
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3739 ;;      Params:         0       0       8       0       0       0       0       0
  3740 ;;      Locals:         0       0       0      11       0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0
  3742 ;;      Totals:         0       0       8      11       0       0       0       0
  3743 ;;Total ram usage:       19 bytes
  3744 ;; Hardware stack levels used: 1
  3745 ;; Hardware stack levels required when called: 7
  3746 ;; This function calls:
  3747 ;;		_vfprintf
  3748 ;; This function is called by:
  3749 ;;		_display_float
  3750 ;;		_display_int
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754     1DFC                     _sprintf:	
  3755                           ;psect for function _sprintf
  3756                           
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3760     1DFC  30EB               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  3761     1DFD  0022               	movlb	2	; select bank2
  3762     1DFE  00A0               	movwf	sprintf@ap^(0+256)
  3763     1DFF  0021               	movlb	1	; select bank1
  3764     1E00  0868               	movf	(sprintf@s+1)^(0+128),w
  3765     1E01  0022               	movlb	2	; select bank2
  3766     1E02  00A2               	movwf	(sprintf@f+1)^(0+256)
  3767     1E03  0021               	movlb	1	; select bank1
  3768     1E04  0867               	movf	sprintf@s^(0+128),w
  3769     1E05  0022               	movlb	2	; select bank2
  3770     1E06  00A1               	movwf	sprintf@f^(0+256)
  3771     1E07  01A3               	clrf	(sprintf@f^(0+256)+2)
  3772     1E08  01A4               	clrf	((sprintf@f+1)^(0+256)+2)
  3773     1E09  01A9               	clrf	(sprintf@f^(0+256)+8)
  3774     1E0A  01AA               	clrf	((sprintf@f+1)^(0+256)+8)
  3775     1E0B  0021               	movlb	1	; select bank1
  3776     1E0C  086A               	movf	(sprintf@fmt+1)^(0+128),w
  3777     1E0D  00E2               	movwf	(vfprintf@fmt+1)^(0+128)
  3778     1E0E  0869               	movf	sprintf@fmt^(0+128),w
  3779     1E0F  00E1               	movwf	vfprintf@fmt^(0+128)
  3780     1E10  3020               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3781     1E11  00E3               	movwf	vfprintf@ap^(0+128)
  3782     1E12  3021               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3783     1E13  319D  251C         	fcall	_vfprintf
  3784     1E15  3002               	movlw	2
  3785     1E16  3E21               	addlw	(low (sprintf@f| (0+256)))& (0+255)
  3786     1E17  0086               	movwf	6
  3787     1E18  3001               	movlw	1	; select bank2/3
  3788     1E19  0087               	movwf	7
  3789     1E1A  3F40               	moviw [0]fsr1
  3790     1E1B  0767               	addwf	sprintf@s^(0+128),w
  3791     1E1C  0084               	movwf	4
  3792     1E1D  3F41               	moviw [1]fsr1
  3793     1E1E  3D68               	addwfc	(sprintf@s+1)^(0+128),w
  3794     1E1F  0085               	movwf	5
  3795     1E20  0180               	clrf	0
  3796     1E21  0008               	return
  3797     1E22                     __end_of_sprintf:
  3798                           
  3799                           	psect	text7
  3800     1D1C                     __ptext7:	
  3801 ;; *************** function _vfprintf *****************
  3802 ;; Defined at:
  3803 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  fp              1    wreg     PTR struct _IO_FILE
  3806 ;;		 -> sprintf@f(10), 
  3807 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  3808 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3809 ;;  ap              1   67[BANK1 ] PTR PTR void 
  3810 ;;		 -> sprintf@ap(1), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  fp              1   68[BANK1 ] PTR struct _IO_FILE
  3813 ;;		 -> sprintf@f(10), 
  3814 ;;  cfmt            2   69[BANK1 ] PTR unsigned char 
  3815 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   65[BANK1 ] int 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 1F/1
  3822 ;;		On exit  : 1F/1
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3825 ;;      Params:         0       0       3       0       0       0       0       0
  3826 ;;      Locals:         0       0       3       0       0       0       0       0
  3827 ;;      Temps:          0       1       0       0       0       0       0       0
  3828 ;;      Totals:         0       1       6       0       0       0       0       0
  3829 ;;Total ram usage:        7 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 6
  3832 ;; This function calls:
  3833 ;;		_vfpfcnvrt
  3834 ;; This function is called by:
  3835 ;;		_sprintf
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839     1D1C                     _vfprintf:	
  3840                           ;psect for function _vfprintf
  3841                           
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3845                           ;vfprintf@fp stored from wreg
  3846     1D1C  00E4               	movwf	vfprintf@fp^(0+128)
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3849     1D1D  0862               	movf	(vfprintf@fmt+1)^(0+128),w
  3850     1D1E  00E6               	movwf	(vfprintf@cfmt+1)^(0+128)
  3851     1D1F  0861               	movf	vfprintf@fmt^(0+128),w
  3852     1D20  00E5               	movwf	vfprintf@cfmt^(0+128)
  3853     1D21                     l4115:	
  3854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3855                           
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3858     1D21  0021               	movlb	1	; select bank1
  3859     1D22  0865               	movf	vfprintf@cfmt^(0+128),w
  3860     1D23  0084               	movwf	4
  3861     1D24  0866               	movf	(vfprintf@cfmt+1)^(0+128),w
  3862     1D25  0085               	movwf	5
  3863     1D26  0012               	moviw fsr0++
  3864     1D27  1903               	btfsc	3,2
  3865     1D28  2D36               	goto	l4117
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3868     1D29  30E5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3869     1D2A  0020               	movlb	0	; select bank0
  3870     1D2B  00ED               	movwf	vfpfcnvrt@fmt
  3871     1D2C  0021               	movlb	1	; select bank1
  3872     1D2D  0863               	movf	vfprintf@ap^(0+128),w
  3873     1D2E  0020               	movlb	0	; select bank0
  3874     1D2F  00EE               	movwf	vfpfcnvrt@ap
  3875     1D30  0021               	movlb	1	; select bank1
  3876     1D31  0864               	movf	vfprintf@fp^(0+128),w
  3877     1D32  318A  222C  319D   	fcall	_vfpfcnvrt
  3878     1D35  2D21               	goto	l4115
  3879     1D36                     l4117:
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3882     1D36  01E1               	clrf	?_vfprintf^(0+128)
  3883     1D37  01E2               	clrf	(?_vfprintf+1)^(0+128)
  3884     1D38  0008               	return
  3885     1D39                     __end_of_vfprintf:
  3886                           
  3887                           	psect	text8
  3888     0A2C                     __ptext8:	
  3889 ;; *************** function _vfpfcnvrt *****************
  3890 ;; Defined at:
  3891 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  fp              1    wreg     PTR struct _IO_FILE
  3894 ;;		 -> sprintf@f(10), 
  3895 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  3896 ;;		 -> vfprintf@cfmt(2), 
  3897 ;;  ap              1   78[BANK0 ] PTR PTR void 
  3898 ;;		 -> sprintf@ap(1), 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  3901 ;;		 -> sprintf@f(10), 
  3902 ;;  convarg         8   53[BANK1 ] struct .
  3903 ;;  cp              2   63[BANK1 ] PTR unsigned char 
  3904 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3905 ;;  i               2    0        int 
  3906 ;;  done            2    0        int 
  3907 ;;  c               1   61[BANK1 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 1F/1
  3914 ;;		On exit  : 1F/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3917 ;;      Params:         0       2       0       0       0       0       0       0
  3918 ;;      Locals:         0       0      12       0       0       0       0       0
  3919 ;;      Temps:          0       0       4       0       0       0       0       0
  3920 ;;      Totals:         0       2      16       0       0       0       0       0
  3921 ;;Total ram usage:       18 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 5
  3924 ;; This function calls:
  3925 ;;		_atoi
  3926 ;;		_dtoa
  3927 ;;		_efgtoa
  3928 ;;		_fputc
  3929 ;;		_isdigit
  3930 ;; This function is called by:
  3931 ;;		_vfprintf
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935     0A2C                     _vfpfcnvrt:	
  3936                           ;psect for function _vfpfcnvrt
  3937                           
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3941                           ;vfpfcnvrt@fp stored from wreg
  3942     0A2C  00DE               	movwf	vfpfcnvrt@fp^(0+128)
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3945     0A2D  0020               	movlb	0	; select bank0
  3946     0A2E  086D               	movf	vfpfcnvrt@fmt,w
  3947     0A2F  0086               	movwf	6
  3948     0A30  0187               	clrf	7
  3949     0A31  3F40               	moviw [0]fsr1
  3950     0A32  0021               	movlb	1	; select bank1
  3951     0A33  00D1               	movwf	??_vfpfcnvrt^(0+128)
  3952     0A34  3F41               	moviw [1]fsr1
  3953     0A35  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3954     0A36  0851               	movf	??_vfpfcnvrt^(0+128),w
  3955     0A37  0084               	movwf	4
  3956     0A38  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3957     0A39  0085               	movwf	5
  3958     0A3A  0012               	moviw fsr0++
  3959     0A3B  3A25               	xorlw	37
  3960     0A3C  1D03               	btfss	3,2
  3961     0A3D  2BEB               	goto	l4083
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3964     0A3E  0020               	movlb	0	; select bank0
  3965     0A3F  086D               	movf	vfpfcnvrt@fmt,w
  3966     0A40  0086               	movwf	6
  3967     0A41  0187               	clrf	7
  3968     0A42  3001               	movlw	1
  3969     0A43  0781               	addwf	1,f
  3970     0A44  3141               	addfsr 1,1
  3971     0A45  1803               	skipnc
  3972     0A46  0A81               	incf	1,f
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3975     0A47  0022               	movlb	2	; select bank2
  3976     0A48  01CB               	clrf	_width^(0+256)
  3977     0A49  01CC               	clrf	(_width+1)^(0+256)
  3978     0A4A  1003               	clrc
  3979     0A4B  3000               	movlw	0
  3980     0A4C  1803               	btfsc	3,0
  3981     0A4D  3001               	movlw	1
  3982     0A4E  0021               	movlb	1	; select bank1
  3983     0A4F  00EF               	movwf	_flags^(0+128)
  3984                           
  3985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3986     0A50  30FF               	movlw	255
  3987     0A51  0022               	movlb	2	; select bank2
  3988     0A52  00CD               	movwf	_prec^(0+256)
  3989     0A53  30FF               	movlw	255
  3990     0A54  00CE               	movwf	(_prec^(0+256)+1)
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  3993     0A55  0020               	movlb	0	; select bank0
  3994     0A56  086D               	movf	vfpfcnvrt@fmt,w
  3995     0A57  0086               	movwf	6
  3996     0A58  0187               	clrf	7
  3997     0A59  3F40               	moviw [0]fsr1
  3998     0A5A  0021               	movlb	1	; select bank1
  3999     0A5B  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4000     0A5C  3F41               	moviw [1]fsr1
  4001     0A5D  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4002     0A5E  0851               	movf	??_vfpfcnvrt^(0+128),w
  4003     0A5F  0084               	movwf	4
  4004     0A60  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4005     0A61  0085               	movwf	5
  4006     0A62  0012               	moviw fsr0++
  4007     0A63  3A2E               	xorlw	46
  4008     0A64  1D03               	btfss	3,2
  4009     0A65  2ACF               	goto	l4031
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  4012     0A66  0022               	movlb	2	; select bank2
  4013     0A67  01CD               	clrf	_prec^(0+256)
  4014     0A68  01CE               	clrf	(_prec+1)^(0+256)
  4015                           
  4016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  4017     0A69  0020               	movlb	0	; select bank0
  4018     0A6A  086D               	movf	vfpfcnvrt@fmt,w
  4019     0A6B  0086               	movwf	6
  4020     0A6C  0187               	clrf	7
  4021     0A6D  3001               	movlw	1
  4022     0A6E  0781               	addwf	1,f
  4023     0A6F  3141               	addfsr 1,1
  4024     0A70  1803               	skipnc
  4025     0A71  0A81               	incf	1,f
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  4028     0A72  086D               	movf	vfpfcnvrt@fmt,w
  4029     0A73  0086               	movwf	6
  4030     0A74  0187               	clrf	7
  4031     0A75  3F40               	moviw [0]fsr1
  4032     0A76  0021               	movlb	1	; select bank1
  4033     0A77  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4034     0A78  3F41               	moviw [1]fsr1
  4035     0A79  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4036     0A7A  0851               	movf	??_vfpfcnvrt^(0+128),w
  4037     0A7B  0084               	movwf	4
  4038     0A7C  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4039     0A7D  0085               	movwf	5
  4040     0A7E  0012               	moviw fsr0++
  4041     0A7F  3A2A               	xorlw	42
  4042     0A80  1D03               	btfss	3,2
  4043     0A81  2A9A               	goto	l4023
  4044                           
  4045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  4046     0A82  0020               	movlb	0	; select bank0
  4047     0A83  086D               	movf	vfpfcnvrt@fmt,w
  4048     0A84  0086               	movwf	6
  4049     0A85  0187               	clrf	7
  4050     0A86  3001               	movlw	1
  4051     0A87  0781               	addwf	1,f
  4052     0A88  3141               	addfsr 1,1
  4053     0A89  1803               	skipnc
  4054     0A8A  0A81               	incf	1,f
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4057     0A8B  086E               	movf	vfpfcnvrt@ap,w
  4058     0A8C  0086               	movwf	6
  4059     0A8D  3001               	movlw	1	; select bank2/3
  4060     0A8E  0087               	movwf	7
  4061     0A8F  0801               	movf	1,w
  4062     0A90  0084               	movwf	4
  4063     0A91  0185               	clrf	5
  4064     0A92  3002               	movlw	2
  4065     0A93  0781               	addwf	1,f
  4066     0A94  3F00               	moviw [0]fsr0
  4067     0A95  0022               	movlb	2	; select bank2
  4068     0A96  00CD               	movwf	_prec^(0+256)
  4069     0A97  3F01               	moviw [1]fsr0
  4070     0A98  00CE               	movwf	(_prec+1)^(0+256)
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  4073     0A99  2ACF               	goto	l4031
  4074     0A9A                     l4023:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  4077     0A9A  0020               	movlb	0	; select bank0
  4078     0A9B  086D               	movf	vfpfcnvrt@fmt,w
  4079     0A9C  0086               	movwf	6
  4080     0A9D  0187               	clrf	7
  4081     0A9E  3F40               	moviw [0]fsr1
  4082     0A9F  00F6               	movwf	atoi@s
  4083     0AA0  3F41               	moviw [1]fsr1
  4084     0AA1  00F7               	movwf	atoi@s+1
  4085     0AA2  3191  21B6  318A   	fcall	_atoi
  4086     0AA5  0877               	movf	?_atoi+1,w
  4087     0AA6  0022               	movlb	2	; select bank2
  4088     0AA7  00CE               	movwf	(_prec+1)^(0+256)
  4089     0AA8  0876               	movf	?_atoi,w
  4090     0AA9  00CD               	movwf	_prec^(0+256)
  4091     0AAA                     l4029:	
  4092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4093                           
  4094     0AAA  0020               	movlb	0	; select bank0
  4095     0AAB  086D               	movf	vfpfcnvrt@fmt,w
  4096     0AAC  0086               	movwf	6
  4097     0AAD  0187               	clrf	7
  4098     0AAE  3F40               	moviw [0]fsr1
  4099     0AAF  0021               	movlb	1	; select bank1
  4100     0AB0  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4101     0AB1  3F41               	moviw [1]fsr1
  4102     0AB2  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4103     0AB3  0851               	movf	??_vfpfcnvrt^(0+128),w
  4104     0AB4  0084               	movwf	4
  4105     0AB5  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4106     0AB6  0085               	movwf	5
  4107     0AB7  0800               	movf	0,w	;code access
  4108     0AB8  3ED0               	addlw	208
  4109     0AB9  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4110     0ABA  30FF               	movlw	255
  4111     0ABB  1803               	skipnc
  4112     0ABC  3000               	movlw	0
  4113     0ABD  00D4               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  4114     0ABE  3000               	movlw	0
  4115     0ABF  0254               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  4116     0AC0  300A               	movlw	10
  4117     0AC1  1903               	skipnz
  4118     0AC2  0253               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  4119     0AC3  1803               	btfsc	3,0
  4120     0AC4  2ACF               	goto	l4031
  4121                           
  4122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  4123     0AC5  0020               	movlb	0	; select bank0
  4124     0AC6  086D               	movf	vfpfcnvrt@fmt,w
  4125     0AC7  0086               	movwf	6
  4126     0AC8  0187               	clrf	7
  4127     0AC9  3001               	movlw	1
  4128     0ACA  0781               	addwf	1,f
  4129     0ACB  3141               	addfsr 1,1
  4130     0ACC  1803               	skipnc
  4131     0ACD  0A81               	incf	1,f
  4132     0ACE  2AAA               	goto	l4029
  4133     0ACF                     l4031:
  4134                           
  4135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  4136     0ACF  0020               	movlb	0	; select bank0
  4137     0AD0  086D               	movf	vfpfcnvrt@fmt,w
  4138     0AD1  0086               	movwf	6
  4139     0AD2  0187               	clrf	7
  4140     0AD3  3F40               	moviw [0]fsr1
  4141     0AD4  0021               	movlb	1	; select bank1
  4142     0AD5  00DF               	movwf	vfpfcnvrt@cp^(0+128)
  4143     0AD6  3F41               	moviw [1]fsr1
  4144     0AD7  00E0               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4147     0AD8  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4148     0AD9  0084               	movwf	4
  4149     0ADA  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4150     0ADB  0085               	movwf	5
  4151     0ADC  0012               	moviw fsr0++
  4152     0ADD  3A64               	xorlw	100
  4153     0ADE  1903               	btfsc	3,2
  4154     0ADF  2AE8               	goto	l4037
  4155     0AE0  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4156     0AE1  0084               	movwf	4
  4157     0AE2  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4158     0AE3  0085               	movwf	5
  4159     0AE4  0012               	moviw fsr0++
  4160     0AE5  3A69               	xorlw	105
  4161     0AE6  1D03               	btfss	3,2
  4162     0AE7  2B37               	goto	l4045
  4163     0AE8                     l4037:
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4166     0AE8  0020               	movlb	0	; select bank0
  4167     0AE9  086E               	movf	vfpfcnvrt@ap,w
  4168     0AEA  0086               	movwf	6
  4169     0AEB  3001               	movlw	1	; select bank2/3
  4170     0AEC  0087               	movwf	7
  4171     0AED  0801               	movf	1,w
  4172     0AEE  0084               	movwf	4
  4173     0AEF  0185               	clrf	5
  4174     0AF0  3002               	movlw	2
  4175     0AF1  0781               	addwf	1,f
  4176     0AF2  3F00               	moviw [0]fsr0
  4177     0AF3  0021               	movlb	1	; select bank1
  4178     0AF4  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4179     0AF5  3F01               	moviw [1]fsr0
  4180     0AF6  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4181     0AF7  0851               	movf	??_vfpfcnvrt^(0+128),w
  4182     0AF8  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4183     0AF9  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4184     0AFA  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4185     0AFB  0D89               	rlf	9,f
  4186     0AFC  3B89               	subwfb	9,f
  4187     0AFD  0989               	comf	9,f
  4188     0AFE  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4189     0AFF  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4190     0B00  00D9               	movwf	(vfpfcnvrt@convarg+4)^(0+128)
  4191     0B01  00DA               	movwf	(vfpfcnvrt@convarg+5)^(0+128)
  4192     0B02  00DB               	movwf	(vfpfcnvrt@convarg+6)^(0+128)
  4193     0B03  00DC               	movwf	(vfpfcnvrt@convarg+7)^(0+128)
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4196     0B04  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4197     0B05  3E01               	addlw	1
  4198     0B06  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4199     0B07  3000               	movlw	0
  4200     0B08  3D60               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4201     0B09  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4202     0B0A  0020               	movlb	0	; select bank0
  4203     0B0B  086D               	movf	vfpfcnvrt@fmt,w
  4204     0B0C  0086               	movwf	6
  4205     0B0D  0187               	clrf	7
  4206     0B0E  0021               	movlb	1	; select bank1
  4207     0B0F  0851               	movf	??_vfpfcnvrt^(0+128),w
  4208     0B10  3FC0               	movwi [0]fsr1
  4209     0B11  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4210     0B12  3FC1               	movwi [1]fsr1
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4213     0B13  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4214     0B14  0020               	movlb	0	; select bank0
  4215     0B15  00B0               	movwf	dtoa@d
  4216     0B16  0021               	movlb	1	; select bank1
  4217     0B17  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4218     0B18  0020               	movlb	0	; select bank0
  4219     0B19  00B1               	movwf	dtoa@d+1
  4220     0B1A  0021               	movlb	1	; select bank1
  4221     0B1B  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4222     0B1C  0020               	movlb	0	; select bank0
  4223     0B1D  00B2               	movwf	dtoa@d+2
  4224     0B1E  0021               	movlb	1	; select bank1
  4225     0B1F  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4226     0B20  0020               	movlb	0	; select bank0
  4227     0B21  00B3               	movwf	dtoa@d+3
  4228     0B22  0021               	movlb	1	; select bank1
  4229     0B23  0859               	movf	(vfpfcnvrt@convarg+4)^(0+128),w
  4230     0B24  0020               	movlb	0	; select bank0
  4231     0B25  00B4               	movwf	dtoa@d+4
  4232     0B26  0021               	movlb	1	; select bank1
  4233     0B27  085A               	movf	(vfpfcnvrt@convarg+5)^(0+128),w
  4234     0B28  0020               	movlb	0	; select bank0
  4235     0B29  00B5               	movwf	dtoa@d+5
  4236     0B2A  0021               	movlb	1	; select bank1
  4237     0B2B  085B               	movf	(vfpfcnvrt@convarg+6)^(0+128),w
  4238     0B2C  0020               	movlb	0	; select bank0
  4239     0B2D  00B6               	movwf	dtoa@d+6
  4240     0B2E  0021               	movlb	1	; select bank1
  4241     0B2F  085C               	movf	(vfpfcnvrt@convarg+7)^(0+128),w
  4242     0B30  0020               	movlb	0	; select bank0
  4243     0B31  00B7               	movwf	dtoa@d+7
  4244     0B32  0021               	movlb	1	; select bank1
  4245     0B33  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4246     0B34  3195  2571         	fcall	_dtoa
  4247     0B36  0008               	return
  4248     0B37                     l4045:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  4251     0B37  0020               	movlb	0	; select bank0
  4252     0B38  086D               	movf	vfpfcnvrt@fmt,w
  4253     0B39  0086               	movwf	6
  4254     0B3A  0187               	clrf	7
  4255     0B3B  3F40               	moviw [0]fsr1
  4256     0B3C  0021               	movlb	1	; select bank1
  4257     0B3D  00DF               	movwf	vfpfcnvrt@cp^(0+128)
  4258     0B3E  3F41               	moviw [1]fsr1
  4259     0B3F  00E0               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  4262     0B40  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4263     0B41  0084               	movwf	4
  4264     0B42  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4265     0B43  0085               	movwf	5
  4266     0B44  0800               	movf	0,w	;code access
  4267     0B45  00DD               	movwf	vfpfcnvrt@c^(0+128)
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  4270     0B46  2B51               	goto	l4057
  4271     0B47                     l4049:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  4274     0B47  3001               	movlw	1
  4275     0B48  07DF               	addwf	vfpfcnvrt@cp^(0+128),f
  4276     0B49  3000               	movlw	0
  4277     0B4A  3DE0               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  4280     0B4B  2B64               	goto	l4059
  4281     0B4C                     l4051:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  4284     0B4C  306C               	movlw	108
  4285     0B4D  00DD               	movwf	vfpfcnvrt@c^(0+128)
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  4288     0B4E  2B64               	goto	l4059
  4289     0B4F                     l4053:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  4292     0B4F  01DD               	clrf	vfpfcnvrt@c^(0+128)
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  4295     0B50  2B64               	goto	l4059
  4296     0B51                     l4057:
  4297     0B51  085D               	movf	vfpfcnvrt@c^(0+128),w
  4298     0B52  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4299     0B53  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4300                           
  4301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4302                           ; Switch size 1, requested type "simple"
  4303                           ; Number of cases is 1, Range of values is 0 to 0
  4304                           ; switch strategies available:
  4305                           ; Name         Instructions Cycles
  4306                           ; simple_byte            4     3 (average)
  4307                           ; direct_byte            8     6 (fixed)
  4308                           ; jumptable            260     6 (fixed)
  4309                           ;	Chosen strategy is simple_byte
  4310     0B54  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4311     0B55  3A00               	xorlw	0	; case 0
  4312     0B56  1903               	skipnz
  4313     0B57  2B59               	goto	l4787
  4314     0B58  2B4F               	goto	l4053
  4315     0B59                     l4787:
  4316                           
  4317                           ; Switch size 1, requested type "simple"
  4318                           ; Number of cases is 3, Range of values is 76 to 108
  4319                           ; switch strategies available:
  4320                           ; Name         Instructions Cycles
  4321                           ; simple_byte           10     6 (average)
  4322                           ; direct_byte           75     9 (fixed)
  4323                           ; jumptable            263     9 (fixed)
  4324                           ;	Chosen strategy is simple_byte
  4325     0B59  0851               	movf	??_vfpfcnvrt^(0+128),w
  4326     0B5A  3A4C               	xorlw	76	; case 76
  4327     0B5B  1903               	skipnz
  4328     0B5C  2B47               	goto	l4049
  4329     0B5D  3A2A               	xorlw	42	; case 102
  4330     0B5E  1903               	skipnz
  4331     0B5F  2B4C               	goto	l4051
  4332     0B60  3A0A               	xorlw	10	; case 108
  4333     0B61  1903               	skipnz
  4334     0B62  2B47               	goto	l4049
  4335     0B63  2B4F               	goto	l4053
  4336     0B64                     l4059:
  4337     0B64  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4338     0B65  0084               	movwf	4
  4339     0B66  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4340     0B67  0085               	movwf	5
  4341     0B68  0012               	moviw fsr0++
  4342     0B69  3A66               	xorlw	102
  4343     0B6A  1903               	btfsc	3,2
  4344     0B6B  2B94               	goto	l4067
  4345     0B6C  2BE1               	goto	l4079
  4346     0B6D                     l4061:
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4349     0B6D  0020               	movlb	0	; select bank0
  4350     0B6E  086E               	movf	vfpfcnvrt@ap,w
  4351     0B6F  0086               	movwf	6
  4352     0B70  3001               	movlw	1	; select bank2/3
  4353     0B71  0087               	movwf	7
  4354     0B72  0801               	movf	1,w
  4355     0B73  0084               	movwf	4
  4356     0B74  0185               	clrf	5
  4357     0B75  3004               	movlw	4
  4358     0B76  0781               	addwf	1,f
  4359     0B77  3F00               	moviw [0]fsr0
  4360     0B78  0021               	movlb	1	; select bank1
  4361     0B79  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4362     0B7A  3F01               	moviw [1]fsr0
  4363     0B7B  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4364     0B7C  3F02               	moviw [2]fsr0
  4365     0B7D  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4366     0B7E  3F03               	moviw [3]fsr0
  4367     0B7F  2B92               	goto	L17
  4368     0B80                     l4063:	
  4369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  4370                           
  4371                           
  4372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4373     0B80  0020               	movlb	0	; select bank0
  4374     0B81  086E               	movf	vfpfcnvrt@ap,w
  4375     0B82  0086               	movwf	6
  4376     0B83  3001               	movlw	1	; select bank2/3
  4377     0B84  0087               	movwf	7
  4378     0B85  0801               	movf	1,w
  4379     0B86  0084               	movwf	4
  4380     0B87  0185               	clrf	5
  4381     0B88  3004               	movlw	4
  4382     0B89  0781               	addwf	1,f
  4383     0B8A  3F00               	moviw [0]fsr0
  4384     0B8B  0021               	movlb	1	; select bank1
  4385     0B8C  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4386     0B8D  3F01               	moviw [1]fsr0
  4387     0B8E  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4388     0B8F  3F02               	moviw [2]fsr0
  4389     0B90  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4390     0B91  3F03               	moviw [3]fsr0
  4391     0B92                     L17:
  4392     0B92  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  4395     0B93  2BA4               	goto	l4069
  4396     0B94                     l4067:
  4397     0B94  085D               	movf	vfpfcnvrt@c^(0+128),w
  4398     0B95  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4399     0B96  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4400                           
  4401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4402                           ; Switch size 1, requested type "simple"
  4403                           ; Number of cases is 1, Range of values is 0 to 0
  4404                           ; switch strategies available:
  4405                           ; Name         Instructions Cycles
  4406                           ; simple_byte            4     3 (average)
  4407                           ; direct_byte            8     6 (fixed)
  4408                           ; jumptable            260     6 (fixed)
  4409                           ;	Chosen strategy is simple_byte
  4410     0B97  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4411     0B98  3A00               	xorlw	0	; case 0
  4412     0B99  1903               	skipnz
  4413     0B9A  2B9C               	goto	l4789
  4414     0B9B  2BA4               	goto	l4069
  4415     0B9C                     l4789:
  4416                           
  4417                           ; Switch size 1, requested type "simple"
  4418                           ; Number of cases is 2, Range of values is 76 to 108
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte            7     4 (average)
  4422                           ; direct_byte           75     9 (fixed)
  4423                           ; jumptable            263     9 (fixed)
  4424                           ;	Chosen strategy is simple_byte
  4425     0B9C  0851               	movf	??_vfpfcnvrt^(0+128),w
  4426     0B9D  3A4C               	xorlw	76	; case 76
  4427     0B9E  1903               	skipnz
  4428     0B9F  2B80               	goto	l4063
  4429     0BA0  3A20               	xorlw	32	; case 108
  4430     0BA1  1903               	skipnz
  4431     0BA2  2B6D               	goto	l4061
  4432     0BA3  2BA4               	goto	l4069
  4433     0BA4                     l4069:
  4434                           
  4435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  4436     0BA4  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4437     0BA5  3E01               	addlw	1
  4438     0BA6  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4439     0BA7  3000               	movlw	0
  4440     0BA8  3D60               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4441     0BA9  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4442     0BAA  0020               	movlb	0	; select bank0
  4443     0BAB  086D               	movf	vfpfcnvrt@fmt,w
  4444     0BAC  0086               	movwf	6
  4445     0BAD  0187               	clrf	7
  4446     0BAE  0021               	movlb	1	; select bank1
  4447     0BAF  0851               	movf	??_vfpfcnvrt^(0+128),w
  4448     0BB0  3FC0               	movwi [0]fsr1
  4449     0BB1  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4450     0BB2  3FC1               	movwi [1]fsr1
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  4453     0BB3  2BD0               	goto	l4077
  4454     0BB4                     l4071:
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4457     0BB4  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4458     0BB5  0020               	movlb	0	; select bank0
  4459     0BB6  00EB               	movwf	efgtoa@f+3
  4460     0BB7  0021               	movlb	1	; select bank1
  4461     0BB8  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4462     0BB9  0020               	movlb	0	; select bank0
  4463     0BBA  00EA               	movwf	efgtoa@f+2
  4464     0BBB  0021               	movlb	1	; select bank1
  4465     0BBC  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4466     0BBD  0020               	movlb	0	; select bank0
  4467     0BBE  00E9               	movwf	efgtoa@f+1
  4468     0BBF  0021               	movlb	1	; select bank1
  4469     0BC0  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4470     0BC1  0020               	movlb	0	; select bank0
  4471     0BC2  00E8               	movwf	efgtoa@f
  4472     0BC3  0021               	movlb	1	; select bank1
  4473     0BC4  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4474     0BC5  0084               	movwf	4
  4475     0BC6  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4476     0BC7  0085               	movwf	5
  4477     0BC8  0800               	movf	0,w	;code access
  4478     0BC9  0020               	movlb	0	; select bank0
  4479     0BCA  00EC               	movwf	efgtoa@c
  4480     0BCB  0021               	movlb	1	; select bank1
  4481     0BCC  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4482     0BCD  3182  223B         	fcall	_efgtoa
  4483     0BCF  0008               	return
  4484     0BD0                     l4077:
  4485     0BD0  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4486     0BD1  0084               	movwf	4
  4487     0BD2  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4488     0BD3  0085               	movwf	5
  4489     0BD4  0800               	movf	0,w	;code access
  4490     0BD5  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4491     0BD6  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4492                           
  4493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 1, Range of values is 0 to 0
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte            4     3 (average)
  4499                           ; direct_byte            8     6 (fixed)
  4500                           ; jumptable            260     6 (fixed)
  4501                           ;	Chosen strategy is simple_byte
  4502     0BD7  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4503     0BD8  3A00               	xorlw	0	; case 0
  4504     0BD9  1903               	skipnz
  4505     0BDA  2BDC               	goto	l4791
  4506     0BDB  2BE1               	goto	l4079
  4507     0BDC                     l4791:
  4508                           
  4509                           ; Switch size 1, requested type "simple"
  4510                           ; Number of cases is 1, Range of values is 102 to 102
  4511                           ; switch strategies available:
  4512                           ; Name         Instructions Cycles
  4513                           ; simple_byte            4     3 (average)
  4514                           ; direct_byte           11     9 (fixed)
  4515                           ; jumptable            263     9 (fixed)
  4516                           ;	Chosen strategy is simple_byte
  4517     0BDC  0851               	movf	??_vfpfcnvrt^(0+128),w
  4518     0BDD  3A66               	xorlw	102	; case 102
  4519     0BDE  1903               	skipnz
  4520     0BDF  2BB4               	goto	l4071
  4521     0BE0  2BE1               	goto	l4079
  4522     0BE1                     l4079:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4525     0BE1  0020               	movlb	0	; select bank0
  4526     0BE2  086D               	movf	vfpfcnvrt@fmt,w
  4527     0BE3  0086               	movwf	6
  4528     0BE4  0187               	clrf	7
  4529     0BE5  3001               	movlw	1
  4530     0BE6  0781               	addwf	1,f
  4531     0BE7  3141               	addfsr 1,1
  4532     0BE8  1803               	skipnc
  4533     0BE9  0A81               	incf	1,f
  4534     0BEA  0008               	return
  4535     0BEB                     l4083:
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4538     0BEB  0020               	movlb	0	; select bank0
  4539     0BEC  086D               	movf	vfpfcnvrt@fmt,w
  4540     0BED  0086               	movwf	6
  4541     0BEE  0187               	clrf	7
  4542     0BEF  3F40               	moviw [0]fsr1
  4543     0BF0  0021               	movlb	1	; select bank1
  4544     0BF1  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4545     0BF2  3F41               	moviw [1]fsr1
  4546     0BF3  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4547     0BF4  0851               	movf	??_vfpfcnvrt^(0+128),w
  4548     0BF5  0084               	movwf	4
  4549     0BF6  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4550     0BF7  0085               	movwf	5
  4551     0BF8  0800               	movf	0,w	;code access
  4552     0BF9  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4553     0BFA  01D4               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4554     0BFB  0853               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4555     0BFC  00F0               	movwf	fputc@c
  4556     0BFD  0854               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4557     0BFE  00F1               	movwf	fputc@c+1
  4558     0BFF  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4559     0C00  00F2               	movwf	fputc@fp
  4560     0C01  319F  274E  318A   	fcall	_fputc
  4561     0C04  2BE1               	goto	l4079
  4562     0C05                     __end_of_vfpfcnvrt:
  4563                           
  4564                           	psect	text9
  4565     023B                     __ptext9:	
  4566 ;; *************** function _efgtoa *****************
  4567 ;; Defined at:
  4568 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  fp              1    wreg     PTR struct _IO_FILE
  4571 ;;		 -> sprintf@f(10), 
  4572 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  4573 ;;  c               1   76[BANK0 ] unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  fp              1   19[BANK1 ] PTR struct _IO_FILE
  4576 ;;		 -> sprintf@f(10), 
  4577 ;;  u               4   45[BANK1 ] struct flui
  4578 ;;  g               4   41[BANK1 ] struct flui
  4579 ;;  l               4   34[BANK1 ] struct flui
  4580 ;;  h               4   30[BANK1 ] struct flui
  4581 ;;  ou              4   24[BANK1 ] struct flui
  4582 ;;  n               2   39[BANK1 ] int 
  4583 ;;  i               2   28[BANK1 ] int 
  4584 ;;  w               2   22[BANK1 ] int 
  4585 ;;  e               2   20[BANK1 ] int 
  4586 ;;  m               2   17[BANK1 ] int 
  4587 ;;  d               2   15[BANK1 ] int 
  4588 ;;  t               2    8[BANK1 ] int 
  4589 ;;  p               2    6[BANK1 ] int 
  4590 ;;  ne              2    4[BANK1 ] int 
  4591 ;;  sign            1   38[BANK1 ] unsigned char 
  4592 ;;  nmode           1   14[BANK1 ] unsigned char 
  4593 ;;  mode            1   13[BANK1 ] unsigned char 
  4594 ;;  pp              1   12[BANK1 ] unsigned char 
  4595 ;;  esign           1    0        unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 1F/1
  4602 ;;		On exit  : 1F/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4605 ;;      Params:         0       5       0       0       0       0       0       0
  4606 ;;      Locals:         0       0      45       0       0       0       0       0
  4607 ;;      Temps:          0       0       4       0       0       0       0       0
  4608 ;;      Totals:         0       5      49       0       0       0       0       0
  4609 ;;Total ram usage:       54 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 4
  4612 ;; This function calls:
  4613 ;;		___fladd
  4614 ;;		___fldiv
  4615 ;;		___fleq
  4616 ;;		___flge
  4617 ;;		___flmul
  4618 ;;		___flneg
  4619 ;;		___flsub
  4620 ;;		___fltol
  4621 ;;		___fpclassifyf
  4622 ;;		_floorf
  4623 ;;		_labs
  4624 ;;		_memcpy
  4625 ;;		_pad
  4626 ;;		_strcpy
  4627 ;; This function is called by:
  4628 ;;		_vfpfcnvrt
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632     023B                     _efgtoa:	
  4633                           ;psect for function _efgtoa
  4634                           
  4635                           
  4636                           ;incstack = 0
  4637                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4638                           ;efgtoa@fp stored from wreg
  4639     023B  00B3               	movwf	efgtoa@fp^(0+128)
  4640                           
  4641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  4642     023C  01C6               	clrf	efgtoa@sign^(0+128)
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  4645     023D  0020               	movlb	0	; select bank0
  4646     023E  086B               	movf	efgtoa@f+3,w
  4647     023F  0021               	movlb	1	; select bank1
  4648     0240  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4649     0241  0020               	movlb	0	; select bank0
  4650     0242  086A               	movf	efgtoa@f+2,w
  4651     0243  0021               	movlb	1	; select bank1
  4652     0244  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4653     0245  0020               	movlb	0	; select bank0
  4654     0246  0869               	movf	efgtoa@f+1,w
  4655     0247  0021               	movlb	1	; select bank1
  4656     0248  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4657     0249  0020               	movlb	0	; select bank0
  4658     024A  0868               	movf	efgtoa@f,w
  4659     024B  0021               	movlb	1	; select bank1
  4660     024C  00C9               	movwf	efgtoa@g^(0+128)
  4661                           
  4662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  4663     024D  084C               	movf	(efgtoa@g+3)^(0+128),w
  4664     024E  0020               	movlb	0	; select bank0
  4665     024F  00BD               	movwf	___flge@ff1+3
  4666     0250  0021               	movlb	1	; select bank1
  4667     0251  084B               	movf	(efgtoa@g+2)^(0+128),w
  4668     0252  0020               	movlb	0	; select bank0
  4669     0253  00BC               	movwf	___flge@ff1+2
  4670     0254  0021               	movlb	1	; select bank1
  4671     0255  084A               	movf	(efgtoa@g+1)^(0+128),w
  4672     0256  0020               	movlb	0	; select bank0
  4673     0257  00BB               	movwf	___flge@ff1+1
  4674     0258  0021               	movlb	1	; select bank1
  4675     0259  0849               	movf	efgtoa@g^(0+128),w
  4676     025A  0020               	movlb	0	; select bank0
  4677     025B  00BA               	movwf	___flge@ff1
  4678     025C  3000               	movlw	0
  4679     025D  00C1               	movwf	___flge@ff2+3
  4680     025E  3000               	movlw	0
  4681     025F  00C0               	movwf	___flge@ff2+2
  4682     0260  3000               	movlw	0
  4683     0261  00BF               	movwf	___flge@ff2+1
  4684     0262  3000               	movlw	0
  4685     0263  00BE               	movwf	___flge@ff2
  4686     0264  3191  213B  3182   	fcall	___flge
  4687     0267  1803               	btfsc	3,0
  4688     0268  2A7F               	goto	l3777
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  4691     0269  0021               	movlb	1	; select bank1
  4692     026A  01C6               	clrf	efgtoa@sign^(0+128)
  4693     026B  0AC6               	incf	efgtoa@sign^(0+128),f
  4694                           
  4695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  4696     026C  084C               	movf	(efgtoa@g+3)^(0+128),w
  4697     026D  00F3               	movwf	___flneg@f1+3
  4698     026E  084B               	movf	(efgtoa@g+2)^(0+128),w
  4699     026F  00F2               	movwf	___flneg@f1+2
  4700     0270  084A               	movf	(efgtoa@g+1)^(0+128),w
  4701     0271  00F1               	movwf	___flneg@f1+1
  4702     0272  0849               	movf	efgtoa@g^(0+128),w
  4703     0273  00F0               	movwf	___flneg@f1
  4704     0274  319C  2459  3182   	fcall	___flneg
  4705     0277  0873               	movf	?___flneg+3,w
  4706     0278  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4707     0279  0872               	movf	?___flneg+2,w
  4708     027A  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4709     027B  0871               	movf	?___flneg+1,w
  4710     027C  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4711     027D  0870               	movf	?___flneg,w
  4712     027E  00C9               	movwf	efgtoa@g^(0+128)
  4713     027F                     l3777:
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  4716     027F  0021               	movlb	1	; select bank1
  4717     0280  01C7               	clrf	efgtoa@n^(0+128)
  4718     0281  01C8               	clrf	(efgtoa@n+1)^(0+128)
  4719                           
  4720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  4721     0282  0022               	movlb	2	; select bank2
  4722     0283  084C               	movf	(_width+1)^(0+256),w
  4723     0284  0021               	movlb	1	; select bank1
  4724     0285  00B7               	movwf	(efgtoa@w+1)^(0+128)
  4725     0286  0022               	movlb	2	; select bank2
  4726     0287  084B               	movf	_width^(0+256),w
  4727     0288  0021               	movlb	1	; select bank1
  4728     0289  00B6               	movwf	efgtoa@w^(0+128)
  4729                           
  4730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  4731     028A  0846               	movf	efgtoa@sign^(0+128),w
  4732     028B  1903               	btfsc	3,2
  4733     028C  2A98               	goto	l3789
  4734                           
  4735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  4736     028D  0846               	movf	efgtoa@sign^(0+128),w
  4737     028E  1D03               	btfss	3,2
  4738     028F  2A92               	goto	l3787
  4739     0290  302B               	movlw	43
  4740     0291  2A93               	goto	L18
  4741     0292                     l3787:
  4742     0292  302D               	movlw	45
  4743     0293                     L18:
  4744     0293  00AA               	movwf	_efgtoa$955^(0+128)
  4745     0294  3000               	movlw	0
  4746     0295  00AB               	movwf	(_efgtoa$955^(0+128)+1)
  4747     0296  082A               	movf	_efgtoa$955^(0+128),w
  4748     0297  00C6               	movwf	efgtoa@sign^(0+128)
  4749     0298                     l3789:
  4750                           
  4751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4752     0298  084C               	movf	(efgtoa@g+3)^(0+128),w
  4753     0299  00F3               	movwf	___fpclassifyf@x+3
  4754     029A  084B               	movf	(efgtoa@g+2)^(0+128),w
  4755     029B  00F2               	movwf	___fpclassifyf@x+2
  4756     029C  084A               	movf	(efgtoa@g+1)^(0+128),w
  4757     029D  00F1               	movwf	___fpclassifyf@x+1
  4758     029E  0849               	movf	efgtoa@g^(0+128),w
  4759     029F  00F0               	movwf	___fpclassifyf@x
  4760     02A0  3190  20C3  3182   	fcall	___fpclassifyf
  4761     02A3  0370               	decf	?___fpclassifyf,w
  4762     02A4  0471               	iorwf	?___fpclassifyf+1,w
  4763     02A5  1D03               	btfss	3,2
  4764     02A6  2ACE               	goto	l3801
  4765                           
  4766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  4767     02A7  0021               	movlb	1	; select bank1
  4768     02A8  0846               	movf	efgtoa@sign^(0+128),w
  4769     02A9  1903               	btfsc	3,2
  4770     02AA  2AB7               	goto	l3795
  4771                           
  4772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  4773     02AB  0846               	movf	efgtoa@sign^(0+128),w
  4774     02AC  0024               	movlb	4	; select bank4
  4775     02AD  00A0               	movwf	_dbuf^(0+512)
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  4778     02AE  30FF               	movlw	255
  4779     02AF  0021               	movlb	1	; select bank1
  4780     02B0  07B6               	addwf	efgtoa@w^(0+128),f
  4781     02B1  30FF               	movlw	255
  4782     02B2  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  4785     02B3  3001               	movlw	1
  4786     02B4  00C7               	movwf	efgtoa@n^(0+128)
  4787     02B5  3000               	movlw	0
  4788     02B6  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4789     02B7                     l3795:
  4790                           
  4791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  4792     02B7  3082               	movlw	low (STR_15| (0+32768))
  4793     02B8  00F0               	movwf	strcpy@src
  4794     02B9  3098               	movlw	high (STR_15| (0+32768))
  4795     02BA  00F1               	movwf	strcpy@src+1
  4796     02BB  0847               	movf	efgtoa@n^(0+128),w
  4797     02BC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4798     02BD  319C  24FF  3182   	fcall	_strcpy
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4801     02C0  30FD               	movlw	253
  4802     02C1  07B6               	addwf	efgtoa@w^(0+128),f
  4803     02C2  30FF               	movlw	255
  4804     02C3  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4807     02C4  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4808     02C5  00FB               	movwf	pad@buf
  4809     02C6  0837               	movf	(efgtoa@w+1)^(0+128),w
  4810     02C7  00FD               	movwf	pad@p+1
  4811     02C8  0836               	movf	efgtoa@w^(0+128),w
  4812     02C9  00FC               	movwf	pad@p
  4813     02CA  0833               	movf	efgtoa@fp^(0+128),w
  4814     02CB  3180  200F         	fcall	_pad
  4815     02CD  0008               	return
  4816     02CE                     l3801:
  4817                           
  4818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4819     02CE  0021               	movlb	1	; select bank1
  4820     02CF  084C               	movf	(efgtoa@g+3)^(0+128),w
  4821     02D0  00F3               	movwf	___fpclassifyf@x+3
  4822     02D1  084B               	movf	(efgtoa@g+2)^(0+128),w
  4823     02D2  00F2               	movwf	___fpclassifyf@x+2
  4824     02D3  084A               	movf	(efgtoa@g+1)^(0+128),w
  4825     02D4  00F1               	movwf	___fpclassifyf@x+1
  4826     02D5  0849               	movf	efgtoa@g^(0+128),w
  4827     02D6  00F0               	movwf	___fpclassifyf@x
  4828     02D7  3190  20C3  3182   	fcall	___fpclassifyf
  4829     02DA  0870               	movf	?___fpclassifyf,w
  4830     02DB  0471               	iorwf	?___fpclassifyf+1,w
  4831     02DC  1D03               	btfss	3,2
  4832     02DD  2B05               	goto	l3813
  4833                           
  4834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4835     02DE  0021               	movlb	1	; select bank1
  4836     02DF  0846               	movf	efgtoa@sign^(0+128),w
  4837     02E0  1903               	btfsc	3,2
  4838     02E1  2AEE               	goto	l3807
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4841     02E2  0846               	movf	efgtoa@sign^(0+128),w
  4842     02E3  0024               	movlb	4	; select bank4
  4843     02E4  00A0               	movwf	_dbuf^(0+512)
  4844                           
  4845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4846     02E5  30FF               	movlw	255
  4847     02E6  0021               	movlb	1	; select bank1
  4848     02E7  07B6               	addwf	efgtoa@w^(0+128),f
  4849     02E8  30FF               	movlw	255
  4850     02E9  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4853     02EA  3001               	movlw	1
  4854     02EB  00C7               	movwf	efgtoa@n^(0+128)
  4855     02EC  3000               	movlw	0
  4856     02ED  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4857     02EE                     l3807:
  4858                           
  4859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4860     02EE  3086               	movlw	low (STR_18| (0+32768))
  4861     02EF  00F0               	movwf	strcpy@src
  4862     02F0  3098               	movlw	high (STR_18| (0+32768))
  4863     02F1  00F1               	movwf	strcpy@src+1
  4864     02F2  0847               	movf	efgtoa@n^(0+128),w
  4865     02F3  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4866     02F4  319C  24FF  3182   	fcall	_strcpy
  4867                           
  4868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 570:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 571:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  4869     02F7  30FD               	movlw	253
  4870     02F8  07B6               	addwf	efgtoa@w^(0+128),f
  4871     02F9  30FF               	movlw	255
  4872     02FA  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 572:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4875     02FB  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4876     02FC  00FB               	movwf	pad@buf
  4877     02FD  0837               	movf	(efgtoa@w+1)^(0+128),w
  4878     02FE  00FD               	movwf	pad@p+1
  4879     02FF  0836               	movf	efgtoa@w^(0+128),w
  4880     0300  00FC               	movwf	pad@p
  4881     0301  0833               	movf	efgtoa@fp^(0+128),w
  4882     0302  3180  200F         	fcall	_pad
  4883     0304  0008               	return
  4884     0305                     l3813:
  4885                           
  4886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4887     0305  303F               	movlw	63
  4888     0306  0021               	movlb	1	; select bank1
  4889     0307  00D0               	movwf	(efgtoa@u+3)^(0+128)
  4890     0308  3080               	movlw	128
  4891     0309  00CF               	movwf	(efgtoa@u+2)^(0+128)
  4892     030A  3000               	movlw	0
  4893     030B  00CE               	movwf	(efgtoa@u+1)^(0+128)
  4894     030C  3000               	movlw	0
  4895     030D  00CD               	movwf	efgtoa@u^(0+128)
  4896                           
  4897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4898     030E  01B4               	clrf	efgtoa@e^(0+128)
  4899     030F  01B5               	clrf	(efgtoa@e+1)^(0+128)
  4900                           
  4901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4902     0310  084C               	movf	(efgtoa@g+3)^(0+128),w
  4903     0311  00F3               	movwf	___fleq@ff1+3
  4904     0312  084B               	movf	(efgtoa@g+2)^(0+128),w
  4905     0313  00F2               	movwf	___fleq@ff1+2
  4906     0314  084A               	movf	(efgtoa@g+1)^(0+128),w
  4907     0315  00F1               	movwf	___fleq@ff1+1
  4908     0316  0849               	movf	efgtoa@g^(0+128),w
  4909     0317  00F0               	movwf	___fleq@ff1
  4910     0318  3000               	movlw	0
  4911     0319  00F7               	movwf	___fleq@ff2+3
  4912     031A  3000               	movlw	0
  4913     031B  00F6               	movwf	___fleq@ff2+2
  4914     031C  3000               	movlw	0
  4915     031D  00F5               	movwf	___fleq@ff2+1
  4916     031E  3000               	movlw	0
  4917     031F  00F4               	movwf	___fleq@ff2
  4918     0320  319F  2706  3182   	fcall	___fleq
  4919     0323  1C03               	btfss	3,0
  4920     0324  2B33               	goto	l3823
  4921     0325  2C2E               	goto	l3843
  4922     0326                     l3821:
  4923                           
  4924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4925     0326  0021               	movlb	1	; select bank1
  4926     0327  083B               	movf	(efgtoa@ou+3)^(0+128),w
  4927     0328  00D0               	movwf	(efgtoa@u+3)^(0+128)
  4928     0329  083A               	movf	(efgtoa@ou+2)^(0+128),w
  4929     032A  00CF               	movwf	(efgtoa@u+2)^(0+128)
  4930     032B  0839               	movf	(efgtoa@ou+1)^(0+128),w
  4931     032C  00CE               	movwf	(efgtoa@u+1)^(0+128)
  4932     032D  0838               	movf	efgtoa@ou^(0+128),w
  4933     032E  00CD               	movwf	efgtoa@u^(0+128)
  4934                           
  4935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4936     032F  3001               	movlw	1
  4937     0330  07B4               	addwf	efgtoa@e^(0+128),f
  4938     0331  3000               	movlw	0
  4939     0332  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  4940     0333                     l3823:
  4941                           
  4942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4943     0333  3041               	movlw	65
  4944     0334  0020               	movlb	0	; select bank0
  4945     0335  00A3               	movwf	___flmul@b+3
  4946     0336  3020               	movlw	32
  4947     0337  00A2               	movwf	___flmul@b+2
  4948     0338  3000               	movlw	0
  4949     0339  00A1               	movwf	___flmul@b+1
  4950     033A  3000               	movlw	0
  4951     033B  00A0               	movwf	___flmul@b
  4952     033C  0021               	movlb	1	; select bank1
  4953     033D  0850               	movf	(efgtoa@u+3)^(0+128),w
  4954     033E  0020               	movlb	0	; select bank0
  4955     033F  00A7               	movwf	___flmul@a+3
  4956     0340  0021               	movlb	1	; select bank1
  4957     0341  084F               	movf	(efgtoa@u+2)^(0+128),w
  4958     0342  0020               	movlb	0	; select bank0
  4959     0343  00A6               	movwf	___flmul@a+2
  4960     0344  0021               	movlb	1	; select bank1
  4961     0345  084E               	movf	(efgtoa@u+1)^(0+128),w
  4962     0346  0020               	movlb	0	; select bank0
  4963     0347  00A5               	movwf	___flmul@a+1
  4964     0348  0021               	movlb	1	; select bank1
  4965     0349  084D               	movf	efgtoa@u^(0+128),w
  4966     034A  0020               	movlb	0	; select bank0
  4967     034B  00A4               	movwf	___flmul@a
  4968     034C  3180  203F  3182   	fcall	___flmul
  4969     034F  0823               	movf	?___flmul+3,w
  4970     0350  0021               	movlb	1	; select bank1
  4971     0351  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  4972     0352  0020               	movlb	0	; select bank0
  4973     0353  0822               	movf	?___flmul+2,w
  4974     0354  0021               	movlb	1	; select bank1
  4975     0355  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  4976     0356  0020               	movlb	0	; select bank0
  4977     0357  0821               	movf	?___flmul+1,w
  4978     0358  0021               	movlb	1	; select bank1
  4979     0359  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  4980     035A  0020               	movlb	0	; select bank0
  4981     035B  0820               	movf	?___flmul,w
  4982     035C  0021               	movlb	1	; select bank1
  4983     035D  00B8               	movwf	efgtoa@ou^(0+128)
  4984     035E  0838               	movf	efgtoa@ou^(0+128),w
  4985     035F  0249               	subwf	efgtoa@g^(0+128),w
  4986     0360  00A0               	movwf	??_efgtoa^(0+128)
  4987     0361  0839               	movf	(efgtoa@ou+1)^(0+128),w
  4988     0362  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  4989     0363  00A1               	movwf	(??_efgtoa^(0+128)+1)
  4990     0364  083A               	movf	(efgtoa@ou+2)^(0+128),w
  4991     0365  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  4992     0366  00A2               	movwf	(??_efgtoa^(0+128)+2)
  4993     0367  083B               	movf	(efgtoa@ou+3)^(0+128),w
  4994     0368  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  4995     0369  00A3               	movwf	(??_efgtoa^(0+128)+3)
  4996     036A  0823               	movf	(??_efgtoa+3)^(0+128),w
  4997     036B  00F3               	movwf	labs@a+3
  4998     036C  0822               	movf	(??_efgtoa+2)^(0+128),w
  4999     036D  00F2               	movwf	labs@a+2
  5000     036E  0821               	movf	(??_efgtoa+1)^(0+128),w
  5001     036F  00F1               	movwf	labs@a+1
  5002     0370  0820               	movf	??_efgtoa^(0+128),w
  5003     0371  00F0               	movwf	labs@a
  5004     0372  319D  2576  3182   	fcall	_labs
  5005     0375  1BF3               	btfsc	?_labs+3,7
  5006     0376  2B26               	goto	l3821
  5007     0377  0873               	movf	?_labs+3,w
  5008     0378  1D03               	btfss	3,2
  5009     0379  2B84               	goto	l3827
  5010     037A  0872               	movf	?_labs+2,w
  5011     037B  1D03               	btfss	3,2
  5012     037C  2B84               	goto	l3827
  5013     037D  0871               	movf	?_labs+1,w
  5014     037E  1D03               	btfss	3,2
  5015     037F  2B84               	goto	l3827
  5016     0380  3002               	movlw	2
  5017     0381  0270               	subwf	?_labs,w
  5018     0382  1C03               	btfss	3,0
  5019     0383  2B26               	goto	l3821
  5020     0384                     l3827:
  5021     0384  0021               	movlb	1	; select bank1
  5022     0385  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5023     0386  0020               	movlb	0	; select bank0
  5024     0387  00BD               	movwf	___flge@ff1+3
  5025     0388  0021               	movlb	1	; select bank1
  5026     0389  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5027     038A  0020               	movlb	0	; select bank0
  5028     038B  00BC               	movwf	___flge@ff1+2
  5029     038C  0021               	movlb	1	; select bank1
  5030     038D  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5031     038E  0020               	movlb	0	; select bank0
  5032     038F  00BB               	movwf	___flge@ff1+1
  5033     0390  0021               	movlb	1	; select bank1
  5034     0391  0838               	movf	efgtoa@ou^(0+128),w
  5035     0392  0020               	movlb	0	; select bank0
  5036     0393  00BA               	movwf	___flge@ff1
  5037     0394  0021               	movlb	1	; select bank1
  5038     0395  084C               	movf	(efgtoa@g+3)^(0+128),w
  5039     0396  0020               	movlb	0	; select bank0
  5040     0397  00C1               	movwf	___flge@ff2+3
  5041     0398  0021               	movlb	1	; select bank1
  5042     0399  084B               	movf	(efgtoa@g+2)^(0+128),w
  5043     039A  0020               	movlb	0	; select bank0
  5044     039B  00C0               	movwf	___flge@ff2+2
  5045     039C  0021               	movlb	1	; select bank1
  5046     039D  084A               	movf	(efgtoa@g+1)^(0+128),w
  5047     039E  0020               	movlb	0	; select bank0
  5048     039F  00BF               	movwf	___flge@ff2+1
  5049     03A0  0021               	movlb	1	; select bank1
  5050     03A1  0849               	movf	efgtoa@g^(0+128),w
  5051     03A2  0020               	movlb	0	; select bank0
  5052     03A3  00BE               	movwf	___flge@ff2
  5053     03A4  3191  213B  3182   	fcall	___flge
  5054     03A7  1C03               	btfss	3,0
  5055     03A8  2B26               	goto	l3821
  5056                           
  5057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5058     03A9  0021               	movlb	1	; select bank1
  5059     03AA                     L19:
  5060     03AA  084D               	movf	efgtoa@u^(0+128),w
  5061     03AB  0249               	subwf	efgtoa@g^(0+128),w
  5062     03AC  00A0               	movwf	??_efgtoa^(0+128)
  5063     03AD  084E               	movf	(efgtoa@u+1)^(0+128),w
  5064     03AE  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5065     03AF  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5066     03B0  084F               	movf	(efgtoa@u+2)^(0+128),w
  5067     03B1  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5068     03B2  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5069     03B3  0850               	movf	(efgtoa@u+3)^(0+128),w
  5070     03B4  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5071     03B5  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5072     03B6  0823               	movf	(??_efgtoa+3)^(0+128),w
  5073     03B7  00F3               	movwf	labs@a+3
  5074     03B8  0822               	movf	(??_efgtoa+2)^(0+128),w
  5075     03B9  00F2               	movwf	labs@a+2
  5076     03BA  0821               	movf	(??_efgtoa+1)^(0+128),w
  5077     03BB  00F1               	movwf	labs@a+1
  5078     03BC  0820               	movf	??_efgtoa^(0+128),w
  5079     03BD  00F0               	movwf	labs@a
  5080     03BE  319D  2576  3182   	fcall	_labs
  5081     03C1  1BF3               	btfsc	?_labs+3,7
  5082     03C2  2BD0               	goto	l3831
  5083     03C3  0873               	movf	?_labs+3,w
  5084     03C4  1D03               	btfss	3,2
  5085     03C5  2C09               	goto	l3841
  5086     03C6  0872               	movf	?_labs+2,w
  5087     03C7  1D03               	btfss	3,2
  5088     03C8  2C09               	goto	l3841
  5089     03C9  0871               	movf	?_labs+1,w
  5090     03CA  1D03               	btfss	3,2
  5091     03CB  2C09               	goto	l3841
  5092     03CC  3002               	movlw	2
  5093     03CD  0270               	subwf	?_labs,w
  5094     03CE  1803               	btfsc	3,0
  5095     03CF  2C09               	goto	l3841
  5096     03D0                     l3831:
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  5099     03D0  0021               	movlb	1	; select bank1
  5100     03D1  0850               	movf	(efgtoa@u+3)^(0+128),w
  5101     03D2  00CC               	movwf	(efgtoa@g+3)^(0+128)
  5102     03D3  084F               	movf	(efgtoa@u+2)^(0+128),w
  5103     03D4  00CB               	movwf	(efgtoa@g+2)^(0+128)
  5104     03D5  084E               	movf	(efgtoa@u+1)^(0+128),w
  5105     03D6  00CA               	movwf	(efgtoa@g+1)^(0+128)
  5106     03D7  084D               	movf	efgtoa@u^(0+128),w
  5107     03D8  00C9               	movwf	efgtoa@g^(0+128)
  5108                           
  5109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  5110     03D9  2C2E               	goto	l3843
  5111     03DA                     l3833:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  5114     03DA  3041               	movlw	65
  5115     03DB  00BD               	movwf	___fldiv@a+3
  5116     03DC  3020               	movlw	32
  5117     03DD  00BC               	movwf	___fldiv@a+2
  5118     03DE  3000               	movlw	0
  5119     03DF  00BB               	movwf	___fldiv@a+1
  5120     03E0  3000               	movlw	0
  5121     03E1  00BA               	movwf	___fldiv@a
  5122     03E2  0021               	movlb	1	; select bank1
  5123     03E3  0850               	movf	(efgtoa@u+3)^(0+128),w
  5124     03E4  0020               	movlb	0	; select bank0
  5125     03E5  00C1               	movwf	___fldiv@b+3
  5126     03E6  0021               	movlb	1	; select bank1
  5127     03E7  084F               	movf	(efgtoa@u+2)^(0+128),w
  5128     03E8  0020               	movlb	0	; select bank0
  5129     03E9  00C0               	movwf	___fldiv@b+2
  5130     03EA  0021               	movlb	1	; select bank1
  5131     03EB  084E               	movf	(efgtoa@u+1)^(0+128),w
  5132     03EC  0020               	movlb	0	; select bank0
  5133     03ED  00BF               	movwf	___fldiv@b+1
  5134     03EE  0021               	movlb	1	; select bank1
  5135     03EF  084D               	movf	efgtoa@u^(0+128),w
  5136     03F0  0020               	movlb	0	; select bank0
  5137     03F1  00BE               	movwf	___fldiv@b
  5138     03F2  3196  2691  3182   	fcall	___fldiv
  5139     03F5  083D               	movf	?___fldiv+3,w
  5140     03F6  0021               	movlb	1	; select bank1
  5141     03F7  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5142     03F8  0020               	movlb	0	; select bank0
  5143     03F9  083C               	movf	?___fldiv+2,w
  5144     03FA  0021               	movlb	1	; select bank1
  5145     03FB  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5146     03FC  0020               	movlb	0	; select bank0
  5147     03FD  083B               	movf	?___fldiv+1,w
  5148     03FE  0021               	movlb	1	; select bank1
  5149     03FF  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5150     0400  0020               	movlb	0	; select bank0
  5151     0401  083A               	movf	?___fldiv,w
  5152     0402  0021               	movlb	1	; select bank1
  5153     0403  00CD               	movwf	efgtoa@u^(0+128)
  5154                           
  5155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  5156     0404  30FF               	movlw	255
  5157     0405  07B4               	addwf	efgtoa@e^(0+128),f
  5158     0406  30FF               	movlw	255
  5159     0407  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5160     0408  2BAA               	goto	L19
  5161     0409                     l3841:	
  5162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5163                           
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  5166     0409  0021               	movlb	1	; select bank1
  5167     040A  084C               	movf	(efgtoa@g+3)^(0+128),w
  5168     040B  0020               	movlb	0	; select bank0
  5169     040C  00BD               	movwf	___flge@ff1+3
  5170     040D  0021               	movlb	1	; select bank1
  5171     040E  084B               	movf	(efgtoa@g+2)^(0+128),w
  5172     040F  0020               	movlb	0	; select bank0
  5173     0410  00BC               	movwf	___flge@ff1+2
  5174     0411  0021               	movlb	1	; select bank1
  5175     0412  084A               	movf	(efgtoa@g+1)^(0+128),w
  5176     0413  0020               	movlb	0	; select bank0
  5177     0414  00BB               	movwf	___flge@ff1+1
  5178     0415  0021               	movlb	1	; select bank1
  5179     0416  0849               	movf	efgtoa@g^(0+128),w
  5180     0417  0020               	movlb	0	; select bank0
  5181     0418  00BA               	movwf	___flge@ff1
  5182     0419  0021               	movlb	1	; select bank1
  5183     041A  0850               	movf	(efgtoa@u+3)^(0+128),w
  5184     041B  0020               	movlb	0	; select bank0
  5185     041C  00C1               	movwf	___flge@ff2+3
  5186     041D  0021               	movlb	1	; select bank1
  5187     041E  084F               	movf	(efgtoa@u+2)^(0+128),w
  5188     041F  0020               	movlb	0	; select bank0
  5189     0420  00C0               	movwf	___flge@ff2+2
  5190     0421  0021               	movlb	1	; select bank1
  5191     0422  084E               	movf	(efgtoa@u+1)^(0+128),w
  5192     0423  0020               	movlb	0	; select bank0
  5193     0424  00BF               	movwf	___flge@ff2+1
  5194     0425  0021               	movlb	1	; select bank1
  5195     0426  084D               	movf	efgtoa@u^(0+128),w
  5196     0427  0020               	movlb	0	; select bank0
  5197     0428  00BE               	movwf	___flge@ff2
  5198     0429  3191  213B  3182   	fcall	___flge
  5199     042C  1C03               	btfss	3,0
  5200     042D  2BDA               	goto	l3833
  5201     042E                     l3843:
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  5204     042E  0020               	movlb	0	; select bank0
  5205     042F  086C               	movf	efgtoa@c,w
  5206     0430  0021               	movlb	1	; select bank1
  5207     0431  00AD               	movwf	efgtoa@mode^(0+128)
  5208                           
  5209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  5210     0432  082D               	movf	efgtoa@mode^(0+128),w
  5211     0433  00AE               	movwf	efgtoa@nmode^(0+128)
  5212                           
  5213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  5214     0434  0022               	movlb	2	; select bank2
  5215     0435  1BCE               	btfsc	(_prec+1)^(0+256),7
  5216     0436  2C3F               	goto	l3849
  5217     0437  084E               	movf	(_prec+1)^(0+256),w
  5218     0438  0021               	movlb	1	; select bank1
  5219     0439  00A7               	movwf	(efgtoa@p+1)^(0+128)
  5220     043A  0022               	movlb	2	; select bank2
  5221     043B  084D               	movf	_prec^(0+256),w
  5222     043C  0021               	movlb	1	; select bank1
  5223     043D  00A6               	movwf	efgtoa@p^(0+128)
  5224     043E  2C44               	goto	l901
  5225     043F                     l3849:
  5226     043F  3006               	movlw	6
  5227     0440  0021               	movlb	1	; select bank1
  5228     0441  00A6               	movwf	efgtoa@p^(0+128)
  5229     0442  3000               	movlw	0
  5230     0443  00A7               	movwf	(efgtoa@p^(0+128)+1)
  5231     0444                     l901:
  5232                           
  5233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  5234     0444  0827               	movf	(efgtoa@p+1)^(0+128),w
  5235     0445  00B2               	movwf	(efgtoa@m+1)^(0+128)
  5236     0446  0826               	movf	efgtoa@p^(0+128),w
  5237     0447  00B1               	movwf	efgtoa@m^(0+128)
  5238                           
  5239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  5240     0448  3001               	movlw	1
  5241     0449  07B1               	addwf	efgtoa@m^(0+128),f
  5242     044A  3000               	movlw	0
  5243     044B  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5244                           
  5245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  5246     044C  3066               	movlw	102
  5247     044D  062E               	xorwf	efgtoa@nmode^(0+128),w
  5248     044E  1D03               	btfss	3,2
  5249     044F  2C64               	goto	l3863
  5250                           
  5251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  5252     0450  1FB5               	btfss	(efgtoa@e+1)^(0+128),7
  5253     0451  2C5C               	goto	l3859
  5254                           
  5255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  5256     0452  303F               	movlw	63
  5257     0453  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5258     0454  3080               	movlw	128
  5259     0455  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5260     0456  3000               	movlw	0
  5261     0457  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5262     0458  3000               	movlw	0
  5263     0459  00CD               	movwf	efgtoa@u^(0+128)
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  5266     045A  01B4               	clrf	efgtoa@e^(0+128)
  5267     045B  01B5               	clrf	(efgtoa@e+1)^(0+128)
  5268     045C                     l3859:
  5269                           
  5270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  5271     045C  3067               	movlw	103
  5272     045D  062D               	xorwf	efgtoa@mode^(0+128),w
  5273     045E  1903               	btfsc	3,2
  5274     045F  2C64               	goto	l3863
  5275                           
  5276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  5277     0460  0834               	movf	efgtoa@e^(0+128),w
  5278     0461  07B1               	addwf	efgtoa@m^(0+128),f
  5279     0462  0835               	movf	(efgtoa@e+1)^(0+128),w
  5280     0463  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5281     0464                     l3863:
  5282                           
  5283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  5284     0464  01BC               	clrf	efgtoa@i^(0+128)
  5285     0465  01BD               	clrf	(efgtoa@i+1)^(0+128)
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  5288     0466  084C               	movf	(efgtoa@g+3)^(0+128),w
  5289     0467  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5290     0468  084B               	movf	(efgtoa@g+2)^(0+128),w
  5291     0469  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5292     046A  084A               	movf	(efgtoa@g+1)^(0+128),w
  5293     046B  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5294     046C  0849               	movf	efgtoa@g^(0+128),w
  5295     046D  00BE               	movwf	efgtoa@h^(0+128)
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  5298     046E  0850               	movf	(efgtoa@u+3)^(0+128),w
  5299     046F  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5300     0470  084F               	movf	(efgtoa@u+2)^(0+128),w
  5301     0471  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5302     0472  084E               	movf	(efgtoa@u+1)^(0+128),w
  5303     0473  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5304     0474  084D               	movf	efgtoa@u^(0+128),w
  5305     0475  00B8               	movwf	efgtoa@ou^(0+128)
  5306     0476                     l3873:	
  5307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5308                           
  5309                           
  5310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5311     0476  083D               	movf	(efgtoa@i+1)^(0+128),w
  5312     0477  3A80               	xorlw	128
  5313     0478  00A0               	movwf	??_efgtoa^(0+128)
  5314     0479  0832               	movf	(efgtoa@m+1)^(0+128),w
  5315     047A  3A80               	xorlw	128
  5316     047B  0220               	subwf	??_efgtoa^(0+128),w
  5317     047C  1D03               	skipz
  5318     047D  2C80               	goto	u5375
  5319     047E  0831               	movf	efgtoa@m^(0+128),w
  5320     047F  023C               	subwf	efgtoa@i^(0+128),w
  5321     0480                     u5375:
  5322     0480  1803               	btfsc	3,0
  5323     0481  2D4B               	goto	l3875
  5324                           
  5325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  5326     0482  0021               	movlb	1	; select bank1
  5327     0483  0850               	movf	(efgtoa@u+3)^(0+128),w
  5328     0484  0020               	movlb	0	; select bank0
  5329     0485  00BD               	movwf	___fldiv@a+3
  5330     0486  0021               	movlb	1	; select bank1
  5331     0487  084F               	movf	(efgtoa@u+2)^(0+128),w
  5332     0488  0020               	movlb	0	; select bank0
  5333     0489  00BC               	movwf	___fldiv@a+2
  5334     048A  0021               	movlb	1	; select bank1
  5335     048B  084E               	movf	(efgtoa@u+1)^(0+128),w
  5336     048C  0020               	movlb	0	; select bank0
  5337     048D  00BB               	movwf	___fldiv@a+1
  5338     048E  0021               	movlb	1	; select bank1
  5339     048F  084D               	movf	efgtoa@u^(0+128),w
  5340     0490  0020               	movlb	0	; select bank0
  5341     0491  00BA               	movwf	___fldiv@a
  5342     0492  0021               	movlb	1	; select bank1
  5343     0493  0841               	movf	(efgtoa@h+3)^(0+128),w
  5344     0494  0020               	movlb	0	; select bank0
  5345     0495  00C1               	movwf	___fldiv@b+3
  5346     0496  0021               	movlb	1	; select bank1
  5347     0497  0840               	movf	(efgtoa@h+2)^(0+128),w
  5348     0498  0020               	movlb	0	; select bank0
  5349     0499  00C0               	movwf	___fldiv@b+2
  5350     049A  0021               	movlb	1	; select bank1
  5351     049B  083F               	movf	(efgtoa@h+1)^(0+128),w
  5352     049C  0020               	movlb	0	; select bank0
  5353     049D  00BF               	movwf	___fldiv@b+1
  5354     049E  0021               	movlb	1	; select bank1
  5355     049F  083E               	movf	efgtoa@h^(0+128),w
  5356     04A0  0020               	movlb	0	; select bank0
  5357     04A1  00BE               	movwf	___fldiv@b
  5358     04A2  3196  2691  3182   	fcall	___fldiv
  5359     04A5  083D               	movf	?___fldiv+3,w
  5360     04A6  00D7               	movwf	floorf@x+3
  5361     04A7  083C               	movf	?___fldiv+2,w
  5362     04A8  00D6               	movwf	floorf@x+2
  5363     04A9  083B               	movf	?___fldiv+1,w
  5364     04AA  00D5               	movwf	floorf@x+1
  5365     04AB  083A               	movf	?___fldiv,w
  5366     04AC  00D4               	movwf	floorf@x
  5367     04AD  3192  22D0  3182   	fcall	_floorf
  5368     04B0  0020               	movlb	0	; select bank0
  5369     04B1  0857               	movf	?_floorf+3,w
  5370     04B2  0021               	movlb	1	; select bank1
  5371     04B3  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5372     04B4  0020               	movlb	0	; select bank0
  5373     04B5  0856               	movf	?_floorf+2,w
  5374     04B6  0021               	movlb	1	; select bank1
  5375     04B7  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5376     04B8  0020               	movlb	0	; select bank0
  5377     04B9  0855               	movf	?_floorf+1,w
  5378     04BA  0021               	movlb	1	; select bank1
  5379     04BB  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5380     04BC  0020               	movlb	0	; select bank0
  5381     04BD  0854               	movf	?_floorf,w
  5382     04BE  0021               	movlb	1	; select bank1
  5383     04BF  00C2               	movwf	efgtoa@l^(0+128)
  5384                           
  5385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  5386     04C0  0845               	movf	(efgtoa@l+3)^(0+128),w
  5387     04C1  00F3               	movwf	___fltol@f1+3
  5388     04C2  0844               	movf	(efgtoa@l+2)^(0+128),w
  5389     04C3  00F2               	movwf	___fltol@f1+2
  5390     04C4  0843               	movf	(efgtoa@l+1)^(0+128),w
  5391     04C5  00F1               	movwf	___fltol@f1+1
  5392     04C6  0842               	movf	efgtoa@l^(0+128),w
  5393     04C7  00F0               	movwf	___fltol@f1
  5394     04C8  319F  279F  3182   	fcall	___fltol
  5395     04CB  0871               	movf	?___fltol+1,w
  5396     04CC  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5397     04CD  0870               	movf	?___fltol,w
  5398     04CE  00AF               	movwf	efgtoa@d^(0+128)
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  5401     04CF  0850               	movf	(efgtoa@u+3)^(0+128),w
  5402     04D0  0020               	movlb	0	; select bank0
  5403     04D1  00A7               	movwf	___flmul@a+3
  5404     04D2  0021               	movlb	1	; select bank1
  5405     04D3  084F               	movf	(efgtoa@u+2)^(0+128),w
  5406     04D4  0020               	movlb	0	; select bank0
  5407     04D5  00A6               	movwf	___flmul@a+2
  5408     04D6  0021               	movlb	1	; select bank1
  5409     04D7  084E               	movf	(efgtoa@u+1)^(0+128),w
  5410     04D8  0020               	movlb	0	; select bank0
  5411     04D9  00A5               	movwf	___flmul@a+1
  5412     04DA  0021               	movlb	1	; select bank1
  5413     04DB  084D               	movf	efgtoa@u^(0+128),w
  5414     04DC  0020               	movlb	0	; select bank0
  5415     04DD  00A4               	movwf	___flmul@a
  5416     04DE  0021               	movlb	1	; select bank1
  5417     04DF  0845               	movf	(efgtoa@l+3)^(0+128),w
  5418     04E0  0020               	movlb	0	; select bank0
  5419     04E1  00A3               	movwf	___flmul@b+3
  5420     04E2  0021               	movlb	1	; select bank1
  5421     04E3  0844               	movf	(efgtoa@l+2)^(0+128),w
  5422     04E4  0020               	movlb	0	; select bank0
  5423     04E5  00A2               	movwf	___flmul@b+2
  5424     04E6  0021               	movlb	1	; select bank1
  5425     04E7  0843               	movf	(efgtoa@l+1)^(0+128),w
  5426     04E8  0020               	movlb	0	; select bank0
  5427     04E9  00A1               	movwf	___flmul@b+1
  5428     04EA  0021               	movlb	1	; select bank1
  5429     04EB  0842               	movf	efgtoa@l^(0+128),w
  5430     04EC  0020               	movlb	0	; select bank0
  5431     04ED  00A0               	movwf	___flmul@b
  5432     04EE  3180  203F  3182   	fcall	___flmul
  5433     04F1  0823               	movf	?___flmul+3,w
  5434     04F2  00BD               	movwf	___flsub@a+3
  5435     04F3  0822               	movf	?___flmul+2,w
  5436     04F4  00BC               	movwf	___flsub@a+2
  5437     04F5  0821               	movf	?___flmul+1,w
  5438     04F6  00BB               	movwf	___flsub@a+1
  5439     04F7  0820               	movf	?___flmul,w
  5440     04F8  00BA               	movwf	___flsub@a
  5441     04F9  0021               	movlb	1	; select bank1
  5442     04FA  0841               	movf	(efgtoa@h+3)^(0+128),w
  5443     04FB  0020               	movlb	0	; select bank0
  5444     04FC  00C1               	movwf	___flsub@b+3
  5445     04FD  0021               	movlb	1	; select bank1
  5446     04FE  0840               	movf	(efgtoa@h+2)^(0+128),w
  5447     04FF  0020               	movlb	0	; select bank0
  5448     0500  00C0               	movwf	___flsub@b+2
  5449     0501  0021               	movlb	1	; select bank1
  5450     0502  083F               	movf	(efgtoa@h+1)^(0+128),w
  5451     0503  0020               	movlb	0	; select bank0
  5452     0504  00BF               	movwf	___flsub@b+1
  5453     0505  0021               	movlb	1	; select bank1
  5454     0506  083E               	movf	efgtoa@h^(0+128),w
  5455     0507  0020               	movlb	0	; select bank0
  5456     0508  00BE               	movwf	___flsub@b
  5457     0509  319D  2539  3182   	fcall	___flsub
  5458     050C  083D               	movf	?___flsub+3,w
  5459     050D  0021               	movlb	1	; select bank1
  5460     050E  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5461     050F  0020               	movlb	0	; select bank0
  5462     0510  083C               	movf	?___flsub+2,w
  5463     0511  0021               	movlb	1	; select bank1
  5464     0512  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5465     0513  0020               	movlb	0	; select bank0
  5466     0514  083B               	movf	?___flsub+1,w
  5467     0515  0021               	movlb	1	; select bank1
  5468     0516  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5469     0517  0020               	movlb	0	; select bank0
  5470     0518  083A               	movf	?___flsub,w
  5471     0519  0021               	movlb	1	; select bank1
  5472     051A  00BE               	movwf	efgtoa@h^(0+128)
  5473                           
  5474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  5475     051B  3041               	movlw	65
  5476     051C  0020               	movlb	0	; select bank0
  5477     051D  00BD               	movwf	___fldiv@a+3
  5478     051E  3020               	movlw	32
  5479     051F  00BC               	movwf	___fldiv@a+2
  5480     0520  3000               	movlw	0
  5481     0521  00BB               	movwf	___fldiv@a+1
  5482     0522  3000               	movlw	0
  5483     0523  00BA               	movwf	___fldiv@a
  5484     0524  0021               	movlb	1	; select bank1
  5485     0525  0850               	movf	(efgtoa@u+3)^(0+128),w
  5486     0526  0020               	movlb	0	; select bank0
  5487     0527  00C1               	movwf	___fldiv@b+3
  5488     0528  0021               	movlb	1	; select bank1
  5489     0529  084F               	movf	(efgtoa@u+2)^(0+128),w
  5490     052A  0020               	movlb	0	; select bank0
  5491     052B  00C0               	movwf	___fldiv@b+2
  5492     052C  0021               	movlb	1	; select bank1
  5493     052D  084E               	movf	(efgtoa@u+1)^(0+128),w
  5494     052E  0020               	movlb	0	; select bank0
  5495     052F  00BF               	movwf	___fldiv@b+1
  5496     0530  0021               	movlb	1	; select bank1
  5497     0531  084D               	movf	efgtoa@u^(0+128),w
  5498     0532  0020               	movlb	0	; select bank0
  5499     0533  00BE               	movwf	___fldiv@b
  5500     0534  3196  2691  3182   	fcall	___fldiv
  5501     0537  083D               	movf	?___fldiv+3,w
  5502     0538  0021               	movlb	1	; select bank1
  5503     0539  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5504     053A  0020               	movlb	0	; select bank0
  5505     053B  083C               	movf	?___fldiv+2,w
  5506     053C  0021               	movlb	1	; select bank1
  5507     053D  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5508     053E  0020               	movlb	0	; select bank0
  5509     053F  083B               	movf	?___fldiv+1,w
  5510     0540  0021               	movlb	1	; select bank1
  5511     0541  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5512     0542  0020               	movlb	0	; select bank0
  5513     0543  083A               	movf	?___fldiv,w
  5514     0544  0021               	movlb	1	; select bank1
  5515     0545  00CD               	movwf	efgtoa@u^(0+128)
  5516                           
  5517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  5518     0546  3001               	movlw	1
  5519     0547  07BC               	addwf	efgtoa@i^(0+128),f
  5520     0548  3000               	movlw	0
  5521     0549  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  5522     054A  2C76               	goto	l3873
  5523     054B                     l3875:
  5524                           
  5525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  5526     054B  3040               	movlw	64
  5527     054C  0020               	movlb	0	; select bank0
  5528     054D  00A3               	movwf	___flmul@b+3
  5529     054E  30A0               	movlw	160
  5530     054F  00A2               	movwf	___flmul@b+2
  5531     0550  3000               	movlw	0
  5532     0551  00A1               	movwf	___flmul@b+1
  5533     0552  3000               	movlw	0
  5534     0553  00A0               	movwf	___flmul@b
  5535     0554  0021               	movlb	1	; select bank1
  5536     0555  0850               	movf	(efgtoa@u+3)^(0+128),w
  5537     0556  0020               	movlb	0	; select bank0
  5538     0557  00A7               	movwf	___flmul@a+3
  5539     0558  0021               	movlb	1	; select bank1
  5540     0559  084F               	movf	(efgtoa@u+2)^(0+128),w
  5541     055A  0020               	movlb	0	; select bank0
  5542     055B  00A6               	movwf	___flmul@a+2
  5543     055C  0021               	movlb	1	; select bank1
  5544     055D  084E               	movf	(efgtoa@u+1)^(0+128),w
  5545     055E  0020               	movlb	0	; select bank0
  5546     055F  00A5               	movwf	___flmul@a+1
  5547     0560  0021               	movlb	1	; select bank1
  5548     0561  084D               	movf	efgtoa@u^(0+128),w
  5549     0562  0020               	movlb	0	; select bank0
  5550     0563  00A4               	movwf	___flmul@a
  5551     0564  3180  203F  3182   	fcall	___flmul
  5552     0567  0823               	movf	?___flmul+3,w
  5553     0568  0021               	movlb	1	; select bank1
  5554     0569  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5555     056A  0020               	movlb	0	; select bank0
  5556     056B  0822               	movf	?___flmul+2,w
  5557     056C  0021               	movlb	1	; select bank1
  5558     056D  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5559     056E  0020               	movlb	0	; select bank0
  5560     056F  0821               	movf	?___flmul+1,w
  5561     0570  0021               	movlb	1	; select bank1
  5562     0571  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5563     0572  0020               	movlb	0	; select bank0
  5564     0573  0820               	movf	?___flmul,w
  5565     0574  0021               	movlb	1	; select bank1
  5566     0575  00C2               	movwf	efgtoa@l^(0+128)
  5567                           
  5568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  5569     0576  0841               	movf	(efgtoa@h+3)^(0+128),w
  5570     0577  0020               	movlb	0	; select bank0
  5571     0578  00BD               	movwf	___flge@ff1+3
  5572     0579  0021               	movlb	1	; select bank1
  5573     057A  0840               	movf	(efgtoa@h+2)^(0+128),w
  5574     057B  0020               	movlb	0	; select bank0
  5575     057C  00BC               	movwf	___flge@ff1+2
  5576     057D  0021               	movlb	1	; select bank1
  5577     057E  083F               	movf	(efgtoa@h+1)^(0+128),w
  5578     057F  0020               	movlb	0	; select bank0
  5579     0580  00BB               	movwf	___flge@ff1+1
  5580     0581  0021               	movlb	1	; select bank1
  5581     0582  083E               	movf	efgtoa@h^(0+128),w
  5582     0583  0020               	movlb	0	; select bank0
  5583     0584  00BA               	movwf	___flge@ff1
  5584     0585  0021               	movlb	1	; select bank1
  5585     0586  0845               	movf	(efgtoa@l+3)^(0+128),w
  5586     0587  0020               	movlb	0	; select bank0
  5587     0588  00C1               	movwf	___flge@ff2+3
  5588     0589  0021               	movlb	1	; select bank1
  5589     058A  0844               	movf	(efgtoa@l+2)^(0+128),w
  5590     058B  0020               	movlb	0	; select bank0
  5591     058C  00C0               	movwf	___flge@ff2+2
  5592     058D  0021               	movlb	1	; select bank1
  5593     058E  0843               	movf	(efgtoa@l+1)^(0+128),w
  5594     058F  0020               	movlb	0	; select bank0
  5595     0590  00BF               	movwf	___flge@ff2+1
  5596     0591  0021               	movlb	1	; select bank1
  5597     0592  0842               	movf	efgtoa@l^(0+128),w
  5598     0593  0020               	movlb	0	; select bank0
  5599     0594  00BE               	movwf	___flge@ff2
  5600     0595  3191  213B  3182   	fcall	___flge
  5601     0598  1803               	btfsc	3,0
  5602     0599  2D9D               	goto	l3879
  5603                           
  5604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  5605     059A  3000               	movlw	0
  5606     059B  0021               	movlb	1	; select bank1
  5607     059C  2DB5               	goto	L20
  5608     059D                     l3879:	
  5609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  5610                           
  5611                           
  5612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  5613     059D  0021               	movlb	1	; select bank1
  5614     059E  0841               	movf	(efgtoa@h+3)^(0+128),w
  5615     059F  00F3               	movwf	___fleq@ff1+3
  5616     05A0  0840               	movf	(efgtoa@h+2)^(0+128),w
  5617     05A1  00F2               	movwf	___fleq@ff1+2
  5618     05A2  083F               	movf	(efgtoa@h+1)^(0+128),w
  5619     05A3  00F1               	movwf	___fleq@ff1+1
  5620     05A4  083E               	movf	efgtoa@h^(0+128),w
  5621     05A5  00F0               	movwf	___fleq@ff1
  5622     05A6  0845               	movf	(efgtoa@l+3)^(0+128),w
  5623     05A7  00F7               	movwf	___fleq@ff2+3
  5624     05A8  0844               	movf	(efgtoa@l+2)^(0+128),w
  5625     05A9  00F6               	movwf	___fleq@ff2+2
  5626     05AA  0843               	movf	(efgtoa@l+1)^(0+128),w
  5627     05AB  00F5               	movwf	___fleq@ff2+1
  5628     05AC  0842               	movf	efgtoa@l^(0+128),w
  5629     05AD  00F4               	movwf	___fleq@ff2
  5630     05AE  319F  2706  3182   	fcall	___fleq
  5631     05B1  1803               	btfsc	3,0
  5632     05B2  182F               	btfsc	efgtoa@d^(0+128),0
  5633     05B3  2DBC               	goto	l3885
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  5636     05B4  3000               	movlw	0
  5637     05B5                     L20:
  5638     05B5  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5639     05B6  3000               	movlw	0
  5640     05B7  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5641     05B8  3000               	movlw	0
  5642     05B9  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5643     05BA  3000               	movlw	0
  5644     05BB  00C2               	movwf	efgtoa@l^(0+128)
  5645     05BC                     l3885:
  5646                           
  5647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  5648     05BC  0845               	movf	(efgtoa@l+3)^(0+128),w
  5649     05BD  00F3               	movwf	___fladd@b+3
  5650     05BE  0844               	movf	(efgtoa@l+2)^(0+128),w
  5651     05BF  00F2               	movwf	___fladd@b+2
  5652     05C0  0843               	movf	(efgtoa@l+1)^(0+128),w
  5653     05C1  00F1               	movwf	___fladd@b+1
  5654     05C2  0842               	movf	efgtoa@l^(0+128),w
  5655     05C3  00F0               	movwf	___fladd@b
  5656     05C4  084C               	movf	(efgtoa@g+3)^(0+128),w
  5657     05C5  00F7               	movwf	___fladd@a+3
  5658     05C6  084B               	movf	(efgtoa@g+2)^(0+128),w
  5659     05C7  00F6               	movwf	___fladd@a+2
  5660     05C8  084A               	movf	(efgtoa@g+1)^(0+128),w
  5661     05C9  00F5               	movwf	___fladd@a+1
  5662     05CA  0849               	movf	efgtoa@g^(0+128),w
  5663     05CB  00F4               	movwf	___fladd@a
  5664     05CC  3188  2076  3182   	fcall	___fladd
  5665     05CF  0873               	movf	?___fladd+3,w
  5666     05D0  0021               	movlb	1	; select bank1
  5667     05D1  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5668     05D2  0872               	movf	?___fladd+2,w
  5669     05D3  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5670     05D4  0871               	movf	?___fladd+1,w
  5671     05D5  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5672     05D6  0870               	movf	?___fladd,w
  5673     05D7  00BE               	movwf	efgtoa@h^(0+128)
  5674                           
  5675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  5676     05D8  0841               	movf	(efgtoa@h+3)^(0+128),w
  5677     05D9  0020               	movlb	0	; select bank0
  5678     05DA  00BD               	movwf	___flge@ff1+3
  5679     05DB  0021               	movlb	1	; select bank1
  5680     05DC  0840               	movf	(efgtoa@h+2)^(0+128),w
  5681     05DD  0020               	movlb	0	; select bank0
  5682     05DE  00BC               	movwf	___flge@ff1+2
  5683     05DF  0021               	movlb	1	; select bank1
  5684     05E0  083F               	movf	(efgtoa@h+1)^(0+128),w
  5685     05E1  0020               	movlb	0	; select bank0
  5686     05E2  00BB               	movwf	___flge@ff1+1
  5687     05E3  0021               	movlb	1	; select bank1
  5688     05E4  083E               	movf	efgtoa@h^(0+128),w
  5689     05E5  0020               	movlb	0	; select bank0
  5690     05E6  00BA               	movwf	___flge@ff1
  5691     05E7  3041               	movlw	65
  5692     05E8  00A3               	movwf	___flmul@b+3
  5693     05E9  3020               	movlw	32
  5694     05EA  00A2               	movwf	___flmul@b+2
  5695     05EB  3000               	movlw	0
  5696     05EC  00A1               	movwf	___flmul@b+1
  5697     05ED  3000               	movlw	0
  5698     05EE  00A0               	movwf	___flmul@b
  5699     05EF  0021               	movlb	1	; select bank1
  5700     05F0  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5701     05F1  0020               	movlb	0	; select bank0
  5702     05F2  00A7               	movwf	___flmul@a+3
  5703     05F3  0021               	movlb	1	; select bank1
  5704     05F4  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5705     05F5  0020               	movlb	0	; select bank0
  5706     05F6  00A6               	movwf	___flmul@a+2
  5707     05F7  0021               	movlb	1	; select bank1
  5708     05F8  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5709     05F9  0020               	movlb	0	; select bank0
  5710     05FA  00A5               	movwf	___flmul@a+1
  5711     05FB  0021               	movlb	1	; select bank1
  5712     05FC  0838               	movf	efgtoa@ou^(0+128),w
  5713     05FD  0020               	movlb	0	; select bank0
  5714     05FE  00A4               	movwf	___flmul@a
  5715     05FF  3180  203F  3182   	fcall	___flmul
  5716     0602  0823               	movf	?___flmul+3,w
  5717     0603  00C1               	movwf	___flge@ff2+3
  5718     0604  0822               	movf	?___flmul+2,w
  5719     0605  00C0               	movwf	___flge@ff2+2
  5720     0606  0821               	movf	?___flmul+1,w
  5721     0607  00BF               	movwf	___flge@ff2+1
  5722     0608  0820               	movf	?___flmul,w
  5723     0609  00BE               	movwf	___flge@ff2
  5724     060A  3191  213B  3182   	fcall	___flge
  5725     060D  1C03               	btfss	3,0
  5726     060E  2E47               	goto	l911
  5727                           
  5728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  5729     060F  3001               	movlw	1
  5730     0610  0021               	movlb	1	; select bank1
  5731     0611  07B4               	addwf	efgtoa@e^(0+128),f
  5732     0612  3000               	movlw	0
  5733     0613  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5734                           
  5735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  5736     0614  3041               	movlw	65
  5737     0615  0020               	movlb	0	; select bank0
  5738     0616  00A3               	movwf	___flmul@b+3
  5739     0617  3020               	movlw	32
  5740     0618  00A2               	movwf	___flmul@b+2
  5741     0619  3000               	movlw	0
  5742     061A  00A1               	movwf	___flmul@b+1
  5743     061B  3000               	movlw	0
  5744     061C  00A0               	movwf	___flmul@b
  5745     061D  0021               	movlb	1	; select bank1
  5746     061E  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5747     061F  0020               	movlb	0	; select bank0
  5748     0620  00A7               	movwf	___flmul@a+3
  5749     0621  0021               	movlb	1	; select bank1
  5750     0622  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5751     0623  0020               	movlb	0	; select bank0
  5752     0624  00A6               	movwf	___flmul@a+2
  5753     0625  0021               	movlb	1	; select bank1
  5754     0626  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5755     0627  0020               	movlb	0	; select bank0
  5756     0628  00A5               	movwf	___flmul@a+1
  5757     0629  0021               	movlb	1	; select bank1
  5758     062A  0838               	movf	efgtoa@ou^(0+128),w
  5759     062B  0020               	movlb	0	; select bank0
  5760     062C  00A4               	movwf	___flmul@a
  5761     062D  3180  203F  3182   	fcall	___flmul
  5762     0630  0823               	movf	?___flmul+3,w
  5763     0631  0021               	movlb	1	; select bank1
  5764     0632  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5765     0633  0020               	movlb	0	; select bank0
  5766     0634  0822               	movf	?___flmul+2,w
  5767     0635  0021               	movlb	1	; select bank1
  5768     0636  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5769     0637  0020               	movlb	0	; select bank0
  5770     0638  0821               	movf	?___flmul+1,w
  5771     0639  0021               	movlb	1	; select bank1
  5772     063A  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5773     063B  0020               	movlb	0	; select bank0
  5774     063C  0820               	movf	?___flmul,w
  5775     063D  0021               	movlb	1	; select bank1
  5776     063E  00B8               	movwf	efgtoa@ou^(0+128)
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  5779     063F  3066               	movlw	102
  5780     0640  062E               	xorwf	efgtoa@nmode^(0+128),w
  5781     0641  1D03               	btfss	3,2
  5782     0642  2E47               	goto	l911
  5783                           
  5784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  5785     0643  3001               	movlw	1
  5786     0644  07B1               	addwf	efgtoa@m^(0+128),f
  5787     0645  3000               	movlw	0
  5788     0646  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5789     0647                     l911:	
  5790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 686:  }
  5791                           
  5792                           
  5793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  5794     0647  0021               	movlb	1	; select bank1
  5795     0648  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5796     0649  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5797     064A  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5798     064B  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5799     064C  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5800     064D  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5801     064E  0838               	movf	efgtoa@ou^(0+128),w
  5802     064F  00CD               	movwf	efgtoa@u^(0+128)
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  5805     0650  0835               	movf	(efgtoa@e+1)^(0+128),w
  5806     0651  00A5               	movwf	(efgtoa@ne+1)^(0+128)
  5807     0652  0834               	movf	efgtoa@e^(0+128),w
  5808     0653  00A4               	movwf	efgtoa@ne^(0+128)
  5809                           
  5810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  5811     0654  01AC               	clrf	efgtoa@pp^(0+128)
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  5814     0655  01A8               	clrf	efgtoa@t^(0+128)
  5815     0656  01A9               	clrf	(efgtoa@t+1)^(0+128)
  5816                           
  5817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  5818     0657  01BC               	clrf	efgtoa@i^(0+128)
  5819     0658  01BD               	clrf	(efgtoa@i+1)^(0+128)
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5822     0659  2F80               	goto	l3945
  5823     065A                     l3903:
  5824                           
  5825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  5826     065A  0021               	movlb	1	; select bank1
  5827     065B  0850               	movf	(efgtoa@u+3)^(0+128),w
  5828     065C  0020               	movlb	0	; select bank0
  5829     065D  00BD               	movwf	___fldiv@a+3
  5830     065E  0021               	movlb	1	; select bank1
  5831     065F  084F               	movf	(efgtoa@u+2)^(0+128),w
  5832     0660  0020               	movlb	0	; select bank0
  5833     0661  00BC               	movwf	___fldiv@a+2
  5834     0662  0021               	movlb	1	; select bank1
  5835     0663  084E               	movf	(efgtoa@u+1)^(0+128),w
  5836     0664  0020               	movlb	0	; select bank0
  5837     0665  00BB               	movwf	___fldiv@a+1
  5838     0666  0021               	movlb	1	; select bank1
  5839     0667  084D               	movf	efgtoa@u^(0+128),w
  5840     0668  0020               	movlb	0	; select bank0
  5841     0669  00BA               	movwf	___fldiv@a
  5842     066A  0021               	movlb	1	; select bank1
  5843     066B  0841               	movf	(efgtoa@h+3)^(0+128),w
  5844     066C  0020               	movlb	0	; select bank0
  5845     066D  00C1               	movwf	___fldiv@b+3
  5846     066E  0021               	movlb	1	; select bank1
  5847     066F  0840               	movf	(efgtoa@h+2)^(0+128),w
  5848     0670  0020               	movlb	0	; select bank0
  5849     0671  00C0               	movwf	___fldiv@b+2
  5850     0672  0021               	movlb	1	; select bank1
  5851     0673  083F               	movf	(efgtoa@h+1)^(0+128),w
  5852     0674  0020               	movlb	0	; select bank0
  5853     0675  00BF               	movwf	___fldiv@b+1
  5854     0676  0021               	movlb	1	; select bank1
  5855     0677  083E               	movf	efgtoa@h^(0+128),w
  5856     0678  0020               	movlb	0	; select bank0
  5857     0679  00BE               	movwf	___fldiv@b
  5858     067A  3196  2691  3182   	fcall	___fldiv
  5859     067D  083D               	movf	?___fldiv+3,w
  5860     067E  00D7               	movwf	floorf@x+3
  5861     067F  083C               	movf	?___fldiv+2,w
  5862     0680  00D6               	movwf	floorf@x+2
  5863     0681  083B               	movf	?___fldiv+1,w
  5864     0682  00D5               	movwf	floorf@x+1
  5865     0683  083A               	movf	?___fldiv,w
  5866     0684  00D4               	movwf	floorf@x
  5867     0685  3192  22D0  3182   	fcall	_floorf
  5868     0688  0020               	movlb	0	; select bank0
  5869     0689  0857               	movf	?_floorf+3,w
  5870     068A  0021               	movlb	1	; select bank1
  5871     068B  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5872     068C  0020               	movlb	0	; select bank0
  5873     068D  0856               	movf	?_floorf+2,w
  5874     068E  0021               	movlb	1	; select bank1
  5875     068F  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5876     0690  0020               	movlb	0	; select bank0
  5877     0691  0855               	movf	?_floorf+1,w
  5878     0692  0021               	movlb	1	; select bank1
  5879     0693  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5880     0694  0020               	movlb	0	; select bank0
  5881     0695  0854               	movf	?_floorf,w
  5882     0696  0021               	movlb	1	; select bank1
  5883     0697  00C2               	movwf	efgtoa@l^(0+128)
  5884                           
  5885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5886     0698  0845               	movf	(efgtoa@l+3)^(0+128),w
  5887     0699  00F3               	movwf	___fltol@f1+3
  5888     069A  0844               	movf	(efgtoa@l+2)^(0+128),w
  5889     069B  00F2               	movwf	___fltol@f1+2
  5890     069C  0843               	movf	(efgtoa@l+1)^(0+128),w
  5891     069D  00F1               	movwf	___fltol@f1+1
  5892     069E  0842               	movf	efgtoa@l^(0+128),w
  5893     069F  00F0               	movwf	___fltol@f1
  5894     06A0  319F  279F  3182   	fcall	___fltol
  5895     06A3  0871               	movf	?___fltol+1,w
  5896     06A4  3A80               	xorlw	128
  5897     06A5  00A0               	movwf	??_efgtoa^(0+128)
  5898     06A6  3080               	movlw	128
  5899     06A7  0220               	subwf	??_efgtoa^(0+128),w
  5900     06A8  1D03               	skipz
  5901     06A9  2EAC               	goto	u5435
  5902     06AA  300A               	movlw	10
  5903     06AB  0270               	subwf	?___fltol,w
  5904     06AC                     u5435:
  5905     06AC  1803               	skipnc
  5906     06AD  2EBF               	goto	l3907
  5907     06AE  0021               	movlb	1	; select bank1
  5908     06AF  0845               	movf	(efgtoa@l+3)^(0+128),w
  5909     06B0  00F3               	movwf	___fltol@f1+3
  5910     06B1  0844               	movf	(efgtoa@l+2)^(0+128),w
  5911     06B2  00F2               	movwf	___fltol@f1+2
  5912     06B3  0843               	movf	(efgtoa@l+1)^(0+128),w
  5913     06B4  00F1               	movwf	___fltol@f1+1
  5914     06B5  0842               	movf	efgtoa@l^(0+128),w
  5915     06B6  00F0               	movwf	___fltol@f1
  5916     06B7  319F  279F  3182   	fcall	___fltol
  5917     06BA  0871               	movf	?___fltol+1,w
  5918     06BB  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5919     06BC  0870               	movf	?___fltol,w
  5920     06BD  00AF               	movwf	efgtoa@d^(0+128)
  5921     06BE  2EC4               	goto	l3909
  5922     06BF                     l3907:
  5923     06BF  3009               	movlw	9
  5924     06C0  0021               	movlb	1	; select bank1
  5925     06C1  00AF               	movwf	efgtoa@d^(0+128)
  5926     06C2  3000               	movlw	0
  5927     06C3  00B0               	movwf	(efgtoa@d^(0+128)+1)
  5928     06C4                     l3909:
  5929                           
  5930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  5931     06C4  082C               	movf	efgtoa@pp^(0+128),w
  5932     06C5  1903               	btfsc	3,2
  5933     06C6  1FA5               	btfss	(efgtoa@ne+1)^(0+128),7
  5934     06C7  2ED9               	goto	l3929
  5935                           
  5936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  5937     06C8  0847               	movf	efgtoa@n^(0+128),w
  5938     06C9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5939     06CA  0086               	movwf	6
  5940     06CB  3002               	movlw	2	; select bank4/5
  5941     06CC  0087               	movwf	7
  5942     06CD  302E               	movlw	46
  5943     06CE  0081               	movwf	1
  5944     06CF  3001               	movlw	1
  5945     06D0  07C7               	addwf	efgtoa@n^(0+128),f
  5946     06D1  3000               	movlw	0
  5947     06D2  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  5948                           
  5949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  5950     06D3  30FF               	movlw	255
  5951     06D4  07B6               	addwf	efgtoa@w^(0+128),f
  5952     06D5  30FF               	movlw	255
  5953     06D6  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  5956     06D7  01AC               	clrf	efgtoa@pp^(0+128)
  5957     06D8  0AAC               	incf	efgtoa@pp^(0+128),f
  5958     06D9                     l3929:
  5959                           
  5960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  5961     06D9  0828               	movf	efgtoa@t^(0+128),w
  5962     06DA  0429               	iorwf	(efgtoa@t+1)^(0+128),w
  5963     06DB  1903               	btfsc	3,2
  5964     06DC  2EF1               	goto	l3931
  5965                           
  5966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  5967     06DD  0847               	movf	efgtoa@n^(0+128),w
  5968     06DE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5969     06DF  0086               	movwf	6
  5970     06E0  3002               	movlw	2	; select bank4/5
  5971     06E1  0087               	movwf	7
  5972     06E2  3030               	movlw	48
  5973     06E3  0081               	movwf	1
  5974     06E4  3001               	movlw	1
  5975     06E5  07C7               	addwf	efgtoa@n^(0+128),f
  5976     06E6  3000               	movlw	0
  5977     06E7  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  5978                           
  5979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  5980     06E8  30FF               	movlw	255
  5981     06E9  07B6               	addwf	efgtoa@w^(0+128),f
  5982     06EA  30FF               	movlw	255
  5983     06EB  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5984                           
  5985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  5986     06EC  30FF               	movlw	255
  5987     06ED  07A8               	addwf	efgtoa@t^(0+128),f
  5988     06EE  30FF               	movlw	255
  5989     06EF  3DA9               	addwfc	(efgtoa@t+1)^(0+128),f
  5990     06F0  2ED9               	goto	l3929
  5991     06F1                     l3931:
  5992                           
  5993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5994     06F1  0847               	movf	efgtoa@n^(0+128),w
  5995     06F2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5996     06F3  0086               	movwf	6
  5997     06F4  3002               	movlw	2	; select bank4/5
  5998     06F5  0087               	movwf	7
  5999     06F6  082F               	movf	efgtoa@d^(0+128),w
  6000     06F7  3E30               	addlw	48
  6001     06F8  0081               	movwf	1
  6002     06F9  3001               	movlw	1
  6003     06FA  07C7               	addwf	efgtoa@n^(0+128),f
  6004     06FB  3000               	movlw	0
  6005     06FC  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6006                           
  6007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  6008     06FD  30FF               	movlw	255
  6009     06FE  07B6               	addwf	efgtoa@w^(0+128),f
  6010     06FF  30FF               	movlw	255
  6011     0700  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  6014     0701  0850               	movf	(efgtoa@u+3)^(0+128),w
  6015     0702  0020               	movlb	0	; select bank0
  6016     0703  00A7               	movwf	___flmul@a+3
  6017     0704  0021               	movlb	1	; select bank1
  6018     0705  084F               	movf	(efgtoa@u+2)^(0+128),w
  6019     0706  0020               	movlb	0	; select bank0
  6020     0707  00A6               	movwf	___flmul@a+2
  6021     0708  0021               	movlb	1	; select bank1
  6022     0709  084E               	movf	(efgtoa@u+1)^(0+128),w
  6023     070A  0020               	movlb	0	; select bank0
  6024     070B  00A5               	movwf	___flmul@a+1
  6025     070C  0021               	movlb	1	; select bank1
  6026     070D  084D               	movf	efgtoa@u^(0+128),w
  6027     070E  0020               	movlb	0	; select bank0
  6028     070F  00A4               	movwf	___flmul@a
  6029     0710  0021               	movlb	1	; select bank1
  6030     0711  0845               	movf	(efgtoa@l+3)^(0+128),w
  6031     0712  0020               	movlb	0	; select bank0
  6032     0713  00A3               	movwf	___flmul@b+3
  6033     0714  0021               	movlb	1	; select bank1
  6034     0715  0844               	movf	(efgtoa@l+2)^(0+128),w
  6035     0716  0020               	movlb	0	; select bank0
  6036     0717  00A2               	movwf	___flmul@b+2
  6037     0718  0021               	movlb	1	; select bank1
  6038     0719  0843               	movf	(efgtoa@l+1)^(0+128),w
  6039     071A  0020               	movlb	0	; select bank0
  6040     071B  00A1               	movwf	___flmul@b+1
  6041     071C  0021               	movlb	1	; select bank1
  6042     071D  0842               	movf	efgtoa@l^(0+128),w
  6043     071E  0020               	movlb	0	; select bank0
  6044     071F  00A0               	movwf	___flmul@b
  6045     0720  3180  203F  3182   	fcall	___flmul
  6046     0723  0823               	movf	?___flmul+3,w
  6047     0724  00BD               	movwf	___flsub@a+3
  6048     0725  0822               	movf	?___flmul+2,w
  6049     0726  00BC               	movwf	___flsub@a+2
  6050     0727  0821               	movf	?___flmul+1,w
  6051     0728  00BB               	movwf	___flsub@a+1
  6052     0729  0820               	movf	?___flmul,w
  6053     072A  00BA               	movwf	___flsub@a
  6054     072B  0021               	movlb	1	; select bank1
  6055     072C  0841               	movf	(efgtoa@h+3)^(0+128),w
  6056     072D  0020               	movlb	0	; select bank0
  6057     072E  00C1               	movwf	___flsub@b+3
  6058     072F  0021               	movlb	1	; select bank1
  6059     0730  0840               	movf	(efgtoa@h+2)^(0+128),w
  6060     0731  0020               	movlb	0	; select bank0
  6061     0732  00C0               	movwf	___flsub@b+2
  6062     0733  0021               	movlb	1	; select bank1
  6063     0734  083F               	movf	(efgtoa@h+1)^(0+128),w
  6064     0735  0020               	movlb	0	; select bank0
  6065     0736  00BF               	movwf	___flsub@b+1
  6066     0737  0021               	movlb	1	; select bank1
  6067     0738  083E               	movf	efgtoa@h^(0+128),w
  6068     0739  0020               	movlb	0	; select bank0
  6069     073A  00BE               	movwf	___flsub@b
  6070     073B  319D  2539  3182   	fcall	___flsub
  6071     073E  083D               	movf	?___flsub+3,w
  6072     073F  0021               	movlb	1	; select bank1
  6073     0740  00C1               	movwf	(efgtoa@h+3)^(0+128)
  6074     0741  0020               	movlb	0	; select bank0
  6075     0742  083C               	movf	?___flsub+2,w
  6076     0743  0021               	movlb	1	; select bank1
  6077     0744  00C0               	movwf	(efgtoa@h+2)^(0+128)
  6078     0745  0020               	movlb	0	; select bank0
  6079     0746  083B               	movf	?___flsub+1,w
  6080     0747  0021               	movlb	1	; select bank1
  6081     0748  00BF               	movwf	(efgtoa@h+1)^(0+128)
  6082     0749  0020               	movlb	0	; select bank0
  6083     074A  083A               	movf	?___flsub,w
  6084     074B  0021               	movlb	1	; select bank1
  6085     074C  00BE               	movwf	efgtoa@h^(0+128)
  6086                           
  6087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  6088     074D  3041               	movlw	65
  6089     074E  0020               	movlb	0	; select bank0
  6090     074F  00BD               	movwf	___fldiv@a+3
  6091     0750  3020               	movlw	32
  6092     0751  00BC               	movwf	___fldiv@a+2
  6093     0752  3000               	movlw	0
  6094     0753  00BB               	movwf	___fldiv@a+1
  6095     0754  3000               	movlw	0
  6096     0755  00BA               	movwf	___fldiv@a
  6097     0756  0021               	movlb	1	; select bank1
  6098     0757  0850               	movf	(efgtoa@u+3)^(0+128),w
  6099     0758  0020               	movlb	0	; select bank0
  6100     0759  00C1               	movwf	___fldiv@b+3
  6101     075A  0021               	movlb	1	; select bank1
  6102     075B  084F               	movf	(efgtoa@u+2)^(0+128),w
  6103     075C  0020               	movlb	0	; select bank0
  6104     075D  00C0               	movwf	___fldiv@b+2
  6105     075E  0021               	movlb	1	; select bank1
  6106     075F  084E               	movf	(efgtoa@u+1)^(0+128),w
  6107     0760  0020               	movlb	0	; select bank0
  6108     0761  00BF               	movwf	___fldiv@b+1
  6109     0762  0021               	movlb	1	; select bank1
  6110     0763  084D               	movf	efgtoa@u^(0+128),w
  6111     0764  0020               	movlb	0	; select bank0
  6112     0765  00BE               	movwf	___fldiv@b
  6113     0766  3196  2691  3182   	fcall	___fldiv
  6114     0769  083D               	movf	?___fldiv+3,w
  6115     076A  0021               	movlb	1	; select bank1
  6116     076B  00D0               	movwf	(efgtoa@u+3)^(0+128)
  6117     076C  0020               	movlb	0	; select bank0
  6118     076D  083C               	movf	?___fldiv+2,w
  6119     076E  0021               	movlb	1	; select bank1
  6120     076F  00CF               	movwf	(efgtoa@u+2)^(0+128)
  6121     0770  0020               	movlb	0	; select bank0
  6122     0771  083B               	movf	?___fldiv+1,w
  6123     0772  0021               	movlb	1	; select bank1
  6124     0773  00CE               	movwf	(efgtoa@u+1)^(0+128)
  6125     0774  0020               	movlb	0	; select bank0
  6126     0775  083A               	movf	?___fldiv,w
  6127     0776  0021               	movlb	1	; select bank1
  6128     0777  00CD               	movwf	efgtoa@u^(0+128)
  6129                           
  6130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  6131     0778  30FF               	movlw	255
  6132     0779  07A4               	addwf	efgtoa@ne^(0+128),f
  6133     077A  30FF               	movlw	255
  6134     077B  3DA5               	addwfc	(efgtoa@ne+1)^(0+128),f
  6135                           
  6136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  6137     077C  3001               	movlw	1
  6138     077D  07BC               	addwf	efgtoa@i^(0+128),f
  6139     077E  3000               	movlw	0
  6140     077F  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  6141     0780                     l3945:
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6144     0780  083D               	movf	(efgtoa@i+1)^(0+128),w
  6145     0781  3A80               	xorlw	128
  6146     0782  00A0               	movwf	??_efgtoa^(0+128)
  6147     0783  0832               	movf	(efgtoa@m+1)^(0+128),w
  6148     0784  3A80               	xorlw	128
  6149     0785  0220               	subwf	??_efgtoa^(0+128),w
  6150     0786  1D03               	skipz
  6151     0787  2F8A               	goto	u5475
  6152     0788  0831               	movf	efgtoa@m^(0+128),w
  6153     0789  023C               	subwf	efgtoa@i^(0+128),w
  6154     078A                     u5475:
  6155     078A  1803               	skipnc
  6156     078B  2F98               	goto	l3949
  6157     078C  0021               	movlb	1	; select bank1
  6158     078D  0848               	movf	(efgtoa@n+1)^(0+128),w
  6159     078E  3A80               	xorlw	128
  6160     078F  00A0               	movwf	??_efgtoa^(0+128)
  6161     0790  3080               	movlw	128
  6162     0791  0220               	subwf	??_efgtoa^(0+128),w
  6163     0792  1D03               	skipz
  6164     0793  2F96               	goto	u5485
  6165     0794  304B               	movlw	75
  6166     0795  0247               	subwf	efgtoa@n^(0+128),w
  6167     0796                     u5485:
  6168     0796  1C03               	skipc
  6169     0797  2E5A               	goto	l3903
  6170     0798                     l3949:
  6171                           
  6172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  6173     0798  304F               	movlw	79
  6174     0799  0021               	movlb	1	; select bank1
  6175     079A  00BC               	movwf	efgtoa@i^(0+128)
  6176     079B  3000               	movlw	0
  6177     079C  00BD               	movwf	(efgtoa@i^(0+128)+1)
  6178                           
  6179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  6180     079D  083C               	movf	efgtoa@i^(0+128),w
  6181     079E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6182     079F  0086               	movwf	6
  6183     07A0  3002               	movlw	2	; select bank4/5
  6184     07A1  0087               	movwf	7
  6185     07A2  0181               	clrf	1
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6188     07A3  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6189     07A4  00F0               	movwf	memcpy@s1
  6190     07A5  0848               	movf	(efgtoa@n+1)^(0+128),w
  6191     07A6  00F2               	movwf	memcpy@n+1
  6192     07A7  0847               	movf	efgtoa@n^(0+128),w
  6193     07A8  00F1               	movwf	memcpy@n
  6194     07A9  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6195     07AA  00A0               	movwf	??_efgtoa^(0+128)
  6196     07AB  0847               	movf	efgtoa@n^(0+128),w
  6197     07AC  0220               	subwf	??_efgtoa^(0+128),w
  6198     07AD  073C               	addwf	efgtoa@i^(0+128),w
  6199     07AE  319D  25B6  3182   	fcall	_memcpy
  6200                           
  6201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  6202     07B1  0847               	movf	efgtoa@n^(0+128),w
  6203     07B2  023C               	subwf	efgtoa@i^(0+128),w
  6204     07B3  00C7               	movwf	efgtoa@n^(0+128)
  6205     07B4  0848               	movf	(efgtoa@n+1)^(0+128),w
  6206     07B5  3B3D               	subwfb	(efgtoa@i+1)^(0+128),w
  6207     07B6  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6208                           
  6209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  6210     07B7  0846               	movf	efgtoa@sign^(0+128),w
  6211     07B8  1903               	btfsc	3,2
  6212     07B9  2FBC               	goto	u5490
  6213     07BA  3001               	movlw	1
  6214     07BB  2FBD               	goto	u5500
  6215     07BC                     u5490:
  6216     07BC  3000               	movlw	0
  6217     07BD                     u5500:
  6218     07BD  00A0               	movwf	??_efgtoa^(0+128)
  6219     07BE  01A1               	clrf	(??_efgtoa^(0+128)+1)
  6220     07BF  0820               	movf	??_efgtoa^(0+128),w
  6221     07C0  00BC               	movwf	efgtoa@i^(0+128)
  6222     07C1  0821               	movf	(??_efgtoa+1)^(0+128),w
  6223     07C2  00BD               	movwf	(efgtoa@i+1)^(0+128)
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  6226     07C3  0846               	movf	efgtoa@sign^(0+128),w
  6227     07C4  1903               	btfsc	3,2
  6228     07C5  2FD1               	goto	l3963
  6229                           
  6230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  6231     07C6  30FF               	movlw	255
  6232     07C7  07C7               	addwf	efgtoa@n^(0+128),f
  6233     07C8  30FF               	movlw	255
  6234     07C9  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6235     07CA  0847               	movf	efgtoa@n^(0+128),w
  6236     07CB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6237     07CC  0086               	movwf	6
  6238     07CD  3002               	movlw	2	; select bank4/5
  6239     07CE  0087               	movwf	7
  6240     07CF  0846               	movf	efgtoa@sign^(0+128),w
  6241     07D0  0081               	movwf	1
  6242     07D1                     l3963:
  6243                           
  6244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  6245     07D1  083C               	movf	efgtoa@i^(0+128),w
  6246     07D2  02B6               	subwf	efgtoa@w^(0+128),f
  6247     07D3  083D               	movf	(efgtoa@i+1)^(0+128),w
  6248     07D4  3BB7               	subwfb	(efgtoa@w+1)^(0+128),f
  6249                           
  6250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6251     07D5  0847               	movf	efgtoa@n^(0+128),w
  6252     07D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6253     07D7  00FB               	movwf	pad@buf
  6254     07D8  0837               	movf	(efgtoa@w+1)^(0+128),w
  6255     07D9  00FD               	movwf	pad@p+1
  6256     07DA  0836               	movf	efgtoa@w^(0+128),w
  6257     07DB  00FC               	movwf	pad@p
  6258     07DC  0833               	movf	efgtoa@fp^(0+128),w
  6259     07DD  3180  200F         	fcall	_pad
  6260     07DF  0008               	return
  6261     07E0                     __end_of_efgtoa:
  6262                           
  6263                           	psect	text10
  6264     1CFF                     __ptext10:	
  6265 ;; *************** function _strcpy *****************
  6266 ;; Defined at:
  6267 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  dest            1    wreg     PTR unsigned char 
  6270 ;;		 -> dbuf(80), 
  6271 ;;  src             2    0[COMMON] PTR const unsigned char 
  6272 ;;		 -> STR_18(4), STR_15(4), 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  dest            1    7[COMMON] PTR unsigned char 
  6275 ;;		 -> dbuf(80), 
  6276 ;;  s               2    4[COMMON] PTR const unsigned char 
  6277 ;;		 -> STR_18(4), STR_15(4), 
  6278 ;;  d               1    6[COMMON] PTR unsigned char 
  6279 ;;		 -> dbuf(80), 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      PTR unsigned char 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6284 ;; Tracked objects:
  6285 ;;		On entry : 1F/1
  6286 ;;		On exit  : 1F/1
  6287 ;;		Unchanged: 1F/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6289 ;;      Params:         2       0       0       0       0       0       0       0
  6290 ;;      Locals:         4       0       0       0       0       0       0       0
  6291 ;;      Temps:          2       0       0       0       0       0       0       0
  6292 ;;      Totals:         8       0       0       0       0       0       0       0
  6293 ;;Total ram usage:        8 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_efgtoa
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302     1CFF                     _strcpy:	
  6303                           ;psect for function _strcpy
  6304                           
  6305                           
  6306                           ;incstack = 0
  6307                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6308                           ;strcpy@dest stored from wreg
  6309     1CFF  00F7               	movwf	strcpy@dest
  6310     1D00  0871               	movf	strcpy@src+1,w
  6311     1D01  00F5               	movwf	strcpy@s+1
  6312     1D02  0870               	movf	strcpy@src,w
  6313     1D03  00F4               	movwf	strcpy@s
  6314     1D04  0877               	movf	strcpy@dest,w
  6315     1D05  00F6               	movwf	strcpy@d
  6316     1D06                     l3657:
  6317     1D06  0876               	movf	strcpy@d,w
  6318     1D07  0086               	movwf	6
  6319     1D08  3002               	movlw	2	; select bank4/5
  6320     1D09  0087               	movwf	7
  6321     1D0A  0AF6               	incf	strcpy@d,f
  6322     1D0B  0875               	movf	strcpy@s+1,w
  6323     1D0C  00F3               	movwf	??_strcpy+1
  6324     1D0D  0874               	movf	strcpy@s,w
  6325     1D0E  00F2               	movwf	??_strcpy
  6326     1D0F  0AF4               	incf	strcpy@s,f
  6327     1D10  1903               	skipnz
  6328     1D11  0AF5               	incf	strcpy@s+1,f
  6329     1D12  0872               	movf	??_strcpy,w
  6330     1D13  0084               	movwf	4
  6331     1D14  0873               	movf	??_strcpy+1,w
  6332     1D15  0085               	movwf	5
  6333     1D16  0800               	movf	0,w	;code access
  6334     1D17  3FC0               	movwi [0]fsr1
  6335     1D18  0889               	movf	9,f
  6336     1D19  1903               	btfsc	3,2
  6337     1D1A  0008               	return
  6338     1D1B  2D06               	goto	l3657
  6339     1D1C                     __end_of_strcpy:
  6340                           
  6341                           	psect	text11
  6342     1DB6                     __ptext11:	
  6343 ;; *************** function _memcpy *****************
  6344 ;; Defined at:
  6345 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  d1              1    wreg     PTR void 
  6348 ;;		 -> dbuf(80), 
  6349 ;;  s1              1    0[COMMON] PTR const void 
  6350 ;;		 -> dbuf(80), 
  6351 ;;  n               2    1[COMMON] unsigned int 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  d1              1    5[COMMON] PTR void 
  6354 ;;		 -> dbuf(80), 
  6355 ;;  s               1    7[COMMON] PTR const unsigned char 
  6356 ;;		 -> dbuf(80), 
  6357 ;;  d               1    6[COMMON] PTR unsigned char 
  6358 ;;		 -> dbuf(80), 
  6359 ;;  tmp             1    4[COMMON] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      PTR void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 1F/1
  6366 ;;		On exit  : 1F/1
  6367 ;;		Unchanged: 1F/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6369 ;;      Params:         3       0       0       0       0       0       0       0
  6370 ;;      Locals:         4       0       0       0       0       0       0       0
  6371 ;;      Temps:          1       0       0       0       0       0       0       0
  6372 ;;      Totals:         8       0       0       0       0       0       0       0
  6373 ;;Total ram usage:        8 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_efgtoa
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382     1DB6                     _memcpy:	
  6383                           ;psect for function _memcpy
  6384                           
  6385                           
  6386                           ;incstack = 0
  6387                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6388                           ;memcpy@d1 stored from wreg
  6389     1DB6  00F5               	movwf	memcpy@d1
  6390     1DB7  0870               	movf	memcpy@s1,w
  6391     1DB8  00F7               	movwf	memcpy@s
  6392     1DB9  0875               	movf	memcpy@d1,w
  6393     1DBA  00F6               	movwf	memcpy@d
  6394     1DBB                     l1043:
  6395     1DBB  3001               	movlw	1
  6396     1DBC  02F1               	subwf	memcpy@n,f
  6397     1DBD  3000               	movlw	0
  6398     1DBE  3BF2               	subwfb	memcpy@n+1,f
  6399     1DBF  0A71               	incf	memcpy@n,w
  6400     1DC0  1903               	btfsc	3,2
  6401     1DC1  0A72               	incf	memcpy@n+1,w
  6402     1DC2  1903               	btfsc	3,2
  6403     1DC3  0008               	return
  6404     1DC4  0877               	movf	memcpy@s,w
  6405     1DC5  0086               	movwf	6
  6406     1DC6  3002               	movlw	2	; select bank4/5
  6407     1DC7  0087               	movwf	7
  6408     1DC8  0801               	movf	1,w
  6409     1DC9  00F4               	movwf	memcpy@tmp
  6410     1DCA  3001               	movlw	1
  6411     1DCB  00F3               	movwf	??_memcpy
  6412     1DCC  0873               	movf	??_memcpy,w
  6413     1DCD  07F7               	addwf	memcpy@s,f
  6414     1DCE  0876               	movf	memcpy@d,w
  6415     1DCF  0086               	movwf	6
  6416     1DD0  3002               	movlw	2	; select bank4/5
  6417     1DD1  0087               	movwf	7
  6418     1DD2  0874               	movf	memcpy@tmp,w
  6419     1DD3  0081               	movwf	1
  6420     1DD4  3001               	movlw	1
  6421     1DD5  00F3               	movwf	??_memcpy
  6422     1DD6  0873               	movf	??_memcpy,w
  6423     1DD7  07F6               	addwf	memcpy@d,f
  6424     1DD8  2DBB               	goto	l1043
  6425     1DD9                     __end_of_memcpy:
  6426                           
  6427                           	psect	text12
  6428     1D76                     __ptext12:	
  6429 ;; *************** function _labs *****************
  6430 ;; Defined at:
  6431 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  a               4    0[COMMON] long 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  4    0[COMMON] long 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 1F/1
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6445 ;;      Params:         4       0       0       0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0
  6448 ;;      Totals:         4       0       0       0       0       0       0       0
  6449 ;;Total ram usage:        4 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_efgtoa
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458     1D76                     _labs:	
  6459                           ;psect for function _labs
  6460                           
  6461                           
  6462                           ;incstack = 0
  6463                           ; Regs used in _labs: [wreg+status,2+status,0]
  6464     1D76  1BF3               	btfsc	labs@a+3,7
  6465     1D77  2D85               	goto	l3661
  6466     1D78  0873               	movf	labs@a+3,w
  6467     1D79  1D03               	btfss	3,2
  6468     1D7A  0008               	return
  6469     1D7B  0872               	movf	labs@a+2,w
  6470     1D7C  1D03               	btfss	3,2
  6471     1D7D  0008               	return
  6472     1D7E  0871               	movf	labs@a+1,w
  6473     1D7F  1D03               	btfss	3,2
  6474     1D80  0008               	return
  6475     1D81  3001               	movlw	1
  6476     1D82  0270               	subwf	labs@a,w
  6477     1D83  1803               	btfsc	3,0
  6478     1D84  0008               	return
  6479     1D85                     l3661:
  6480     1D85  0970               	comf	labs@a,w
  6481     1D86  00F0               	movwf	?_labs
  6482     1D87  0971               	comf	labs@a+1,w
  6483     1D88  00F1               	movwf	?_labs+1
  6484     1D89  0972               	comf	labs@a+2,w
  6485     1D8A  00F2               	movwf	?_labs+2
  6486     1D8B  0973               	comf	labs@a+3,w
  6487     1D8C  00F3               	movwf	?_labs+3
  6488     1D8D  0AF0               	incf	?_labs,f
  6489     1D8E  1903               	skipnz
  6490     1D8F  0AF1               	incf	?_labs+1,f
  6491     1D90  1903               	skipnz
  6492     1D91  0AF2               	incf	?_labs+2,f
  6493     1D92  1903               	skipnz
  6494     1D93  0AF3               	incf	?_labs+3,f
  6495     1D94  0008               	return
  6496     1D95                     __end_of_labs:
  6497                           
  6498                           	psect	text13
  6499     12D0                     __ptext13:	
  6500 ;; *************** function _floorf *****************
  6501 ;; Defined at:
  6502 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  x               4   52[BANK0 ] float 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  u               4   68[BANK0 ] struct .
  6507 ;;  m               4   62[BANK0 ] unsigned long 
  6508 ;;  e               2   66[BANK0 ] int 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  4   52[BANK0 ] float 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 1F/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6518 ;;      Params:         0       4       0       0       0       0       0       0
  6519 ;;      Locals:         0      10       0       0       0       0       0       0
  6520 ;;      Temps:          0       6       0       0       0       0       0       0
  6521 ;;      Totals:         0      20       0       0       0       0       0       0
  6522 ;;Total ram usage:       20 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_efgtoa
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531     12D0                     _floorf:	
  6532                           ;psect for function _floorf
  6533                           
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6537     12D0  0022               	movlb	2	; select bank2
  6538     12D1  0846               	movf	(floorf@F526+3)^(0+256),w
  6539     12D2  0020               	movlb	0	; select bank0
  6540     12D3  00E7               	movwf	floorf@u+3
  6541     12D4  0022               	movlb	2	; select bank2
  6542     12D5  0845               	movf	(floorf@F526+2)^(0+256),w
  6543     12D6  0020               	movlb	0	; select bank0
  6544     12D7  00E6               	movwf	floorf@u+2
  6545     12D8  0022               	movlb	2	; select bank2
  6546     12D9  0844               	movf	(floorf@F526+1)^(0+256),w
  6547     12DA  0020               	movlb	0	; select bank0
  6548     12DB  00E5               	movwf	floorf@u+1
  6549     12DC  0022               	movlb	2	; select bank2
  6550     12DD  0843               	movf	floorf@F526^(0+256),w
  6551     12DE  0020               	movlb	0	; select bank0
  6552     12DF  00E4               	movwf	floorf@u
  6553     12E0  0857               	movf	floorf@x+3,w
  6554     12E1  00E7               	movwf	floorf@u+3
  6555     12E2  0856               	movf	floorf@x+2,w
  6556     12E3  00E6               	movwf	floorf@u+2
  6557     12E4  0855               	movf	floorf@x+1,w
  6558     12E5  00E5               	movwf	floorf@u+1
  6559     12E6  0854               	movf	floorf@x,w
  6560     12E7  00E4               	movwf	floorf@u
  6561     12E8  0864               	movf	floorf@u,w
  6562     12E9  00D8               	movwf	??_floorf
  6563     12EA  0865               	movf	floorf@u+1,w
  6564     12EB  00D9               	movwf	??_floorf+1
  6565     12EC  0866               	movf	floorf@u+2,w
  6566     12ED  00DA               	movwf	??_floorf+2
  6567     12EE  0867               	movf	floorf@u+3,w
  6568     12EF  00DB               	movwf	??_floorf+3
  6569     12F0  3017               	movlw	23
  6570     12F1                     u4935:
  6571     12F1  36DB               	lsrf	??_floorf+3,f
  6572     12F2  0CDA               	rrf	??_floorf+2,f
  6573     12F3  0CD9               	rrf	??_floorf+1,f
  6574     12F4  0CD8               	rrf	??_floorf,f
  6575     12F5  0B89               	decfsz	9,f
  6576     12F6  2AF1               	goto	u4935
  6577     12F7  30FF               	movlw	255
  6578     12F8  0558               	andwf	??_floorf,w
  6579     12F9  00DC               	movwf	??_floorf+4
  6580     12FA  3000               	movlw	0
  6581     12FB  0559               	andwf	??_floorf+1,w
  6582     12FC  00DD               	movwf	??_floorf+5
  6583     12FD  085C               	movf	??_floorf+4,w
  6584     12FE  3E81               	addlw	129
  6585     12FF  00E2               	movwf	floorf@e
  6586     1300  30FF               	movlw	255
  6587     1301  3D5D               	addwfc	??_floorf+5,w
  6588     1302  00E3               	movwf	floorf@e+1
  6589     1303  0863               	movf	floorf@e+1,w
  6590     1304  3A80               	xorlw	128
  6591     1305  00D8               	movwf	??_floorf
  6592     1306  3080               	movlw	128
  6593     1307  0258               	subwf	??_floorf,w
  6594     1308  1D03               	skipz
  6595     1309  2B0C               	goto	u4945
  6596     130A  3017               	movlw	23
  6597     130B  0262               	subwf	floorf@e,w
  6598     130C                     u4945:
  6599     130C  1803               	btfsc	3,0
  6600     130D  0008               	return
  6601     130E  0020               	movlb	0	; select bank0
  6602     130F  1BE3               	btfsc	floorf@e+1,7
  6603     1310  2B66               	goto	l3683
  6604     1311  30FF               	movlw	255
  6605     1312  00D8               	movwf	??_floorf
  6606     1313  30FF               	movlw	255
  6607     1314  00D9               	movwf	??_floorf+1
  6608     1315  307F               	movlw	127
  6609     1316  00DA               	movwf	??_floorf+2
  6610     1317  3000               	movlw	0
  6611     1318  00DB               	movwf	??_floorf+3
  6612     1319  0A62               	incf	floorf@e,w
  6613     131A  2B1F               	goto	u4960
  6614     131B                     u4965:
  6615     131B  37DB               	asrf	??_floorf+3,f
  6616     131C  0CDA               	rrf	??_floorf+2,f
  6617     131D  0CD9               	rrf	??_floorf+1,f
  6618     131E  0CD8               	rrf	??_floorf,f
  6619     131F                     u4960:
  6620     131F  0B89               	decfsz	9,f
  6621     1320  2B1B               	goto	u4965
  6622     1321  085B               	movf	??_floorf+3,w
  6623     1322  00E1               	movwf	floorf@m+3
  6624     1323  085A               	movf	??_floorf+2,w
  6625     1324  00E0               	movwf	floorf@m+2
  6626     1325  0859               	movf	??_floorf+1,w
  6627     1326  00DF               	movwf	floorf@m+1
  6628     1327  0858               	movf	??_floorf,w
  6629     1328  00DE               	movwf	floorf@m
  6630     1329  0864               	movf	floorf@u,w
  6631     132A  055E               	andwf	floorf@m,w
  6632     132B  00D8               	movwf	??_floorf
  6633     132C  0865               	movf	floorf@u+1,w
  6634     132D  055F               	andwf	floorf@m+1,w
  6635     132E  00D9               	movwf	??_floorf+1
  6636     132F  0866               	movf	floorf@u+2,w
  6637     1330  0560               	andwf	floorf@m+2,w
  6638     1331  00DA               	movwf	??_floorf+2
  6639     1332  0867               	movf	floorf@u+3,w
  6640     1333  0561               	andwf	floorf@m+3,w
  6641     1334  00DB               	movwf	??_floorf+3
  6642     1335  085B               	movf	??_floorf+3,w
  6643     1336  045A               	iorwf	??_floorf+2,w
  6644     1337  0459               	iorwf	??_floorf+1,w
  6645     1338  0458               	iorwf	??_floorf,w
  6646     1339  1903               	btfsc	3,2
  6647     133A  0008               	return
  6648     133B  0864               	movf	floorf@u,w
  6649     133C  00D8               	movwf	??_floorf
  6650     133D  0865               	movf	floorf@u+1,w
  6651     133E  00D9               	movwf	??_floorf+1
  6652     133F  0866               	movf	floorf@u+2,w
  6653     1340  00DA               	movwf	??_floorf+2
  6654     1341  0867               	movf	floorf@u+3,w
  6655     1342  00DB               	movwf	??_floorf+3
  6656     1343  301F               	movlw	31
  6657     1344                     u4985:
  6658     1344  36DB               	lsrf	??_floorf+3,f
  6659     1345  0CDA               	rrf	??_floorf+2,f
  6660     1346  0CD9               	rrf	??_floorf+1,f
  6661     1347  0CD8               	rrf	??_floorf,f
  6662     1348  0B89               	decfsz	9,f
  6663     1349  2B44               	goto	u4985
  6664     134A  0858               	movf	??_floorf,w
  6665     134B  1903               	btfsc	3,2
  6666     134C  2B55               	goto	l3681
  6667     134D  085E               	movf	floorf@m,w
  6668     134E  07E4               	addwf	floorf@u,f
  6669     134F  085F               	movf	floorf@m+1,w
  6670     1350  3DE5               	addwfc	floorf@u+1,f
  6671     1351  0860               	movf	floorf@m+2,w
  6672     1352  3DE6               	addwfc	floorf@u+2,f
  6673     1353  0861               	movf	floorf@m+3,w
  6674     1354  3DE7               	addwfc	floorf@u+3,f
  6675     1355                     l3681:
  6676     1355  095E               	comf	floorf@m,w
  6677     1356  00D8               	movwf	??_floorf
  6678     1357  095F               	comf	floorf@m+1,w
  6679     1358  00D9               	movwf	??_floorf+1
  6680     1359  0960               	comf	floorf@m+2,w
  6681     135A  00DA               	movwf	??_floorf+2
  6682     135B  0961               	comf	floorf@m+3,w
  6683     135C  00DB               	movwf	??_floorf+3
  6684     135D  0858               	movf	??_floorf,w
  6685     135E  05E4               	andwf	floorf@u,f
  6686     135F  0859               	movf	??_floorf+1,w
  6687     1360  05E5               	andwf	floorf@u+1,f
  6688     1361  085A               	movf	??_floorf+2,w
  6689     1362  05E6               	andwf	floorf@u+2,f
  6690     1363  085B               	movf	??_floorf+3,w
  6691     1364  05E7               	andwf	floorf@u+3,f
  6692     1365  2B99               	goto	l1016
  6693     1366                     l3683:
  6694     1366  0864               	movf	floorf@u,w
  6695     1367  00D8               	movwf	??_floorf
  6696     1368  0865               	movf	floorf@u+1,w
  6697     1369  00D9               	movwf	??_floorf+1
  6698     136A  0866               	movf	floorf@u+2,w
  6699     136B  00DA               	movwf	??_floorf+2
  6700     136C  0867               	movf	floorf@u+3,w
  6701     136D  00DB               	movwf	??_floorf+3
  6702     136E  301F               	movlw	31
  6703     136F                     u5005:
  6704     136F  36DB               	lsrf	??_floorf+3,f
  6705     1370  0CDA               	rrf	??_floorf+2,f
  6706     1371  0CD9               	rrf	??_floorf+1,f
  6707     1372  0CD8               	rrf	??_floorf,f
  6708     1373  0B89               	decfsz	9,f
  6709     1374  2B6F               	goto	u5005
  6710     1375  0858               	movf	??_floorf,w
  6711     1376  1D03               	btfss	3,2
  6712     1377  2B7C               	goto	l3687
  6713     1378  3000               	movlw	0
  6714     1379  00E7               	movwf	floorf@u+3
  6715     137A  3000               	movlw	0
  6716     137B  2B94               	goto	L21
  6717     137C                     l3687:
  6718     137C  0864               	movf	floorf@u,w
  6719     137D  00D8               	movwf	??_floorf
  6720     137E  0865               	movf	floorf@u+1,w
  6721     137F  00D9               	movwf	??_floorf+1
  6722     1380  0866               	movf	floorf@u+2,w
  6723     1381  00DA               	movwf	??_floorf+2
  6724     1382  0867               	movf	floorf@u+3,w
  6725     1383  00DB               	movwf	??_floorf+3
  6726     1384  3001               	movlw	1
  6727     1385                     u5025:
  6728     1385  35D8               	lslf	??_floorf,f
  6729     1386  0DD9               	rlf	??_floorf+1,f
  6730     1387  0DDA               	rlf	??_floorf+2,f
  6731     1388  0DDB               	rlf	??_floorf+3,f
  6732     1389  0B89               	decfsz	9,f
  6733     138A  2B85               	goto	u5025
  6734     138B  085B               	movf	??_floorf+3,w
  6735     138C  045A               	iorwf	??_floorf+2,w
  6736     138D  0459               	iorwf	??_floorf+1,w
  6737     138E  0458               	iorwf	??_floorf,w
  6738     138F  1903               	skipnz
  6739     1390  2B99               	goto	l1016
  6740     1391  30BF               	movlw	191
  6741     1392  00E7               	movwf	floorf@u+3
  6742     1393  3080               	movlw	128
  6743     1394                     L21:
  6744     1394  00E6               	movwf	floorf@u+2
  6745     1395  3000               	movlw	0
  6746     1396  00E5               	movwf	floorf@u+1
  6747     1397  3000               	movlw	0
  6748     1398  00E4               	movwf	floorf@u
  6749     1399                     l1016:
  6750     1399  0867               	movf	floorf@u+3,w
  6751     139A  00D7               	movwf	?_floorf+3
  6752     139B  0866               	movf	floorf@u+2,w
  6753     139C  00D6               	movwf	?_floorf+2
  6754     139D  0865               	movf	floorf@u+1,w
  6755     139E  00D5               	movwf	?_floorf+1
  6756     139F  0864               	movf	floorf@u,w
  6757     13A0  00D4               	movwf	?_floorf
  6758     13A1  0008               	return
  6759     13A2                     __end_of_floorf:
  6760                           
  6761                           	psect	text14
  6762     10C3                     __ptext14:	
  6763 ;; *************** function ___fpclassifyf *****************
  6764 ;; Defined at:
  6765 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  x               4    0[COMMON] float 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  u               4    2[BANK0 ] struct .
  6770 ;;  e               2    0[BANK0 ] int 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  2    0[COMMON] int 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0
  6775 ;; Tracked objects:
  6776 ;;		On entry : 1F/1
  6777 ;;		On exit  : 1F/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6780 ;;      Params:         4       0       0       0       0       0       0       0
  6781 ;;      Locals:         0       6       0       0       0       0       0       0
  6782 ;;      Temps:          6       0       0       0       0       0       0       0
  6783 ;;      Totals:        10       6       0       0       0       0       0       0
  6784 ;;Total ram usage:       16 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_efgtoa
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793     10C3                     ___fpclassifyf:	
  6794                           ;psect for function ___fpclassifyf
  6795                           
  6796                           
  6797                           ;incstack = 0
  6798                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6799     10C3  0022               	movlb	2	; select bank2
  6800     10C4  084A               	movf	(___fpclassifyf@F465+3)^(0+256),w
  6801     10C5  0020               	movlb	0	; select bank0
  6802     10C6  00A5               	movwf	___fpclassifyf@u+3
  6803     10C7  0022               	movlb	2	; select bank2
  6804     10C8  0849               	movf	(___fpclassifyf@F465+2)^(0+256),w
  6805     10C9  0020               	movlb	0	; select bank0
  6806     10CA  00A4               	movwf	___fpclassifyf@u+2
  6807     10CB  0022               	movlb	2	; select bank2
  6808     10CC  0848               	movf	(___fpclassifyf@F465+1)^(0+256),w
  6809     10CD  0020               	movlb	0	; select bank0
  6810     10CE  00A3               	movwf	___fpclassifyf@u+1
  6811     10CF  0022               	movlb	2	; select bank2
  6812     10D0  0847               	movf	___fpclassifyf@F465^(0+256),w
  6813     10D1  0020               	movlb	0	; select bank0
  6814     10D2  00A2               	movwf	___fpclassifyf@u
  6815     10D3  0873               	movf	___fpclassifyf@x+3,w
  6816     10D4  00A5               	movwf	___fpclassifyf@u+3
  6817     10D5  0872               	movf	___fpclassifyf@x+2,w
  6818     10D6  00A4               	movwf	___fpclassifyf@u+2
  6819     10D7  0871               	movf	___fpclassifyf@x+1,w
  6820     10D8  00A3               	movwf	___fpclassifyf@u+1
  6821     10D9  0870               	movf	___fpclassifyf@x,w
  6822     10DA  00A2               	movwf	___fpclassifyf@u
  6823     10DB  0822               	movf	___fpclassifyf@u,w
  6824     10DC  00F4               	movwf	??___fpclassifyf
  6825     10DD  0823               	movf	___fpclassifyf@u+1,w
  6826     10DE  00F5               	movwf	??___fpclassifyf+1
  6827     10DF  0824               	movf	___fpclassifyf@u+2,w
  6828     10E0  00F6               	movwf	??___fpclassifyf+2
  6829     10E1  0825               	movf	___fpclassifyf@u+3,w
  6830     10E2  00F7               	movwf	??___fpclassifyf+3
  6831     10E3  3017               	movlw	23
  6832     10E4                     u4835:
  6833     10E4  36F7               	lsrf	??___fpclassifyf+3,f
  6834     10E5  0CF6               	rrf	??___fpclassifyf+2,f
  6835     10E6  0CF5               	rrf	??___fpclassifyf+1,f
  6836     10E7  0CF4               	rrf	??___fpclassifyf,f
  6837     10E8  0B89               	decfsz	9,f
  6838     10E9  28E4               	goto	u4835
  6839     10EA  30FF               	movlw	255
  6840     10EB  0574               	andwf	??___fpclassifyf,w
  6841     10EC  00A0               	movwf	___fpclassifyf@e
  6842     10ED  3000               	movlw	0
  6843     10EE  0575               	andwf	??___fpclassifyf+1,w
  6844     10EF  00A1               	movwf	___fpclassifyf@e+1
  6845     10F0  0820               	movf	___fpclassifyf@e,w
  6846     10F1  0421               	iorwf	___fpclassifyf@e+1,w
  6847     10F2  1D03               	btfss	3,2
  6848     10F3  2913               	goto	l3645
  6849     10F4  0822               	movf	___fpclassifyf@u,w
  6850     10F5  00F4               	movwf	??___fpclassifyf
  6851     10F6  0823               	movf	___fpclassifyf@u+1,w
  6852     10F7  00F5               	movwf	??___fpclassifyf+1
  6853     10F8  0824               	movf	___fpclassifyf@u+2,w
  6854     10F9  00F6               	movwf	??___fpclassifyf+2
  6855     10FA  0825               	movf	___fpclassifyf@u+3,w
  6856     10FB  00F7               	movwf	??___fpclassifyf+3
  6857     10FC  3001               	movlw	1
  6858     10FD                     u4855:
  6859     10FD  35F4               	lslf	??___fpclassifyf,f
  6860     10FE  0DF5               	rlf	??___fpclassifyf+1,f
  6861     10FF  0DF6               	rlf	??___fpclassifyf+2,f
  6862     1100  0DF7               	rlf	??___fpclassifyf+3,f
  6863     1101  0B89               	decfsz	9,f
  6864     1102  28FD               	goto	u4855
  6865     1103  0877               	movf	??___fpclassifyf+3,w
  6866     1104  0476               	iorwf	??___fpclassifyf+2,w
  6867     1105  0475               	iorwf	??___fpclassifyf+1,w
  6868     1106  0474               	iorwf	??___fpclassifyf,w
  6869     1107  1D03               	skipz
  6870     1108  290E               	goto	l3641
  6871     1109  3002               	movlw	2
  6872     110A  00F0               	movwf	?___fpclassifyf
  6873     110B  3000               	movlw	0
  6874     110C  00F1               	movwf	?___fpclassifyf+1
  6875     110D  0008               	return
  6876     110E                     l3641:
  6877     110E  3003               	movlw	3
  6878     110F  00F0               	movwf	?___fpclassifyf
  6879     1110  3000               	movlw	0
  6880     1111  00F1               	movwf	?___fpclassifyf+1
  6881     1112  0008               	return
  6882     1113                     l3645:
  6883     1113  0A20               	incf	___fpclassifyf@e,w
  6884     1114  0421               	iorwf	___fpclassifyf@e+1,w
  6885     1115  1D03               	btfss	3,2
  6886     1116  2936               	goto	l3651
  6887     1117  0822               	movf	___fpclassifyf@u,w
  6888     1118  00F4               	movwf	??___fpclassifyf
  6889     1119  0823               	movf	___fpclassifyf@u+1,w
  6890     111A  00F5               	movwf	??___fpclassifyf+1
  6891     111B  0824               	movf	___fpclassifyf@u+2,w
  6892     111C  00F6               	movwf	??___fpclassifyf+2
  6893     111D  0825               	movf	___fpclassifyf@u+3,w
  6894     111E  00F7               	movwf	??___fpclassifyf+3
  6895     111F  3009               	movlw	9
  6896     1120                     u4885:
  6897     1120  35F4               	lslf	??___fpclassifyf,f
  6898     1121  0DF5               	rlf	??___fpclassifyf+1,f
  6899     1122  0DF6               	rlf	??___fpclassifyf+2,f
  6900     1123  0DF7               	rlf	??___fpclassifyf+3,f
  6901     1124  0B89               	decfsz	9,f
  6902     1125  2920               	goto	u4885
  6903     1126  0877               	movf	??___fpclassifyf+3,w
  6904     1127  0476               	iorwf	??___fpclassifyf+2,w
  6905     1128  0475               	iorwf	??___fpclassifyf+1,w
  6906     1129  0474               	iorwf	??___fpclassifyf,w
  6907     112A  1D03               	btfss	3,2
  6908     112B  292E               	goto	u4890
  6909     112C  3001               	movlw	1
  6910     112D  292F               	goto	u4900
  6911     112E                     u4890:
  6912     112E  3000               	movlw	0
  6913     112F                     u4900:
  6914     112F  00F8               	movwf	??___fpclassifyf+4
  6915     1130  01F9               	clrf	??___fpclassifyf+5
  6916     1131  0878               	movf	??___fpclassifyf+4,w
  6917     1132  00F0               	movwf	?___fpclassifyf
  6918     1133  0879               	movf	??___fpclassifyf+5,w
  6919     1134  00F1               	movwf	?___fpclassifyf+1
  6920     1135  0008               	return
  6921     1136                     l3651:
  6922     1136  3004               	movlw	4
  6923     1137  00F0               	movwf	?___fpclassifyf
  6924     1138  3000               	movlw	0
  6925     1139  00F1               	movwf	?___fpclassifyf+1
  6926     113A  0008               	return
  6927     113B                     __end_of___fpclassifyf:
  6928                           
  6929                           	psect	text15
  6930     1F9F                     __ptext15:	
  6931 ;; *************** function ___fltol *****************
  6932 ;; Defined at:
  6933 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  f1              4    0[COMMON] int 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  exp1            1    9[COMMON] unsigned char 
  6938 ;;  sign1           1    8[COMMON] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  4    0[COMMON] long 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 1F/1
  6945 ;;		On exit  : 1F/1
  6946 ;;		Unchanged: 1F/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6948 ;;      Params:         4       0       0       0       0       0       0       0
  6949 ;;      Locals:         2       0       0       0       0       0       0       0
  6950 ;;      Temps:          4       0       0       0       0       0       0       0
  6951 ;;      Totals:        10       0       0       0       0       0       0       0
  6952 ;;Total ram usage:       10 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_efgtoa
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961     1F9F                     ___fltol:	
  6962                           ;psect for function ___fltol
  6963                           
  6964                           
  6965                           ;incstack = 0
  6966                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6967     1F9F  1003               	clrc
  6968     1FA0  0D72               	rlf	___fltol@f1+2,w
  6969     1FA1  0D73               	rlf	___fltol@f1+3,w
  6970     1FA2  00F9               	movwf	___fltol@exp1
  6971     1FA3  0879               	movf	___fltol@exp1,w
  6972     1FA4  1D03               	btfss	3,2
  6973     1FA5  2FAF               	goto	l3297
  6974     1FA6                     l3293:
  6975     1FA6  3000               	movlw	0
  6976     1FA7  00F3               	movwf	?___fltol+3
  6977     1FA8  3000               	movlw	0
  6978     1FA9  00F2               	movwf	?___fltol+2
  6979     1FAA  3000               	movlw	0
  6980     1FAB  00F1               	movwf	?___fltol+1
  6981     1FAC  3000               	movlw	0
  6982     1FAD  00F0               	movwf	?___fltol
  6983     1FAE  0008               	return
  6984     1FAF                     l3297:
  6985     1FAF  0870               	movf	___fltol@f1,w
  6986     1FB0  00F4               	movwf	??___fltol
  6987     1FB1  0871               	movf	___fltol@f1+1,w
  6988     1FB2  00F5               	movwf	??___fltol+1
  6989     1FB3  0872               	movf	___fltol@f1+2,w
  6990     1FB4  00F6               	movwf	??___fltol+2
  6991     1FB5  0873               	movf	___fltol@f1+3,w
  6992     1FB6  00F7               	movwf	??___fltol+3
  6993     1FB7  301F               	movlw	31
  6994     1FB8                     u4175:
  6995     1FB8  36F7               	lsrf	??___fltol+3,f
  6996     1FB9  0CF6               	rrf	??___fltol+2,f
  6997     1FBA  0CF5               	rrf	??___fltol+1,f
  6998     1FBB  0CF4               	rrf	??___fltol,f
  6999     1FBC  0B89               	decfsz	9,f
  7000     1FBD  2FB8               	goto	u4175
  7001     1FBE  0874               	movf	??___fltol,w
  7002     1FBF  00F8               	movwf	___fltol@sign1
  7003     1FC0  17F2               	bsf	___fltol@f1+2,7
  7004     1FC1  30FF               	movlw	255
  7005     1FC2  05F0               	andwf	___fltol@f1,f
  7006     1FC3  30FF               	movlw	255
  7007     1FC4  05F1               	andwf	___fltol@f1+1,f
  7008     1FC5  30FF               	movlw	255
  7009     1FC6  05F2               	andwf	___fltol@f1+2,f
  7010     1FC7  3000               	movlw	0
  7011     1FC8  05F3               	andwf	___fltol@f1+3,f
  7012     1FC9  3096               	movlw	150
  7013     1FCA  02F9               	subwf	___fltol@exp1,f
  7014     1FCB  1FF9               	btfss	___fltol@exp1,7
  7015     1FCC  2FE0               	goto	l3315
  7016     1FCD  0879               	movf	___fltol@exp1,w
  7017     1FCE  3A80               	xorlw	128
  7018     1FCF  3E97               	addlw	151
  7019     1FD0  1C03               	btfss	3,0
  7020     1FD1  2FA6               	goto	l3293
  7021     1FD2                     l3313:
  7022     1FD2  3001               	movlw	1
  7023     1FD3                     u4205:
  7024     1FD3  36F3               	lsrf	___fltol@f1+3,f
  7025     1FD4  0CF2               	rrf	___fltol@f1+2,f
  7026     1FD5  0CF1               	rrf	___fltol@f1+1,f
  7027     1FD6  0CF0               	rrf	___fltol@f1,f
  7028     1FD7  0B89               	decfsz	9,f
  7029     1FD8  2FD3               	goto	u4205
  7030     1FD9  3001               	movlw	1
  7031     1FDA  00F4               	movwf	??___fltol
  7032     1FDB  0874               	movf	??___fltol,w
  7033     1FDC  07F9               	addwf	___fltol@exp1,f
  7034     1FDD  1903               	btfsc	3,2
  7035     1FDE  2FF1               	goto	l3323
  7036     1FDF  2FD2               	goto	l3313
  7037     1FE0                     l3315:
  7038     1FE0  3020               	movlw	32
  7039     1FE1  0279               	subwf	___fltol@exp1,w
  7040     1FE2  1803               	btfsc	3,0
  7041     1FE3  2FA6               	goto	l3293
  7042     1FE4                     l553:
  7043     1FE4  0879               	movf	___fltol@exp1,w
  7044     1FE5  1903               	btfsc	3,2
  7045     1FE6  2FF1               	goto	l3323
  7046     1FE7  3001               	movlw	1
  7047     1FE8                     u4235:
  7048     1FE8  35F0               	lslf	___fltol@f1,f
  7049     1FE9  0DF1               	rlf	___fltol@f1+1,f
  7050     1FEA  0DF2               	rlf	___fltol@f1+2,f
  7051     1FEB  0DF3               	rlf	___fltol@f1+3,f
  7052     1FEC  0B89               	decfsz	9,f
  7053     1FED  2FE8               	goto	u4235
  7054     1FEE  3001               	movlw	1
  7055     1FEF  02F9               	subwf	___fltol@exp1,f
  7056     1FF0  2FE4               	goto	l553
  7057     1FF1                     l3323:
  7058     1FF1  0878               	movf	___fltol@sign1,w
  7059     1FF2  1903               	btfsc	3,2
  7060     1FF3  0008               	return
  7061     1FF4  09F0               	comf	___fltol@f1,f
  7062     1FF5  09F1               	comf	___fltol@f1+1,f
  7063     1FF6  09F2               	comf	___fltol@f1+2,f
  7064     1FF7  09F3               	comf	___fltol@f1+3,f
  7065     1FF8  0AF0               	incf	___fltol@f1,f
  7066     1FF9  1903               	skipnz
  7067     1FFA  0AF1               	incf	___fltol@f1+1,f
  7068     1FFB  1903               	skipnz
  7069     1FFC  0AF2               	incf	___fltol@f1+2,f
  7070     1FFD  1903               	skipnz
  7071     1FFE  0AF3               	incf	___fltol@f1+3,f
  7072     1FFF  0008               	return
  7073     2000                     __end_of___fltol:
  7074                           
  7075                           	psect	text16
  7076     1D39                     __ptext16:	
  7077 ;; *************** function ___flsub *****************
  7078 ;; Defined at:
  7079 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  a               4   26[BANK0 ] long 
  7082 ;;  b               4   30[BANK0 ] long 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  4   26[BANK0 ] long 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 1F/0
  7091 ;;		On exit  : 1F/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7094 ;;      Params:         0       8       0       0       0       0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0
  7097 ;;      Totals:         0       8       0       0       0       0       0       0
  7098 ;;Total ram usage:        8 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 1
  7101 ;; This function calls:
  7102 ;;		___fladd
  7103 ;; This function is called by:
  7104 ;;		_efgtoa
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108     1D39                     ___flsub:	
  7109                           ;psect for function ___flsub
  7110                           
  7111                           
  7112                           ;incstack = 0
  7113                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7114     1D39  3080               	movlw	128
  7115     1D3A  06BD               	xorwf	___flsub@a+3,f
  7116     1D3B  0841               	movf	___flsub@b+3,w
  7117     1D3C  00F3               	movwf	___fladd@b+3
  7118     1D3D  0840               	movf	___flsub@b+2,w
  7119     1D3E  00F2               	movwf	___fladd@b+2
  7120     1D3F  083F               	movf	___flsub@b+1,w
  7121     1D40  00F1               	movwf	___fladd@b+1
  7122     1D41  083E               	movf	___flsub@b,w
  7123     1D42  00F0               	movwf	___fladd@b
  7124     1D43  083D               	movf	___flsub@a+3,w
  7125     1D44  00F7               	movwf	___fladd@a+3
  7126     1D45  083C               	movf	___flsub@a+2,w
  7127     1D46  00F6               	movwf	___fladd@a+2
  7128     1D47  083B               	movf	___flsub@a+1,w
  7129     1D48  00F5               	movwf	___fladd@a+1
  7130     1D49  083A               	movf	___flsub@a,w
  7131     1D4A  00F4               	movwf	___fladd@a
  7132     1D4B  3188  2076         	fcall	___fladd
  7133     1D4D  0873               	movf	?___fladd+3,w
  7134     1D4E  0020               	movlb	0	; select bank0
  7135     1D4F  00BD               	movwf	?___flsub+3
  7136     1D50  0872               	movf	?___fladd+2,w
  7137     1D51  00BC               	movwf	?___flsub+2
  7138     1D52  0871               	movf	?___fladd+1,w
  7139     1D53  00BB               	movwf	?___flsub+1
  7140     1D54  0870               	movf	?___fladd,w
  7141     1D55  00BA               	movwf	?___flsub
  7142     1D56  0008               	return
  7143     1D57                     __end_of___flsub:
  7144                           
  7145                           	psect	text17
  7146     0876                     __ptext17:	
  7147 ;; *************** function ___fladd *****************
  7148 ;; Defined at:
  7149 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  b               4    0[COMMON] long 
  7152 ;;  a               4    4[COMMON] long 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  grs             1   11[COMMON] unsigned char 
  7155 ;;  bexp            1   10[COMMON] unsigned char 
  7156 ;;  aexp            1    9[COMMON] unsigned char 
  7157 ;;  signs           1    8[COMMON] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  4    0[COMMON] unsigned char 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0
  7162 ;; Tracked objects:
  7163 ;;		On entry : 1E/1
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7167 ;;      Params:         8       0       0       0       0       0       0       0
  7168 ;;      Locals:         4       0       0       0       0       0       0       0
  7169 ;;      Temps:          0       8       0       0       0       0       0       0
  7170 ;;      Totals:        12       8       0       0       0       0       0       0
  7171 ;;Total ram usage:       20 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		___flsub
  7177 ;;		_efgtoa
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181     0876                     ___fladd:	
  7182                           ;psect for function ___fladd
  7183                           
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7187     0876  0873               	movf	___fladd@b+3,w
  7188     0877  3980               	andlw	128
  7189     0878  00F8               	movwf	___fladd@signs
  7190     0879  3573               	lslf	___fladd@b+3,w
  7191     087A  00FA               	movwf	___fladd@bexp
  7192     087B  1BF2               	btfsc	___fladd@b+2,7
  7193     087C  147A               	bsf	___fladd@bexp,0
  7194     087D  087A               	movf	___fladd@bexp,w
  7195     087E  1903               	btfsc	3,2
  7196     087F  288E               	goto	l2971
  7197     0880  0A7A               	incf	___fladd@bexp,w
  7198     0881  1D03               	btfss	3,2
  7199     0882  288B               	goto	l2967
  7200     0883  3000               	movlw	0
  7201     0884  00F3               	movwf	___fladd@b+3
  7202     0885  3000               	movlw	0
  7203     0886  00F2               	movwf	___fladd@b+2
  7204     0887  3000               	movlw	0
  7205     0888  00F1               	movwf	___fladd@b+1
  7206     0889  3000               	movlw	0
  7207     088A  00F0               	movwf	___fladd@b
  7208     088B                     l2967:
  7209     088B  17F2               	bsf	___fladd@b+2,7
  7210     088C  01F3               	clrf	___fladd@b+3
  7211     088D  2896               	goto	l2973
  7212     088E                     l2971:
  7213     088E  3000               	movlw	0
  7214     088F  00F3               	movwf	___fladd@b+3
  7215     0890  3000               	movlw	0
  7216     0891  00F2               	movwf	___fladd@b+2
  7217     0892  3000               	movlw	0
  7218     0893  00F1               	movwf	___fladd@b+1
  7219     0894  3000               	movlw	0
  7220     0895  00F0               	movwf	___fladd@b
  7221     0896                     l2973:
  7222     0896  0877               	movf	___fladd@a+3,w
  7223     0897  3980               	andlw	128
  7224     0898  00F9               	movwf	___fladd@aexp
  7225     0899  0879               	movf	___fladd@aexp,w
  7226     089A  0678               	xorwf	___fladd@signs,w
  7227     089B  1D03               	btfss	3,2
  7228     089C  1778               	bsf	___fladd@signs,6
  7229     089D  3577               	lslf	___fladd@a+3,w
  7230     089E  00F9               	movwf	___fladd@aexp
  7231     089F  1BF6               	btfsc	___fladd@a+2,7
  7232     08A0  1479               	bsf	___fladd@aexp,0
  7233     08A1  0879               	movf	___fladd@aexp,w
  7234     08A2  1903               	btfsc	3,2
  7235     08A3  28B2               	goto	l2995
  7236     08A4  0A79               	incf	___fladd@aexp,w
  7237     08A5  1D03               	btfss	3,2
  7238     08A6  28AF               	goto	l2991
  7239     08A7  3000               	movlw	0
  7240     08A8  00F7               	movwf	___fladd@a+3
  7241     08A9  3000               	movlw	0
  7242     08AA  00F6               	movwf	___fladd@a+2
  7243     08AB  3000               	movlw	0
  7244     08AC  00F5               	movwf	___fladd@a+1
  7245     08AD  3000               	movlw	0
  7246     08AE  00F4               	movwf	___fladd@a
  7247     08AF                     l2991:
  7248     08AF  17F6               	bsf	___fladd@a+2,7
  7249     08B0  01F7               	clrf	___fladd@a+3
  7250     08B1  28BA               	goto	l653
  7251     08B2                     l2995:
  7252     08B2  3000               	movlw	0
  7253     08B3  00F7               	movwf	___fladd@a+3
  7254     08B4  3000               	movlw	0
  7255     08B5  00F6               	movwf	___fladd@a+2
  7256     08B6  3000               	movlw	0
  7257     08B7  00F5               	movwf	___fladd@a+1
  7258     08B8  3000               	movlw	0
  7259     08B9  00F4               	movwf	___fladd@a
  7260     08BA                     l653:
  7261     08BA  087A               	movf	___fladd@bexp,w
  7262     08BB  0279               	subwf	___fladd@aexp,w
  7263     08BC  1803               	skipnc
  7264     08BD  28E3               	goto	l3031
  7265     08BE  1F78               	btfss	___fladd@signs,6
  7266     08BF  28C5               	goto	l3001
  7267     08C0  3080               	movlw	128
  7268     08C1  0020               	movlb	0	; select bank0
  7269     08C2  00A0               	movwf	??___fladd
  7270     08C3  0820               	movf	??___fladd,w
  7271     08C4  06F8               	xorwf	___fladd@signs,f
  7272     08C5                     l3001:
  7273     08C5  087A               	movf	___fladd@bexp,w
  7274     08C6  00FB               	movwf	___fladd@grs
  7275     08C7  0879               	movf	___fladd@aexp,w
  7276     08C8  00FA               	movwf	___fladd@bexp
  7277     08C9  087B               	movf	___fladd@grs,w
  7278     08CA  00F9               	movwf	___fladd@aexp
  7279     08CB  0870               	movf	___fladd@b,w
  7280     08CC  00FB               	movwf	___fladd@grs
  7281     08CD  0874               	movf	___fladd@a,w
  7282     08CE  00F0               	movwf	___fladd@b
  7283     08CF  087B               	movf	___fladd@grs,w
  7284     08D0  00F4               	movwf	___fladd@a
  7285     08D1  0871               	movf	___fladd@b+1,w
  7286     08D2  00FB               	movwf	___fladd@grs
  7287     08D3  0875               	movf	___fladd@a+1,w
  7288     08D4  00F1               	movwf	___fladd@b+1
  7289     08D5  087B               	movf	___fladd@grs,w
  7290     08D6  00F5               	movwf	___fladd@a+1
  7291     08D7  0872               	movf	___fladd@b+2,w
  7292     08D8  00FB               	movwf	___fladd@grs
  7293     08D9  0876               	movf	___fladd@a+2,w
  7294     08DA  00F2               	movwf	___fladd@b+2
  7295     08DB  087B               	movf	___fladd@grs,w
  7296     08DC  00F6               	movwf	___fladd@a+2
  7297     08DD  0873               	movf	___fladd@b+3,w
  7298     08DE  00FB               	movwf	___fladd@grs
  7299     08DF  0877               	movf	___fladd@a+3,w
  7300     08E0  00F3               	movwf	___fladd@b+3
  7301     08E1  087B               	movf	___fladd@grs,w
  7302     08E2  00F7               	movwf	___fladd@a+3
  7303     08E3                     l3031:
  7304     08E3  01FB               	clrf	___fladd@grs
  7305     08E4  0879               	movf	___fladd@aexp,w
  7306     08E5  0020               	movlb	0	; select bank0
  7307     08E6  00A0               	movwf	??___fladd
  7308     08E7  01A1               	clrf	??___fladd+1
  7309     08E8  0821               	movf	??___fladd+1,w
  7310     08E9  00A3               	movwf	??___fladd+3
  7311     08EA  087A               	movf	___fladd@bexp,w
  7312     08EB  0220               	subwf	??___fladd,w
  7313     08EC  00A2               	movwf	??___fladd+2
  7314     08ED  1C03               	skipc
  7315     08EE  03A3               	decf	??___fladd+3,f
  7316     08EF  0823               	movf	??___fladd+3,w
  7317     08F0  3A80               	xorlw	128
  7318     08F1  00A4               	movwf	??___fladd+4
  7319     08F2  3080               	movlw	128
  7320     08F3  0224               	subwf	??___fladd+4,w
  7321     08F4  1D03               	skipz
  7322     08F5  28F8               	goto	u3445
  7323     08F6  301A               	movlw	26
  7324     08F7  0222               	subwf	??___fladd+2,w
  7325     08F8                     u3445:
  7326     08F8  1C03               	skipc
  7327     08F9  2926               	goto	l3049
  7328     08FA  0873               	movf	___fladd@b+3,w
  7329     08FB  0472               	iorwf	___fladd@b+2,w
  7330     08FC  0471               	iorwf	___fladd@b+1,w
  7331     08FD  0470               	iorwf	___fladd@b,w
  7332     08FE  1903               	btfsc	3,2
  7333     08FF  2902               	goto	u3450
  7334     0900  3001               	movlw	1
  7335     0901  2903               	goto	u3460
  7336     0902                     u3450:
  7337     0902  3000               	movlw	0
  7338     0903                     u3460:
  7339     0903  00FB               	movwf	___fladd@grs
  7340     0904  3000               	movlw	0
  7341     0905  00F3               	movwf	___fladd@b+3
  7342     0906  3000               	movlw	0
  7343     0907  00F2               	movwf	___fladd@b+2
  7344     0908  3000               	movlw	0
  7345     0909  00F1               	movwf	___fladd@b+1
  7346     090A  3000               	movlw	0
  7347     090B  00F0               	movwf	___fladd@b
  7348     090C  0879               	movf	___fladd@aexp,w
  7349     090D  00FA               	movwf	___fladd@bexp
  7350     090E  292A               	goto	l657
  7351     090F                     l659:
  7352     090F  1C7B               	btfss	___fladd@grs,0
  7353     0910  2915               	goto	l3039
  7354     0911  367B               	lsrf	___fladd@grs,w
  7355     0912  3801               	iorlw	1
  7356     0913  00FB               	movwf	___fladd@grs
  7357     0914  2917               	goto	l3041
  7358     0915                     l3039:
  7359     0915  1003               	clrc
  7360     0916  0CFB               	rrf	___fladd@grs,f
  7361     0917                     l3041:
  7362     0917  1870               	btfsc	___fladd@b,0
  7363     0918  17FB               	bsf	___fladd@grs,7
  7364     0919  3001               	movlw	1
  7365     091A  0020               	movlb	0	; select bank0
  7366     091B  00A0               	movwf	??___fladd
  7367     091C                     u3495:
  7368     091C  37F3               	asrf	___fladd@b+3,f
  7369     091D  0CF2               	rrf	___fladd@b+2,f
  7370     091E  0CF1               	rrf	___fladd@b+1,f
  7371     091F  0CF0               	rrf	___fladd@b,f
  7372     0920  0BA0               	decfsz	??___fladd& (0+127),f
  7373     0921  291C               	goto	u3495
  7374     0922  3001               	movlw	1
  7375     0923  00A0               	movwf	??___fladd
  7376     0924  0820               	movf	??___fladd,w
  7377     0925  07FA               	addwf	___fladd@bexp,f
  7378     0926                     l3049:
  7379     0926  0879               	movf	___fladd@aexp,w
  7380     0927  027A               	subwf	___fladd@bexp,w
  7381     0928  1C03               	skipc
  7382     0929  290F               	goto	l659
  7383     092A                     l657:
  7384     092A  1B78               	btfsc	___fladd@signs,6
  7385     092B  295A               	goto	l3075
  7386     092C  087A               	movf	___fladd@bexp,w
  7387     092D  1D03               	btfss	3,2
  7388     092E  2938               	goto	l3057
  7389     092F  3000               	movlw	0
  7390     0930  00F3               	movwf	?___fladd+3
  7391     0931  3000               	movlw	0
  7392     0932  00F2               	movwf	?___fladd+2
  7393     0933  3000               	movlw	0
  7394     0934  00F1               	movwf	?___fladd+1
  7395     0935  3000               	movlw	0
  7396     0936  00F0               	movwf	?___fladd
  7397     0937  0008               	return
  7398     0938                     l3057:
  7399     0938  0874               	movf	___fladd@a,w
  7400     0939  07F0               	addwf	___fladd@b,f
  7401     093A  0875               	movf	___fladd@a+1,w
  7402     093B  3DF1               	addwfc	___fladd@b+1,f
  7403     093C  0876               	movf	___fladd@a+2,w
  7404     093D  3DF2               	addwfc	___fladd@b+2,f
  7405     093E  0877               	movf	___fladd@a+3,w
  7406     093F  3DF3               	addwfc	___fladd@b+3,f
  7407     0940  1C73               	btfss	___fladd@b+3,0
  7408     0941  29D5               	goto	l3109
  7409     0942  1C7B               	btfss	___fladd@grs,0
  7410     0943  2948               	goto	l3065
  7411     0944  367B               	lsrf	___fladd@grs,w
  7412     0945  3801               	iorlw	1
  7413     0946  00FB               	movwf	___fladd@grs
  7414     0947  294A               	goto	l3067
  7415     0948                     l3065:
  7416     0948  1003               	clrc
  7417     0949  0CFB               	rrf	___fladd@grs,f
  7418     094A                     l3067:
  7419     094A  1870               	btfsc	___fladd@b,0
  7420     094B  17FB               	bsf	___fladd@grs,7
  7421     094C  3001               	movlw	1
  7422     094D  0020               	movlb	0	; select bank0
  7423     094E  00A0               	movwf	??___fladd
  7424     094F                     u3565:
  7425     094F  37F3               	asrf	___fladd@b+3,f
  7426     0950  0CF2               	rrf	___fladd@b+2,f
  7427     0951  0CF1               	rrf	___fladd@b+1,f
  7428     0952  0CF0               	rrf	___fladd@b,f
  7429     0953  0BA0               	decfsz	??___fladd& (0+127),f
  7430     0954  294F               	goto	u3565
  7431     0955  3001               	movlw	1
  7432     0956  00A0               	movwf	??___fladd
  7433     0957  0820               	movf	??___fladd,w
  7434     0958  07FA               	addwf	___fladd@bexp,f
  7435     0959  29D5               	goto	l3109
  7436     095A                     l3075:
  7437     095A  0873               	movf	___fladd@b+3,w
  7438     095B  3A80               	xorlw	128
  7439     095C  0020               	movlb	0	; select bank0
  7440     095D  00A0               	movwf	??___fladd
  7441     095E  0877               	movf	___fladd@a+3,w
  7442     095F  3A80               	xorlw	128
  7443     0960  0220               	subwf	??___fladd,w
  7444     0961  1D03               	skipz
  7445     0962  296D               	goto	u3573
  7446     0963  0876               	movf	___fladd@a+2,w
  7447     0964  0272               	subwf	___fladd@b+2,w
  7448     0965  1D03               	skipz
  7449     0966  296D               	goto	u3573
  7450     0967  0875               	movf	___fladd@a+1,w
  7451     0968  0271               	subwf	___fladd@b+1,w
  7452     0969  1D03               	skipz
  7453     096A  296D               	goto	u3573
  7454     096B  0874               	movf	___fladd@a,w
  7455     096C  0270               	subwf	___fladd@b,w
  7456     096D                     u3573:
  7457     096D  1803               	skipnc
  7458     096E  29A5               	goto	l3085
  7459     096F  30FF               	movlw	255
  7460     0970  00A0               	movwf	??___fladd
  7461     0971  30FF               	movlw	255
  7462     0972  00A1               	movwf	??___fladd+1
  7463     0973  30FF               	movlw	255
  7464     0974  00A2               	movwf	??___fladd+2
  7465     0975  30FF               	movlw	255
  7466     0976  00A3               	movwf	??___fladd+3
  7467     0977  0870               	movf	___fladd@b,w
  7468     0978  0274               	subwf	___fladd@a,w
  7469     0979  00A4               	movwf	??___fladd+4
  7470     097A  0871               	movf	___fladd@b+1,w
  7471     097B  3B75               	subwfb	___fladd@a+1,w
  7472     097C  00A5               	movwf	??___fladd+5
  7473     097D  0872               	movf	___fladd@b+2,w
  7474     097E  3B76               	subwfb	___fladd@a+2,w
  7475     097F  00A6               	movwf	??___fladd+6
  7476     0980  0873               	movf	___fladd@b+3,w
  7477     0981  3B77               	subwfb	___fladd@a+3,w
  7478     0982  00A7               	movwf	??___fladd+7
  7479     0983  0824               	movf	??___fladd+4,w
  7480     0984  07A0               	addwf	??___fladd,f
  7481     0985  0825               	movf	??___fladd+5,w
  7482     0986  3DA1               	addwfc	??___fladd+1,f
  7483     0987  0826               	movf	??___fladd+6,w
  7484     0988  3DA2               	addwfc	??___fladd+2,f
  7485     0989  0827               	movf	??___fladd+7,w
  7486     098A  3DA3               	addwfc	??___fladd+3,f
  7487     098B  0823               	movf	??___fladd+3,w
  7488     098C  00F3               	movwf	___fladd@b+3
  7489     098D  0822               	movf	??___fladd+2,w
  7490     098E  00F2               	movwf	___fladd@b+2
  7491     098F  0821               	movf	??___fladd+1,w
  7492     0990  00F1               	movwf	___fladd@b+1
  7493     0991  0820               	movf	??___fladd,w
  7494     0992  00F0               	movwf	___fladd@b
  7495     0993  3080               	movlw	128
  7496     0994  00A0               	movwf	??___fladd
  7497     0995  0820               	movf	??___fladd,w
  7498     0996  06F8               	xorwf	___fladd@signs,f
  7499     0997  09FB               	comf	___fladd@grs,f
  7500     0998  0AFB               	incf	___fladd@grs,f
  7501     0999  087B               	movf	___fladd@grs,w
  7502     099A  1D03               	btfss	3,2
  7503     099B  29AD               	goto	l674
  7504     099C  3001               	movlw	1
  7505     099D  07F0               	addwf	___fladd@b,f
  7506     099E  3000               	movlw	0
  7507     099F  3DF1               	addwfc	___fladd@b+1,f
  7508     09A0  3000               	movlw	0
  7509     09A1  3DF2               	addwfc	___fladd@b+2,f
  7510     09A2  3000               	movlw	0
  7511     09A3  3DF3               	addwfc	___fladd@b+3,f
  7512     09A4  29AD               	goto	l674
  7513     09A5                     l3085:
  7514     09A5  0874               	movf	___fladd@a,w
  7515     09A6  02F0               	subwf	___fladd@b,f
  7516     09A7  0875               	movf	___fladd@a+1,w
  7517     09A8  3BF1               	subwfb	___fladd@b+1,f
  7518     09A9  0876               	movf	___fladd@a+2,w
  7519     09AA  3BF2               	subwfb	___fladd@b+2,f
  7520     09AB  0877               	movf	___fladd@a+3,w
  7521     09AC  3BF3               	subwfb	___fladd@b+3,f
  7522     09AD                     l674:
  7523     09AD  0873               	movf	___fladd@b+3,w
  7524     09AE  0472               	iorwf	___fladd@b+2,w
  7525     09AF  0471               	iorwf	___fladd@b+1,w
  7526     09B0  0470               	iorwf	___fladd@b,w
  7527     09B1  1D03               	skipz
  7528     09B2  29D3               	goto	l3107
  7529     09B3  087B               	movf	___fladd@grs,w
  7530     09B4  1D03               	btfss	3,2
  7531     09B5  29D3               	goto	l3107
  7532     09B6  3000               	movlw	0
  7533     09B7  00F3               	movwf	?___fladd+3
  7534     09B8  3000               	movlw	0
  7535     09B9  00F2               	movwf	?___fladd+2
  7536     09BA  3000               	movlw	0
  7537     09BB  00F1               	movwf	?___fladd+1
  7538     09BC  3000               	movlw	0
  7539     09BD  00F0               	movwf	?___fladd
  7540     09BE  0008               	return
  7541     09BF                     l3093:
  7542     09BF  3001               	movlw	1
  7543     09C0                     u3615:
  7544     09C0  35F0               	lslf	___fladd@b,f
  7545     09C1  0DF1               	rlf	___fladd@b+1,f
  7546     09C2  0DF2               	rlf	___fladd@b+2,f
  7547     09C3  0DF3               	rlf	___fladd@b+3,f
  7548     09C4  0B89               	decfsz	9,f
  7549     09C5  29C0               	goto	u3615
  7550     09C6  1BFB               	btfsc	___fladd@grs,7
  7551     09C7  1470               	bsf	___fladd@b,0
  7552     09C8  1C7B               	btfss	___fladd@grs,0
  7553     09C9  29CC               	goto	l3101
  7554     09CA  1403               	setc
  7555     09CB  29CD               	goto	L22
  7556     09CC                     l3101:
  7557     09CC  1003               	clrc
  7558     09CD                     L22:
  7559     09CD  0DFB               	rlf	___fladd@grs,f
  7560     09CE  087A               	movf	___fladd@bexp,w
  7561     09CF  1903               	btfsc	3,2
  7562     09D0  29D3               	goto	l3107
  7563     09D1  3001               	movlw	1
  7564     09D2  02FA               	subwf	___fladd@bexp,f
  7565     09D3                     l3107:
  7566     09D3  1FF2               	btfss	___fladd@b+2,7
  7567     09D4  29BF               	goto	l3093
  7568     09D5                     l3109:
  7569     09D5  01F9               	clrf	___fladd@aexp
  7570     09D6  1FFB               	btfss	___fladd@grs,7
  7571     09D7  29E0               	goto	l3119
  7572     09D8  087B               	movf	___fladd@grs,w
  7573     09D9  397F               	andlw	127
  7574     09DA  1903               	btfsc	3,2
  7575     09DB  1870               	btfsc	___fladd@b,0
  7576     09DC  29DE               	goto	l3115
  7577     09DD  29E0               	goto	l3119
  7578     09DE                     l3115:
  7579     09DE  01F9               	clrf	___fladd@aexp
  7580     09DF  0AF9               	incf	___fladd@aexp,f
  7581     09E0                     l3119:
  7582     09E0  0879               	movf	___fladd@aexp,w
  7583     09E1  1903               	btfsc	3,2
  7584     09E2  2A0D               	goto	l687
  7585     09E3  3001               	movlw	1
  7586     09E4  07F0               	addwf	___fladd@b,f
  7587     09E5  3000               	movlw	0
  7588     09E6  3DF1               	addwfc	___fladd@b+1,f
  7589     09E7  3000               	movlw	0
  7590     09E8  3DF2               	addwfc	___fladd@b+2,f
  7591     09E9  3000               	movlw	0
  7592     09EA  3DF3               	addwfc	___fladd@b+3,f
  7593     09EB  1C73               	btfss	___fladd@b+3,0
  7594     09EC  2A0D               	goto	l687
  7595     09ED  0870               	movf	___fladd@b,w
  7596     09EE  0020               	movlb	0	; select bank0
  7597     09EF  00A0               	movwf	??___fladd
  7598     09F0  0871               	movf	___fladd@b+1,w
  7599     09F1  00A1               	movwf	??___fladd+1
  7600     09F2  0872               	movf	___fladd@b+2,w
  7601     09F3  00A2               	movwf	??___fladd+2
  7602     09F4  0873               	movf	___fladd@b+3,w
  7603     09F5  00A3               	movwf	??___fladd+3
  7604     09F6  3001               	movlw	1
  7605     09F7  00A4               	movwf	??___fladd+4
  7606     09F8                     u3715:
  7607     09F8  37A3               	asrf	??___fladd+3,f
  7608     09F9  0CA2               	rrf	??___fladd+2,f
  7609     09FA  0CA1               	rrf	??___fladd+1,f
  7610     09FB  0CA0               	rrf	??___fladd,f
  7611     09FC  0BA4               	decfsz	??___fladd+4,f
  7612     09FD  29F8               	goto	u3715
  7613     09FE  0823               	movf	??___fladd+3,w
  7614     09FF  00F3               	movwf	___fladd@b+3
  7615     0A00  0822               	movf	??___fladd+2,w
  7616     0A01  00F2               	movwf	___fladd@b+2
  7617     0A02  0821               	movf	??___fladd+1,w
  7618     0A03  00F1               	movwf	___fladd@b+1
  7619     0A04  0820               	movf	??___fladd,w
  7620     0A05  00F0               	movwf	___fladd@b
  7621     0A06  0A7A               	incf	___fladd@bexp,w
  7622     0A07  1903               	btfsc	3,2
  7623     0A08  2A0D               	goto	l687
  7624     0A09  3001               	movlw	1
  7625     0A0A  00A0               	movwf	??___fladd
  7626     0A0B  0820               	movf	??___fladd,w
  7627     0A0C  07FA               	addwf	___fladd@bexp,f
  7628     0A0D                     l687:
  7629     0A0D  0A7A               	incf	___fladd@bexp,w
  7630     0A0E  1D03               	btfss	3,2
  7631     0A0F  087A               	movf	___fladd@bexp,w
  7632     0A10  1D03               	btfss	3,2
  7633     0A11  2A1D               	goto	l3137
  7634     0A12  3000               	movlw	0
  7635     0A13  00F3               	movwf	___fladd@b+3
  7636     0A14  3000               	movlw	0
  7637     0A15  00F2               	movwf	___fladd@b+2
  7638     0A16  3000               	movlw	0
  7639     0A17  00F1               	movwf	___fladd@b+1
  7640     0A18  3000               	movlw	0
  7641     0A19  00F0               	movwf	___fladd@b
  7642     0A1A  087A               	movf	___fladd@bexp,w
  7643     0A1B  1903               	btfsc	3,2
  7644     0A1C  01F8               	clrf	___fladd@signs
  7645     0A1D                     l3137:
  7646     0A1D  1C7A               	btfss	___fladd@bexp,0
  7647     0A1E  2A21               	goto	l3141
  7648     0A1F  17F2               	bsf	___fladd@b+2,7
  7649     0A20  2A26               	goto	l695
  7650     0A21                     l3141:
  7651     0A21  307F               	movlw	127
  7652     0A22  0020               	movlb	0	; select bank0
  7653     0A23  00A0               	movwf	??___fladd
  7654     0A24  0820               	movf	??___fladd,w
  7655     0A25  05F2               	andwf	___fladd@b+2,f
  7656     0A26                     l695:
  7657     0A26  367A               	lsrf	___fladd@bexp,w
  7658     0A27  00F3               	movwf	___fladd@b+3
  7659     0A28  1FF8               	btfss	___fladd@signs,7
  7660     0A29  0008               	return
  7661     0A2A  17F3               	bsf	___fladd@b+3,7
  7662     0A2B  0008               	return
  7663     0A2C                     __end_of___fladd:
  7664                           
  7665                           	psect	text18
  7666     1C59                     __ptext18:	
  7667 ;; *************** function ___flneg *****************
  7668 ;; Defined at:
  7669 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  f1              4    0[COMMON] unsigned char 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  4    0[COMMON] unsigned char 
  7676 ;; Registers used:
  7677 ;;		wreg
  7678 ;; Tracked objects:
  7679 ;;		On entry : 1F/1
  7680 ;;		On exit  : 1F/1
  7681 ;;		Unchanged: 1F/0
  7682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7683 ;;      Params:         4       0       0       0       0       0       0       0
  7684 ;;      Locals:         0       0       0       0       0       0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0
  7686 ;;      Totals:         4       0       0       0       0       0       0       0
  7687 ;;Total ram usage:        4 bytes
  7688 ;; Hardware stack levels used: 1
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_efgtoa
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696     1C59                     ___flneg:	
  7697                           ;psect for function ___flneg
  7698                           
  7699                           
  7700                           ;incstack = 0
  7701                           ; Regs used in ___flneg: [wreg]
  7702     1C59  0873               	movf	___flneg@f1+3,w
  7703     1C5A  0472               	iorwf	___flneg@f1+2,w
  7704     1C5B  0471               	iorwf	___flneg@f1+1,w
  7705     1C5C  0470               	iorwf	___flneg@f1,w
  7706     1C5D  1903               	skipnz
  7707     1C5E  0008               	return
  7708     1C5F  3080               	movlw	128
  7709     1C60  06F3               	xorwf	___flneg@f1+3,f
  7710     1C61  0008               	return
  7711     1C62                     __end_of___flneg:
  7712                           
  7713                           	psect	text19
  7714     113B                     __ptext19:	
  7715 ;; *************** function ___flge *****************
  7716 ;; Defined at:
  7717 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  ff1             4   26[BANK0 ] unsigned char 
  7720 ;;  ff2             4   30[BANK0 ] unsigned char 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;		None               void
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 1F/0
  7729 ;;		On exit  : 1F/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7732 ;;      Params:         0       8       0       0       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0       0       0       0
  7734 ;;      Temps:          0       4       0       0       0       0       0       0
  7735 ;;      Totals:         0      12       0       0       0       0       0       0
  7736 ;;Total ram usage:       12 bytes
  7737 ;; Hardware stack levels used: 1
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_main
  7742 ;;		_efgtoa
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746     113B                     ___flge:	
  7747                           ;psect for function ___flge
  7748                           
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7752     113B  3000               	movlw	0
  7753     113C  053A               	andwf	___flge@ff1,w
  7754     113D  00C2               	movwf	??___flge
  7755     113E  3000               	movlw	0
  7756     113F  053B               	andwf	___flge@ff1+1,w
  7757     1140  00C3               	movwf	??___flge+1
  7758     1141  3080               	movlw	128
  7759     1142  053C               	andwf	___flge@ff1+2,w
  7760     1143  00C4               	movwf	??___flge+2
  7761     1144  307F               	movlw	127
  7762     1145  053D               	andwf	___flge@ff1+3,w
  7763     1146  00C5               	movwf	??___flge+3
  7764     1147  0845               	movf	??___flge+3,w
  7765     1148  0444               	iorwf	??___flge+2,w
  7766     1149  0443               	iorwf	??___flge+1,w
  7767     114A  0442               	iorwf	??___flge,w
  7768     114B  1D03               	skipz
  7769     114C  2955               	goto	l530
  7770     114D  3000               	movlw	0
  7771     114E  00BD               	movwf	___flge@ff1+3
  7772     114F  3000               	movlw	0
  7773     1150  00BC               	movwf	___flge@ff1+2
  7774     1151  3000               	movlw	0
  7775     1152  00BB               	movwf	___flge@ff1+1
  7776     1153  3000               	movlw	0
  7777     1154  00BA               	movwf	___flge@ff1
  7778     1155                     l530:
  7779     1155  3000               	movlw	0
  7780     1156  053E               	andwf	___flge@ff2,w
  7781     1157  00C2               	movwf	??___flge
  7782     1158  3000               	movlw	0
  7783     1159  053F               	andwf	___flge@ff2+1,w
  7784     115A  00C3               	movwf	??___flge+1
  7785     115B  3080               	movlw	128
  7786     115C  0540               	andwf	___flge@ff2+2,w
  7787     115D  00C4               	movwf	??___flge+2
  7788     115E  307F               	movlw	127
  7789     115F  0541               	andwf	___flge@ff2+3,w
  7790     1160  00C5               	movwf	??___flge+3
  7791     1161  0845               	movf	??___flge+3,w
  7792     1162  0444               	iorwf	??___flge+2,w
  7793     1163  0443               	iorwf	??___flge+1,w
  7794     1164  0442               	iorwf	??___flge,w
  7795     1165  1D03               	skipz
  7796     1166  296F               	goto	l3269
  7797     1167  3000               	movlw	0
  7798     1168  00C1               	movwf	___flge@ff2+3
  7799     1169  3000               	movlw	0
  7800     116A  00C0               	movwf	___flge@ff2+2
  7801     116B  3000               	movlw	0
  7802     116C  00BF               	movwf	___flge@ff2+1
  7803     116D  3000               	movlw	0
  7804     116E  00BE               	movwf	___flge@ff2
  7805     116F                     l3269:
  7806     116F  1FBD               	btfss	___flge@ff1+3,7
  7807     1170  2989               	goto	l3273
  7808     1171  3000               	movlw	0
  7809     1172  00C2               	movwf	??___flge
  7810     1173  3000               	movlw	0
  7811     1174  00C3               	movwf	??___flge+1
  7812     1175  3000               	movlw	0
  7813     1176  00C4               	movwf	??___flge+2
  7814     1177  3080               	movlw	128
  7815     1178  00C5               	movwf	??___flge+3
  7816     1179  083A               	movf	___flge@ff1,w
  7817     117A  02C2               	subwf	??___flge,f
  7818     117B  083B               	movf	___flge@ff1+1,w
  7819     117C  3BC3               	subwfb	??___flge+1,f
  7820     117D  083C               	movf	___flge@ff1+2,w
  7821     117E  3BC4               	subwfb	??___flge+2,f
  7822     117F  083D               	movf	___flge@ff1+3,w
  7823     1180  3BC5               	subwfb	??___flge+3,f
  7824     1181  0845               	movf	??___flge+3,w
  7825     1182  00BD               	movwf	___flge@ff1+3
  7826     1183  0844               	movf	??___flge+2,w
  7827     1184  00BC               	movwf	___flge@ff1+2
  7828     1185  0843               	movf	??___flge+1,w
  7829     1186  00BB               	movwf	___flge@ff1+1
  7830     1187  0842               	movf	??___flge,w
  7831     1188  00BA               	movwf	___flge@ff1
  7832     1189                     l3273:
  7833     1189  1FC1               	btfss	___flge@ff2+3,7
  7834     118A  29A3               	goto	l533
  7835     118B  3000               	movlw	0
  7836     118C  00C2               	movwf	??___flge
  7837     118D  3000               	movlw	0
  7838     118E  00C3               	movwf	??___flge+1
  7839     118F  3000               	movlw	0
  7840     1190  00C4               	movwf	??___flge+2
  7841     1191  3080               	movlw	128
  7842     1192  00C5               	movwf	??___flge+3
  7843     1193  083E               	movf	___flge@ff2,w
  7844     1194  02C2               	subwf	??___flge,f
  7845     1195  083F               	movf	___flge@ff2+1,w
  7846     1196  3BC3               	subwfb	??___flge+1,f
  7847     1197  0840               	movf	___flge@ff2+2,w
  7848     1198  3BC4               	subwfb	??___flge+2,f
  7849     1199  0841               	movf	___flge@ff2+3,w
  7850     119A  3BC5               	subwfb	??___flge+3,f
  7851     119B  0845               	movf	??___flge+3,w
  7852     119C  00C1               	movwf	___flge@ff2+3
  7853     119D  0844               	movf	??___flge+2,w
  7854     119E  00C0               	movwf	___flge@ff2+2
  7855     119F  0843               	movf	??___flge+1,w
  7856     11A0  00BF               	movwf	___flge@ff2+1
  7857     11A1  0842               	movf	??___flge,w
  7858     11A2  00BE               	movwf	___flge@ff2
  7859     11A3                     l533:
  7860     11A3  3080               	movlw	128
  7861     11A4  06BD               	xorwf	___flge@ff1+3,f
  7862     11A5  3080               	movlw	128
  7863     11A6  06C1               	xorwf	___flge@ff2+3,f
  7864     11A7  0841               	movf	___flge@ff2+3,w
  7865     11A8  023D               	subwf	___flge@ff1+3,w
  7866     11A9  1D03               	skipz
  7867     11AA  0008               	return
  7868     11AB  0840               	movf	___flge@ff2+2,w
  7869     11AC  023C               	subwf	___flge@ff1+2,w
  7870     11AD  1D03               	skipz
  7871     11AE  0008               	return
  7872     11AF  083F               	movf	___flge@ff2+1,w
  7873     11B0  023B               	subwf	___flge@ff1+1,w
  7874     11B1  1D03               	skipz
  7875     11B2  0008               	return
  7876     11B3  083E               	movf	___flge@ff2,w
  7877     11B4  023A               	subwf	___flge@ff1,w
  7878     11B5  0008               	return
  7879     11B6                     __end_of___flge:
  7880                           
  7881                           	psect	text20
  7882     1F06                     __ptext20:	
  7883 ;; *************** function ___fleq *****************
  7884 ;; Defined at:
  7885 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  ff1             4    0[COMMON] unsigned char 
  7888 ;;  ff2             4    4[COMMON] unsigned char 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;		None               void
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0
  7895 ;; Tracked objects:
  7896 ;;		On entry : 1F/1
  7897 ;;		On exit  : 1F/1
  7898 ;;		Unchanged: 1F/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7900 ;;      Params:         8       0       0       0       0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0
  7902 ;;      Temps:          4       0       0       0       0       0       0       0
  7903 ;;      Totals:        12       0       0       0       0       0       0       0
  7904 ;;Total ram usage:       12 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_efgtoa
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913     1F06                     ___fleq:	
  7914                           ;psect for function ___fleq
  7915                           
  7916                           
  7917                           ;incstack = 0
  7918                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7919     1F06  3000               	movlw	0
  7920     1F07  0570               	andwf	___fleq@ff1,w
  7921     1F08  00F8               	movwf	??___fleq
  7922     1F09  3000               	movlw	0
  7923     1F0A  0571               	andwf	___fleq@ff1+1,w
  7924     1F0B  00F9               	movwf	??___fleq+1
  7925     1F0C  3080               	movlw	128
  7926     1F0D  0572               	andwf	___fleq@ff1+2,w
  7927     1F0E  00FA               	movwf	??___fleq+2
  7928     1F0F  307F               	movlw	127
  7929     1F10  0573               	andwf	___fleq@ff1+3,w
  7930     1F11  00FB               	movwf	??___fleq+3
  7931     1F12  087B               	movf	??___fleq+3,w
  7932     1F13  047A               	iorwf	??___fleq+2,w
  7933     1F14  0479               	iorwf	??___fleq+1,w
  7934     1F15  0478               	iorwf	??___fleq,w
  7935     1F16  1D03               	skipz
  7936     1F17  2F20               	goto	l521
  7937     1F18  3000               	movlw	0
  7938     1F19  00F3               	movwf	___fleq@ff1+3
  7939     1F1A  3000               	movlw	0
  7940     1F1B  00F2               	movwf	___fleq@ff1+2
  7941     1F1C  3000               	movlw	0
  7942     1F1D  00F1               	movwf	___fleq@ff1+1
  7943     1F1E  3000               	movlw	0
  7944     1F1F  00F0               	movwf	___fleq@ff1
  7945     1F20                     l521:
  7946     1F20  3000               	movlw	0
  7947     1F21  0574               	andwf	___fleq@ff2,w
  7948     1F22  00F8               	movwf	??___fleq
  7949     1F23  3000               	movlw	0
  7950     1F24  0575               	andwf	___fleq@ff2+1,w
  7951     1F25  00F9               	movwf	??___fleq+1
  7952     1F26  3080               	movlw	128
  7953     1F27  0576               	andwf	___fleq@ff2+2,w
  7954     1F28  00FA               	movwf	??___fleq+2
  7955     1F29  307F               	movlw	127
  7956     1F2A  0577               	andwf	___fleq@ff2+3,w
  7957     1F2B  00FB               	movwf	??___fleq+3
  7958     1F2C  087B               	movf	??___fleq+3,w
  7959     1F2D  047A               	iorwf	??___fleq+2,w
  7960     1F2E  0479               	iorwf	??___fleq+1,w
  7961     1F2F  0478               	iorwf	??___fleq,w
  7962     1F30  1D03               	skipz
  7963     1F31  2F3A               	goto	l522
  7964     1F32  3000               	movlw	0
  7965     1F33  00F7               	movwf	___fleq@ff2+3
  7966     1F34  3000               	movlw	0
  7967     1F35  00F6               	movwf	___fleq@ff2+2
  7968     1F36  3000               	movlw	0
  7969     1F37  00F5               	movwf	___fleq@ff2+1
  7970     1F38  3000               	movlw	0
  7971     1F39  00F4               	movwf	___fleq@ff2
  7972     1F3A                     l522:
  7973     1F3A  0877               	movf	___fleq@ff2+3,w
  7974     1F3B  0673               	xorwf	___fleq@ff1+3,w
  7975     1F3C  1D03               	skipz
  7976     1F3D  2F48               	goto	u4095
  7977     1F3E  0876               	movf	___fleq@ff2+2,w
  7978     1F3F  0672               	xorwf	___fleq@ff1+2,w
  7979     1F40  1D03               	skipz
  7980     1F41  2F48               	goto	u4095
  7981     1F42  0875               	movf	___fleq@ff2+1,w
  7982     1F43  0671               	xorwf	___fleq@ff1+1,w
  7983     1F44  1D03               	skipz
  7984     1F45  2F48               	goto	u4095
  7985     1F46  0874               	movf	___fleq@ff2,w
  7986     1F47  0670               	xorwf	___fleq@ff1,w
  7987     1F48                     u4095:
  7988     1F48  1903               	skipnz
  7989     1F49  2F4C               	goto	l3259
  7990     1F4A  1003               	clrc
  7991     1F4B  0008               	return
  7992     1F4C                     l3259:
  7993     1F4C  1403               	setc
  7994     1F4D  0008               	return
  7995     1F4E                     __end_of___fleq:
  7996                           
  7997                           	psect	text21
  7998     1571                     __ptext21:	
  7999 ;; *************** function _dtoa *****************
  8000 ;; Defined at:
  8001 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  fp              1    wreg     PTR struct _IO_FILE
  8004 ;;		 -> sprintf@f(10), 
  8005 ;;  d               8   16[BANK0 ] long long 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  8008 ;;		 -> sprintf@f(10), 
  8009 ;;  n               8   32[BANK0 ] long long 
  8010 ;;  i               2   40[BANK0 ] int 
  8011 ;;  w               2   30[BANK0 ] int 
  8012 ;;  p               2   28[BANK0 ] int 
  8013 ;;  s               1   42[BANK0 ] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      void 
  8016 ;; Registers used:
  8017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 1F/1
  8020 ;;		On exit  : 1F/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8023 ;;      Params:         0       8       0       0       0       0       0       0
  8024 ;;      Locals:         0      18       0       0       0       0       0       0
  8025 ;;      Temps:          0       1       0       0       0       0       0       0
  8026 ;;      Totals:         0      27       0       0       0       0       0       0
  8027 ;;Total ram usage:       27 bytes
  8028 ;; Hardware stack levels used: 1
  8029 ;; Hardware stack levels required when called: 4
  8030 ;; This function calls:
  8031 ;;		___aodiv
  8032 ;;		___aomod
  8033 ;;		_abs
  8034 ;;		_pad
  8035 ;; This function is called by:
  8036 ;;		_vfpfcnvrt
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040     1571                     _dtoa:	
  8041                           ;psect for function _dtoa
  8042                           
  8043                           
  8044                           ;incstack = 0
  8045                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8046                           ;dtoa@fp stored from wreg
  8047     1571  0020               	movlb	0	; select bank0
  8048     1572  00BB               	movwf	dtoa@fp
  8049                           
  8050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8051     1573  0830               	movf	dtoa@d,w
  8052     1574  00C0               	movwf	dtoa@n
  8053     1575  0831               	movf	dtoa@d+1,w
  8054     1576  00C1               	movwf	dtoa@n+1
  8055     1577  0832               	movf	dtoa@d+2,w
  8056     1578  00C2               	movwf	dtoa@n+2
  8057     1579  0833               	movf	dtoa@d+3,w
  8058     157A  00C3               	movwf	dtoa@n+3
  8059     157B  0834               	movf	dtoa@d+4,w
  8060     157C  00C4               	movwf	dtoa@n+4
  8061     157D  0835               	movf	dtoa@d+5,w
  8062     157E  00C5               	movwf	dtoa@n+5
  8063     157F  0836               	movf	dtoa@d+6,w
  8064     1580  00C6               	movwf	dtoa@n+6
  8065     1581  0837               	movf	dtoa@d+7,w
  8066     1582  00C7               	movwf	dtoa@n+7
  8067                           
  8068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8069     1583  3040               	movlw	low dtoa@n
  8070     1584  0086               	movwf	6
  8071     1585  3000               	movlw	high dtoa@n
  8072     1586  0087               	movwf	7
  8073     1587  3F47               	moviw [7]fsr1
  8074     1588  00B8               	movwf	??_dtoa
  8075     1589  1FB8               	btfss	??_dtoa,7
  8076     158A  2D8D               	goto	u5090
  8077     158B  3001               	movlw	1
  8078     158C  2D8E               	goto	u5100
  8079     158D                     u5090:
  8080     158D  3000               	movlw	0
  8081     158E                     u5100:
  8082     158E  0020               	movlb	0	; select bank0
  8083     158F  00CA               	movwf	dtoa@s
  8084                           
  8085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8086     1590  084A               	movf	dtoa@s,w
  8087     1591  1903               	btfsc	3,2
  8088     1592  2DB1               	goto	l3725
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8091     1593  09C0               	comf	dtoa@n,f
  8092     1594  09C1               	comf	dtoa@n+1,f
  8093     1595  09C2               	comf	dtoa@n+2,f
  8094     1596  09C3               	comf	dtoa@n+3,f
  8095     1597  09C4               	comf	dtoa@n+4,f
  8096     1598  09C5               	comf	dtoa@n+5,f
  8097     1599  09C6               	comf	dtoa@n+6,f
  8098     159A  09C7               	comf	dtoa@n+7,f
  8099     159B  0AC0               	incf	dtoa@n,f
  8100     159C  1D03               	skipz
  8101     159D  2DB1               	goto	l3725
  8102     159E  0AC1               	incf	dtoa@n+1,f
  8103     159F  1D03               	skipz
  8104     15A0  2DB1               	goto	l3725
  8105     15A1  0AC2               	incf	dtoa@n+2,f
  8106     15A2  1D03               	skipz
  8107     15A3  2DB1               	goto	l3725
  8108     15A4  0AC3               	incf	dtoa@n+3,f
  8109     15A5  1D03               	skipz
  8110     15A6  2DB1               	goto	l3725
  8111     15A7  0AC4               	incf	dtoa@n+4,f
  8112     15A8  1D03               	skipz
  8113     15A9  2DB1               	goto	l3725
  8114     15AA  0AC5               	incf	dtoa@n+5,f
  8115     15AB  1D03               	skipz
  8116     15AC  2DB1               	goto	l3725
  8117     15AD  0AC6               	incf	dtoa@n+6,f
  8118     15AE  1D03               	skipz
  8119     15AF  2DB1               	goto	l3725
  8120     15B0  0AC7               	incf	dtoa@n+7,f
  8121     15B1                     l3725:
  8122                           
  8123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8124     15B1  0022               	movlb	2	; select bank2
  8125     15B2  084E               	movf	(_prec+1)^(0+256),w
  8126     15B3  3A80               	xorlw	128
  8127     15B4  0020               	movlb	0	; select bank0
  8128     15B5  00B8               	movwf	??_dtoa
  8129     15B6  3080               	movlw	128
  8130     15B7  0238               	subwf	??_dtoa,w
  8131     15B8  1D03               	skipz
  8132     15B9  2DBD               	goto	u5135
  8133     15BA  3001               	movlw	1
  8134     15BB  0022               	movlb	2	; select bank2
  8135     15BC  024D               	subwf	_prec^(0+256),w
  8136     15BD                     u5135:
  8137     15BD  1803               	skipnc
  8138     15BE  2DC5               	goto	l3729
  8139     15BF  3001               	movlw	1
  8140     15C0  0020               	movlb	0	; select bank0
  8141     15C1  00BC               	movwf	dtoa@p
  8142     15C2  3000               	movlw	0
  8143     15C3  00BD               	movwf	dtoa@p+1
  8144     15C4  2DCD               	goto	l862
  8145     15C5                     l3729:
  8146     15C5  0022               	movlb	2	; select bank2
  8147     15C6  084E               	movf	(_prec+1)^(0+256),w
  8148     15C7  0020               	movlb	0	; select bank0
  8149     15C8  00BD               	movwf	dtoa@p+1
  8150     15C9  0022               	movlb	2	; select bank2
  8151     15CA  084D               	movf	_prec^(0+256),w
  8152     15CB  0020               	movlb	0	; select bank0
  8153     15CC  00BC               	movwf	dtoa@p
  8154     15CD                     l862:
  8155                           
  8156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8157     15CD  0022               	movlb	2	; select bank2
  8158     15CE  084C               	movf	(_width+1)^(0+256),w
  8159     15CF  0020               	movlb	0	; select bank0
  8160     15D0  00BF               	movwf	dtoa@w+1
  8161     15D1  0022               	movlb	2	; select bank2
  8162     15D2  084B               	movf	_width^(0+256),w
  8163     15D3  0020               	movlb	0	; select bank0
  8164     15D4  00BE               	movwf	dtoa@w
  8165                           
  8166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8167     15D5  084A               	movf	dtoa@s,w
  8168     15D6  1903               	btfsc	3,2
  8169     15D7  2DE7               	goto	l863
  8170                           
  8171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8172     15D8  30FF               	movlw	255
  8173     15D9  07BE               	addwf	dtoa@w,f
  8174     15DA  30FF               	movlw	255
  8175     15DB  3DBF               	addwfc	dtoa@w+1,f
  8176                           
  8177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8178     15DC  084A               	movf	dtoa@s,w
  8179     15DD  1D03               	btfss	3,2
  8180     15DE  2DE1               	goto	l3739
  8181     15DF  302B               	movlw	43
  8182     15E0  2DE2               	goto	L24
  8183     15E1                     l3739:
  8184     15E1  302D               	movlw	45
  8185     15E2                     L24:
  8186     15E2  00B9               	movwf	_dtoa$924
  8187     15E3  3000               	movlw	0
  8188     15E4  00BA               	movwf	_dtoa$924+1
  8189     15E5  0839               	movf	_dtoa$924,w
  8190     15E6  00CA               	movwf	dtoa@s
  8191     15E7                     l863:	
  8192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 471:     }
  8193                           
  8194                           
  8195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8196     15E7  304F               	movlw	79
  8197     15E8  00C8               	movwf	dtoa@i
  8198     15E9  3000               	movlw	0
  8199     15EA  00C9               	movwf	dtoa@i+1
  8200                           
  8201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8202     15EB  0024               	movlb	4	; select bank4
  8203     15EC  01EF               	clrf	(_dbuf^(0+512)+79)
  8204                           
  8205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8206     15ED  2E6B               	goto	l868
  8207     15EE                     l3753:
  8208     15EE  0020               	movlb	0	; select bank0
  8209     15EF  0840               	movf	dtoa@n,w
  8210     15F0  0441               	iorwf	dtoa@n+1,w
  8211     15F1  0442               	iorwf	dtoa@n+2,w
  8212     15F2  0443               	iorwf	dtoa@n+3,w
  8213     15F3  0444               	iorwf	dtoa@n+4,w
  8214     15F4  0445               	iorwf	dtoa@n+5,w
  8215     15F5  0446               	iorwf	dtoa@n+6,w
  8216     15F6  0447               	iorwf	dtoa@n+7,w
  8217     15F7  1D03               	skipz
  8218     15F8  2E04               	goto	l3743
  8219     15F9  083D               	movf	dtoa@p+1,w
  8220     15FA  3A80               	xorlw	128
  8221     15FB  00B8               	movwf	??_dtoa
  8222     15FC  3080               	movlw	128
  8223     15FD  0238               	subwf	??_dtoa,w
  8224     15FE  1D03               	skipz
  8225     15FF  2E02               	goto	u5185
  8226     1600  3001               	movlw	1
  8227     1601  023C               	subwf	dtoa@p,w
  8228     1602                     u5185:
  8229     1602  1C03               	btfss	3,0
  8230     1603  2E77               	goto	l3757
  8231     1604                     l3743:
  8232                           
  8233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8234     1604  30FF               	movlw	255
  8235     1605  0020               	movlb	0	; select bank0
  8236     1606  07C8               	addwf	dtoa@i,f
  8237     1607  30FF               	movlw	255
  8238     1608  3DC9               	addwfc	dtoa@i+1,f
  8239                           
  8240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8241     1609  300A               	movlw	10
  8242     160A  00A0               	movwf	___aomod@divisor
  8243     160B  01A1               	clrf	___aomod@divisor+1
  8244     160C  01A2               	clrf	___aomod@divisor+2
  8245     160D  01A3               	clrf	___aomod@divisor+3
  8246     160E  01A4               	clrf	___aomod@divisor+4
  8247     160F  01A5               	clrf	___aomod@divisor+5
  8248     1610  01A6               	clrf	___aomod@divisor+6
  8249     1611  01A7               	clrf	___aomod@divisor+7
  8250     1612  0840               	movf	dtoa@n,w
  8251     1613  00A8               	movwf	___aomod@dividend
  8252     1614  0841               	movf	dtoa@n+1,w
  8253     1615  00A9               	movwf	___aomod@dividend+1
  8254     1616  0842               	movf	dtoa@n+2,w
  8255     1617  00AA               	movwf	___aomod@dividend+2
  8256     1618  0843               	movf	dtoa@n+3,w
  8257     1619  00AB               	movwf	___aomod@dividend+3
  8258     161A  0844               	movf	dtoa@n+4,w
  8259     161B  00AC               	movwf	___aomod@dividend+4
  8260     161C  0845               	movf	dtoa@n+5,w
  8261     161D  00AD               	movwf	___aomod@dividend+5
  8262     161E  0846               	movf	dtoa@n+6,w
  8263     161F  00AE               	movwf	___aomod@dividend+6
  8264     1620  0847               	movf	dtoa@n+7,w
  8265     1621  00AF               	movwf	___aomod@dividend+7
  8266     1622  3193  23A2  3195   	fcall	___aomod
  8267     1625  0821               	movf	?___aomod+1,w
  8268     1626  00F4               	movwf	abs@a+1
  8269     1627  0820               	movf	?___aomod,w
  8270     1628  00F3               	movwf	abs@a
  8271     1629  319C  2496  3195   	fcall	_abs
  8272     162C  0873               	movf	?_abs,w
  8273     162D  3E30               	addlw	48
  8274     162E  0020               	movlb	0	; select bank0
  8275     162F  00B8               	movwf	??_dtoa
  8276     1630  0848               	movf	dtoa@i,w
  8277     1631  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8278     1632  0086               	movwf	6
  8279     1633  3002               	movlw	2	; select bank4/5
  8280     1634  0087               	movwf	7
  8281     1635  0838               	movf	??_dtoa,w
  8282     1636  0081               	movwf	1
  8283                           
  8284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8285     1637  30FF               	movlw	255
  8286     1638  07BC               	addwf	dtoa@p,f
  8287     1639  30FF               	movlw	255
  8288     163A  3DBD               	addwfc	dtoa@p+1,f
  8289                           
  8290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8291     163B  30FF               	movlw	255
  8292     163C  07BE               	addwf	dtoa@w,f
  8293     163D  30FF               	movlw	255
  8294     163E  3DBF               	addwfc	dtoa@w+1,f
  8295                           
  8296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8297     163F  300A               	movlw	10
  8298     1640  00A0               	movwf	___aodiv@divisor
  8299     1641  01A1               	clrf	___aodiv@divisor+1
  8300     1642  01A2               	clrf	___aodiv@divisor+2
  8301     1643  01A3               	clrf	___aodiv@divisor+3
  8302     1644  01A4               	clrf	___aodiv@divisor+4
  8303     1645  01A5               	clrf	___aodiv@divisor+5
  8304     1646  01A6               	clrf	___aodiv@divisor+6
  8305     1647  01A7               	clrf	___aodiv@divisor+7
  8306     1648  0840               	movf	dtoa@n,w
  8307     1649  00A8               	movwf	___aodiv@dividend
  8308     164A  0841               	movf	dtoa@n+1,w
  8309     164B  00A9               	movwf	___aodiv@dividend+1
  8310     164C  0842               	movf	dtoa@n+2,w
  8311     164D  00AA               	movwf	___aodiv@dividend+2
  8312     164E  0843               	movf	dtoa@n+3,w
  8313     164F  00AB               	movwf	___aodiv@dividend+3
  8314     1650  0844               	movf	dtoa@n+4,w
  8315     1651  00AC               	movwf	___aodiv@dividend+4
  8316     1652  0845               	movf	dtoa@n+5,w
  8317     1653  00AD               	movwf	___aodiv@dividend+5
  8318     1654  0846               	movf	dtoa@n+6,w
  8319     1655  00AE               	movwf	___aodiv@dividend+6
  8320     1656  0847               	movf	dtoa@n+7,w
  8321     1657  00AF               	movwf	___aodiv@dividend+7
  8322     1658  3194  247E  3195   	fcall	___aodiv
  8323     165B  0820               	movf	?___aodiv,w
  8324     165C  00C0               	movwf	dtoa@n
  8325     165D  0821               	movf	?___aodiv+1,w
  8326     165E  00C1               	movwf	dtoa@n+1
  8327     165F  0822               	movf	?___aodiv+2,w
  8328     1660  00C2               	movwf	dtoa@n+2
  8329     1661  0823               	movf	?___aodiv+3,w
  8330     1662  00C3               	movwf	dtoa@n+3
  8331     1663  0824               	movf	?___aodiv+4,w
  8332     1664  00C4               	movwf	dtoa@n+4
  8333     1665  0825               	movf	?___aodiv+5,w
  8334     1666  00C5               	movwf	dtoa@n+5
  8335     1667  0826               	movf	?___aodiv+6,w
  8336     1668  00C6               	movwf	dtoa@n+6
  8337     1669  0827               	movf	?___aodiv+7,w
  8338     166A  00C7               	movwf	dtoa@n+7
  8339     166B                     l868:	
  8340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 492:     }
  8341                           
  8342                           
  8343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8344     166B  0020               	movlb	0	; select bank0
  8345     166C  0849               	movf	dtoa@i+1,w
  8346     166D  3A80               	xorlw	128
  8347     166E  00B8               	movwf	??_dtoa
  8348     166F  3080               	movlw	128
  8349     1670  0238               	subwf	??_dtoa,w
  8350     1671  1D03               	skipz
  8351     1672  2E75               	goto	u5165
  8352     1673  3001               	movlw	1
  8353     1674  0248               	subwf	dtoa@i,w
  8354     1675                     u5165:
  8355     1675  1803               	btfsc	3,0
  8356     1676  2DEE               	goto	l3753
  8357     1677                     l3757:
  8358                           
  8359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8360     1677  0020               	movlb	0	; select bank0
  8361     1678  084A               	movf	dtoa@s,w
  8362     1679  1903               	btfsc	3,2
  8363     167A  2E86               	goto	l3763
  8364                           
  8365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8366     167B  30FF               	movlw	255
  8367     167C  07C8               	addwf	dtoa@i,f
  8368     167D  30FF               	movlw	255
  8369     167E  3DC9               	addwfc	dtoa@i+1,f
  8370                           
  8371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8372     167F  0848               	movf	dtoa@i,w
  8373     1680  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8374     1681  0086               	movwf	6
  8375     1682  3002               	movlw	2	; select bank4/5
  8376     1683  0087               	movwf	7
  8377     1684  084A               	movf	dtoa@s,w
  8378     1685  0081               	movwf	1
  8379     1686                     l3763:
  8380                           
  8381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8382     1686  0848               	movf	dtoa@i,w
  8383     1687  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8384     1688  00FB               	movwf	pad@buf
  8385     1689  083F               	movf	dtoa@w+1,w
  8386     168A  00FD               	movwf	pad@p+1
  8387     168B  083E               	movf	dtoa@w,w
  8388     168C  00FC               	movwf	pad@p
  8389     168D  083B               	movf	dtoa@fp,w
  8390     168E  3180  200F         	fcall	_pad
  8391     1690  0008               	return
  8392     1691                     __end_of_dtoa:
  8393                           
  8394                           	psect	text22
  8395     000F                     __ptext22:	
  8396 ;; *************** function _pad *****************
  8397 ;; Defined at:
  8398 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  fp              1    wreg     PTR struct _IO_FILE
  8401 ;;		 -> sprintf@f(10), 
  8402 ;;  buf             1   11[COMMON] PTR unsigned char 
  8403 ;;		 -> dbuf(80), 
  8404 ;;  p               2   12[COMMON] int 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  8407 ;;		 -> sprintf@f(10), 
  8408 ;;  w               2    7[BANK0 ] int 
  8409 ;;  i               2    5[BANK0 ] int 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 1E/1
  8416 ;;		On exit  : 1F/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8419 ;;      Params:         3       0       0       0       0       0       0       0
  8420 ;;      Locals:         0       5       0       0       0       0       0       0
  8421 ;;      Temps:          0       1       0       0       0       0       0       0
  8422 ;;      Totals:         3       6       0       0       0       0       0       0
  8423 ;;Total ram usage:        9 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; Hardware stack levels required when called: 3
  8426 ;; This function calls:
  8427 ;;		_fputc
  8428 ;;		_fputs
  8429 ;; This function is called by:
  8430 ;;		_dtoa
  8431 ;;		_efgtoa
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435     000F                     _pad:	
  8436                           ;psect for function _pad
  8437                           
  8438                           
  8439                           ;incstack = 0
  8440                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8441                           ;pad@fp stored from wreg
  8442     000F  0020               	movlb	0	; select bank0
  8443     0010  00A9               	movwf	pad@fp
  8444                           
  8445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8446     0011  1BFD               	btfsc	pad@p+1,7
  8447     0012  2818               	goto	l3617
  8448     0013  087D               	movf	pad@p+1,w
  8449     0014  00A8               	movwf	pad@w+1
  8450     0015  087C               	movf	pad@p,w
  8451     0016  00A7               	movwf	pad@w
  8452     0017  281A               	goto	l851
  8453     0018                     l3617:
  8454     0018  01A7               	clrf	pad@w
  8455     0019  01A8               	clrf	pad@w+1
  8456     001A                     l851:
  8457                           
  8458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8459     001A  01A5               	clrf	pad@i
  8460     001B  01A6               	clrf	pad@i+1
  8461     001C                     l3623:	
  8462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8463                           
  8464                           
  8465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8466     001C  0826               	movf	pad@i+1,w
  8467     001D  3A80               	xorlw	128
  8468     001E  00A4               	movwf	??_pad
  8469     001F  0828               	movf	pad@w+1,w
  8470     0020  3A80               	xorlw	128
  8471     0021  0224               	subwf	??_pad,w
  8472     0022  1D03               	skipz
  8473     0023  2826               	goto	u4815
  8474     0024  0827               	movf	pad@w,w
  8475     0025  0225               	subwf	pad@i,w
  8476     0026                     u4815:
  8477     0026  1803               	btfsc	3,0
  8478     0027  2838               	goto	l3625
  8479                           
  8480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8481     0028  3020               	movlw	32
  8482     0029  00F0               	movwf	fputc@c
  8483     002A  3000               	movlw	0
  8484     002B  00F1               	movwf	fputc@c+1
  8485     002C  0020               	movlb	0	; select bank0
  8486     002D  0829               	movf	pad@fp,w
  8487     002E  00F2               	movwf	fputc@fp
  8488     002F  319F  274E  3180   	fcall	_fputc
  8489                           
  8490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8491     0032  3001               	movlw	1
  8492     0033  0020               	movlb	0	; select bank0
  8493     0034  07A5               	addwf	pad@i,f
  8494     0035  3000               	movlw	0
  8495     0036  3DA6               	addwfc	pad@i+1,f
  8496     0037  281C               	goto	l3623
  8497     0038                     l3625:
  8498                           
  8499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8500     0038  0020               	movlb	0	; select bank0
  8501     0039  0829               	movf	pad@fp,w
  8502     003A  00F8               	movwf	fputs@fp
  8503     003B  087B               	movf	pad@buf,w
  8504     003C  319D  2595         	fcall	_fputs
  8505     003E  0008               	return
  8506     003F                     __end_of_pad:
  8507                           
  8508                           	psect	text23
  8509     1D95                     __ptext23:	
  8510 ;; *************** function _fputs *****************
  8511 ;; Defined at:
  8512 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  s               1    wreg     PTR const unsigned char 
  8515 ;;		 -> dbuf(80), 
  8516 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8517 ;;		 -> sprintf@f(10), 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8520 ;;		 -> dbuf(80), 
  8521 ;;  i               2    1[BANK0 ] int 
  8522 ;;  c               1    0[BANK0 ] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  2    8[COMMON] int 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 1F/0
  8529 ;;		On exit  : 1F/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8532 ;;      Params:         1       0       0       0       0       0       0       0
  8533 ;;      Locals:         0       4       0       0       0       0       0       0
  8534 ;;      Temps:          2       0       0       0       0       0       0       0
  8535 ;;      Totals:         3       4       0       0       0       0       0       0
  8536 ;;Total ram usage:        7 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; Hardware stack levels required when called: 2
  8539 ;; This function calls:
  8540 ;;		_fputc
  8541 ;; This function is called by:
  8542 ;;		_pad
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546     1D95                     _fputs:	
  8547                           ;psect for function _fputs
  8548                           
  8549                           
  8550                           ;incstack = 0
  8551                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8552                           ;fputs@s stored from wreg
  8553     1D95  00A3               	movwf	fputs@s
  8554     1D96  01A1               	clrf	fputs@i
  8555     1D97  01A2               	clrf	fputs@i+1
  8556     1D98                     l3167:
  8557     1D98  0821               	movf	fputs@i,w
  8558     1D99  0723               	addwf	fputs@s,w
  8559     1D9A  00F9               	movwf	??_fputs
  8560     1D9B  0879               	movf	??_fputs,w
  8561     1D9C  0086               	movwf	6
  8562     1D9D  3002               	movlw	2	; select bank4/5
  8563     1D9E  0087               	movwf	7
  8564     1D9F  0801               	movf	1,w
  8565     1DA0  00A0               	movwf	fputs@c
  8566     1DA1  0820               	movf	fputs@c,w
  8567     1DA2  1903               	btfsc	3,2
  8568     1DA3  0008               	return
  8569     1DA4  0820               	movf	fputs@c,w
  8570     1DA5  00F9               	movwf	??_fputs
  8571     1DA6  01FA               	clrf	??_fputs+1
  8572     1DA7  0879               	movf	??_fputs,w
  8573     1DA8  00F0               	movwf	fputc@c
  8574     1DA9  087A               	movf	??_fputs+1,w
  8575     1DAA  00F1               	movwf	fputc@c+1
  8576     1DAB  0878               	movf	fputs@fp,w
  8577     1DAC  00F2               	movwf	fputc@fp
  8578     1DAD  319F  274E  319D   	fcall	_fputc
  8579     1DB0  3001               	movlw	1
  8580     1DB1  0020               	movlb	0	; select bank0
  8581     1DB2  07A1               	addwf	fputs@i,f
  8582     1DB3  3000               	movlw	0
  8583     1DB4  3DA2               	addwfc	fputs@i+1,f
  8584     1DB5  2D98               	goto	l3167
  8585     1DB6                     __end_of_fputs:
  8586                           
  8587                           	psect	text24
  8588     1F4E                     __ptext24:	
  8589 ;; *************** function _fputc *****************
  8590 ;; Defined at:
  8591 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  c               2    0[COMMON] int 
  8594 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8595 ;;		 -> sprintf@f(10), 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  2    0[COMMON] int 
  8600 ;; Registers used:
  8601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 1E/1
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8607 ;;      Params:         3       0       0       0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0
  8609 ;;      Temps:          5       0       0       0       0       0       0       0
  8610 ;;      Totals:         8       0       0       0       0       0       0       0
  8611 ;;Total ram usage:        8 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; Hardware stack levels required when called: 1
  8614 ;; This function calls:
  8615 ;;		_putch
  8616 ;; This function is called by:
  8617 ;;		_pad
  8618 ;;		_vfpfcnvrt
  8619 ;;		_fputs
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623     1F4E                     _fputc:	
  8624                           ;psect for function _fputc
  8625                           
  8626                           
  8627                           ;incstack = 0
  8628                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8629     1F4E  0872               	movf	fputc@fp,w
  8630     1F4F  1D03               	btfss	3,2
  8631     1F50  0872               	movf	fputc@fp,w
  8632     1F51  1D03               	btfss	3,2
  8633     1F52  2F57               	goto	l2943
  8634     1F53  0870               	movf	fputc@c,w
  8635     1F54  3180  2004         	fcall	_putch
  8636     1F56  0008               	return
  8637     1F57                     l2943:
  8638     1F57  0872               	movf	fputc@fp,w
  8639     1F58  3E08               	addlw	8
  8640     1F59  0086               	movwf	6
  8641     1F5A  3001               	movlw	1	; select bank2/3
  8642     1F5B  0087               	movwf	7
  8643     1F5C  0016               	moviw fsr1++
  8644     1F5D  0401               	iorwf	1,w
  8645     1F5E  1903               	btfsc	3,2
  8646     1F5F  2F7E               	goto	l2947
  8647     1F60  0872               	movf	fputc@fp,w
  8648     1F61  3E08               	addlw	8
  8649     1F62  0086               	movwf	6
  8650     1F63  3001               	movlw	1	; select bank2/3
  8651     1F64  0087               	movwf	7
  8652     1F65  3F40               	moviw [0]fsr1
  8653     1F66  00F3               	movwf	??_fputc
  8654     1F67  3F41               	moviw [1]fsr1
  8655     1F68  00F4               	movwf	??_fputc+1
  8656     1F69  0872               	movf	fputc@fp,w
  8657     1F6A  3E02               	addlw	2
  8658     1F6B  0086               	movwf	6
  8659     1F6C  3001               	movlw	1	; select bank2/3
  8660     1F6D  0087               	movwf	7
  8661     1F6E  3F40               	moviw [0]fsr1
  8662     1F6F  00F5               	movwf	??_fputc+2
  8663     1F70  3F41               	moviw [1]fsr1
  8664     1F71  00F6               	movwf	??_fputc+3
  8665     1F72  0876               	movf	??_fputc+3,w
  8666     1F73  3A80               	xorlw	128
  8667     1F74  00F7               	movwf	??_fputc+4
  8668     1F75  0874               	movf	??_fputc+1,w
  8669     1F76  3A80               	xorlw	128
  8670     1F77  0277               	subwf	??_fputc+4,w
  8671     1F78  1D03               	skipz
  8672     1F79  2F7C               	goto	u3345
  8673     1F7A  0873               	movf	??_fputc,w
  8674     1F7B  0275               	subwf	??_fputc+2,w
  8675     1F7C                     u3345:
  8676     1F7C  1803               	skipnc
  8677     1F7D  0008               	return
  8678     1F7E                     l2947:
  8679     1F7E  0872               	movf	fputc@fp,w
  8680     1F7F  3E02               	addlw	2
  8681     1F80  0086               	movwf	6
  8682     1F81  3001               	movlw	1	; select bank2/3
  8683     1F82  0087               	movwf	7
  8684     1F83  0872               	movf	fputc@fp,w
  8685     1F84  0084               	movwf	4
  8686     1F85  3001               	movlw	1	; select bank2/3
  8687     1F86  0085               	movwf	5
  8688     1F87  3F40               	moviw [0]fsr1
  8689     1F88  0700               	addwf	0,w
  8690     1F89  00F3               	movwf	??_fputc
  8691     1F8A  3101               	addfsr 0,1
  8692     1F8B  3F41               	moviw [1]fsr1
  8693     1F8C  3D00               	addwfc	0,w
  8694     1F8D  00F4               	movwf	??_fputc+1
  8695     1F8E  0873               	movf	??_fputc,w
  8696     1F8F  0086               	movwf	6
  8697     1F90  0874               	movf	??_fputc+1,w
  8698     1F91  0087               	movwf	7
  8699     1F92  0870               	movf	fputc@c,w
  8700     1F93  0081               	movwf	1
  8701     1F94  0872               	movf	fputc@fp,w
  8702     1F95  3E02               	addlw	2
  8703     1F96  0086               	movwf	6
  8704     1F97  3001               	movlw	1	; select bank2/3
  8705     1F98  0087               	movwf	7
  8706     1F99  3001               	movlw	1
  8707     1F9A  0781               	addwf	1,f
  8708     1F9B  3141               	addfsr 1,1
  8709     1F9C  1803               	skipnc
  8710     1F9D  0A81               	incf	1,f
  8711     1F9E  0008               	return
  8712     1F9F                     __end_of_fputc:
  8713                           
  8714                           	psect	text25
  8715     0004                     __ptext25:	
  8716 ;; *************** function _putch *****************
  8717 ;; Defined at:
  8718 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  c               1    wreg     unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  c               1    0[COMMON] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg
  8727 ;; Tracked objects:
  8728 ;;		On entry : 1E/1
  8729 ;;		On exit  : 1E/0
  8730 ;;		Unchanged: 1E/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8732 ;;      Params:         0       0       0       0       0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used: 1
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_fputc
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745     0004                     _putch:	
  8746                           ;psect for function _putch
  8747                           
  8748                           
  8749                           ;incstack = 0
  8750                           ; Regs used in _putch: [wreg]
  8751     0004  0008               	return
  8752     0005                     __end_of_putch:
  8753                           
  8754                           	psect	text26
  8755     1C96                     __ptext26:	
  8756 ;; *************** function _abs *****************
  8757 ;; Defined at:
  8758 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  a               2    3[COMMON] int 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  2    3[COMMON] int 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 1F/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8772 ;;      Params:         2       0       0       0       0       0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0
  8774 ;;      Temps:          2       0       0       0       0       0       0       0
  8775 ;;      Totals:         4       0       0       0       0       0       0       0
  8776 ;;Total ram usage:        4 bytes
  8777 ;; Hardware stack levels used: 1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_dtoa
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785     1C96                     _abs:	
  8786                           ;psect for function _abs
  8787                           
  8788                           
  8789                           ;incstack = 0
  8790                           ; Regs used in _abs: [wreg+status,2+status,0]
  8791     1C96  0874               	movf	abs@a+1,w
  8792     1C97  3A80               	xorlw	128
  8793     1C98  00F5               	movwf	??_abs
  8794     1C99  3080               	movlw	128
  8795     1C9A  0275               	subwf	??_abs,w
  8796     1C9B  1D03               	skipz
  8797     1C9C  2C9F               	goto	u4825
  8798     1C9D  3001               	movlw	1
  8799     1C9E  0273               	subwf	abs@a,w
  8800     1C9F                     u4825:
  8801     1C9F  1803               	skipnc
  8802     1CA0  0008               	return
  8803     1CA1  0973               	comf	abs@a,w
  8804     1CA2  00F5               	movwf	??_abs
  8805     1CA3  0974               	comf	abs@a+1,w
  8806     1CA4  00F6               	movwf	??_abs+1
  8807     1CA5  0AF5               	incf	??_abs,f
  8808     1CA6  1903               	skipnz
  8809     1CA7  0AF6               	incf	??_abs+1,f
  8810     1CA8  0875               	movf	??_abs,w
  8811     1CA9  00F3               	movwf	?_abs
  8812     1CAA  0876               	movf	??_abs+1,w
  8813     1CAB  00F4               	movwf	?_abs+1
  8814     1CAC  0008               	return
  8815     1CAD                     __end_of_abs:
  8816                           
  8817                           	psect	text27
  8818     13A2                     __ptext27:	
  8819 ;; *************** function ___aomod *****************
  8820 ;; Defined at:
  8821 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  divisor         8    0[BANK0 ] long long 
  8824 ;;  dividend        8    8[BANK0 ] long long 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  sign            1    2[COMMON] unsigned char 
  8827 ;;  counter         1    1[COMMON] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  8    0[BANK0 ] long long 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 1F/0
  8834 ;;		On exit  : 1F/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8837 ;;      Params:         0      16       0       0       0       0       0       0
  8838 ;;      Locals:         2       0       0       0       0       0       0       0
  8839 ;;      Temps:          1       0       0       0       0       0       0       0
  8840 ;;      Totals:         3      16       0       0       0       0       0       0
  8841 ;;Total ram usage:       19 bytes
  8842 ;; Hardware stack levels used: 1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_dtoa
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850     13A2                     ___aomod:	
  8851                           ;psect for function ___aomod
  8852                           
  8853                           
  8854                           ;incstack = 0
  8855                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8856     13A2  01F2               	clrf	___aomod@sign
  8857     13A3  3028               	movlw	low ___aomod@dividend
  8858     13A4  0086               	movwf	6
  8859     13A5  3000               	movlw	high ___aomod@dividend
  8860     13A6  0087               	movwf	7
  8861     13A7  3F47               	moviw [7]fsr1
  8862     13A8  00F0               	movwf	??___aomod
  8863     13A9  1FF0               	btfss	??___aomod,7
  8864     13AA  2BCC               	goto	l3227
  8865     13AB  0020               	movlb	0	; select bank0
  8866     13AC  09A8               	comf	___aomod@dividend,f
  8867     13AD  09A9               	comf	___aomod@dividend+1,f
  8868     13AE  09AA               	comf	___aomod@dividend+2,f
  8869     13AF  09AB               	comf	___aomod@dividend+3,f
  8870     13B0  09AC               	comf	___aomod@dividend+4,f
  8871     13B1  09AD               	comf	___aomod@dividend+5,f
  8872     13B2  09AE               	comf	___aomod@dividend+6,f
  8873     13B3  09AF               	comf	___aomod@dividend+7,f
  8874     13B4  0AA8               	incf	___aomod@dividend,f
  8875     13B5  1D03               	skipz
  8876     13B6  2BCA               	goto	u398lld
  8877     13B7  0AA9               	incf	___aomod@dividend+1,f
  8878     13B8  1D03               	skipz
  8879     13B9  2BCA               	goto	u398lld
  8880     13BA  0AAA               	incf	___aomod@dividend+2,f
  8881     13BB  1D03               	skipz
  8882     13BC  2BCA               	goto	u398lld
  8883     13BD  0AAB               	incf	___aomod@dividend+3,f
  8884     13BE  1D03               	skipz
  8885     13BF  2BCA               	goto	u398lld
  8886     13C0  0AAC               	incf	___aomod@dividend+4,f
  8887     13C1  1D03               	skipz
  8888     13C2  2BCA               	goto	u398lld
  8889     13C3  0AAD               	incf	___aomod@dividend+5,f
  8890     13C4  1D03               	skipz
  8891     13C5  2BCA               	goto	u398lld
  8892     13C6  0AAE               	incf	___aomod@dividend+6,f
  8893     13C7  1D03               	skipz
  8894     13C8  2BCA               	goto	u398lld
  8895     13C9  0AAF               	incf	___aomod@dividend+7,f
  8896     13CA                     u398lld:
  8897     13CA  01F2               	clrf	___aomod@sign
  8898     13CB  0AF2               	incf	___aomod@sign,f
  8899     13CC                     l3227:
  8900     13CC  3020               	movlw	low ___aomod@divisor
  8901     13CD  0086               	movwf	6
  8902     13CE  3000               	movlw	high ___aomod@divisor
  8903     13CF  0087               	movwf	7
  8904     13D0  3F47               	moviw [7]fsr1
  8905     13D1  00F0               	movwf	??___aomod
  8906     13D2  1FF0               	btfss	??___aomod,7
  8907     13D3  2BF3               	goto	l3231
  8908     13D4  0020               	movlb	0	; select bank0
  8909     13D5  09A0               	comf	___aomod@divisor,f
  8910     13D6  09A1               	comf	___aomod@divisor+1,f
  8911     13D7  09A2               	comf	___aomod@divisor+2,f
  8912     13D8  09A3               	comf	___aomod@divisor+3,f
  8913     13D9  09A4               	comf	___aomod@divisor+4,f
  8914     13DA  09A5               	comf	___aomod@divisor+5,f
  8915     13DB  09A6               	comf	___aomod@divisor+6,f
  8916     13DC  09A7               	comf	___aomod@divisor+7,f
  8917     13DD  0AA0               	incf	___aomod@divisor,f
  8918     13DE  1D03               	skipz
  8919     13DF  2BF3               	goto	l3231
  8920     13E0  0AA1               	incf	___aomod@divisor+1,f
  8921     13E1  1D03               	skipz
  8922     13E2  2BF3               	goto	l3231
  8923     13E3  0AA2               	incf	___aomod@divisor+2,f
  8924     13E4  1D03               	skipz
  8925     13E5  2BF3               	goto	l3231
  8926     13E6  0AA3               	incf	___aomod@divisor+3,f
  8927     13E7  1D03               	skipz
  8928     13E8  2BF3               	goto	l3231
  8929     13E9  0AA4               	incf	___aomod@divisor+4,f
  8930     13EA  1D03               	skipz
  8931     13EB  2BF3               	goto	l3231
  8932     13EC  0AA5               	incf	___aomod@divisor+5,f
  8933     13ED  1D03               	skipz
  8934     13EE  2BF3               	goto	l3231
  8935     13EF  0AA6               	incf	___aomod@divisor+6,f
  8936     13F0  1D03               	skipz
  8937     13F1  2BF3               	goto	l3231
  8938     13F2  0AA7               	incf	___aomod@divisor+7,f
  8939     13F3                     l3231:
  8940     13F3  0020               	movlb	0	; select bank0
  8941     13F4  0820               	movf	___aomod@divisor,w
  8942     13F5  0421               	iorwf	___aomod@divisor+1,w
  8943     13F6  0422               	iorwf	___aomod@divisor+2,w
  8944     13F7  0423               	iorwf	___aomod@divisor+3,w
  8945     13F8  0424               	iorwf	___aomod@divisor+4,w
  8946     13F9  0425               	iorwf	___aomod@divisor+5,w
  8947     13FA  0426               	iorwf	___aomod@divisor+6,w
  8948     13FB  0427               	iorwf	___aomod@divisor+7,w
  8949     13FC  1903               	skipnz
  8950     13FD  2C4B               	goto	l3247
  8951     13FE  01F1               	clrf	___aomod@counter
  8952     13FF  0AF1               	incf	___aomod@counter,f
  8953     1400                     l3239:
  8954     1400  1BA7               	btfsc	___aomod@divisor+7,7
  8955     1401  2C0F               	goto	l3241
  8956     1402  35A0               	lslf	___aomod@divisor,f
  8957     1403  0DA1               	rlf	___aomod@divisor+1,f
  8958     1404  0DA2               	rlf	___aomod@divisor+2,f
  8959     1405  0DA3               	rlf	___aomod@divisor+3,f
  8960     1406  0DA4               	rlf	___aomod@divisor+4,f
  8961     1407  0DA5               	rlf	___aomod@divisor+5,f
  8962     1408  0DA6               	rlf	___aomod@divisor+6,f
  8963     1409  0DA7               	rlf	___aomod@divisor+7,f
  8964     140A  3001               	movlw	1
  8965     140B  00F0               	movwf	??___aomod
  8966     140C  0870               	movf	??___aomod,w
  8967     140D  07F1               	addwf	___aomod@counter,f
  8968     140E  2C00               	goto	l3239
  8969     140F                     l3241:
  8970     140F  0827               	movf	___aomod@divisor+7,w
  8971     1410  022F               	subwf	___aomod@dividend+7,w
  8972     1411  1D03               	skipz
  8973     1412  2C2D               	goto	u4035
  8974     1413  0826               	movf	___aomod@divisor+6,w
  8975     1414  022E               	subwf	___aomod@dividend+6,w
  8976     1415  1D03               	skipz
  8977     1416  2C2D               	goto	u4035
  8978     1417  0825               	movf	___aomod@divisor+5,w
  8979     1418  022D               	subwf	___aomod@dividend+5,w
  8980     1419  1D03               	skipz
  8981     141A  2C2D               	goto	u4035
  8982     141B  0824               	movf	___aomod@divisor+4,w
  8983     141C  022C               	subwf	___aomod@dividend+4,w
  8984     141D  1D03               	skipz
  8985     141E  2C2D               	goto	u4035
  8986     141F  0823               	movf	___aomod@divisor+3,w
  8987     1420  022B               	subwf	___aomod@dividend+3,w
  8988     1421  1D03               	skipz
  8989     1422  2C2D               	goto	u4035
  8990     1423  0822               	movf	___aomod@divisor+2,w
  8991     1424  022A               	subwf	___aomod@dividend+2,w
  8992     1425  1D03               	skipz
  8993     1426  2C2D               	goto	u4035
  8994     1427  0821               	movf	___aomod@divisor+1,w
  8995     1428  0229               	subwf	___aomod@dividend+1,w
  8996     1429  1D03               	skipz
  8997     142A  2C2D               	goto	u4035
  8998     142B  0820               	movf	___aomod@divisor,w
  8999     142C  0228               	subwf	___aomod@dividend,w
  9000     142D                     u4035:
  9001     142D  1C03               	skipc
  9002     142E  2C3F               	goto	l3245
  9003     142F  0820               	movf	___aomod@divisor,w
  9004     1430  02A8               	subwf	___aomod@dividend,f
  9005     1431  0821               	movf	___aomod@divisor+1,w
  9006     1432  3BA9               	subwfb	___aomod@dividend+1,f
  9007     1433  0822               	movf	___aomod@divisor+2,w
  9008     1434  3BAA               	subwfb	___aomod@dividend+2,f
  9009     1435  0823               	movf	___aomod@divisor+3,w
  9010     1436  3BAB               	subwfb	___aomod@dividend+3,f
  9011     1437  0824               	movf	___aomod@divisor+4,w
  9012     1438  3BAC               	subwfb	___aomod@dividend+4,f
  9013     1439  0825               	movf	___aomod@divisor+5,w
  9014     143A  3BAD               	subwfb	___aomod@dividend+5,f
  9015     143B  0826               	movf	___aomod@divisor+6,w
  9016     143C  3BAE               	subwfb	___aomod@dividend+6,f
  9017     143D  0827               	movf	___aomod@divisor+7,w
  9018     143E  3BAF               	subwfb	___aomod@dividend+7,f
  9019     143F                     l3245:
  9020     143F  36A7               	lsrf	___aomod@divisor+7,f
  9021     1440  0CA6               	rrf	___aomod@divisor+6,f
  9022     1441  0CA5               	rrf	___aomod@divisor+5,f
  9023     1442  0CA4               	rrf	___aomod@divisor+4,f
  9024     1443  0CA3               	rrf	___aomod@divisor+3,f
  9025     1444  0CA2               	rrf	___aomod@divisor+2,f
  9026     1445  0CA1               	rrf	___aomod@divisor+1,f
  9027     1446  0CA0               	rrf	___aomod@divisor,f
  9028     1447  3001               	movlw	1
  9029     1448  02F1               	subwf	___aomod@counter,f
  9030     1449  1D03               	btfss	3,2
  9031     144A  2C0F               	goto	l3241
  9032     144B                     l3247:
  9033     144B  0872               	movf	___aomod@sign,w
  9034     144C  1903               	btfsc	3,2
  9035     144D  2C6C               	goto	l465
  9036     144E  09A8               	comf	___aomod@dividend,f
  9037     144F  09A9               	comf	___aomod@dividend+1,f
  9038     1450  09AA               	comf	___aomod@dividend+2,f
  9039     1451  09AB               	comf	___aomod@dividend+3,f
  9040     1452  09AC               	comf	___aomod@dividend+4,f
  9041     1453  09AD               	comf	___aomod@dividend+5,f
  9042     1454  09AE               	comf	___aomod@dividend+6,f
  9043     1455  09AF               	comf	___aomod@dividend+7,f
  9044     1456  0AA8               	incf	___aomod@dividend,f
  9045     1457  1D03               	skipz
  9046     1458  2C6C               	goto	l465
  9047     1459  0AA9               	incf	___aomod@dividend+1,f
  9048     145A  1D03               	skipz
  9049     145B  2C6C               	goto	l465
  9050     145C  0AAA               	incf	___aomod@dividend+2,f
  9051     145D  1D03               	skipz
  9052     145E  2C6C               	goto	l465
  9053     145F  0AAB               	incf	___aomod@dividend+3,f
  9054     1460  1D03               	skipz
  9055     1461  2C6C               	goto	l465
  9056     1462  0AAC               	incf	___aomod@dividend+4,f
  9057     1463  1D03               	skipz
  9058     1464  2C6C               	goto	l465
  9059     1465  0AAD               	incf	___aomod@dividend+5,f
  9060     1466  1D03               	skipz
  9061     1467  2C6C               	goto	l465
  9062     1468  0AAE               	incf	___aomod@dividend+6,f
  9063     1469  1D03               	skipz
  9064     146A  2C6C               	goto	l465
  9065     146B  0AAF               	incf	___aomod@dividend+7,f
  9066     146C                     l465:
  9067     146C  0020               	movlb	0	; select bank0
  9068     146D  0828               	movf	___aomod@dividend,w
  9069     146E  00A0               	movwf	?___aomod
  9070     146F  0829               	movf	___aomod@dividend+1,w
  9071     1470  00A1               	movwf	?___aomod+1
  9072     1471  082A               	movf	___aomod@dividend+2,w
  9073     1472  00A2               	movwf	?___aomod+2
  9074     1473  082B               	movf	___aomod@dividend+3,w
  9075     1474  00A3               	movwf	?___aomod+3
  9076     1475  082C               	movf	___aomod@dividend+4,w
  9077     1476  00A4               	movwf	?___aomod+4
  9078     1477  082D               	movf	___aomod@dividend+5,w
  9079     1478  00A5               	movwf	?___aomod+5
  9080     1479  082E               	movf	___aomod@dividend+6,w
  9081     147A  00A6               	movwf	?___aomod+6
  9082     147B  082F               	movf	___aomod@dividend+7,w
  9083     147C  00A7               	movwf	?___aomod+7
  9084     147D  0008               	return
  9085     147E                     __end_of___aomod:
  9086                           
  9087                           	psect	text28
  9088     147E                     __ptext28:	
  9089 ;; *************** function ___aodiv *****************
  9090 ;; Defined at:
  9091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;  divisor         8    0[BANK0 ] long long 
  9094 ;;  dividend        8    8[BANK0 ] long long 
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;  quotient        8    3[COMMON] long long 
  9097 ;;  sign            1    2[COMMON] unsigned char 
  9098 ;;  counter         1    1[COMMON] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  8    0[BANK0 ] long long 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9103 ;; Tracked objects:
  9104 ;;		On entry : 1F/0
  9105 ;;		On exit  : 1F/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9108 ;;      Params:         0      16       0       0       0       0       0       0
  9109 ;;      Locals:        10       0       0       0       0       0       0       0
  9110 ;;      Temps:          1       0       0       0       0       0       0       0
  9111 ;;      Totals:        11      16       0       0       0       0       0       0
  9112 ;;Total ram usage:       27 bytes
  9113 ;; Hardware stack levels used: 1
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_dtoa
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121     147E                     ___aodiv:	
  9122                           ;psect for function ___aodiv
  9123                           
  9124                           
  9125                           ;incstack = 0
  9126                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9127     147E  01F2               	clrf	___aodiv@sign
  9128     147F  3020               	movlw	low ___aodiv@divisor
  9129     1480  0086               	movwf	6
  9130     1481  3000               	movlw	high ___aodiv@divisor
  9131     1482  0087               	movwf	7
  9132     1483  3F47               	moviw [7]fsr1
  9133     1484  00F0               	movwf	??___aodiv
  9134     1485  1FF0               	btfss	??___aodiv,7
  9135     1486  2CA8               	goto	l3189
  9136     1487  0020               	movlb	0	; select bank0
  9137     1488  09A0               	comf	___aodiv@divisor,f
  9138     1489  09A1               	comf	___aodiv@divisor+1,f
  9139     148A  09A2               	comf	___aodiv@divisor+2,f
  9140     148B  09A3               	comf	___aodiv@divisor+3,f
  9141     148C  09A4               	comf	___aodiv@divisor+4,f
  9142     148D  09A5               	comf	___aodiv@divisor+5,f
  9143     148E  09A6               	comf	___aodiv@divisor+6,f
  9144     148F  09A7               	comf	___aodiv@divisor+7,f
  9145     1490  0AA0               	incf	___aodiv@divisor,f
  9146     1491  1D03               	skipz
  9147     1492  2CA6               	goto	u387lld
  9148     1493  0AA1               	incf	___aodiv@divisor+1,f
  9149     1494  1D03               	skipz
  9150     1495  2CA6               	goto	u387lld
  9151     1496  0AA2               	incf	___aodiv@divisor+2,f
  9152     1497  1D03               	skipz
  9153     1498  2CA6               	goto	u387lld
  9154     1499  0AA3               	incf	___aodiv@divisor+3,f
  9155     149A  1D03               	skipz
  9156     149B  2CA6               	goto	u387lld
  9157     149C  0AA4               	incf	___aodiv@divisor+4,f
  9158     149D  1D03               	skipz
  9159     149E  2CA6               	goto	u387lld
  9160     149F  0AA5               	incf	___aodiv@divisor+5,f
  9161     14A0  1D03               	skipz
  9162     14A1  2CA6               	goto	u387lld
  9163     14A2  0AA6               	incf	___aodiv@divisor+6,f
  9164     14A3  1D03               	skipz
  9165     14A4  2CA6               	goto	u387lld
  9166     14A5  0AA7               	incf	___aodiv@divisor+7,f
  9167     14A6                     u387lld:
  9168     14A6  01F2               	clrf	___aodiv@sign
  9169     14A7  0AF2               	incf	___aodiv@sign,f
  9170     14A8                     l3189:
  9171     14A8  3028               	movlw	low ___aodiv@dividend
  9172     14A9  0086               	movwf	6
  9173     14AA  3000               	movlw	high ___aodiv@dividend
  9174     14AB  0087               	movwf	7
  9175     14AC  3F47               	moviw [7]fsr1
  9176     14AD  00F0               	movwf	??___aodiv
  9177     14AE  1FF0               	btfss	??___aodiv,7
  9178     14AF  2CD3               	goto	l3195
  9179     14B0  0020               	movlb	0	; select bank0
  9180     14B1  09A8               	comf	___aodiv@dividend,f
  9181     14B2  09A9               	comf	___aodiv@dividend+1,f
  9182     14B3  09AA               	comf	___aodiv@dividend+2,f
  9183     14B4  09AB               	comf	___aodiv@dividend+3,f
  9184     14B5  09AC               	comf	___aodiv@dividend+4,f
  9185     14B6  09AD               	comf	___aodiv@dividend+5,f
  9186     14B7  09AE               	comf	___aodiv@dividend+6,f
  9187     14B8  09AF               	comf	___aodiv@dividend+7,f
  9188     14B9  0AA8               	incf	___aodiv@dividend,f
  9189     14BA  1D03               	skipz
  9190     14BB  2CCF               	goto	l3193
  9191     14BC  0AA9               	incf	___aodiv@dividend+1,f
  9192     14BD  1D03               	skipz
  9193     14BE  2CCF               	goto	l3193
  9194     14BF  0AAA               	incf	___aodiv@dividend+2,f
  9195     14C0  1D03               	skipz
  9196     14C1  2CCF               	goto	l3193
  9197     14C2  0AAB               	incf	___aodiv@dividend+3,f
  9198     14C3  1D03               	skipz
  9199     14C4  2CCF               	goto	l3193
  9200     14C5  0AAC               	incf	___aodiv@dividend+4,f
  9201     14C6  1D03               	skipz
  9202     14C7  2CCF               	goto	l3193
  9203     14C8  0AAD               	incf	___aodiv@dividend+5,f
  9204     14C9  1D03               	skipz
  9205     14CA  2CCF               	goto	l3193
  9206     14CB  0AAE               	incf	___aodiv@dividend+6,f
  9207     14CC  1D03               	skipz
  9208     14CD  2CCF               	goto	l3193
  9209     14CE  0AAF               	incf	___aodiv@dividend+7,f
  9210     14CF                     l3193:
  9211     14CF  3001               	movlw	1
  9212     14D0  00F0               	movwf	??___aodiv
  9213     14D1  0870               	movf	??___aodiv,w
  9214     14D2  06F2               	xorwf	___aodiv@sign,f
  9215     14D3                     l3195:
  9216     14D3  3073               	movlw	low ___aodiv@quotient
  9217     14D4  0086               	movwf	6
  9218     14D5  3000               	movlw	high ___aodiv@quotient
  9219     14D6  0087               	movwf	7
  9220     14D7  3008               	movlw	8
  9221     14D8  00F0               	movwf	??___aodiv
  9222     14D9  3000               	movlw	0
  9223     14DA                     u3900:
  9224     14DA  001E               	movwi fsr1++
  9225     14DB  0BF0               	decfsz	??___aodiv,f
  9226     14DC  2CDA               	goto	u3900
  9227     14DD  0020               	movlb	0	; select bank0
  9228     14DE  0820               	movf	___aodiv@divisor,w
  9229     14DF  0421               	iorwf	___aodiv@divisor+1,w
  9230     14E0  0422               	iorwf	___aodiv@divisor+2,w
  9231     14E1  0423               	iorwf	___aodiv@divisor+3,w
  9232     14E2  0424               	iorwf	___aodiv@divisor+4,w
  9233     14E3  0425               	iorwf	___aodiv@divisor+5,w
  9234     14E4  0426               	iorwf	___aodiv@divisor+6,w
  9235     14E5  0427               	iorwf	___aodiv@divisor+7,w
  9236     14E6  1903               	skipnz
  9237     14E7  2D3E               	goto	l3217
  9238     14E8  01F1               	clrf	___aodiv@counter
  9239     14E9  0AF1               	incf	___aodiv@counter,f
  9240     14EA                     l3205:
  9241     14EA  1BA7               	btfsc	___aodiv@divisor+7,7
  9242     14EB  2CF9               	goto	l3207
  9243     14EC  35A0               	lslf	___aodiv@divisor,f
  9244     14ED  0DA1               	rlf	___aodiv@divisor+1,f
  9245     14EE  0DA2               	rlf	___aodiv@divisor+2,f
  9246     14EF  0DA3               	rlf	___aodiv@divisor+3,f
  9247     14F0  0DA4               	rlf	___aodiv@divisor+4,f
  9248     14F1  0DA5               	rlf	___aodiv@divisor+5,f
  9249     14F2  0DA6               	rlf	___aodiv@divisor+6,f
  9250     14F3  0DA7               	rlf	___aodiv@divisor+7,f
  9251     14F4  3001               	movlw	1
  9252     14F5  00F0               	movwf	??___aodiv
  9253     14F6  0870               	movf	??___aodiv,w
  9254     14F7  07F1               	addwf	___aodiv@counter,f
  9255     14F8  2CEA               	goto	l3205
  9256     14F9                     l3207:
  9257     14F9  35F3               	lslf	___aodiv@quotient,f
  9258     14FA  0DF4               	rlf	___aodiv@quotient+1,f
  9259     14FB  0DF5               	rlf	___aodiv@quotient+2,f
  9260     14FC  0DF6               	rlf	___aodiv@quotient+3,f
  9261     14FD  0DF7               	rlf	___aodiv@quotient+4,f
  9262     14FE  0DF8               	rlf	___aodiv@quotient+5,f
  9263     14FF  0DF9               	rlf	___aodiv@quotient+6,f
  9264     1500  0DFA               	rlf	___aodiv@quotient+7,f
  9265     1501  0827               	movf	___aodiv@divisor+7,w
  9266     1502  022F               	subwf	___aodiv@dividend+7,w
  9267     1503  1D03               	skipz
  9268     1504  2D1F               	goto	u3935
  9269     1505  0826               	movf	___aodiv@divisor+6,w
  9270     1506  022E               	subwf	___aodiv@dividend+6,w
  9271     1507  1D03               	skipz
  9272     1508  2D1F               	goto	u3935
  9273     1509  0825               	movf	___aodiv@divisor+5,w
  9274     150A  022D               	subwf	___aodiv@dividend+5,w
  9275     150B  1D03               	skipz
  9276     150C  2D1F               	goto	u3935
  9277     150D  0824               	movf	___aodiv@divisor+4,w
  9278     150E  022C               	subwf	___aodiv@dividend+4,w
  9279     150F  1D03               	skipz
  9280     1510  2D1F               	goto	u3935
  9281     1511  0823               	movf	___aodiv@divisor+3,w
  9282     1512  022B               	subwf	___aodiv@dividend+3,w
  9283     1513  1D03               	skipz
  9284     1514  2D1F               	goto	u3935
  9285     1515  0822               	movf	___aodiv@divisor+2,w
  9286     1516  022A               	subwf	___aodiv@dividend+2,w
  9287     1517  1D03               	skipz
  9288     1518  2D1F               	goto	u3935
  9289     1519  0821               	movf	___aodiv@divisor+1,w
  9290     151A  0229               	subwf	___aodiv@dividend+1,w
  9291     151B  1D03               	skipz
  9292     151C  2D1F               	goto	u3935
  9293     151D  0820               	movf	___aodiv@divisor,w
  9294     151E  0228               	subwf	___aodiv@dividend,w
  9295     151F                     u3935:
  9296     151F  1C03               	skipc
  9297     1520  2D32               	goto	l3215
  9298     1521  0820               	movf	___aodiv@divisor,w
  9299     1522  02A8               	subwf	___aodiv@dividend,f
  9300     1523  0821               	movf	___aodiv@divisor+1,w
  9301     1524  3BA9               	subwfb	___aodiv@dividend+1,f
  9302     1525  0822               	movf	___aodiv@divisor+2,w
  9303     1526  3BAA               	subwfb	___aodiv@dividend+2,f
  9304     1527  0823               	movf	___aodiv@divisor+3,w
  9305     1528  3BAB               	subwfb	___aodiv@dividend+3,f
  9306     1529  0824               	movf	___aodiv@divisor+4,w
  9307     152A  3BAC               	subwfb	___aodiv@dividend+4,f
  9308     152B  0825               	movf	___aodiv@divisor+5,w
  9309     152C  3BAD               	subwfb	___aodiv@dividend+5,f
  9310     152D  0826               	movf	___aodiv@divisor+6,w
  9311     152E  3BAE               	subwfb	___aodiv@dividend+6,f
  9312     152F  0827               	movf	___aodiv@divisor+7,w
  9313     1530  3BAF               	subwfb	___aodiv@dividend+7,f
  9314     1531  1473               	bsf	___aodiv@quotient,0
  9315     1532                     l3215:
  9316     1532  36A7               	lsrf	___aodiv@divisor+7,f
  9317     1533  0CA6               	rrf	___aodiv@divisor+6,f
  9318     1534  0CA5               	rrf	___aodiv@divisor+5,f
  9319     1535  0CA4               	rrf	___aodiv@divisor+4,f
  9320     1536  0CA3               	rrf	___aodiv@divisor+3,f
  9321     1537  0CA2               	rrf	___aodiv@divisor+2,f
  9322     1538  0CA1               	rrf	___aodiv@divisor+1,f
  9323     1539  0CA0               	rrf	___aodiv@divisor,f
  9324     153A  3001               	movlw	1
  9325     153B  02F1               	subwf	___aodiv@counter,f
  9326     153C  1D03               	btfss	3,2
  9327     153D  2CF9               	goto	l3207
  9328     153E                     l3217:
  9329     153E  0872               	movf	___aodiv@sign,w
  9330     153F  1903               	btfsc	3,2
  9331     1540  2D5F               	goto	l452
  9332     1541  09F3               	comf	___aodiv@quotient,f
  9333     1542  09F4               	comf	___aodiv@quotient+1,f
  9334     1543  09F5               	comf	___aodiv@quotient+2,f
  9335     1544  09F6               	comf	___aodiv@quotient+3,f
  9336     1545  09F7               	comf	___aodiv@quotient+4,f
  9337     1546  09F8               	comf	___aodiv@quotient+5,f
  9338     1547  09F9               	comf	___aodiv@quotient+6,f
  9339     1548  09FA               	comf	___aodiv@quotient+7,f
  9340     1549  0AF3               	incf	___aodiv@quotient,f
  9341     154A  1D03               	skipz
  9342     154B  2D5F               	goto	l452
  9343     154C  0AF4               	incf	___aodiv@quotient+1,f
  9344     154D  1D03               	skipz
  9345     154E  2D5F               	goto	l452
  9346     154F  0AF5               	incf	___aodiv@quotient+2,f
  9347     1550  1D03               	skipz
  9348     1551  2D5F               	goto	l452
  9349     1552  0AF6               	incf	___aodiv@quotient+3,f
  9350     1553  1D03               	skipz
  9351     1554  2D5F               	goto	l452
  9352     1555  0AF7               	incf	___aodiv@quotient+4,f
  9353     1556  1D03               	skipz
  9354     1557  2D5F               	goto	l452
  9355     1558  0AF8               	incf	___aodiv@quotient+5,f
  9356     1559  1D03               	skipz
  9357     155A  2D5F               	goto	l452
  9358     155B  0AF9               	incf	___aodiv@quotient+6,f
  9359     155C  1D03               	skipz
  9360     155D  2D5F               	goto	l452
  9361     155E  0AFA               	incf	___aodiv@quotient+7,f
  9362     155F                     l452:
  9363     155F  0873               	movf	___aodiv@quotient,w
  9364     1560  0020               	movlb	0	; select bank0
  9365     1561  00A0               	movwf	?___aodiv
  9366     1562  0874               	movf	___aodiv@quotient+1,w
  9367     1563  00A1               	movwf	?___aodiv+1
  9368     1564  0875               	movf	___aodiv@quotient+2,w
  9369     1565  00A2               	movwf	?___aodiv+2
  9370     1566  0876               	movf	___aodiv@quotient+3,w
  9371     1567  00A3               	movwf	?___aodiv+3
  9372     1568  0877               	movf	___aodiv@quotient+4,w
  9373     1569  00A4               	movwf	?___aodiv+4
  9374     156A  0878               	movf	___aodiv@quotient+5,w
  9375     156B  00A5               	movwf	?___aodiv+5
  9376     156C  0879               	movf	___aodiv@quotient+6,w
  9377     156D  00A6               	movwf	?___aodiv+6
  9378     156E  087A               	movf	___aodiv@quotient+7,w
  9379     156F  00A7               	movwf	?___aodiv+7
  9380     1570  0008               	return
  9381     1571                     __end_of___aodiv:
  9382                           
  9383                           	psect	text29
  9384     11B6                     __ptext29:	
  9385 ;; *************** function _atoi *****************
  9386 ;; Defined at:
  9387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;  s               2    6[COMMON] PTR const unsigned char 
  9390 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;  n               2    2[BANK0 ] int 
  9393 ;;  neg             2    0[BANK0 ] int 
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  2    6[COMMON] int 
  9396 ;; Registers used:
  9397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9398 ;; Tracked objects:
  9399 ;;		On entry : 1F/0
  9400 ;;		On exit  : 1F/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9403 ;;      Params:         2       0       0       0       0       0       0       0
  9404 ;;      Locals:         0       4       0       0       0       0       0       0
  9405 ;;      Temps:          3       0       0       0       0       0       0       0
  9406 ;;      Totals:         5       4       0       0       0       0       0       0
  9407 ;;Total ram usage:        9 bytes
  9408 ;; Hardware stack levels used: 1
  9409 ;; Hardware stack levels required when called: 1
  9410 ;; This function calls:
  9411 ;;		___wmul
  9412 ;;		_isdigit
  9413 ;;		_isspace
  9414 ;; This function is called by:
  9415 ;;		_vfpfcnvrt
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419     11B6                     _atoi:	
  9420                           ;psect for function _atoi
  9421                           
  9422                           
  9423                           ;incstack = 0
  9424                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9425     11B6  01A2               	clrf	atoi@n
  9426     11B7  01A3               	clrf	atoi@n+1
  9427     11B8  01A0               	clrf	atoi@neg
  9428     11B9  01A1               	clrf	atoi@neg+1
  9429     11BA                     l3975:
  9430     11BA  0876               	movf	atoi@s,w
  9431     11BB  0084               	movwf	4
  9432     11BC  0877               	movf	atoi@s+1,w
  9433     11BD  0085               	movwf	5
  9434     11BE  0012               	moviw fsr0++
  9435     11BF  3A20               	xorlw	32
  9436     11C0  1D03               	btfss	3,2
  9437     11C1  29C7               	goto	l3977
  9438     11C2                     l3971:
  9439     11C2  3001               	movlw	1
  9440     11C3  07F6               	addwf	atoi@s,f
  9441     11C4  3000               	movlw	0
  9442     11C5  3DF7               	addwfc	atoi@s+1,f
  9443     11C6  29BA               	goto	l3975
  9444     11C7                     l3977:
  9445     11C7  0876               	movf	atoi@s,w
  9446     11C8  0084               	movwf	4
  9447     11C9  0877               	movf	atoi@s+1,w
  9448     11CA  0085               	movwf	5
  9449     11CB  0800               	movf	0,w	;code access
  9450     11CC  3EF7               	addlw	247
  9451     11CD  00F8               	movwf	??_atoi
  9452     11CE  30FF               	movlw	255
  9453     11CF  1803               	skipnc
  9454     11D0  3000               	movlw	0
  9455     11D1  00F9               	movwf	??_atoi+1
  9456     11D2  3000               	movlw	0
  9457     11D3  0279               	subwf	??_atoi+1,w
  9458     11D4  3005               	movlw	5
  9459     11D5  1903               	skipnz
  9460     11D6  0278               	subwf	??_atoi,w
  9461     11D7  1803               	btfsc	3,0
  9462     11D8  29DF               	goto	l3981
  9463     11D9  29C2               	goto	l3971
  9464     11DA                     l3979:
  9465     11DA  3001               	movlw	1
  9466     11DB  00A0               	movwf	atoi@neg
  9467     11DC  3000               	movlw	0
  9468     11DD  00A1               	movwf	atoi@neg+1
  9469     11DE  2A12               	goto	l995
  9470     11DF                     l3981:
  9471     11DF  0876               	movf	atoi@s,w
  9472     11E0  0084               	movwf	4
  9473     11E1  0877               	movf	atoi@s+1,w
  9474     11E2  0085               	movwf	5
  9475     11E3  0800               	movf	0,w	;code access
  9476     11E4  00F8               	movwf	??_atoi
  9477     11E5  01F9               	clrf	??_atoi+1
  9478                           
  9479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9480                           ; Switch size 1, requested type "simple"
  9481                           ; Number of cases is 1, Range of values is 0 to 0
  9482                           ; switch strategies available:
  9483                           ; Name         Instructions Cycles
  9484                           ; simple_byte            4     3 (average)
  9485                           ; direct_byte            8     6 (fixed)
  9486                           ; jumptable            260     6 (fixed)
  9487                           ;	Chosen strategy is simple_byte
  9488     11E6  0879               	movf	??_atoi+1,w
  9489     11E7  3A00               	xorlw	0	; case 0
  9490     11E8  1903               	skipnz
  9491     11E9  29EB               	goto	l4793
  9492     11EA  2A16               	goto	l3989
  9493     11EB                     l4793:
  9494                           
  9495                           ; Switch size 1, requested type "simple"
  9496                           ; Number of cases is 2, Range of values is 43 to 45
  9497                           ; switch strategies available:
  9498                           ; Name         Instructions Cycles
  9499                           ; simple_byte            7     4 (average)
  9500                           ; direct_byte           15     9 (fixed)
  9501                           ; jumptable            263     9 (fixed)
  9502                           ;	Chosen strategy is simple_byte
  9503     11EB  0878               	movf	??_atoi,w
  9504     11EC  3A2B               	xorlw	43	; case 43
  9505     11ED  1903               	skipnz
  9506     11EE  2A12               	goto	l995
  9507     11EF  3A06               	xorlw	6	; case 45
  9508     11F0  1903               	skipnz
  9509     11F1  29DA               	goto	l3979
  9510     11F2  2A16               	goto	l3989
  9511     11F3                     l3983:
  9512     11F3  0876               	movf	atoi@s,w
  9513     11F4  0084               	movwf	4
  9514     11F5  0877               	movf	atoi@s+1,w
  9515     11F6  0085               	movwf	5
  9516     11F7  0800               	movf	0,w	;code access
  9517     11F8  00F8               	movwf	??_atoi
  9518     11F9  0823               	movf	atoi@n+1,w
  9519     11FA  00F1               	movwf	___wmul@multiplier+1
  9520     11FB  0822               	movf	atoi@n,w
  9521     11FC  00F0               	movwf	___wmul@multiplier
  9522     11FD  300A               	movlw	10
  9523     11FE  00F2               	movwf	___wmul@multiplicand
  9524     11FF  3000               	movlw	0
  9525     1200  00F3               	movwf	___wmul@multiplicand+1
  9526     1201  319C  24AD  3191   	fcall	___wmul
  9527     1204  0871               	movf	?___wmul+1,w
  9528     1205  00FA               	movwf	??_atoi+2
  9529     1206  0878               	movf	??_atoi,w
  9530     1207  0270               	subwf	?___wmul,w
  9531     1208  00F9               	movwf	??_atoi+1
  9532     1209  1C03               	skipc
  9533     120A  03FA               	decf	??_atoi+2,f
  9534     120B  0879               	movf	??_atoi+1,w
  9535     120C  3E30               	addlw	48
  9536     120D  0020               	movlb	0	; select bank0
  9537     120E  00A2               	movwf	atoi@n
  9538     120F  3000               	movlw	0
  9539     1210  3D7A               	addwfc	??_atoi+2,w
  9540     1211  00A3               	movwf	atoi@n+1
  9541     1212                     l995:
  9542     1212  3001               	movlw	1
  9543     1213  07F6               	addwf	atoi@s,f
  9544     1214  3000               	movlw	0
  9545     1215  3DF7               	addwfc	atoi@s+1,f
  9546     1216                     l3989:
  9547     1216  0876               	movf	atoi@s,w
  9548     1217  0084               	movwf	4
  9549     1218  0877               	movf	atoi@s+1,w
  9550     1219  0085               	movwf	5
  9551     121A  0800               	movf	0,w	;code access
  9552     121B  3ED0               	addlw	208
  9553     121C  00F8               	movwf	??_atoi
  9554     121D  30FF               	movlw	255
  9555     121E  1803               	skipnc
  9556     121F  3000               	movlw	0
  9557     1220  00F9               	movwf	??_atoi+1
  9558     1221  3000               	movlw	0
  9559     1222  0279               	subwf	??_atoi+1,w
  9560     1223  300A               	movlw	10
  9561     1224  1903               	skipnz
  9562     1225  0278               	subwf	??_atoi,w
  9563     1226  1C03               	skipc
  9564     1227  29F3               	goto	l3983
  9565     1228  0820               	movf	atoi@neg,w
  9566     1229  0421               	iorwf	atoi@neg+1,w
  9567     122A  1D03               	btfss	3,2
  9568     122B  2A38               	goto	l3995
  9569     122C  0922               	comf	atoi@n,w
  9570     122D  00F8               	movwf	??_atoi
  9571     122E  0923               	comf	atoi@n+1,w
  9572     122F  00F9               	movwf	??_atoi+1
  9573     1230  0AF8               	incf	??_atoi,f
  9574     1231  1903               	skipnz
  9575     1232  0AF9               	incf	??_atoi+1,f
  9576     1233  0878               	movf	??_atoi,w
  9577     1234  00F6               	movwf	?_atoi
  9578     1235  0879               	movf	??_atoi+1,w
  9579     1236  00F7               	movwf	?_atoi+1
  9580     1237  0008               	return
  9581     1238                     l3995:
  9582     1238  0823               	movf	atoi@n+1,w
  9583     1239  00F7               	movwf	?_atoi+1
  9584     123A  0822               	movf	atoi@n,w
  9585     123B  00F6               	movwf	?_atoi
  9586     123C  0008               	return
  9587     123D                     __end_of_atoi:
  9588                           
  9589                           	psect	text30
  9590     1CE3                     __ptext30:	
  9591 ;; *************** function _isspace *****************
  9592 ;; Defined at:
  9593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  c               2    0[COMMON] int 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  2    0[COMMON] int 
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9607 ;;      Params:         2       0       0       0       0       0       0       0
  9608 ;;      Locals:         1       0       0       0       0       0       0       0
  9609 ;;      Temps:          2       0       0       0       0       0       0       0
  9610 ;;      Totals:         5       0       0       0       0       0       0       0
  9611 ;;Total ram usage:        5 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_atoi
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620     1CE3                     _isspace:	
  9621                           ;psect for function _isspace
  9622                           
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in _isspace: [wreg+status,2+status,0]
  9626     1CE3  01F4               	clrf	_isspace$1035
  9627     1CE4  0AF4               	incf	_isspace$1035,f
  9628     1CE5  3020               	movlw	32
  9629     1CE6  0670               	xorwf	isspace@c,w
  9630     1CE7  0471               	iorwf	isspace@c+1,w
  9631     1CE8  1903               	btfsc	3,2
  9632     1CE9  2CF7               	goto	l3713
  9633     1CEA  0870               	movf	isspace@c,w
  9634     1CEB  3EF7               	addlw	247
  9635     1CEC  00F2               	movwf	??_isspace
  9636     1CED  30FF               	movlw	255
  9637     1CEE  3D71               	addwfc	isspace@c+1,w
  9638     1CEF  00F3               	movwf	??_isspace+1
  9639     1CF0  3000               	movlw	0
  9640     1CF1  0273               	subwf	??_isspace+1,w
  9641     1CF2  3005               	movlw	5
  9642     1CF3  1903               	skipnz
  9643     1CF4  0272               	subwf	??_isspace,w
  9644     1CF5  1803               	btfsc	3,0
  9645     1CF6  01F4               	clrf	_isspace$1035
  9646     1CF7                     l3713:
  9647     1CF7  0874               	movf	_isspace$1035,w
  9648     1CF8  00F2               	movwf	??_isspace
  9649     1CF9  01F3               	clrf	??_isspace+1
  9650     1CFA  0872               	movf	??_isspace,w
  9651     1CFB  00F0               	movwf	?_isspace
  9652     1CFC  0873               	movf	??_isspace+1,w
  9653     1CFD  00F1               	movwf	?_isspace+1
  9654     1CFE  0008               	return
  9655     1CFF                     __end_of_isspace:
  9656                           
  9657                           	psect	text31
  9658     1C7F                     __ptext31:	
  9659 ;; *************** function _isdigit *****************
  9660 ;; Defined at:
  9661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  c               2    0[COMMON] int 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  2    0[COMMON] int 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9675 ;;      Params:         2       0       0       0       0       0       0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0
  9677 ;;      Temps:          4       0       0       0       0       0       0       0
  9678 ;;      Totals:         6       0       0       0       0       0       0       0
  9679 ;;Total ram usage:        6 bytes
  9680 ;; Hardware stack levels used: 1
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_vfpfcnvrt
  9685 ;;		_atoi
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689     1C7F                     _isdigit:	
  9690                           ;psect for function _isdigit
  9691                           
  9692                           
  9693                           ;incstack = 0
  9694                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9695     1C7F  0870               	movf	isdigit@c,w
  9696     1C80  3ED0               	addlw	208
  9697     1C81  00F2               	movwf	??_isdigit
  9698     1C82  30FF               	movlw	255
  9699     1C83  3D71               	addwfc	isdigit@c+1,w
  9700     1C84  00F3               	movwf	??_isdigit+1
  9701     1C85  3000               	movlw	0
  9702     1C86  0273               	subwf	??_isdigit+1,w
  9703     1C87  300A               	movlw	10
  9704     1C88  1903               	skipnz
  9705     1C89  0272               	subwf	??_isdigit,w
  9706     1C8A  1803               	btfsc	3,0
  9707     1C8B  2C8E               	goto	u5050
  9708     1C8C  3001               	movlw	1
  9709     1C8D  2C8F               	goto	u5060
  9710     1C8E                     u5050:
  9711     1C8E  3000               	movlw	0
  9712     1C8F                     u5060:
  9713     1C8F  00F4               	movwf	??_isdigit+2
  9714     1C90  01F5               	clrf	??_isdigit+3
  9715     1C91  0874               	movf	??_isdigit+2,w
  9716     1C92  00F0               	movwf	?_isdigit
  9717     1C93  0875               	movf	??_isdigit+3,w
  9718     1C94  00F1               	movwf	?_isdigit+1
  9719     1C95  0008               	return
  9720     1C96                     __end_of_isdigit:
  9721                           
  9722                           	psect	text32
  9723     1CAD                     __ptext32:	
  9724 ;; *************** function ___wmul *****************
  9725 ;; Defined at:
  9726 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  multiplier      2    0[COMMON] unsigned int 
  9729 ;;  multiplicand    2    2[COMMON] unsigned int 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  product         2    4[COMMON] unsigned int 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2    0[COMMON] unsigned int 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0
  9736 ;; Tracked objects:
  9737 ;;		On entry : 1C/3
  9738 ;;		On exit  : 1C/0
  9739 ;;		Unchanged: 1C/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9741 ;;      Params:         4       0       0       0       0       0       0       0
  9742 ;;      Locals:         2       0       0       0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0
  9744 ;;      Totals:         6       0       0       0       0       0       0       0
  9745 ;;Total ram usage:        6 bytes
  9746 ;; Hardware stack levels used: 1
  9747 ;; This function calls:
  9748 ;;		Nothing
  9749 ;; This function is called by:
  9750 ;;		_main
  9751 ;;		_atoi
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755     1CAD                     ___wmul:	
  9756                           ;psect for function ___wmul
  9757                           
  9758                           
  9759                           ;incstack = 0
  9760                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9761     1CAD  01F4               	clrf	___wmul@product
  9762     1CAE  01F5               	clrf	___wmul@product+1
  9763     1CAF                     l3171:
  9764     1CAF  1C70               	btfss	___wmul@multiplier,0
  9765     1CB0  2CB5               	goto	l352
  9766     1CB1  0872               	movf	___wmul@multiplicand,w
  9767     1CB2  07F4               	addwf	___wmul@product,f
  9768     1CB3  0873               	movf	___wmul@multiplicand+1,w
  9769     1CB4  3DF5               	addwfc	___wmul@product+1,f
  9770     1CB5                     l352:
  9771     1CB5  3001               	movlw	1
  9772     1CB6                     u3835:
  9773     1CB6  35F2               	lslf	___wmul@multiplicand,f
  9774     1CB7  0DF3               	rlf	___wmul@multiplicand+1,f
  9775     1CB8  0B89               	decfsz	9,f
  9776     1CB9  2CB6               	goto	u3835
  9777     1CBA  3001               	movlw	1
  9778     1CBB                     u3845:
  9779     1CBB  36F1               	lsrf	___wmul@multiplier+1,f
  9780     1CBC  0CF0               	rrf	___wmul@multiplier,f
  9781     1CBD  0B89               	decfsz	9,f
  9782     1CBE  2CBB               	goto	u3845
  9783     1CBF  0870               	movf	___wmul@multiplier,w
  9784     1CC0  0471               	iorwf	___wmul@multiplier+1,w
  9785     1CC1  1D03               	btfss	3,2
  9786     1CC2  2CAF               	goto	l3171
  9787     1CC3  0875               	movf	___wmul@product+1,w
  9788     1CC4  00F1               	movwf	?___wmul+1
  9789     1CC5  0874               	movf	___wmul@product,w
  9790     1CC6  00F0               	movwf	?___wmul
  9791     1CC7  0008               	return
  9792     1CC8                     __end_of___wmul:
  9793                           
  9794                           	psect	text33
  9795     1C6B                     __ptext33:	
  9796 ;; *************** function _lcd_DisplayString *****************
  9797 ;; Defined at:
  9798 ;;		line 80 in file "main.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  str             2    2[COMMON] PTR unsigned char 
  9801 ;;		 -> STR_14(5), STR_13(15), STR_12(6), STR_11(12), 
  9802 ;;		 -> STR_10(7), STR_9(15), STR_8(14), STR_7(14), 
  9803 ;;		 -> STR_6(16), main@inputTime(6), main@inputTemp(3), STR_5(9), 
  9804 ;;		 -> STR_4(12), display_int@str(16), display_float2@str(16), display_float@str(16), 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;		None
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/3
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9816 ;;      Params:         2       0       0       0       0       0       0       0
  9817 ;;      Locals:         0       0       0       0       0       0       0       0
  9818 ;;      Temps:          1       0       0       0       0       0       0       0
  9819 ;;      Totals:         3       0       0       0       0       0       0       0
  9820 ;;Total ram usage:        3 bytes
  9821 ;; Hardware stack levels used: 1
  9822 ;; Hardware stack levels required when called: 1
  9823 ;; This function calls:
  9824 ;;		_lcd_char
  9825 ;; This function is called by:
  9826 ;;		_display_float
  9827 ;;		_display_int
  9828 ;;		_main
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832     1C6B                     _lcd_DisplayString:	
  9833                           ;psect for function _lcd_DisplayString
  9834                           
  9835     1C6B                     l4127:	
  9836                           ;main.c: 81:     while(*str)
  9837                           
  9838                           ;incstack = 0
  9839                           ; Regs used in _lcd_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9840                           
  9841                           
  9842                           ;main.c: 81:     while(*str)
  9843     1C6B  0872               	movf	lcd_DisplayString@str,w
  9844     1C6C  0084               	movwf	4
  9845     1C6D  0873               	movf	lcd_DisplayString@str+1,w
  9846     1C6E  0085               	movwf	5
  9847     1C6F  0012               	moviw fsr0++
  9848     1C70  1903               	btfsc	3,2
  9849     1C71  0008               	return
  9850                           
  9851                           ;main.c: 82:     {;main.c: 83:         lcd_char(*str);
  9852     1C72  0872               	movf	lcd_DisplayString@str,w
  9853     1C73  0084               	movwf	4
  9854     1C74  0873               	movf	lcd_DisplayString@str+1,w
  9855     1C75  0085               	movwf	5
  9856     1C76  0800               	movf	0,w	;code access
  9857     1C77  319E  2650  319C   	fcall	_lcd_char
  9858                           
  9859                           ;main.c: 84:         str++;
  9860     1C7A  3001               	movlw	1
  9861     1C7B  07F2               	addwf	lcd_DisplayString@str,f
  9862     1C7C  3000               	movlw	0
  9863     1C7D  3DF3               	addwfc	lcd_DisplayString@str+1,f
  9864     1C7E  2C6B               	goto	l4127
  9865     1C7F                     __end_of_lcd_DisplayString:
  9866                           
  9867                           	psect	text34
  9868     1E50                     __ptext34:	
  9869 ;; *************** function _lcd_char *****************
  9870 ;; Defined at:
  9871 ;;		line 70 in file "main.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  c               1    wreg     unsigned char 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  c               1    1[COMMON] unsigned char 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/3
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9885 ;;      Params:         0       0       0       0       0       0       0       0
  9886 ;;      Locals:         1       0       0       0       0       0       0       0
  9887 ;;      Temps:          1       0       0       0       0       0       0       0
  9888 ;;      Totals:         2       0       0       0       0       0       0       0
  9889 ;;Total ram usage:        2 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_lcd_DisplayString
  9895 ;;		_main
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899     1E50                     _lcd_char:	
  9900                           ;psect for function _lcd_char
  9901                           
  9902                           
  9903                           ;incstack = 0
  9904                           ; Regs used in _lcd_char: [wreg+status,2+status,0]
  9905                           ;lcd_char@c stored from wreg
  9906     1E50  00F1               	movwf	lcd_char@c
  9907                           
  9908                           ;main.c: 70: void lcd_char(unsigned char c);main.c: 71: {;main.c: 72:     LATB = 0x30 + 
      +                          ((c >> 4) & 0x0f);
  9909     1E51  0871               	movf	lcd_char@c,w
  9910     1E52  00F0               	movwf	??_lcd_char
  9911     1E53  3004               	movlw	4
  9912     1E54                     u5635:
  9913     1E54  36F0               	lsrf	??_lcd_char,f
  9914     1E55  0B89               	decfsz	9,f
  9915     1E56  2E54               	goto	u5635
  9916     1E57  0870               	movf	??_lcd_char,w
  9917     1E58  390F               	andlw	15
  9918     1E59  3E30               	addlw	48
  9919     1E5A  0022               	movlb	2	; select bank2
  9920     1E5B  008D               	movwf	13	;volatile
  9921                           
  9922                           ;main.c: 73:     LATB = 0x20 + ((c >> 4) & 0x0f);
  9923     1E5C  0871               	movf	lcd_char@c,w
  9924     1E5D  00F0               	movwf	??_lcd_char
  9925     1E5E  3004               	movlw	4
  9926     1E5F                     u5645:
  9927     1E5F  36F0               	lsrf	??_lcd_char,f
  9928     1E60  0B89               	decfsz	9,f
  9929     1E61  2E5F               	goto	u5645
  9930     1E62  0870               	movf	??_lcd_char,w
  9931     1E63  390F               	andlw	15
  9932     1E64  3E20               	addlw	32
  9933     1E65  008D               	movwf	13	;volatile
  9934                           
  9935                           ;main.c: 74:     _delay((unsigned long)((2)*(19600000/4000.0)));
  9936     1E66  300D               	movlw	13
  9937     1E67  00F0               	movwf	??_lcd_char
  9938     1E68  30B9               	movlw	185
  9939     1E69                     u6787:
  9940     1E69  0B89               	decfsz	9,f
  9941     1E6A  2E69               	goto	u6787
  9942     1E6B  0BF0               	decfsz	??_lcd_char,f
  9943     1E6C  2E69               	goto	u6787
  9944     1E6D  0000               	nop
  9945                           
  9946                           ;main.c: 75:     LATB = 0x30 + (c & 0x0f);
  9947     1E6E  0871               	movf	lcd_char@c,w
  9948     1E6F  390F               	andlw	15
  9949     1E70  3E30               	addlw	48
  9950     1E71  0022               	movlb	2	; select bank2
  9951     1E72  008D               	movwf	13	;volatile
  9952                           
  9953                           ;main.c: 76:     LATB = 0x20 + (c & 0x0f);
  9954     1E73  0871               	movf	lcd_char@c,w
  9955     1E74  390F               	andlw	15
  9956     1E75  3E20               	addlw	32
  9957     1E76  008D               	movwf	13	;volatile
  9958                           
  9959                           ;main.c: 77:     _delay((unsigned long)((2)*(19600000/4000.0)));
  9960     1E77  300D               	movlw	13
  9961     1E78  00F0               	movwf	??_lcd_char
  9962     1E79  30B9               	movlw	185
  9963     1E7A                     u6797:
  9964     1E7A  0B89               	decfsz	9,f
  9965     1E7B  2E7A               	goto	u6797
  9966     1E7C  0BF0               	decfsz	??_lcd_char,f
  9967     1E7D  2E7A               	goto	u6797
  9968     1E7E  0000               	nop
  9969     1E7F  0008               	return
  9970     1E80                     __end_of_lcd_char:
  9971                           
  9972                           	psect	text35
  9973     1EC1                     __ptext35:	
  9974 ;; *************** function ___awmod *****************
  9975 ;; Defined at:
  9976 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  divisor         2    0[COMMON] int 
  9979 ;;  dividend        2    2[COMMON] int 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  sign            1    6[COMMON] unsigned char 
  9982 ;;  counter         1    5[COMMON] unsigned char 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  2    0[COMMON] int 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 1F/3
  9989 ;;		On exit  : 1F/3
  9990 ;;		Unchanged: 1E/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9992 ;;      Params:         4       0       0       0       0       0       0       0
  9993 ;;      Locals:         2       0       0       0       0       0       0       0
  9994 ;;      Temps:          1       0       0       0       0       0       0       0
  9995 ;;      Totals:         7       0       0       0       0       0       0       0
  9996 ;;Total ram usage:        7 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_main
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005     1EC1                     ___awmod:	
 10006                           ;psect for function ___awmod
 10007                           
 10008                           
 10009                           ;incstack = 0
 10010                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10011     1EC1  01F6               	clrf	___awmod@sign
 10012     1EC2  1FF3               	btfss	___awmod@dividend+1,7
 10013     1EC3  2ECB               	goto	l4403
 10014     1EC4  09F2               	comf	___awmod@dividend,f
 10015     1EC5  09F3               	comf	___awmod@dividend+1,f
 10016     1EC6  0AF2               	incf	___awmod@dividend,f
 10017     1EC7  1903               	skipnz
 10018     1EC8  0AF3               	incf	___awmod@dividend+1,f
 10019     1EC9  01F6               	clrf	___awmod@sign
 10020     1ECA  0AF6               	incf	___awmod@sign,f
 10021     1ECB                     l4403:
 10022     1ECB  1FF1               	btfss	___awmod@divisor+1,7
 10023     1ECC  2ED2               	goto	l4407
 10024     1ECD  09F0               	comf	___awmod@divisor,f
 10025     1ECE  09F1               	comf	___awmod@divisor+1,f
 10026     1ECF  0AF0               	incf	___awmod@divisor,f
 10027     1ED0  1903               	skipnz
 10028     1ED1  0AF1               	incf	___awmod@divisor+1,f
 10029     1ED2                     l4407:
 10030     1ED2  0870               	movf	___awmod@divisor,w
 10031     1ED3  0471               	iorwf	___awmod@divisor+1,w
 10032     1ED4  1903               	btfsc	3,2
 10033     1ED5  2EF9               	goto	l4425
 10034     1ED6  01F5               	clrf	___awmod@counter
 10035     1ED7  0AF5               	incf	___awmod@counter,f
 10036     1ED8                     l4415:
 10037     1ED8  1BF1               	btfsc	___awmod@divisor+1,7
 10038     1ED9  2EE4               	goto	l4417
 10039     1EDA  3001               	movlw	1
 10040     1EDB                     u6245:
 10041     1EDB  35F0               	lslf	___awmod@divisor,f
 10042     1EDC  0DF1               	rlf	___awmod@divisor+1,f
 10043     1EDD  0B89               	decfsz	9,f
 10044     1EDE  2EDB               	goto	u6245
 10045     1EDF  3001               	movlw	1
 10046     1EE0  00F4               	movwf	??___awmod
 10047     1EE1  0874               	movf	??___awmod,w
 10048     1EE2  07F5               	addwf	___awmod@counter,f
 10049     1EE3  2ED8               	goto	l4415
 10050     1EE4                     l4417:
 10051     1EE4  0871               	movf	___awmod@divisor+1,w
 10052     1EE5  0273               	subwf	___awmod@dividend+1,w
 10053     1EE6  1D03               	skipz
 10054     1EE7  2EEA               	goto	u6265
 10055     1EE8  0870               	movf	___awmod@divisor,w
 10056     1EE9  0272               	subwf	___awmod@dividend,w
 10057     1EEA                     u6265:
 10058     1EEA  1C03               	skipc
 10059     1EEB  2EF0               	goto	l4421
 10060     1EEC  0870               	movf	___awmod@divisor,w
 10061     1EED  02F2               	subwf	___awmod@dividend,f
 10062     1EEE  0871               	movf	___awmod@divisor+1,w
 10063     1EEF  3BF3               	subwfb	___awmod@dividend+1,f
 10064     1EF0                     l4421:
 10065     1EF0  3001               	movlw	1
 10066     1EF1                     u6275:
 10067     1EF1  36F1               	lsrf	___awmod@divisor+1,f
 10068     1EF2  0CF0               	rrf	___awmod@divisor,f
 10069     1EF3  0B89               	decfsz	9,f
 10070     1EF4  2EF1               	goto	u6275
 10071     1EF5  3001               	movlw	1
 10072     1EF6  02F5               	subwf	___awmod@counter,f
 10073     1EF7  1D03               	btfss	3,2
 10074     1EF8  2EE4               	goto	l4417
 10075     1EF9                     l4425:
 10076     1EF9  0876               	movf	___awmod@sign,w
 10077     1EFA  1903               	btfsc	3,2
 10078     1EFB  2F01               	goto	l4429
 10079     1EFC  09F2               	comf	___awmod@dividend,f
 10080     1EFD  09F3               	comf	___awmod@dividend+1,f
 10081     1EFE  0AF2               	incf	___awmod@dividend,f
 10082     1EFF  1903               	skipnz
 10083     1F00  0AF3               	incf	___awmod@dividend+1,f
 10084     1F01                     l4429:
 10085     1F01  0873               	movf	___awmod@dividend+1,w
 10086     1F02  00F1               	movwf	?___awmod+1
 10087     1F03  0872               	movf	___awmod@dividend,w
 10088     1F04  00F0               	movwf	?___awmod
 10089     1F05  0008               	return
 10090     1F06                     __end_of___awmod:
 10091                           
 10092                           	psect	text36
 10093     1004                     __ptext36:	
 10094 ;; *************** function ___awdiv *****************
 10095 ;; Defined at:
 10096 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  divisor         2    7[COMMON] int 
 10099 ;;  dividend        2    9[COMMON] int 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  quotient        2    2[BANK0 ] int 
 10102 ;;  sign            1    1[BANK0 ] unsigned char 
 10103 ;;  counter         1    0[BANK0 ] unsigned char 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2    7[COMMON] int 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : 1F/3
 10110 ;;		On exit  : 1F/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10113 ;;      Params:         4       0       0       0       0       0       0       0
 10114 ;;      Locals:         0       4       0       0       0       0       0       0
 10115 ;;      Temps:          1       0       0       0       0       0       0       0
 10116 ;;      Totals:         5       4       0       0       0       0       0       0
 10117 ;;Total ram usage:        9 bytes
 10118 ;; Hardware stack levels used: 1
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_main
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126     1004                     ___awdiv:	
 10127                           ;psect for function ___awdiv
 10128                           
 10129                           
 10130                           ;incstack = 0
 10131                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10132     1004  0020               	movlb	0	; select bank0
 10133     1005  01A1               	clrf	___awdiv@sign
 10134     1006  1FF8               	btfss	___awdiv@divisor+1,7
 10135     1007  280F               	goto	l4359
 10136     1008  09F7               	comf	___awdiv@divisor,f
 10137     1009  09F8               	comf	___awdiv@divisor+1,f
 10138     100A  0AF7               	incf	___awdiv@divisor,f
 10139     100B  1903               	skipnz
 10140     100C  0AF8               	incf	___awdiv@divisor+1,f
 10141     100D  01A1               	clrf	___awdiv@sign
 10142     100E  0AA1               	incf	___awdiv@sign,f
 10143     100F                     l4359:
 10144     100F  1FFA               	btfss	___awdiv@dividend+1,7
 10145     1010  281A               	goto	l4365
 10146     1011  09F9               	comf	___awdiv@dividend,f
 10147     1012  09FA               	comf	___awdiv@dividend+1,f
 10148     1013  0AF9               	incf	___awdiv@dividend,f
 10149     1014  1903               	skipnz
 10150     1015  0AFA               	incf	___awdiv@dividend+1,f
 10151     1016  3001               	movlw	1
 10152     1017  00FB               	movwf	??___awdiv
 10153     1018  087B               	movf	??___awdiv,w
 10154     1019  06A1               	xorwf	___awdiv@sign,f
 10155     101A                     l4365:
 10156     101A  01A2               	clrf	___awdiv@quotient
 10157     101B  01A3               	clrf	___awdiv@quotient+1
 10158     101C  0877               	movf	___awdiv@divisor,w
 10159     101D  0478               	iorwf	___awdiv@divisor+1,w
 10160     101E  1903               	btfsc	3,2
 10161     101F  2849               	goto	l4387
 10162     1020  01A0               	clrf	___awdiv@counter
 10163     1021  0AA0               	incf	___awdiv@counter,f
 10164     1022                     l4375:
 10165     1022  1BF8               	btfsc	___awdiv@divisor+1,7
 10166     1023  282E               	goto	l4377
 10167     1024  3001               	movlw	1
 10168     1025                     u6145:
 10169     1025  35F7               	lslf	___awdiv@divisor,f
 10170     1026  0DF8               	rlf	___awdiv@divisor+1,f
 10171     1027  0B89               	decfsz	9,f
 10172     1028  2825               	goto	u6145
 10173     1029  3001               	movlw	1
 10174     102A  00FB               	movwf	??___awdiv
 10175     102B  087B               	movf	??___awdiv,w
 10176     102C  07A0               	addwf	___awdiv@counter,f
 10177     102D  2822               	goto	l4375
 10178     102E                     l4377:
 10179     102E  3001               	movlw	1
 10180     102F                     u6165:
 10181     102F  35A2               	lslf	___awdiv@quotient,f
 10182     1030  0DA3               	rlf	___awdiv@quotient+1,f
 10183     1031  0B89               	decfsz	9,f
 10184     1032  282F               	goto	u6165
 10185     1033  0878               	movf	___awdiv@divisor+1,w
 10186     1034  027A               	subwf	___awdiv@dividend+1,w
 10187     1035  1D03               	skipz
 10188     1036  2839               	goto	u6175
 10189     1037  0877               	movf	___awdiv@divisor,w
 10190     1038  0279               	subwf	___awdiv@dividend,w
 10191     1039                     u6175:
 10192     1039  1C03               	skipc
 10193     103A  2840               	goto	l4383
 10194     103B  0877               	movf	___awdiv@divisor,w
 10195     103C  02F9               	subwf	___awdiv@dividend,f
 10196     103D  0878               	movf	___awdiv@divisor+1,w
 10197     103E  3BFA               	subwfb	___awdiv@dividend+1,f
 10198     103F  1422               	bsf	___awdiv@quotient,0
 10199     1040                     l4383:
 10200     1040  3001               	movlw	1
 10201     1041                     u6185:
 10202     1041  36F8               	lsrf	___awdiv@divisor+1,f
 10203     1042  0CF7               	rrf	___awdiv@divisor,f
 10204     1043  0B89               	decfsz	9,f
 10205     1044  2841               	goto	u6185
 10206     1045  3001               	movlw	1
 10207     1046  02A0               	subwf	___awdiv@counter,f
 10208     1047  1D03               	btfss	3,2
 10209     1048  282E               	goto	l4377
 10210     1049                     l4387:
 10211     1049  0821               	movf	___awdiv@sign,w
 10212     104A  1903               	btfsc	3,2
 10213     104B  2851               	goto	l4391
 10214     104C  09A2               	comf	___awdiv@quotient,f
 10215     104D  09A3               	comf	___awdiv@quotient+1,f
 10216     104E  0AA2               	incf	___awdiv@quotient,f
 10217     104F  1903               	skipnz
 10218     1050  0AA3               	incf	___awdiv@quotient+1,f
 10219     1051                     l4391:
 10220     1051  0823               	movf	___awdiv@quotient+1,w
 10221     1052  00F8               	movwf	?___awdiv+1
 10222     1053  0822               	movf	___awdiv@quotient,w
 10223     1054  00F7               	movwf	?___awdiv
 10224     1055  0008               	return
 10225     1056                     __end_of___awdiv:
 10226                           
 10227                           	psect	text37
 10228     0005                     __ptext37:	
 10229 ;; *************** function _ADC_init *****************
 10230 ;; Defined at:
 10231 ;;		line 123 in file "main.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;		None
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;		None
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      void 
 10238 ;; Registers used:
 10239 ;;		wreg, status,2, status,0
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/3
 10242 ;;		On exit  : 1F/1
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10245 ;;      Params:         0       0       0       0       0       0       0       0
 10246 ;;      Locals:         0       0       0       0       0       0       0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0       0
 10248 ;;      Totals:         0       0       0       0       0       0       0       0
 10249 ;;Total ram usage:        0 bytes
 10250 ;; Hardware stack levels used: 1
 10251 ;; This function calls:
 10252 ;;		Nothing
 10253 ;; This function is called by:
 10254 ;;		_main
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258     0005                     _ADC_init:	
 10259                           ;psect for function _ADC_init
 10260                           
 10261                           
 10262                           ;main.c: 125:     ADCON0bits.ADON = 1;
 10263                           
 10264                           ;incstack = 0
 10265                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 10266     0005  0021               	movlb	1	; select bank1
 10267     0006  141D               	bsf	29,0	;volatile
 10268                           
 10269                           ;main.c: 126:     ADCON1bits.ADFM = 1;
 10270     0007  179E               	bsf	30,7	;volatile
 10271                           
 10272                           ;main.c: 127:     ADCON1bits.ADCS = 011;
 10273     0008  081E               	movf	30,w	;volatile
 10274     0009  398F               	andlw	-113
 10275     000A  3810               	iorlw	16
 10276     000B  009E               	movwf	30	;volatile
 10277                           
 10278                           ;main.c: 128:     ADRESH = 0;
 10279     000C  019C               	clrf	28	;volatile
 10280                           
 10281                           ;main.c: 129:     ADRESL = 0;
 10282     000D  019B               	clrf	27	;volatile
 10283     000E  0008               	return
 10284     000F                     __end_of_ADC_init:
 10285                           
 10286                           	psect	text38
 10287     0803                     __ptext38:	
 10288 ;; *************** function _ADC_Convert *****************
 10289 ;; Defined at:
 10290 ;;		line 132 in file "main.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;  chan            2   52[BANK0 ] int 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  voltage         4   58[BANK0 ] float 
 10295 ;;  result          2   62[BANK0 ] unsigned int 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  4   52[BANK0 ] float 
 10298 ;; Registers used:
 10299 ;;		wreg, status,2, status,0, pclath, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 1F/0
 10302 ;;		On exit  : 1F/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10305 ;;      Params:         0       4       0       0       0       0       0       0
 10306 ;;      Locals:         0       6       0       0       0       0       0       0
 10307 ;;      Temps:          0       2       0       0       0       0       0       0
 10308 ;;      Totals:         0      12       0       0       0       0       0       0
 10309 ;;Total ram usage:       12 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 2
 10312 ;; This function calls:
 10313 ;;		___fldiv
 10314 ;;		___flmul
 10315 ;;		___xxtofl
 10316 ;; This function is called by:
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321     0803                     _ADC_Convert:	
 10322                           ;psect for function _ADC_Convert
 10323                           
 10324                           
 10325                           ;main.c: 132: float ADC_Convert(int chan);main.c: 133: {;main.c: 134:     if(chan == 0){
 10326                           
 10327                           ;incstack = 0
 10328                           ; Regs used in _ADC_Convert: [wreg+status,2+status,0+pclath+cstack]
 10329     0803  0854               	movf	ADC_Convert@chan,w
 10330     0804  0455               	iorwf	ADC_Convert@chan+1,w
 10331     0805  1D03               	btfss	3,2
 10332     0806  280B               	goto	l4217
 10333                           
 10334                           ;main.c: 135:       ADCON0bits.CHS = 00000 ;
 10335     0807  3083               	movlw	-125
 10336     0808  0021               	movlb	1	; select bank1
 10337     0809  059D               	andwf	29,f	;volatile
 10338                           
 10339                           ;main.c: 136:     }
 10340     080A  281E               	goto	l4225
 10341     080B                     l4217:
 10342     080B  0354               	decf	ADC_Convert@chan,w
 10343     080C  0455               	iorwf	ADC_Convert@chan+1,w
 10344     080D  1D03               	btfss	3,2
 10345     080E  2814               	goto	l4221
 10346                           
 10347                           ;main.c: 138:       ADCON0bits.CHS = 00001 ;
 10348     080F  0021               	movlb	1	; select bank1
 10349     0810  081D               	movf	29,w	;volatile
 10350     0811  3983               	andlw	-125
 10351     0812  3804               	iorlw	4
 10352     0813  281D               	goto	L25
 10353     0814                     l4221:	
 10354                           ;main.c: 139:     }
 10355                           
 10356     0814  3002               	movlw	2
 10357     0815  0654               	xorwf	ADC_Convert@chan,w
 10358     0816  0455               	iorwf	ADC_Convert@chan+1,w
 10359     0817  1D03               	btfss	3,2
 10360     0818  281E               	goto	l4225
 10361                           
 10362                           ;main.c: 141:       ADCON0bits.CHS = 00010 ;
 10363     0819  0021               	movlb	1	; select bank1
 10364     081A  081D               	movf	29,w	;volatile
 10365     081B  3983               	andlw	-125
 10366     081C  3820               	iorlw	32
 10367     081D                     L25:
 10368     081D  009D               	movwf	29	;volatile
 10369     081E                     l4225:
 10370                           
 10371                           ;main.c: 143:     _delay((unsigned long)((1)*(19600000/4000.0)));
 10372     081E  3007               	movlw	7
 10373     081F  0020               	movlb	0	; select bank0
 10374     0820  00D8               	movwf	??_ADC_Convert
 10375     0821  305B               	movlw	91
 10376     0822                     u6807:
 10377     0822  0B89               	decfsz	9,f
 10378     0823  2822               	goto	u6807
 10379     0824  0BD8               	decfsz	??_ADC_Convert,f
 10380     0825  2822               	goto	u6807
 10381     0826  3200               	nop2
 10382                           
 10383                           ;main.c: 144:     ADCON0bits.GO_nDONE = 1;
 10384     0827  0021               	movlb	1	; select bank1
 10385     0828  149D               	bsf	29,1	;volatile
 10386                           
 10387                           ;main.c: 145:     ADCON0bits.ADGO = 1;
 10388     0829  149D               	bsf	29,1	;volatile
 10389     082A                     l76:	
 10390                           ;main.c: 146:     while(ADCON0bits.GO_nDONE);
 10391                           
 10392     082A  189D               	btfsc	29,1	;volatile
 10393     082B  282A               	goto	l76
 10394                           
 10395                           ;main.c: 147:     unsigned int result = (ADRESH>>8) + ADRESL;
 10396     082C  081C               	movf	28,w	;volatile
 10397     082D  081B               	movf	27,w	;volatile
 10398     082E  0020               	movlb	0	; select bank0
 10399     082F  00D8               	movwf	??_ADC_Convert
 10400     0830  01D9               	clrf	??_ADC_Convert+1
 10401     0831  0858               	movf	??_ADC_Convert,w
 10402     0832  00DE               	movwf	ADC_Convert@result
 10403     0833  0859               	movf	??_ADC_Convert+1,w
 10404     0834  00DF               	movwf	ADC_Convert@result+1
 10405                           
 10406                           ;main.c: 148:     float voltage = (result * 5.0) / 1023;
 10407     0835  3044               	movlw	68
 10408     0836  00BD               	movwf	___fldiv@a+3
 10409     0837  307F               	movlw	127
 10410     0838  00BC               	movwf	___fldiv@a+2
 10411     0839  30C0               	movlw	192
 10412     083A  00BB               	movwf	___fldiv@a+1
 10413     083B  3000               	movlw	0
 10414     083C  00BA               	movwf	___fldiv@a
 10415     083D  3040               	movlw	64
 10416     083E  00A3               	movwf	___flmul@b+3
 10417     083F  30A0               	movlw	160
 10418     0840  00A2               	movwf	___flmul@b+2
 10419     0841  3000               	movlw	0
 10420     0842  00A1               	movwf	___flmul@b+1
 10421     0843  3000               	movlw	0
 10422     0844  00A0               	movwf	___flmul@b
 10423     0845  085E               	movf	ADC_Convert@result,w
 10424     0846  00F0               	movwf	___xxtofl@val
 10425     0847  085F               	movf	ADC_Convert@result+1,w
 10426     0848  00F1               	movwf	___xxtofl@val+1
 10427     0849  01F2               	clrf	___xxtofl@val+2
 10428     084A  01F3               	clrf	___xxtofl@val+3
 10429     084B  3000               	movlw	0
 10430     084C  3192  223D  3188   	fcall	___xxtofl
 10431     084F  0873               	movf	?___xxtofl+3,w
 10432     0850  0020               	movlb	0	; select bank0
 10433     0851  00A7               	movwf	___flmul@a+3
 10434     0852  0872               	movf	?___xxtofl+2,w
 10435     0853  00A6               	movwf	___flmul@a+2
 10436     0854  0871               	movf	?___xxtofl+1,w
 10437     0855  00A5               	movwf	___flmul@a+1
 10438     0856  0870               	movf	?___xxtofl,w
 10439     0857  00A4               	movwf	___flmul@a
 10440     0858  3180  203F  3188   	fcall	___flmul
 10441     085B  0823               	movf	?___flmul+3,w
 10442     085C  00C1               	movwf	___fldiv@b+3
 10443     085D  0822               	movf	?___flmul+2,w
 10444     085E  00C0               	movwf	___fldiv@b+2
 10445     085F  0821               	movf	?___flmul+1,w
 10446     0860  00BF               	movwf	___fldiv@b+1
 10447     0861  0820               	movf	?___flmul,w
 10448     0862  00BE               	movwf	___fldiv@b
 10449     0863  3196  2691         	fcall	___fldiv
 10450     0865  083D               	movf	?___fldiv+3,w
 10451     0866  00DD               	movwf	ADC_Convert@voltage+3
 10452     0867  083C               	movf	?___fldiv+2,w
 10453     0868  00DC               	movwf	ADC_Convert@voltage+2
 10454     0869  083B               	movf	?___fldiv+1,w
 10455     086A  00DB               	movwf	ADC_Convert@voltage+1
 10456     086B  083A               	movf	?___fldiv,w
 10457     086C  00DA               	movwf	ADC_Convert@voltage
 10458                           
 10459                           ;main.c: 149:     return voltage;
 10460     086D  085D               	movf	ADC_Convert@voltage+3,w
 10461     086E  00D7               	movwf	?_ADC_Convert+3
 10462     086F  085C               	movf	ADC_Convert@voltage+2,w
 10463     0870  00D6               	movwf	?_ADC_Convert+2
 10464     0871  085B               	movf	ADC_Convert@voltage+1,w
 10465     0872  00D5               	movwf	?_ADC_Convert+1
 10466     0873  085A               	movf	ADC_Convert@voltage,w
 10467     0874  00D4               	movwf	?_ADC_Convert
 10468     0875  0008               	return
 10469     0876                     __end_of_ADC_Convert:
 10470                           
 10471                           	psect	text39
 10472     123D                     __ptext39:	
 10473 ;; *************** function ___xxtofl *****************
 10474 ;; Defined at:
 10475 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  sign            1    wreg     unsigned char 
 10478 ;;  val             4    0[COMMON] long 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  sign            1    8[COMMON] unsigned char 
 10481 ;;  arg             4   10[COMMON] unsigned long 
 10482 ;;  exp             1    9[COMMON] unsigned char 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  4    0[COMMON] unsigned char 
 10485 ;; Registers used:
 10486 ;;		wreg, status,2, status,0
 10487 ;; Tracked objects:
 10488 ;;		On entry : 1C/3
 10489 ;;		On exit  : 1C/0
 10490 ;;		Unchanged: 1C/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10492 ;;      Params:         4       0       0       0       0       0       0       0
 10493 ;;      Locals:         6       0       0       0       0       0       0       0
 10494 ;;      Temps:          4       0       0       0       0       0       0       0
 10495 ;;      Totals:        14       0       0       0       0       0       0       0
 10496 ;;Total ram usage:       14 bytes
 10497 ;; Hardware stack levels used: 1
 10498 ;; This function calls:
 10499 ;;		Nothing
 10500 ;; This function is called by:
 10501 ;;		_ADC_Convert
 10502 ;;		_main
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506     123D                     ___xxtofl:	
 10507                           ;psect for function ___xxtofl
 10508                           
 10509                           
 10510                           ;incstack = 0
 10511                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10512                           ;___xxtofl@sign stored from wreg
 10513     123D  00F8               	movwf	___xxtofl@sign
 10514     123E  0878               	movf	___xxtofl@sign,w
 10515     123F  1D03               	btfss	3,2
 10516     1240  1FF3               	btfss	___xxtofl@val+3,7
 10517     1241  2A52               	goto	l4147
 10518     1242  0970               	comf	___xxtofl@val,w
 10519     1243  00FA               	movwf	___xxtofl@arg
 10520     1244  0971               	comf	___xxtofl@val+1,w
 10521     1245  00FB               	movwf	___xxtofl@arg+1
 10522     1246  0972               	comf	___xxtofl@val+2,w
 10523     1247  00FC               	movwf	___xxtofl@arg+2
 10524     1248  0973               	comf	___xxtofl@val+3,w
 10525     1249  00FD               	movwf	___xxtofl@arg+3
 10526     124A  0AFA               	incf	___xxtofl@arg,f
 10527     124B  1903               	skipnz
 10528     124C  0AFB               	incf	___xxtofl@arg+1,f
 10529     124D  1903               	skipnz
 10530     124E  0AFC               	incf	___xxtofl@arg+2,f
 10531     124F  1903               	skipnz
 10532     1250  0AFD               	incf	___xxtofl@arg+3,f
 10533     1251  2A5A               	goto	l793
 10534     1252                     l4147:
 10535     1252  0873               	movf	___xxtofl@val+3,w
 10536     1253  00FD               	movwf	___xxtofl@arg+3
 10537     1254  0872               	movf	___xxtofl@val+2,w
 10538     1255  00FC               	movwf	___xxtofl@arg+2
 10539     1256  0871               	movf	___xxtofl@val+1,w
 10540     1257  00FB               	movwf	___xxtofl@arg+1
 10541     1258  0870               	movf	___xxtofl@val,w
 10542     1259  00FA               	movwf	___xxtofl@arg
 10543     125A                     l793:
 10544     125A  0873               	movf	___xxtofl@val+3,w
 10545     125B  0472               	iorwf	___xxtofl@val+2,w
 10546     125C  0471               	iorwf	___xxtofl@val+1,w
 10547     125D  0470               	iorwf	___xxtofl@val,w
 10548     125E  1D03               	skipz
 10549     125F  2A69               	goto	l4153
 10550     1260  3000               	movlw	0
 10551     1261  00F3               	movwf	?___xxtofl+3
 10552     1262  3000               	movlw	0
 10553     1263  00F2               	movwf	?___xxtofl+2
 10554     1264  3000               	movlw	0
 10555     1265  00F1               	movwf	?___xxtofl+1
 10556     1266  3000               	movlw	0
 10557     1267  00F0               	movwf	?___xxtofl
 10558     1268  0008               	return
 10559     1269                     l4153:
 10560     1269  3096               	movlw	150
 10561     126A  00F9               	movwf	___xxtofl@exp
 10562     126B                     l4157:
 10563     126B  30FE               	movlw	254
 10564     126C  057D               	andwf	___xxtofl@arg+3,w
 10565     126D  1903               	btfsc	3,2
 10566     126E  2A8E               	goto	l799
 10567     126F  3001               	movlw	1
 10568     1270  00F4               	movwf	??___xxtofl
 10569     1271  0874               	movf	??___xxtofl,w
 10570     1272  07F9               	addwf	___xxtofl@exp,f
 10571     1273  3001               	movlw	1
 10572     1274                     u5705:
 10573     1274  36FD               	lsrf	___xxtofl@arg+3,f
 10574     1275  0CFC               	rrf	___xxtofl@arg+2,f
 10575     1276  0CFB               	rrf	___xxtofl@arg+1,f
 10576     1277  0CFA               	rrf	___xxtofl@arg,f
 10577     1278  0B89               	decfsz	9,f
 10578     1279  2A74               	goto	u5705
 10579     127A  2A6B               	goto	l4157
 10580     127B                     l4159:
 10581     127B  3001               	movlw	1
 10582     127C  00F4               	movwf	??___xxtofl
 10583     127D  0874               	movf	??___xxtofl,w
 10584     127E  07F9               	addwf	___xxtofl@exp,f
 10585     127F  3001               	movlw	1
 10586     1280  07FA               	addwf	___xxtofl@arg,f
 10587     1281  3000               	movlw	0
 10588     1282  3DFB               	addwfc	___xxtofl@arg+1,f
 10589     1283  3000               	movlw	0
 10590     1284  3DFC               	addwfc	___xxtofl@arg+2,f
 10591     1285  3000               	movlw	0
 10592     1286  3DFD               	addwfc	___xxtofl@arg+3,f
 10593     1287  3001               	movlw	1
 10594     1288                     u5725:
 10595     1288  36FD               	lsrf	___xxtofl@arg+3,f
 10596     1289  0CFC               	rrf	___xxtofl@arg+2,f
 10597     128A  0CFB               	rrf	___xxtofl@arg+1,f
 10598     128B  0CFA               	rrf	___xxtofl@arg,f
 10599     128C  0B89               	decfsz	9,f
 10600     128D  2A88               	goto	u5725
 10601     128E                     l799:
 10602     128E  30FF               	movlw	255
 10603     128F  057D               	andwf	___xxtofl@arg+3,w
 10604     1290  1903               	btfsc	3,2
 10605     1291  2AA0               	goto	l4167
 10606     1292  2A7B               	goto	l4159
 10607     1293                     l4169:
 10608     1293  3002               	movlw	2
 10609     1294  0279               	subwf	___xxtofl@exp,w
 10610     1295  1C03               	btfss	3,0
 10611     1296  2AA2               	goto	l806
 10612     1297  3001               	movlw	1
 10613     1298  02F9               	subwf	___xxtofl@exp,f
 10614     1299  3001               	movlw	1
 10615     129A                     u5745:
 10616     129A  35FA               	lslf	___xxtofl@arg,f
 10617     129B  0DFB               	rlf	___xxtofl@arg+1,f
 10618     129C  0DFC               	rlf	___xxtofl@arg+2,f
 10619     129D  0DFD               	rlf	___xxtofl@arg+3,f
 10620     129E  0B89               	decfsz	9,f
 10621     129F  2A9A               	goto	u5745
 10622     12A0                     l4167:
 10623     12A0  1FFC               	btfss	___xxtofl@arg+2,7
 10624     12A1  2A93               	goto	l4169
 10625     12A2                     l806:
 10626     12A2  1879               	btfsc	___xxtofl@exp,0
 10627     12A3  2AAC               	goto	l807
 10628     12A4  30FF               	movlw	255
 10629     12A5  05FA               	andwf	___xxtofl@arg,f
 10630     12A6  30FF               	movlw	255
 10631     12A7  05FB               	andwf	___xxtofl@arg+1,f
 10632     12A8  307F               	movlw	127
 10633     12A9  05FC               	andwf	___xxtofl@arg+2,f
 10634     12AA  30FF               	movlw	255
 10635     12AB  05FD               	andwf	___xxtofl@arg+3,f
 10636     12AC                     l807:
 10637     12AC  1003               	clrc
 10638     12AD  0CF9               	rrf	___xxtofl@exp,f
 10639     12AE  0879               	movf	___xxtofl@exp,w
 10640     12AF  00F4               	movwf	??___xxtofl
 10641     12B0  01F5               	clrf	??___xxtofl+1
 10642     12B1  01F6               	clrf	??___xxtofl+2
 10643     12B2  01F7               	clrf	??___xxtofl+3
 10644     12B3  3018               	movlw	24
 10645     12B4                     u5785:
 10646     12B4  35F4               	lslf	??___xxtofl,f
 10647     12B5  0DF5               	rlf	??___xxtofl+1,f
 10648     12B6  0DF6               	rlf	??___xxtofl+2,f
 10649     12B7  0DF7               	rlf	??___xxtofl+3,f
 10650     12B8  0B89               	decfsz	9,f
 10651     12B9  2AB4               	goto	u5785
 10652     12BA  0874               	movf	??___xxtofl,w
 10653     12BB  04FA               	iorwf	___xxtofl@arg,f
 10654     12BC  0875               	movf	??___xxtofl+1,w
 10655     12BD  04FB               	iorwf	___xxtofl@arg+1,f
 10656     12BE  0876               	movf	??___xxtofl+2,w
 10657     12BF  04FC               	iorwf	___xxtofl@arg+2,f
 10658     12C0  0877               	movf	??___xxtofl+3,w
 10659     12C1  04FD               	iorwf	___xxtofl@arg+3,f
 10660     12C2  0878               	movf	___xxtofl@sign,w
 10661     12C3  1D03               	btfss	3,2
 10662     12C4  1FF3               	btfss	___xxtofl@val+3,7
 10663     12C5  2AC7               	goto	l4181
 10664     12C6  17FD               	bsf	___xxtofl@arg+3,7
 10665     12C7                     l4181:
 10666     12C7  087D               	movf	___xxtofl@arg+3,w
 10667     12C8  00F3               	movwf	?___xxtofl+3
 10668     12C9  087C               	movf	___xxtofl@arg+2,w
 10669     12CA  00F2               	movwf	?___xxtofl+2
 10670     12CB  087B               	movf	___xxtofl@arg+1,w
 10671     12CC  00F1               	movwf	?___xxtofl+1
 10672     12CD  087A               	movf	___xxtofl@arg,w
 10673     12CE  00F0               	movwf	?___xxtofl
 10674     12CF  0008               	return
 10675     12D0                     __end_of___xxtofl:
 10676                           
 10677                           	psect	text40
 10678     003F                     __ptext40:	
 10679 ;; *************** function ___flmul *****************
 10680 ;; Defined at:
 10681 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;  b               4    0[BANK0 ] unsigned char 
 10684 ;;  a               4    4[BANK0 ] unsigned char 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  prod            4   20[BANK0 ] struct .
 10687 ;;  grs             4   15[BANK0 ] unsigned long 
 10688 ;;  temp            2   24[BANK0 ] struct .
 10689 ;;  bexp            1   19[BANK0 ] unsigned char 
 10690 ;;  aexp            1   14[BANK0 ] unsigned char 
 10691 ;;  sign            1   13[BANK0 ] unsigned char 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  4    0[BANK0 ] unsigned char 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0, pclath, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 1F/0
 10698 ;;		On exit  : 1F/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10701 ;;      Params:         0       8       0       0       0       0       0       0
 10702 ;;      Locals:         0      13       0       0       0       0       0       0
 10703 ;;      Temps:          0       5       0       0       0       0       0       0
 10704 ;;      Totals:         0      26       0       0       0       0       0       0
 10705 ;;Total ram usage:       26 bytes
 10706 ;; Hardware stack levels used: 1
 10707 ;; Hardware stack levels required when called: 1
 10708 ;; This function calls:
 10709 ;;		__Umul8_16
 10710 ;; This function is called by:
 10711 ;;		_ADC_Convert
 10712 ;;		_main
 10713 ;;		_efgtoa
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717     003F                     ___flmul:	
 10718                           ;psect for function ___flmul
 10719                           
 10720                           
 10721                           ;incstack = 0
 10722                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10723     003F  0823               	movf	___flmul@b+3,w
 10724     0040  3980               	andlw	128
 10725     0041  00AD               	movwf	___flmul@sign
 10726     0042  3523               	lslf	___flmul@b+3,w
 10727     0043  00B3               	movwf	___flmul@bexp
 10728     0044  1BA2               	btfsc	___flmul@b+2,7
 10729     0045  1433               	bsf	___flmul@bexp,0
 10730     0046  0833               	movf	___flmul@bexp,w
 10731     0047  1903               	btfsc	3,2
 10732     0048  2856               	goto	l3489
 10733     0049  0A33               	incf	___flmul@bexp,w
 10734     004A  1D03               	btfss	3,2
 10735     004B  2854               	goto	l3487
 10736     004C  3000               	movlw	0
 10737     004D  00A3               	movwf	___flmul@b+3
 10738     004E  3000               	movlw	0
 10739     004F  00A2               	movwf	___flmul@b+2
 10740     0050  3000               	movlw	0
 10741     0051  00A1               	movwf	___flmul@b+1
 10742     0052  3000               	movlw	0
 10743     0053  00A0               	movwf	___flmul@b
 10744     0054                     l3487:
 10745     0054  17A2               	bsf	___flmul@b+2,7
 10746     0055  285E               	goto	l3491
 10747     0056                     l3489:
 10748     0056  3000               	movlw	0
 10749     0057  00A3               	movwf	___flmul@b+3
 10750     0058  3000               	movlw	0
 10751     0059  00A2               	movwf	___flmul@b+2
 10752     005A  3000               	movlw	0
 10753     005B  00A1               	movwf	___flmul@b+1
 10754     005C  3000               	movlw	0
 10755     005D  00A0               	movwf	___flmul@b
 10756     005E                     l3491:
 10757     005E  0827               	movf	___flmul@a+3,w
 10758     005F  3980               	andlw	128
 10759     0060  00A8               	movwf	??___flmul
 10760     0061  0828               	movf	??___flmul,w
 10761     0062  06AD               	xorwf	___flmul@sign,f
 10762     0063  3527               	lslf	___flmul@a+3,w
 10763     0064  00AE               	movwf	___flmul@aexp
 10764     0065  1BA6               	btfsc	___flmul@a+2,7
 10765     0066  142E               	bsf	___flmul@aexp,0
 10766     0067  082E               	movf	___flmul@aexp,w
 10767     0068  1903               	btfsc	3,2
 10768     0069  2877               	goto	l3507
 10769     006A  0A2E               	incf	___flmul@aexp,w
 10770     006B  1D03               	btfss	3,2
 10771     006C  2875               	goto	l3505
 10772     006D  3000               	movlw	0
 10773     006E  00A7               	movwf	___flmul@a+3
 10774     006F  3000               	movlw	0
 10775     0070  00A6               	movwf	___flmul@a+2
 10776     0071  3000               	movlw	0
 10777     0072  00A5               	movwf	___flmul@a+1
 10778     0073  3000               	movlw	0
 10779     0074  00A4               	movwf	___flmul@a
 10780     0075                     l3505:
 10781     0075  17A6               	bsf	___flmul@a+2,7
 10782     0076  287F               	goto	l3509
 10783     0077                     l3507:
 10784     0077  3000               	movlw	0
 10785     0078  00A7               	movwf	___flmul@a+3
 10786     0079  3000               	movlw	0
 10787     007A  00A6               	movwf	___flmul@a+2
 10788     007B  3000               	movlw	0
 10789     007C  00A5               	movwf	___flmul@a+1
 10790     007D  3000               	movlw	0
 10791     007E  00A4               	movwf	___flmul@a
 10792     007F                     l3509:
 10793     007F  082E               	movf	___flmul@aexp,w
 10794     0080  1D03               	btfss	3,2
 10795     0081  0833               	movf	___flmul@bexp,w
 10796     0082  1D03               	btfss	3,2
 10797     0083  288D               	goto	l3517
 10798     0084  3000               	movlw	0
 10799     0085  00A3               	movwf	?___flmul+3
 10800     0086  3000               	movlw	0
 10801     0087  00A2               	movwf	?___flmul+2
 10802     0088  3000               	movlw	0
 10803     0089  00A1               	movwf	?___flmul+1
 10804     008A  3000               	movlw	0
 10805     008B  00A0               	movwf	?___flmul
 10806     008C  0008               	return
 10807     008D                     l3517:
 10808     008D  0820               	movf	___flmul@b,w
 10809     008E  00F0               	movwf	__Umul8_16@multiplicand
 10810     008F  0826               	movf	___flmul@a+2,w
 10811     0090  319D  2557  3180   	fcall	__Umul8_16
 10812     0093  0871               	movf	?__Umul8_16+1,w
 10813     0094  00B9               	movwf	___flmul@temp+1
 10814     0095  0870               	movf	?__Umul8_16,w
 10815     0096  00B8               	movwf	___flmul@temp
 10816     0097  0838               	movf	___flmul@temp,w
 10817     0098  00A8               	movwf	??___flmul
 10818     0099  01A9               	clrf	??___flmul+1
 10819     009A  01AA               	clrf	??___flmul+2
 10820     009B  01AB               	clrf	??___flmul+3
 10821     009C  082B               	movf	??___flmul+3,w
 10822     009D  00B2               	movwf	___flmul@grs+3
 10823     009E  082A               	movf	??___flmul+2,w
 10824     009F  00B1               	movwf	___flmul@grs+2
 10825     00A0  0829               	movf	??___flmul+1,w
 10826     00A1  00B0               	movwf	___flmul@grs+1
 10827     00A2  0828               	movf	??___flmul,w
 10828     00A3  00AF               	movwf	___flmul@grs
 10829     00A4  0839               	movf	___flmul@temp+1,w
 10830     00A5  00A8               	movwf	??___flmul
 10831     00A6  01A9               	clrf	??___flmul+1
 10832     00A7  01AA               	clrf	??___flmul+2
 10833     00A8  01AB               	clrf	??___flmul+3
 10834     00A9  082B               	movf	??___flmul+3,w
 10835     00AA  00B7               	movwf	___flmul@prod+3
 10836     00AB  082A               	movf	??___flmul+2,w
 10837     00AC  00B6               	movwf	___flmul@prod+2
 10838     00AD  0829               	movf	??___flmul+1,w
 10839     00AE  00B5               	movwf	___flmul@prod+1
 10840     00AF  0828               	movf	??___flmul,w
 10841     00B0  00B4               	movwf	___flmul@prod
 10842     00B1  0821               	movf	___flmul@b+1,w
 10843     00B2  00F0               	movwf	__Umul8_16@multiplicand
 10844     00B3  0825               	movf	___flmul@a+1,w
 10845     00B4  319D  2557  3180   	fcall	__Umul8_16
 10846     00B7  0871               	movf	?__Umul8_16+1,w
 10847     00B8  00B9               	movwf	___flmul@temp+1
 10848     00B9  0870               	movf	?__Umul8_16,w
 10849     00BA  00B8               	movwf	___flmul@temp
 10850     00BB  0838               	movf	___flmul@temp,w
 10851     00BC  00A8               	movwf	??___flmul
 10852     00BD  01A9               	clrf	??___flmul+1
 10853     00BE  01AA               	clrf	??___flmul+2
 10854     00BF  01AB               	clrf	??___flmul+3
 10855     00C0  0828               	movf	??___flmul,w
 10856     00C1  07AF               	addwf	___flmul@grs,f
 10857     00C2  0829               	movf	??___flmul+1,w
 10858     00C3  3DB0               	addwfc	___flmul@grs+1,f
 10859     00C4  082A               	movf	??___flmul+2,w
 10860     00C5  3DB1               	addwfc	___flmul@grs+2,f
 10861     00C6  082B               	movf	??___flmul+3,w
 10862     00C7  3DB2               	addwfc	___flmul@grs+3,f
 10863     00C8  0839               	movf	___flmul@temp+1,w
 10864     00C9  00A8               	movwf	??___flmul
 10865     00CA  01A9               	clrf	??___flmul+1
 10866     00CB  01AA               	clrf	??___flmul+2
 10867     00CC  01AB               	clrf	??___flmul+3
 10868     00CD  0828               	movf	??___flmul,w
 10869     00CE  07B4               	addwf	___flmul@prod,f
 10870     00CF  0829               	movf	??___flmul+1,w
 10871     00D0  3DB5               	addwfc	___flmul@prod+1,f
 10872     00D1  082A               	movf	??___flmul+2,w
 10873     00D2  3DB6               	addwfc	___flmul@prod+2,f
 10874     00D3  082B               	movf	??___flmul+3,w
 10875     00D4  3DB7               	addwfc	___flmul@prod+3,f
 10876     00D5  0822               	movf	___flmul@b+2,w
 10877     00D6  00F0               	movwf	__Umul8_16@multiplicand
 10878     00D7  0824               	movf	___flmul@a,w
 10879     00D8  319D  2557  3180   	fcall	__Umul8_16
 10880     00DB  0871               	movf	?__Umul8_16+1,w
 10881     00DC  00B9               	movwf	___flmul@temp+1
 10882     00DD  0870               	movf	?__Umul8_16,w
 10883     00DE  00B8               	movwf	___flmul@temp
 10884     00DF  0838               	movf	___flmul@temp,w
 10885     00E0  00A8               	movwf	??___flmul
 10886     00E1  01A9               	clrf	??___flmul+1
 10887     00E2  01AA               	clrf	??___flmul+2
 10888     00E3  01AB               	clrf	??___flmul+3
 10889     00E4  0828               	movf	??___flmul,w
 10890     00E5  07AF               	addwf	___flmul@grs,f
 10891     00E6  0829               	movf	??___flmul+1,w
 10892     00E7  3DB0               	addwfc	___flmul@grs+1,f
 10893     00E8  082A               	movf	??___flmul+2,w
 10894     00E9  3DB1               	addwfc	___flmul@grs+2,f
 10895     00EA  082B               	movf	??___flmul+3,w
 10896     00EB  3DB2               	addwfc	___flmul@grs+3,f
 10897     00EC  0839               	movf	___flmul@temp+1,w
 10898     00ED  00A8               	movwf	??___flmul
 10899     00EE  01A9               	clrf	??___flmul+1
 10900     00EF  01AA               	clrf	??___flmul+2
 10901     00F0  01AB               	clrf	??___flmul+3
 10902     00F1  0828               	movf	??___flmul,w
 10903     00F2  07B4               	addwf	___flmul@prod,f
 10904     00F3  0829               	movf	??___flmul+1,w
 10905     00F4  3DB5               	addwfc	___flmul@prod+1,f
 10906     00F5  082A               	movf	??___flmul+2,w
 10907     00F6  3DB6               	addwfc	___flmul@prod+2,f
 10908     00F7  082B               	movf	??___flmul+3,w
 10909     00F8  3DB7               	addwfc	___flmul@prod+3,f
 10910     00F9  3008               	movlw	8
 10911     00FA                     u4635:
 10912     00FA  35AF               	lslf	___flmul@grs,f
 10913     00FB  0DB0               	rlf	___flmul@grs+1,f
 10914     00FC  0DB1               	rlf	___flmul@grs+2,f
 10915     00FD  0DB2               	rlf	___flmul@grs+3,f
 10916     00FE  0B89               	decfsz	9,f
 10917     00FF  28FA               	goto	u4635
 10918     0100  0821               	movf	___flmul@b+1,w
 10919     0101  00F0               	movwf	__Umul8_16@multiplicand
 10920     0102  0824               	movf	___flmul@a,w
 10921     0103  319D  2557  3180   	fcall	__Umul8_16
 10922     0106  0871               	movf	?__Umul8_16+1,w
 10923     0107  00B9               	movwf	___flmul@temp+1
 10924     0108  0870               	movf	?__Umul8_16,w
 10925     0109  00B8               	movwf	___flmul@temp
 10926     010A  0838               	movf	___flmul@temp,w
 10927     010B  07AF               	addwf	___flmul@grs,f
 10928     010C  0839               	movf	___flmul@temp+1,w
 10929     010D  3DB0               	addwfc	___flmul@grs+1,f
 10930     010E  3000               	movlw	0
 10931     010F  3DB1               	addwfc	___flmul@grs+2,f
 10932     0110  3DB2               	addwfc	___flmul@grs+3,f
 10933     0111  0820               	movf	___flmul@b,w
 10934     0112  00F0               	movwf	__Umul8_16@multiplicand
 10935     0113  0825               	movf	___flmul@a+1,w
 10936     0114  319D  2557  3180   	fcall	__Umul8_16
 10937     0117  0871               	movf	?__Umul8_16+1,w
 10938     0118  00B9               	movwf	___flmul@temp+1
 10939     0119  0870               	movf	?__Umul8_16,w
 10940     011A  00B8               	movwf	___flmul@temp
 10941     011B  0838               	movf	___flmul@temp,w
 10942     011C  07AF               	addwf	___flmul@grs,f
 10943     011D  0839               	movf	___flmul@temp+1,w
 10944     011E  3DB0               	addwfc	___flmul@grs+1,f
 10945     011F  3000               	movlw	0
 10946     0120  3DB1               	addwfc	___flmul@grs+2,f
 10947     0121  3DB2               	addwfc	___flmul@grs+3,f
 10948     0122  3008               	movlw	8
 10949     0123                     u4645:
 10950     0123  35AF               	lslf	___flmul@grs,f
 10951     0124  0DB0               	rlf	___flmul@grs+1,f
 10952     0125  0DB1               	rlf	___flmul@grs+2,f
 10953     0126  0DB2               	rlf	___flmul@grs+3,f
 10954     0127  0B89               	decfsz	9,f
 10955     0128  2923               	goto	u4645
 10956     0129  0820               	movf	___flmul@b,w
 10957     012A  00F0               	movwf	__Umul8_16@multiplicand
 10958     012B  0824               	movf	___flmul@a,w
 10959     012C  319D  2557  3180   	fcall	__Umul8_16
 10960     012F  0871               	movf	?__Umul8_16+1,w
 10961     0130  00B9               	movwf	___flmul@temp+1
 10962     0131  0870               	movf	?__Umul8_16,w
 10963     0132  00B8               	movwf	___flmul@temp
 10964     0133  0838               	movf	___flmul@temp,w
 10965     0134  07AF               	addwf	___flmul@grs,f
 10966     0135  0839               	movf	___flmul@temp+1,w
 10967     0136  3DB0               	addwfc	___flmul@grs+1,f
 10968     0137  3000               	movlw	0
 10969     0138  3DB1               	addwfc	___flmul@grs+2,f
 10970     0139  3DB2               	addwfc	___flmul@grs+3,f
 10971     013A  0821               	movf	___flmul@b+1,w
 10972     013B  00F0               	movwf	__Umul8_16@multiplicand
 10973     013C  0826               	movf	___flmul@a+2,w
 10974     013D  319D  2557  3180   	fcall	__Umul8_16
 10975     0140  0871               	movf	?__Umul8_16+1,w
 10976     0141  00B9               	movwf	___flmul@temp+1
 10977     0142  0870               	movf	?__Umul8_16,w
 10978     0143  00B8               	movwf	___flmul@temp
 10979     0144  0838               	movf	___flmul@temp,w
 10980     0145  07B4               	addwf	___flmul@prod,f
 10981     0146  0839               	movf	___flmul@temp+1,w
 10982     0147  3DB5               	addwfc	___flmul@prod+1,f
 10983     0148  3000               	movlw	0
 10984     0149  3DB6               	addwfc	___flmul@prod+2,f
 10985     014A  3DB7               	addwfc	___flmul@prod+3,f
 10986     014B  0822               	movf	___flmul@b+2,w
 10987     014C  00F0               	movwf	__Umul8_16@multiplicand
 10988     014D  0825               	movf	___flmul@a+1,w
 10989     014E  319D  2557  3180   	fcall	__Umul8_16
 10990     0151  0871               	movf	?__Umul8_16+1,w
 10991     0152  00B9               	movwf	___flmul@temp+1
 10992     0153  0870               	movf	?__Umul8_16,w
 10993     0154  00B8               	movwf	___flmul@temp
 10994     0155  0838               	movf	___flmul@temp,w
 10995     0156  07B4               	addwf	___flmul@prod,f
 10996     0157  0839               	movf	___flmul@temp+1,w
 10997     0158  3DB5               	addwfc	___flmul@prod+1,f
 10998     0159  3000               	movlw	0
 10999     015A  3DB6               	addwfc	___flmul@prod+2,f
 11000     015B  3DB7               	addwfc	___flmul@prod+3,f
 11001     015C  0822               	movf	___flmul@b+2,w
 11002     015D  00F0               	movwf	__Umul8_16@multiplicand
 11003     015E  0826               	movf	___flmul@a+2,w
 11004     015F  319D  2557  3180   	fcall	__Umul8_16
 11005     0162  0871               	movf	?__Umul8_16+1,w
 11006     0163  00B9               	movwf	___flmul@temp+1
 11007     0164  0870               	movf	?__Umul8_16,w
 11008     0165  00B8               	movwf	___flmul@temp
 11009     0166  0838               	movf	___flmul@temp,w
 11010     0167  00A8               	movwf	??___flmul
 11011     0168  0839               	movf	___flmul@temp+1,w
 11012     0169  00A9               	movwf	??___flmul+1
 11013     016A  01AA               	clrf	??___flmul+2
 11014     016B  01AB               	clrf	??___flmul+3
 11015     016C  3008               	movlw	8
 11016     016D                     u4655:
 11017     016D  35A8               	lslf	??___flmul,f
 11018     016E  0DA9               	rlf	??___flmul+1,f
 11019     016F  0DAA               	rlf	??___flmul+2,f
 11020     0170  0DAB               	rlf	??___flmul+3,f
 11021     0171  0B89               	decfsz	9,f
 11022     0172  296D               	goto	u4655
 11023     0173  0828               	movf	??___flmul,w
 11024     0174  07B4               	addwf	___flmul@prod,f
 11025     0175  0829               	movf	??___flmul+1,w
 11026     0176  3DB5               	addwfc	___flmul@prod+1,f
 11027     0177  082A               	movf	??___flmul+2,w
 11028     0178  3DB6               	addwfc	___flmul@prod+2,f
 11029     0179  082B               	movf	??___flmul+3,w
 11030     017A  3DB7               	addwfc	___flmul@prod+3,f
 11031     017B  0832               	movf	___flmul@grs+3,w
 11032     017C  00A8               	movwf	??___flmul
 11033     017D  01A9               	clrf	??___flmul+1
 11034     017E  01AA               	clrf	??___flmul+2
 11035     017F  01AB               	clrf	??___flmul+3
 11036     0180  0828               	movf	??___flmul,w
 11037     0181  07B4               	addwf	___flmul@prod,f
 11038     0182  0829               	movf	??___flmul+1,w
 11039     0183  3DB5               	addwfc	___flmul@prod+1,f
 11040     0184  082A               	movf	??___flmul+2,w
 11041     0185  3DB6               	addwfc	___flmul@prod+2,f
 11042     0186  082B               	movf	??___flmul+3,w
 11043     0187  3DB7               	addwfc	___flmul@prod+3,f
 11044     0188  3008               	movlw	8
 11045     0189                     u4665:
 11046     0189  35AF               	lslf	___flmul@grs,f
 11047     018A  0DB0               	rlf	___flmul@grs+1,f
 11048     018B  0DB1               	rlf	___flmul@grs+2,f
 11049     018C  0DB2               	rlf	___flmul@grs+3,f
 11050     018D  0B89               	decfsz	9,f
 11051     018E  2989               	goto	u4665
 11052     018F  0833               	movf	___flmul@bexp,w
 11053     0190  072E               	addwf	___flmul@aexp,w
 11054     0191  00A8               	movwf	??___flmul
 11055     0192  01A9               	clrf	??___flmul+1
 11056     0193  0DA9               	rlf	??___flmul+1,f
 11057     0194  0828               	movf	??___flmul,w
 11058     0195  3E82               	addlw	130
 11059     0196  00B8               	movwf	___flmul@temp
 11060     0197  30FF               	movlw	255
 11061     0198  3D29               	addwfc	??___flmul+1,w
 11062     0199  00B9               	movwf	___flmul@temp+1
 11063     019A                     l3569:
 11064     019A  1BB6               	btfsc	___flmul@prod+2,7
 11065     019B  29B1               	goto	l3571
 11066     019C  3001               	movlw	1
 11067     019D                     u4675:
 11068     019D  35B4               	lslf	___flmul@prod,f
 11069     019E  0DB5               	rlf	___flmul@prod+1,f
 11070     019F  0DB6               	rlf	___flmul@prod+2,f
 11071     01A0  0DB7               	rlf	___flmul@prod+3,f
 11072     01A1  0B89               	decfsz	9,f
 11073     01A2  299D               	goto	u4675
 11074     01A3  1BB2               	btfsc	___flmul@grs+3,7
 11075     01A4  1434               	bsf	___flmul@prod,0
 11076     01A5  3001               	movlw	1
 11077     01A6                     u4695:
 11078     01A6  35AF               	lslf	___flmul@grs,f
 11079     01A7  0DB0               	rlf	___flmul@grs+1,f
 11080     01A8  0DB1               	rlf	___flmul@grs+2,f
 11081     01A9  0DB2               	rlf	___flmul@grs+3,f
 11082     01AA  0B89               	decfsz	9,f
 11083     01AB  29A6               	goto	u4695
 11084     01AC  30FF               	movlw	255
 11085     01AD  07B8               	addwf	___flmul@temp,f
 11086     01AE  30FF               	movlw	255
 11087     01AF  3DB9               	addwfc	___flmul@temp+1,f
 11088     01B0  299A               	goto	l3569
 11089     01B1                     l3571:
 11090     01B1  01AE               	clrf	___flmul@aexp
 11091     01B2  1FB2               	btfss	___flmul@grs+3,7
 11092     01B3  29CA               	goto	l3581
 11093     01B4  30FF               	movlw	255
 11094     01B5  052F               	andwf	___flmul@grs,w
 11095     01B6  00A8               	movwf	??___flmul
 11096     01B7  30FF               	movlw	255
 11097     01B8  0530               	andwf	___flmul@grs+1,w
 11098     01B9  00A9               	movwf	??___flmul+1
 11099     01BA  30FF               	movlw	255
 11100     01BB  0531               	andwf	___flmul@grs+2,w
 11101     01BC  00AA               	movwf	??___flmul+2
 11102     01BD  307F               	movlw	127
 11103     01BE  0532               	andwf	___flmul@grs+3,w
 11104     01BF  00AB               	movwf	??___flmul+3
 11105     01C0  082B               	movf	??___flmul+3,w
 11106     01C1  042A               	iorwf	??___flmul+2,w
 11107     01C2  0429               	iorwf	??___flmul+1,w
 11108     01C3  0428               	iorwf	??___flmul,w
 11109     01C4  1903               	skipnz
 11110     01C5  1834               	btfsc	___flmul@prod,0
 11111     01C6  29C8               	goto	l3577
 11112     01C7  29CA               	goto	l3581
 11113     01C8                     l3577:
 11114     01C8  01AE               	clrf	___flmul@aexp
 11115     01C9  0AAE               	incf	___flmul@aexp,f
 11116     01CA                     l3581:
 11117     01CA  082E               	movf	___flmul@aexp,w
 11118     01CB  1903               	btfsc	3,2
 11119     01CC  29F3               	goto	l3591
 11120     01CD  3001               	movlw	1
 11121     01CE  07B4               	addwf	___flmul@prod,f
 11122     01CF  3000               	movlw	0
 11123     01D0  3DB5               	addwfc	___flmul@prod+1,f
 11124     01D1  3000               	movlw	0
 11125     01D2  3DB6               	addwfc	___flmul@prod+2,f
 11126     01D3  3000               	movlw	0
 11127     01D4  3DB7               	addwfc	___flmul@prod+3,f
 11128     01D5  1C37               	btfss	___flmul@prod+3,0
 11129     01D6  29F3               	goto	l3591
 11130     01D7  0834               	movf	___flmul@prod,w
 11131     01D8  00A8               	movwf	??___flmul
 11132     01D9  0835               	movf	___flmul@prod+1,w
 11133     01DA  00A9               	movwf	??___flmul+1
 11134     01DB  0836               	movf	___flmul@prod+2,w
 11135     01DC  00AA               	movwf	??___flmul+2
 11136     01DD  0837               	movf	___flmul@prod+3,w
 11137     01DE  00AB               	movwf	??___flmul+3
 11138     01DF  3001               	movlw	1
 11139     01E0  00AC               	movwf	??___flmul+4
 11140     01E1                     u4765:
 11141     01E1  37AB               	asrf	??___flmul+3,f
 11142     01E2  0CAA               	rrf	??___flmul+2,f
 11143     01E3  0CA9               	rrf	??___flmul+1,f
 11144     01E4  0CA8               	rrf	??___flmul,f
 11145     01E5  0BAC               	decfsz	??___flmul+4,f
 11146     01E6  29E1               	goto	u4765
 11147     01E7  082B               	movf	??___flmul+3,w
 11148     01E8  00B7               	movwf	___flmul@prod+3
 11149     01E9  082A               	movf	??___flmul+2,w
 11150     01EA  00B6               	movwf	___flmul@prod+2
 11151     01EB  0829               	movf	??___flmul+1,w
 11152     01EC  00B5               	movwf	___flmul@prod+1
 11153     01ED  0828               	movf	??___flmul,w
 11154     01EE  00B4               	movwf	___flmul@prod
 11155     01EF  3001               	movlw	1
 11156     01F0  07B8               	addwf	___flmul@temp,f
 11157     01F1  3000               	movlw	0
 11158     01F2  3DB9               	addwfc	___flmul@temp+1,f
 11159     01F3                     l3591:
 11160     01F3  0839               	movf	___flmul@temp+1,w
 11161     01F4  3A80               	xorlw	128
 11162     01F5  00A8               	movwf	??___flmul
 11163     01F6  3080               	movlw	128
 11164     01F7  0228               	subwf	??___flmul,w
 11165     01F8  1D03               	skipz
 11166     01F9  29FC               	goto	u4775
 11167     01FA  30FF               	movlw	255
 11168     01FB  0238               	subwf	___flmul@temp,w
 11169     01FC                     u4775:
 11170     01FC  1C03               	skipc
 11171     01FD  2A08               	goto	l3595
 11172     01FE  307F               	movlw	127
 11173     01FF  0020               	movlb	0	; select bank0
 11174     0200  00B7               	movwf	___flmul@prod+3
 11175     0201  3080               	movlw	128
 11176     0202  00B6               	movwf	___flmul@prod+2
 11177     0203  3000               	movlw	0
 11178     0204  00B5               	movwf	___flmul@prod+1
 11179     0205  3000               	movlw	0
 11180     0206  00B4               	movwf	___flmul@prod
 11181     0207  2A2E               	goto	l761
 11182     0208                     l3595:
 11183     0208  0020               	movlb	0	; select bank0
 11184     0209  0839               	movf	___flmul@temp+1,w
 11185     020A  3A80               	xorlw	128
 11186     020B  00A8               	movwf	??___flmul
 11187     020C  3080               	movlw	128
 11188     020D  0228               	subwf	??___flmul,w
 11189     020E  1D03               	skipz
 11190     020F  2A12               	goto	u4785
 11191     0210  3001               	movlw	1
 11192     0211  0238               	subwf	___flmul@temp,w
 11193     0212                     u4785:
 11194     0212  1803               	skipnc
 11195     0213  2A1F               	goto	l3601
 11196     0214  3000               	movlw	0
 11197     0215  0020               	movlb	0	; select bank0
 11198     0216  00B7               	movwf	___flmul@prod+3
 11199     0217  3000               	movlw	0
 11200     0218  00B6               	movwf	___flmul@prod+2
 11201     0219  3000               	movlw	0
 11202     021A  00B5               	movwf	___flmul@prod+1
 11203     021B  3000               	movlw	0
 11204     021C  00B4               	movwf	___flmul@prod
 11205     021D  01AD               	clrf	___flmul@sign
 11206     021E  2A2E               	goto	l761
 11207     021F                     l3601:
 11208     021F  0020               	movlb	0	; select bank0
 11209     0220  0838               	movf	___flmul@temp,w
 11210     0221  00B3               	movwf	___flmul@bexp
 11211     0222  30FF               	movlw	255
 11212     0223  05B4               	andwf	___flmul@prod,f
 11213     0224  30FF               	movlw	255
 11214     0225  05B5               	andwf	___flmul@prod+1,f
 11215     0226  307F               	movlw	127
 11216     0227  05B6               	andwf	___flmul@prod+2,f
 11217     0228  3000               	movlw	0
 11218     0229  05B7               	andwf	___flmul@prod+3,f
 11219     022A  1833               	btfsc	___flmul@bexp,0
 11220     022B  17B6               	bsf	___flmul@prod+2,7
 11221     022C  3633               	lsrf	___flmul@bexp,w
 11222     022D  00B7               	movwf	___flmul@prod+3
 11223     022E                     l761:
 11224     022E  082D               	movf	___flmul@sign,w
 11225     022F  00A8               	movwf	??___flmul
 11226     0230  0828               	movf	??___flmul,w
 11227     0231  04B7               	iorwf	___flmul@prod+3,f
 11228     0232  0837               	movf	___flmul@prod+3,w
 11229     0233  00A3               	movwf	?___flmul+3
 11230     0234  0836               	movf	___flmul@prod+2,w
 11231     0235  00A2               	movwf	?___flmul+2
 11232     0236  0835               	movf	___flmul@prod+1,w
 11233     0237  00A1               	movwf	?___flmul+1
 11234     0238  0834               	movf	___flmul@prod,w
 11235     0239  00A0               	movwf	?___flmul
 11236     023A  0008               	return
 11237     023B                     __end_of___flmul:
 11238                           
 11239                           	psect	text41
 11240     1D57                     __ptext41:	
 11241 ;; *************** function __Umul8_16 *****************
 11242 ;; Defined at:
 11243 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  multiplier      1    wreg     unsigned char 
 11246 ;;  multiplicand    1    0[COMMON] unsigned char 
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;  multiplier      1    8[COMMON] unsigned char 
 11249 ;;  word_mpld       2    6[COMMON] unsigned int 
 11250 ;;  product         2    4[COMMON] unsigned int 
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  2    0[COMMON] unsigned int 
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0
 11255 ;; Tracked objects:
 11256 ;;		On entry : 1F/0
 11257 ;;		On exit  : 1F/0
 11258 ;;		Unchanged: 1F/0
 11259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11260 ;;      Params:         2       0       0       0       0       0       0       0
 11261 ;;      Locals:         5       0       0       0       0       0       0       0
 11262 ;;      Temps:          2       0       0       0       0       0       0       0
 11263 ;;      Totals:         9       0       0       0       0       0       0       0
 11264 ;;Total ram usage:        9 bytes
 11265 ;; Hardware stack levels used: 1
 11266 ;; This function calls:
 11267 ;;		Nothing
 11268 ;; This function is called by:
 11269 ;;		___flmul
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273     1D57                     __Umul8_16:	
 11274                           ;psect for function __Umul8_16
 11275                           
 11276                           
 11277                           ;incstack = 0
 11278                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11279                           ;__Umul8_16@multiplier stored from wreg
 11280     1D57  00F8               	movwf	__Umul8_16@multiplier
 11281     1D58  01F4               	clrf	__Umul8_16@product
 11282     1D59  01F5               	clrf	__Umul8_16@product+1
 11283     1D5A  0870               	movf	__Umul8_16@multiplicand,w
 11284     1D5B  00F2               	movwf	??__Umul8_16
 11285     1D5C  01F3               	clrf	??__Umul8_16+1
 11286     1D5D  0872               	movf	??__Umul8_16,w
 11287     1D5E  00F6               	movwf	__Umul8_16@word_mpld
 11288     1D5F  0873               	movf	??__Umul8_16+1,w
 11289     1D60  00F7               	movwf	__Umul8_16@word_mpld+1
 11290     1D61                     l3151:
 11291     1D61  1C78               	btfss	__Umul8_16@multiplier,0
 11292     1D62  2D67               	goto	l768
 11293     1D63  0876               	movf	__Umul8_16@word_mpld,w
 11294     1D64  07F4               	addwf	__Umul8_16@product,f
 11295     1D65  0877               	movf	__Umul8_16@word_mpld+1,w
 11296     1D66  3DF5               	addwfc	__Umul8_16@product+1,f
 11297     1D67                     l768:
 11298     1D67  3001               	movlw	1
 11299     1D68                     u3795:
 11300     1D68  35F6               	lslf	__Umul8_16@word_mpld,f
 11301     1D69  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11302     1D6A  0B89               	decfsz	9,f
 11303     1D6B  2D68               	goto	u3795
 11304     1D6C  1003               	clrc
 11305     1D6D  0CF8               	rrf	__Umul8_16@multiplier,f
 11306     1D6E  0878               	movf	__Umul8_16@multiplier,w
 11307     1D6F  1D03               	btfss	3,2
 11308     1D70  2D61               	goto	l3151
 11309     1D71  0875               	movf	__Umul8_16@product+1,w
 11310     1D72  00F1               	movwf	?__Umul8_16+1
 11311     1D73  0874               	movf	__Umul8_16@product,w
 11312     1D74  00F0               	movwf	?__Umul8_16
 11313     1D75  0008               	return
 11314     1D76                     __end_of__Umul8_16:
 11315                           
 11316                           	psect	text42
 11317     1691                     __ptext42:	
 11318 ;; *************** function ___fldiv *****************
 11319 ;; Defined at:
 11320 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;  a               4   26[BANK0 ] unsigned int 
 11323 ;;  b               4   30[BANK0 ] unsigned int 
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  grs             4   46[BANK0 ] unsigned long 
 11326 ;;  rem             4   39[BANK0 ] unsigned long 
 11327 ;;  new_exp         2   44[BANK0 ] int 
 11328 ;;  aexp            1   51[BANK0 ] unsigned char 
 11329 ;;  bexp            1   50[BANK0 ] unsigned char 
 11330 ;;  sign            1   43[BANK0 ] unsigned char 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  4   26[BANK0 ] unsigned char 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0
 11335 ;; Tracked objects:
 11336 ;;		On entry : 1F/0
 11337 ;;		On exit  : 1F/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11340 ;;      Params:         0       8       0       0       0       0       0       0
 11341 ;;      Locals:         0      13       0       0       0       0       0       0
 11342 ;;      Temps:          0       5       0       0       0       0       0       0
 11343 ;;      Totals:         0      26       0       0       0       0       0       0
 11344 ;;Total ram usage:       26 bytes
 11345 ;; Hardware stack levels used: 1
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_ADC_Convert
 11350 ;;		_efgtoa
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354     1691                     ___fldiv:	
 11355                           ;psect for function ___fldiv
 11356                           
 11357                           
 11358                           ;incstack = 0
 11359                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11360     1691  0841               	movf	___fldiv@b+3,w
 11361     1692  3980               	andlw	128
 11362     1693  00CB               	movwf	___fldiv@sign
 11363     1694  3541               	lslf	___fldiv@b+3,w
 11364     1695  00D2               	movwf	___fldiv@bexp
 11365     1696  1BC0               	btfsc	___fldiv@b+2,7
 11366     1697  1452               	bsf	___fldiv@bexp,0
 11367     1698  0852               	movf	___fldiv@bexp,w
 11368     1699  1903               	btfsc	3,2
 11369     169A  2EA9               	goto	l3351
 11370     169B  0A52               	incf	___fldiv@bexp,w
 11371     169C  1D03               	btfss	3,2
 11372     169D  2EA6               	goto	l3347
 11373     169E  3000               	movlw	0
 11374     169F  00C1               	movwf	___fldiv@b+3
 11375     16A0  3000               	movlw	0
 11376     16A1  00C0               	movwf	___fldiv@b+2
 11377     16A2  3000               	movlw	0
 11378     16A3  00BF               	movwf	___fldiv@b+1
 11379     16A4  3000               	movlw	0
 11380     16A5  00BE               	movwf	___fldiv@b
 11381     16A6                     l3347:
 11382     16A6  17C0               	bsf	___fldiv@b+2,7
 11383     16A7  01C1               	clrf	___fldiv@b+3
 11384     16A8  2EB1               	goto	l3353
 11385     16A9                     l3351:
 11386     16A9  3000               	movlw	0
 11387     16AA  00C1               	movwf	___fldiv@b+3
 11388     16AB  3000               	movlw	0
 11389     16AC  00C0               	movwf	___fldiv@b+2
 11390     16AD  3000               	movlw	0
 11391     16AE  00BF               	movwf	___fldiv@b+1
 11392     16AF  3000               	movlw	0
 11393     16B0  00BE               	movwf	___fldiv@b
 11394     16B1                     l3353:
 11395     16B1  083D               	movf	___fldiv@a+3,w
 11396     16B2  3980               	andlw	128
 11397     16B3  00C2               	movwf	??___fldiv
 11398     16B4  0842               	movf	??___fldiv,w
 11399     16B5  06CB               	xorwf	___fldiv@sign,f
 11400     16B6  353D               	lslf	___fldiv@a+3,w
 11401     16B7  00D3               	movwf	___fldiv@aexp
 11402     16B8  1BBC               	btfsc	___fldiv@a+2,7
 11403     16B9  1453               	bsf	___fldiv@aexp,0
 11404     16BA  0853               	movf	___fldiv@aexp,w
 11405     16BB  1903               	btfsc	3,2
 11406     16BC  2ECB               	goto	l3371
 11407     16BD  0A53               	incf	___fldiv@aexp,w
 11408     16BE  1D03               	btfss	3,2
 11409     16BF  2EC8               	goto	l3367
 11410     16C0  3000               	movlw	0
 11411     16C1  00BD               	movwf	___fldiv@a+3
 11412     16C2  3000               	movlw	0
 11413     16C3  00BC               	movwf	___fldiv@a+2
 11414     16C4  3000               	movlw	0
 11415     16C5  00BB               	movwf	___fldiv@a+1
 11416     16C6  3000               	movlw	0
 11417     16C7  00BA               	movwf	___fldiv@a
 11418     16C8                     l3367:
 11419     16C8  17BC               	bsf	___fldiv@a+2,7
 11420     16C9  01BD               	clrf	___fldiv@a+3
 11421     16CA  2ED3               	goto	l709
 11422     16CB                     l3371:
 11423     16CB  3000               	movlw	0
 11424     16CC  00BD               	movwf	___fldiv@a+3
 11425     16CD  3000               	movlw	0
 11426     16CE  00BC               	movwf	___fldiv@a+2
 11427     16CF  3000               	movlw	0
 11428     16D0  00BB               	movwf	___fldiv@a+1
 11429     16D1  3000               	movlw	0
 11430     16D2  00BA               	movwf	___fldiv@a
 11431     16D3                     l709:
 11432     16D3  083D               	movf	___fldiv@a+3,w
 11433     16D4  043C               	iorwf	___fldiv@a+2,w
 11434     16D5  043B               	iorwf	___fldiv@a+1,w
 11435     16D6  043A               	iorwf	___fldiv@a,w
 11436     16D7  1D03               	skipz
 11437     16D8  2EF2               	goto	l3381
 11438     16D9  3000               	movlw	0
 11439     16DA  00C1               	movwf	___fldiv@b+3
 11440     16DB  3000               	movlw	0
 11441     16DC  00C0               	movwf	___fldiv@b+2
 11442     16DD  3000               	movlw	0
 11443     16DE  00BF               	movwf	___fldiv@b+1
 11444     16DF  3000               	movlw	0
 11445     16E0  00BE               	movwf	___fldiv@b
 11446     16E1  3080               	movlw	128
 11447     16E2  04C0               	iorwf	___fldiv@b+2,f
 11448     16E3  307F               	movlw	127
 11449     16E4  04C1               	iorwf	___fldiv@b+3,f
 11450     16E5                     L26:
 11451     16E5  084B               	movf	___fldiv@sign,w
 11452     16E6  00C2               	movwf	??___fldiv
 11453     16E7  0842               	movf	??___fldiv,w
 11454     16E8  04C1               	iorwf	___fldiv@b+3,f
 11455     16E9  0841               	movf	___fldiv@b+3,w
 11456     16EA  00BD               	movwf	?___fldiv+3
 11457     16EB  0840               	movf	___fldiv@b+2,w
 11458     16EC  00BC               	movwf	?___fldiv+2
 11459     16ED  083F               	movf	___fldiv@b+1,w
 11460     16EE  00BB               	movwf	?___fldiv+1
 11461     16EF  083E               	movf	___fldiv@b,w
 11462     16F0  00BA               	movwf	?___fldiv
 11463     16F1  0008               	return
 11464     16F2                     l3381:
 11465     16F2  0852               	movf	___fldiv@bexp,w
 11466     16F3  1D03               	btfss	3,2
 11467     16F4  2EFE               	goto	l3387
 11468     16F5  3000               	movlw	0
 11469     16F6  00BD               	movwf	?___fldiv+3
 11470     16F7  3000               	movlw	0
 11471     16F8  00BC               	movwf	?___fldiv+2
 11472     16F9  3000               	movlw	0
 11473     16FA  00BB               	movwf	?___fldiv+1
 11474     16FB  3000               	movlw	0
 11475     16FC  00BA               	movwf	?___fldiv
 11476     16FD  0008               	return
 11477     16FE                     l3387:
 11478     16FE  0852               	movf	___fldiv@bexp,w
 11479     16FF  00C2               	movwf	??___fldiv
 11480     1700  01C3               	clrf	??___fldiv+1
 11481     1701  0843               	movf	??___fldiv+1,w
 11482     1702  00C5               	movwf	??___fldiv+3
 11483     1703  0853               	movf	___fldiv@aexp,w
 11484     1704  0242               	subwf	??___fldiv,w
 11485     1705  00C4               	movwf	??___fldiv+2
 11486     1706  1C03               	skipc
 11487     1707  03C5               	decf	??___fldiv+3,f
 11488     1708  0844               	movf	??___fldiv+2,w
 11489     1709  3E7F               	addlw	127
 11490     170A  00CC               	movwf	___fldiv@new_exp
 11491     170B  3000               	movlw	0
 11492     170C  3D45               	addwfc	??___fldiv+3,w
 11493     170D  00CD               	movwf	___fldiv@new_exp+1
 11494     170E  0841               	movf	___fldiv@b+3,w
 11495     170F  00CA               	movwf	___fldiv@rem+3
 11496     1710  0840               	movf	___fldiv@b+2,w
 11497     1711  00C9               	movwf	___fldiv@rem+2
 11498     1712  083F               	movf	___fldiv@b+1,w
 11499     1713  00C8               	movwf	___fldiv@rem+1
 11500     1714  083E               	movf	___fldiv@b,w
 11501     1715  00C7               	movwf	___fldiv@rem
 11502     1716  3000               	movlw	0
 11503     1717  00C1               	movwf	___fldiv@b+3
 11504     1718  3000               	movlw	0
 11505     1719  00C0               	movwf	___fldiv@b+2
 11506     171A  3000               	movlw	0
 11507     171B  00BF               	movwf	___fldiv@b+1
 11508     171C  3000               	movlw	0
 11509     171D  00BE               	movwf	___fldiv@b
 11510     171E  3000               	movlw	0
 11511     171F  00D1               	movwf	___fldiv@grs+3
 11512     1720  3000               	movlw	0
 11513     1721  00D0               	movwf	___fldiv@grs+2
 11514     1722  3000               	movlw	0
 11515     1723  00CF               	movwf	___fldiv@grs+1
 11516     1724  3000               	movlw	0
 11517     1725  00CE               	movwf	___fldiv@grs
 11518     1726  01D3               	clrf	___fldiv@aexp
 11519     1727                     l3415:
 11520     1727  301A               	movlw	26
 11521     1728  0253               	subwf	___fldiv@aexp,w
 11522     1729  1803               	btfsc	3,0
 11523     172A  2F63               	goto	l3417
 11524     172B  0853               	movf	___fldiv@aexp,w
 11525     172C  1903               	btfsc	3,2
 11526     172D  2F45               	goto	l3407
 11527     172E  3001               	movlw	1
 11528     172F                     u4355:
 11529     172F  35C7               	lslf	___fldiv@rem,f
 11530     1730  0DC8               	rlf	___fldiv@rem+1,f
 11531     1731  0DC9               	rlf	___fldiv@rem+2,f
 11532     1732  0DCA               	rlf	___fldiv@rem+3,f
 11533     1733  0B89               	decfsz	9,f
 11534     1734  2F2F               	goto	u4355
 11535     1735  3001               	movlw	1
 11536     1736                     u4365:
 11537     1736  35BE               	lslf	___fldiv@b,f
 11538     1737  0DBF               	rlf	___fldiv@b+1,f
 11539     1738  0DC0               	rlf	___fldiv@b+2,f
 11540     1739  0DC1               	rlf	___fldiv@b+3,f
 11541     173A  0B89               	decfsz	9,f
 11542     173B  2F36               	goto	u4365
 11543     173C  1BD1               	btfsc	___fldiv@grs+3,7
 11544     173D  143E               	bsf	___fldiv@b,0
 11545     173E  3001               	movlw	1
 11546     173F                     u4385:
 11547     173F  35CE               	lslf	___fldiv@grs,f
 11548     1740  0DCF               	rlf	___fldiv@grs+1,f
 11549     1741  0DD0               	rlf	___fldiv@grs+2,f
 11550     1742  0DD1               	rlf	___fldiv@grs+3,f
 11551     1743  0B89               	decfsz	9,f
 11552     1744  2F3F               	goto	u4385
 11553     1745                     l3407:
 11554     1745  083D               	movf	___fldiv@a+3,w
 11555     1746  024A               	subwf	___fldiv@rem+3,w
 11556     1747  1D03               	skipz
 11557     1748  2F53               	goto	u4395
 11558     1749  083C               	movf	___fldiv@a+2,w
 11559     174A  0249               	subwf	___fldiv@rem+2,w
 11560     174B  1D03               	skipz
 11561     174C  2F53               	goto	u4395
 11562     174D  083B               	movf	___fldiv@a+1,w
 11563     174E  0248               	subwf	___fldiv@rem+1,w
 11564     174F  1D03               	skipz
 11565     1750  2F53               	goto	u4395
 11566     1751  083A               	movf	___fldiv@a,w
 11567     1752  0247               	subwf	___fldiv@rem,w
 11568     1753                     u4395:
 11569     1753  1C03               	skipc
 11570     1754  2F5E               	goto	l3413
 11571     1755  1751               	bsf	___fldiv@grs+3,6
 11572     1756  083A               	movf	___fldiv@a,w
 11573     1757  02C7               	subwf	___fldiv@rem,f
 11574     1758  083B               	movf	___fldiv@a+1,w
 11575     1759  3BC8               	subwfb	___fldiv@rem+1,f
 11576     175A  083C               	movf	___fldiv@a+2,w
 11577     175B  3BC9               	subwfb	___fldiv@rem+2,f
 11578     175C  083D               	movf	___fldiv@a+3,w
 11579     175D  3BCA               	subwfb	___fldiv@rem+3,f
 11580     175E                     l3413:
 11581     175E  3001               	movlw	1
 11582     175F  00C2               	movwf	??___fldiv
 11583     1760  0842               	movf	??___fldiv,w
 11584     1761  07D3               	addwf	___fldiv@aexp,f
 11585     1762  2F27               	goto	l3415
 11586     1763                     l3417:
 11587     1763  084A               	movf	___fldiv@rem+3,w
 11588     1764  0449               	iorwf	___fldiv@rem+2,w
 11589     1765  0448               	iorwf	___fldiv@rem+1,w
 11590     1766  0447               	iorwf	___fldiv@rem,w
 11591     1767  1D03               	btfss	3,2
 11592     1768  144E               	bsf	___fldiv@grs,0
 11593     1769                     l3431:
 11594     1769  1BC0               	btfsc	___fldiv@b+2,7
 11595     176A  2F80               	goto	l3433
 11596     176B  3001               	movlw	1
 11597     176C                     u4425:
 11598     176C  35BE               	lslf	___fldiv@b,f
 11599     176D  0DBF               	rlf	___fldiv@b+1,f
 11600     176E  0DC0               	rlf	___fldiv@b+2,f
 11601     176F  0DC1               	rlf	___fldiv@b+3,f
 11602     1770  0B89               	decfsz	9,f
 11603     1771  2F6C               	goto	u4425
 11604     1772  1BD1               	btfsc	___fldiv@grs+3,7
 11605     1773  143E               	bsf	___fldiv@b,0
 11606     1774  3001               	movlw	1
 11607     1775                     u4445:
 11608     1775  35CE               	lslf	___fldiv@grs,f
 11609     1776  0DCF               	rlf	___fldiv@grs+1,f
 11610     1777  0DD0               	rlf	___fldiv@grs+2,f
 11611     1778  0DD1               	rlf	___fldiv@grs+3,f
 11612     1779  0B89               	decfsz	9,f
 11613     177A  2F75               	goto	u4445
 11614     177B  30FF               	movlw	255
 11615     177C  07CC               	addwf	___fldiv@new_exp,f
 11616     177D  30FF               	movlw	255
 11617     177E  3DCD               	addwfc	___fldiv@new_exp+1,f
 11618     177F  2F69               	goto	l3431
 11619     1780                     l3433:
 11620     1780  01D3               	clrf	___fldiv@aexp
 11621     1781  1FD1               	btfss	___fldiv@grs+3,7
 11622     1782  2F99               	goto	l3443
 11623     1783  30FF               	movlw	255
 11624     1784  054E               	andwf	___fldiv@grs,w
 11625     1785  00C2               	movwf	??___fldiv
 11626     1786  30FF               	movlw	255
 11627     1787  054F               	andwf	___fldiv@grs+1,w
 11628     1788  00C3               	movwf	??___fldiv+1
 11629     1789  30FF               	movlw	255
 11630     178A  0550               	andwf	___fldiv@grs+2,w
 11631     178B  00C4               	movwf	??___fldiv+2
 11632     178C  307F               	movlw	127
 11633     178D  0551               	andwf	___fldiv@grs+3,w
 11634     178E  00C5               	movwf	??___fldiv+3
 11635     178F  0845               	movf	??___fldiv+3,w
 11636     1790  0444               	iorwf	??___fldiv+2,w
 11637     1791  0443               	iorwf	??___fldiv+1,w
 11638     1792  0442               	iorwf	??___fldiv,w
 11639     1793  1903               	skipnz
 11640     1794  183E               	btfsc	___fldiv@b,0
 11641     1795  2F97               	goto	l3439
 11642     1796  2F99               	goto	l3443
 11643     1797                     l3439:
 11644     1797  01D3               	clrf	___fldiv@aexp
 11645     1798  0AD3               	incf	___fldiv@aexp,f
 11646     1799                     l3443:
 11647     1799  0853               	movf	___fldiv@aexp,w
 11648     179A  1903               	btfsc	3,2
 11649     179B  2FC2               	goto	l3453
 11650     179C  3001               	movlw	1
 11651     179D  07BE               	addwf	___fldiv@b,f
 11652     179E  3000               	movlw	0
 11653     179F  3DBF               	addwfc	___fldiv@b+1,f
 11654     17A0  3000               	movlw	0
 11655     17A1  3DC0               	addwfc	___fldiv@b+2,f
 11656     17A2  3000               	movlw	0
 11657     17A3  3DC1               	addwfc	___fldiv@b+3,f
 11658     17A4  1C41               	btfss	___fldiv@b+3,0
 11659     17A5  2FC2               	goto	l3453
 11660     17A6  083E               	movf	___fldiv@b,w
 11661     17A7  00C2               	movwf	??___fldiv
 11662     17A8  083F               	movf	___fldiv@b+1,w
 11663     17A9  00C3               	movwf	??___fldiv+1
 11664     17AA  0840               	movf	___fldiv@b+2,w
 11665     17AB  00C4               	movwf	??___fldiv+2
 11666     17AC  0841               	movf	___fldiv@b+3,w
 11667     17AD  00C5               	movwf	??___fldiv+3
 11668     17AE  3001               	movlw	1
 11669     17AF  00C6               	movwf	??___fldiv+4
 11670     17B0                     u4515:
 11671     17B0  37C5               	asrf	??___fldiv+3,f
 11672     17B1  0CC4               	rrf	??___fldiv+2,f
 11673     17B2  0CC3               	rrf	??___fldiv+1,f
 11674     17B3  0CC2               	rrf	??___fldiv,f
 11675     17B4  0BC6               	decfsz	??___fldiv+4,f
 11676     17B5  2FB0               	goto	u4515
 11677     17B6  0845               	movf	??___fldiv+3,w
 11678     17B7  00C1               	movwf	___fldiv@b+3
 11679     17B8  0844               	movf	??___fldiv+2,w
 11680     17B9  00C0               	movwf	___fldiv@b+2
 11681     17BA  0843               	movf	??___fldiv+1,w
 11682     17BB  00BF               	movwf	___fldiv@b+1
 11683     17BC  0842               	movf	??___fldiv,w
 11684     17BD  00BE               	movwf	___fldiv@b
 11685     17BE  3001               	movlw	1
 11686     17BF  07CC               	addwf	___fldiv@new_exp,f
 11687     17C0  3000               	movlw	0
 11688     17C1  3DCD               	addwfc	___fldiv@new_exp+1,f
 11689     17C2                     l3453:
 11690     17C2  084D               	movf	___fldiv@new_exp+1,w
 11691     17C3  3A80               	xorlw	128
 11692     17C4  00C2               	movwf	??___fldiv
 11693     17C5  3080               	movlw	128
 11694     17C6  0242               	subwf	??___fldiv,w
 11695     17C7  1D03               	skipz
 11696     17C8  2FCB               	goto	u4525
 11697     17C9  30FF               	movlw	255
 11698     17CA  024C               	subwf	___fldiv@new_exp,w
 11699     17CB                     u4525:
 11700     17CB  1C03               	skipc
 11701     17CC  2FDA               	goto	l730
 11702     17CD  30FF               	movlw	255
 11703     17CE  0020               	movlb	0	; select bank0
 11704     17CF  00CC               	movwf	___fldiv@new_exp
 11705     17D0  3000               	movlw	0
 11706     17D1  00CD               	movwf	___fldiv@new_exp+1
 11707     17D2  3000               	movlw	0
 11708     17D3  00C1               	movwf	___fldiv@b+3
 11709     17D4  3000               	movlw	0
 11710     17D5  00C0               	movwf	___fldiv@b+2
 11711     17D6  3000               	movlw	0
 11712     17D7  00BF               	movwf	___fldiv@b+1
 11713     17D8  3000               	movlw	0
 11714     17D9  00BE               	movwf	___fldiv@b
 11715     17DA                     l730:
 11716     17DA  0020               	movlb	0	; select bank0
 11717     17DB  084D               	movf	___fldiv@new_exp+1,w
 11718     17DC  3A80               	xorlw	128
 11719     17DD  00C2               	movwf	??___fldiv
 11720     17DE  3080               	movlw	128
 11721     17DF  0242               	subwf	??___fldiv,w
 11722     17E0  1D03               	skipz
 11723     17E1  2FE4               	goto	u4535
 11724     17E2  3001               	movlw	1
 11725     17E3  024C               	subwf	___fldiv@new_exp,w
 11726     17E4                     u4535:
 11727     17E4  1803               	skipnc
 11728     17E5  2FF2               	goto	l731
 11729     17E6  0020               	movlb	0	; select bank0
 11730     17E7  01CC               	clrf	___fldiv@new_exp
 11731     17E8  01CD               	clrf	___fldiv@new_exp+1
 11732     17E9  3000               	movlw	0
 11733     17EA  00C1               	movwf	___fldiv@b+3
 11734     17EB  3000               	movlw	0
 11735     17EC  00C0               	movwf	___fldiv@b+2
 11736     17ED  3000               	movlw	0
 11737     17EE  00BF               	movwf	___fldiv@b+1
 11738     17EF  3000               	movlw	0
 11739     17F0  00BE               	movwf	___fldiv@b
 11740     17F1  01CB               	clrf	___fldiv@sign
 11741     17F2                     l731:
 11742     17F2  0020               	movlb	0	; select bank0
 11743     17F3  084C               	movf	___fldiv@new_exp,w
 11744     17F4  00D2               	movwf	___fldiv@bexp
 11745     17F5  1C52               	btfss	___fldiv@bexp,0
 11746     17F6  2FF9               	goto	l3467
 11747     17F7  17C0               	bsf	___fldiv@b+2,7
 11748     17F8  2FFD               	goto	l733
 11749     17F9                     l3467:
 11750     17F9  307F               	movlw	127
 11751     17FA  00C2               	movwf	??___fldiv
 11752     17FB  0842               	movf	??___fldiv,w
 11753     17FC  05C0               	andwf	___fldiv@b+2,f
 11754     17FD                     l733:
 11755     17FD  3652               	lsrf	___fldiv@bexp,w
 11756     17FE  00C1               	movwf	___fldiv@b+3
 11757     17FF  2EE5               	goto	L26
 11758     1800                     __end_of___fldiv:
 11759     007E                     btemp	set	126	;btemp
 11760     007E                     wtemp0	set	126
 11761                           
 11762                           	psect	idloc
 11763                           
 11764                           ;Config register IDLOC0 @ 0x8000
 11765                           ;	unspecified, using default values
 11766     8000                     	org	32768
 11767     8000  3FFF               	dw	16383
 11768                           
 11769                           ;Config register IDLOC1 @ 0x8001
 11770                           ;	unspecified, using default values
 11771     8001                     	org	32769
 11772     8001  3FFF               	dw	16383
 11773                           
 11774                           ;Config register IDLOC2 @ 0x8002
 11775                           ;	unspecified, using default values
 11776     8002                     	org	32770
 11777     8002  3FFF               	dw	16383
 11778                           
 11779                           ;Config register IDLOC3 @ 0x8003
 11780                           ;	unspecified, using default values
 11781     8003                     	org	32771
 11782     8003  3FFF               	dw	16383
 11783                           
 11784                           	psect	config
 11785                           
 11786                           ;Config register CONFIG1 @ 0x8007
 11787                           ;	Oscillator Selection
 11788                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 11789                           ;	Watchdog Timer Enable
 11790                           ;	WDTE = OFF, WDT disabled
 11791                           ;	Power-up Timer Enable
 11792                           ;	PWRTE = OFF, PWRT disabled
 11793                           ;	MCLR Pin Function Select
 11794                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11795                           ;	Flash Program Memory Code Protection
 11796                           ;	CP = OFF, Program memory code protection is disabled
 11797                           ;	Data Memory Code Protection
 11798                           ;	CPD = OFF, Data memory code protection is disabled
 11799                           ;	Brown-out Reset Enable
 11800                           ;	BOREN = OFF, Brown-out Reset disabled
 11801                           ;	Clock Out Enable
 11802                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11803                           ;	Internal/External Switchover
 11804                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11805                           ;	Fail-Safe Clock Monitor Enable
 11806                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11807     8007                     	org	32775
 11808     8007  09E2               	dw	2530
 11809                           
 11810                           ;Config register CONFIG2 @ 0x8008
 11811                           ;	Flash Memory Self-Write Protection
 11812                           ;	WRT = OFF, Write protection off
 11813                           ;	Voltage Regulator Capacitor Enable
 11814                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 11815                           ;	PLL Enable
 11816                           ;	PLLEN = OFF, 4x PLL disabled
 11817                           ;	Stack Overflow/Underflow Reset Enable
 11818                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
 11819                           ;	Brown-out Reset Voltage Selection
 11820                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11821                           ;	Low-Voltage Programming Enable
 11822                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11823     8008                     	org	32776
 11824     8008  1CFF               	dw	7423

Data Sizes:
    Strings     144
    Constant    0
    Data        9
    BSS         93
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     35      47
    BANK3            80     52      61
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_15(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_15(CODE[4]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S886$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> display_int@str(BANK2[16]), display_float2@str(BANK0[16]), display_float@str(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S802$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S802$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    lcd_DisplayString@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[5]), STR_13(CODE[15]), STR_12(CODE[6]), STR_11(CODE[12]), 
		 -> STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[14]), 
		 -> STR_6(CODE[16]), main@inputTime(BANK3[6]), main@inputTemp(BANK3[3]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), display_int@str(BANK2[16]), display_float2@str(BANK0[16]), display_float@str(BANK2[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _efgtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_DisplayString->_lcd_char
    ___awdiv->___awmod
    _ADC_Convert->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _ADC_Convert->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _display_int->_sprintf
    _display_float->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_display_float
    _display_int->_sprintf
    _display_float->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   76753
                                             31 BANK2      4     4      0
                                              0 BANK3     52    52      0
                        _ADC_Convert
                           _ADC_init
                            ___awdiv
                            ___awmod
                             ___flge
                            ___flmul
                             ___wmul
                           ___xxtofl
                      _display_float
                        _display_int
                             _keypad
                  _lcd_DisplayString
                           _lcd_char
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               1     1      0      23
 ---------------------------------------------------------------------------------
 (1) _display_int                                         18    16      2   29717
                                             11 BANK2     18    16      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                  _lcd_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _display_float                                       20    16      4   29337
                                             11 BANK2     20    16      4
                  _lcd_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    13      8   27853
                                             71 BANK1      8     0      8
                                              0 BANK2     11    11      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   27326
                                             79 BANK0      1     1      0
                                             65 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    20      2   27005
                                             77 BANK0      2     0      2
                                             49 BANK1     16    16      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              55    50      5   19100
                                             72 BANK0      5     0      5
                                              0 BANK1     49    49      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     314
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1094
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                27    19      8    4075
                                             16 BANK0     27    19      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2468
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1925
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_DisplayString                                    3     1      2    1336
                                              2 COMMON     3     1      2
                           _lcd_char
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                         12     8      4    6177
                                             52 BANK0     12     8      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3482
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2033
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _ADC_init
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___flge
     ___flmul (ARG)
   ___flmul
   ___wmul
   ___xxtofl
   _display_float
     _lcd_DisplayString
       _lcd_char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   _display_int
     ___awdiv (ARG)
     ___awmod (ARG)
     _lcd_DisplayString (ARG)
     _sprintf (ARG)
   _keypad
   _lcd_DisplayString
   _lcd_char
   _lcd_cmd
   _lcd_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     16A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4F      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     23      2F      10       58.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     34      3D      12       76.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     16A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 24 18:32:25 2023

             ___fldiv@aexp 0053               ___fldiv@bexp 0052               ___fldiv@sign 004B  
             ?_display_int 012B                         l82 1065                         l83 1061  
                       l76 082A                         l93 1071                         l94 106D  
                       l87 1077                         l88 106B                         l89 1067  
                       l99 1073               ___awdiv@sign 0021        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l102 1086                        l103 1082  
                      l112 1092                        l121 10A7                        l113 108E  
                      l122 10A3                        l106 1098                        l131 10B3  
                      l107 108C                        l132 10AF                        l108 1088  
                      l125 10B9                        l126 10AD                        l118 1094  
                      l127 10A9                        l137 10B5                        l352 1CB5  
                      l521 1F20                        l522 1F3A                        l530 1155  
                      l452 155F                        l533 11A3                        l197 0FC6  
                      l199 0FCC                        l465 146C                        l553 1FE4  
                      l730 17DA                        l731 17F2                        l733 17FD  
                      l709 16D3                        l653 08BA                        l901 0444  
                      l806 12A2                        l807 12AC                        l911 0647  
                      l761 022E                        l657 092A                        l674 09AD  
                      l851 001A                        l659 090F                        l862 15CD  
                      l863 15E7                        l695 0A26                        l687 0A0D  
                      l768 1D67                        l793 125A                        l868 166B  
                      l799 128E                        l995 1212                        _abs 1C96  
                      _pad 000F               ___awmod@sign 0076                        wreg 0009  
             ___flmul@aexp 002E               ___flmul@bexp 0033               ___flmul@sign 002D  
             ___flmul@temp 0038               ___flmul@prod 0034               ___fltol@exp1 0079  
                     l1016 1399                       l1043 1DBB                       ?_abs 0073  
                     l3001 08C5                       l3101 09CC                       l3031 08E3  
                     l3041 0917                       l3115 09DE                       l3107 09D3  
                     l3205 14EA                       l3141 0A21                       l3109 09D5  
                     l3151 1D61                       l3215 1532                       l3207 14F9  
                     l3231 13F3                       l3119 09E0                       l3039 0915  
                     l4023 0A9A                       l4031 0ACF                       l3217 153E  
                     l3241 140F                       l3137 0A1D                       l3065 0948  
                     l3057 0938                       l3049 0926                       l3313 1FD2  
                     l3171 1CAF                       l3227 13CC                       l3067 094A  
                     l3075 095A                       l3323 1FF1                       l3315 1FE0  
                     l4051 0B4C                       l4115 1D21                       l3413 175E  
                     l4221 0814                       l3245 143F                       l3093 09BF  
                     l3085 09A5                       l4061 0B6D                       l4053 0B4F  
                     l4045 0B37                       l4037 0AE8                       l4029 0AAA  
                     l4117 1D36                       l3431 1769                       l3407 1745  
                     l3415 1727                       l3351 16A9                       l4127 1C6B  
                     l3239 1400                       l3247 144B                       l3167 1D98  
                     l4071 0BB4                       l4063 0B80                       l3433 1780  
                     l3417 1763                       l3353 16B1                       l3601 021F  
                     l3505 0075                       l4153 1269                       l4225 081E  
                     l4217 080B                       l3193 14CF                       l3273 1189  
                     l4049 0B47                       l4057 0B51                       l3443 1799  
                     l3371 16CB                       l3347 16A6                       l3507 0077  
                     l4147 1252                       l4403 1ECB                       l3195 14D3  
                     l3259 1F4C                       l4067 0B94                       l4059 0B64  
                     l4083 0BEB                       l3453 17C2                       l3381 16F2  
                     l3517 008D                       l3509 007F                       l4181 12C7  
                     l4157 126B                       l4421 1EF0                       l3189 14A8  
                     l3269 116F                       l3293 1FA6                       l4077 0BD0  
                     l4069 0BA4                       l3439 1797                       l3367 16C8  
                     l4167 12A0                       l4159 127B                       l4415 1ED8  
                     l4407 1ED2                       l3623 001C                       l4079 0BE1  
                     l4169 1293                       l4417 1EE4                       l4425 1EF9  
                     l3713 1CF7                       l3625 0038                       l3617 0018  
                     l3297 1FAF                       l3641 110E                       l3801 02CE  
                     l3467 17F9                       l3387 16FE                       l3571 01B1  
                     l3491 005E                       l3651 1136                       l4507 0CA7  
                     l3581 01CA                       l4365 101A                       l4429 1F01  
                     l3725 15B1                       l3645 1113                       l3661 1D85  
                     l3821 0326                       l3813 0305                       l4621 0E2F  
                     l4533 0D1A                       l4541 0D33                       ?_pad 007B  
                     l3591 01F3                       l3487 0054                       l4391 1051  
                     l4383 1040                       l4375 1022                       l4359 100F  
                     l2943 1F57                       l3743 1604                       l3903 065A  
                     l3831 03D0                       l3823 0333                       l3807 02EE  
                     l4615 0E24                       l4527 0D0F                       l3577 01C8  
                     l3569 019A                       l3489 0056                       l4377 102E  
                     l3753 15EE                       l3729 15C5                       l3681 1355  
                     l3657 1D06                       l3833 03DA                       l3841 0409  
                     l4625 0E39                       l4633 0E56                       l4561 0D57  
                     l4537 0D24                       l3595 0208                       l4387 1049  
                     l2947 1F7E                       l3763 1686                       l3739 15E1  
                     l2971 088E                       l3683 1366                       l3931 06F1  
                     l3907 06BF                       l3827 0384                       l3843 042E  
                     l3757 1677                       l2973 0896                       l3909 06C4  
                     l4629 0E45                       l4557 0D4F                       l2991 08AF  
                     l2967 088B                       l3687 137C                       l3863 0464  
                     l4487 0E78                       l3929 06D9                       l3945 0780  
                     l3873 0476                       l3849 043F                       l3777 027F  
                     l4489 0C73                       l3971 11C2                       l2995 08B2  
                     l3963 07D1                       l3875 054B                       l3859 045C  
                     l3795 02B7                       l3787 0292                       l4595 0DBF  
                     l3981 11DF                       l3949 0798                       l3885 05BC  
                     l3789 0298                       l4685 0EAE                       l3983 11F3  
                     l3975 11BA                       l3879 059D                       l4791 0BDC  
                     l4793 11EB                       l3977 11C7                       l4689 0FD3  
                     l3995 1238                       l3979 11DA                       l4787 0B59  
                     l3989 1216                       l4789 0B9C                       STR_1 187D  
                     STR_2 188D                       STR_3 188A                       STR_4 1856  
                     STR_5 1862                       STR_6 1800                       STR_7 182E  
                     STR_8 183C                       STR_9 1810             ?_display_float 012B  
                     _LATB 010D                       u4035 142D                       u5100 158E  
                     u4205 1FD3                       u5005 136F                       u3345 1F7C  
                     u5025 1385                       u5050 1C8E                       u3450 0902  
                     u4235 1FE8                       u5060 1C8F                       u3460 0903  
                     u3445 08F8                       u5135 15BD                       u4095 1F48  
                     u3615 09C0                       u4175 1FB8                       u4425 176C  
                     u5090 158D                       u4515 17B0                       u4355 172F  
                     u3715 09F8                       u3900 14DA                       u5500 07BD  
                     u6300 0C5F                       u4525 17CB                       u4445 1775  
                     u4365 1736                       u5165 1675                       u3573 096D  
                     u3565 094F                       u4535 17E4                       u3495 091C  
                     u4385 173F                       u6145 1025                       u5185 1602  
                     u4395 1753                       u4635 00FA                       u3835 1CB6  
                     u5435 06AC                       u4900 112F                       u4645 0123  
                     u6165 102F                       u6245 1EDB                       u3845 1CBB  
                     u4655 016D                       u6175 1039                       u3935 151F  
                     u4815 0026                       u5375 0480                       u4665 0189  
                     u5705 1274                       u6185 1041                       u6265 1EEA  
                     u4825 1C9F                       u5490 07BC                       u3795 1D68  
                     u4675 019D                       u6275 1EF1                       u5635 1E54  
                     u4835 10E4                       u5475 078A                       u4765 01E1  
                     u5725 1288                       u5645 1E5F                       u5485 0796  
                     u6605 0EBA                       u4775 01FC                       u4695 01A6  
                     u4855 10FD                       u4935 12F1                       u5815 1E26  
                     u4960 131F                       u4785 0212                       u5745 129A  
                     u4945 130C                       u5825 1E31                       u6617 0C3F  
                     u4890 112E                       u6707 1EAE                       u6627 0C97  
                     u4885 1120                       u4965 131B                       u6717 1EBB  
                     u6637 0D86                       u6807 0822                       u6727 1E3A  
                     u6647 0DAD                       u5785 12B4                       u4985 1344  
                     u6737 1E4A                       u6657 0F74                       u6747 105B  
                     u6667 0FEF                       u6757 107C                       u6677 1E85  
                     u6767 109D                       u6687 1E94                       u6777 10BE  
                     u6697 1EA1                       u6787 1E69                       u6797 1E7A  
                     abs@a 0073                main@seconds 01C3                       _dbuf 0220  
                     _labs 1D76                       _atoi 11B6                       _main 0C05  
                     _dtoa 1571                       _prec 014D                       pad@i 0025  
                     pad@p 007C                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       pad@w 0027                       btemp 007E  
            ___fpclassifyf 10C3                       start 0002           __end_of_ADC_init 000F  
          ___fldiv@new_exp 004C                      ??_abs 0075                      ??_pad 0024  
            ___fltol@sign1 0078            __end_of___aodiv 1571                      ?_labs 0070  
                    ?_atoi 0076            __end_of___fladd 0A2C                      ?_main 0070  
                    ?_dtoa 0030            __end_of___aomod 147E            __end_of___fldiv 1800  
          __end_of___awdiv 1056            __end_of___flneg 1C62                      STR_10 186B  
                    STR_11 184A                      STR_12 1872                      STR_13 181F  
                    STR_14 1878                      STR_15 1882                      STR_18 1886  
          __end_of___awmod 1F06            __end_of___flmul 023B            __end_of___flsub 1D57  
          __end_of___fltol 2000            ___awdiv@divisor 0077            ___awdiv@counter 0020  
             vfpfcnvrt@fmt 006D                      _TRISB 008D                      _TRISC 008E  
                    _TRISD 008F            __end_of_lcd_cmd 1E50                      _flags 00EF  
             main@tempBool 01BB                      _fputc 1F4E                      _fputs 1D95  
          __end_of_isdigit 1C96               main@timeBool 01BC                      labs@a 0070  
                    atoi@n 0022                      pad@fp 0029                      atoi@s 0076  
                    _width 014B                      _putch 0004                      dtoa@d 0030  
                    dtoa@i 0048                      main@v 01C5                      dtoa@n 0040  
                    dtoa@p 003C                      dtoa@s 004A                      dtoa@w 003E  
          __end_of_isspace 1CFF                      status 0003                      wtemp0 007E  
          __end_of_sprintf 1E22             ?___fpclassifyf 0070            __initialization 07E0  
             __end_of_labs 1D95               __end_of_atoi 123D               __end_of_main 1000  
             __end_of_dtoa 1691            ADC_Convert@chan 0054                     ??_labs 0074  
                   ??_atoi 0078                     ??_main 013F                     ??_dtoa 0038  
          ??_display_float 007E                     ?_fputc 0070                     ?_fputs 0078  
                   _ADRESH 009C                     _ADRESL 009B           ___awdiv@dividend 0079  
                   _ANSELA 018C                     ?_putch 0070                     _ANSELD 018F  
                   u387lld 14A6                     u398lld 13CA           __end_of___xxtofl 12D0  
         __end_of_lcd_char 1E80              main@inputTemp 01CF              main@inputTime 01C9  
             vfprintf@cfmt 00E5           __end_of_lcd_init 1EC1                     ___flge 113B  
                   ___fleq 1F06                  ??___aodiv 0070                  ??___fladd 0020  
                ??___aomod 0070                     ___wmul 1CAD                  ??___fldiv 0042  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 0028                  ??___flsub 007E                  ??___fltol 0074  
                   _efgtoa 023B                     _floorf 12D0                     _memcpy 1DB6  
                   _keypad 1056     main@currentTemperature 01B7           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075                     pad@buf 007B  
                   main@n0 01A8                     main@n1 01AA                     main@n2 01AC  
                ??_lcd_cmd 0070                     main@hr 01BF         ADC_Convert@voltage 005A  
                   dtoa@fp 003B                     _strcpy 1CFF                     fputc@c 0070  
                   fputs@c 0020                     fputs@i 0021                     fputs@s 0023  
                ??_isdigit 0072            ___fpclassifyf@e 0020            ___fpclassifyf@u 0022  
          ___fpclassifyf@x 0070                  ??_isspace 0072                  ?_ADC_init 0070  
                   putch@c 0070           __end_of_vfprintf 1D39                  ??_sprintf 007E  
               ___flge@ff1 003A                 ___flge@ff2 003E            ??___fpclassifyf 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FD  
               ___flneg@f1 0070                 ___fltol@f1 0070             __pcstackCOMMON 0070  
             __pidataBANK3 1C62              __end_of_fputc 1F9F              __end_of_fputs 1DB6  
            __end_of_putch 0005                 ??_ADC_init 0070                    ??_fputc 0073  
                  ??_fputs 0079                    ??_putch 0070                 __pbssBANK1 00EF  
               __pbssBANK2 0143                 __pbssBANK4 0220          __end_of__Umul8_16 1D76  
               _efgtoa$955 00AA                 __pmaintext 0C05                    ?___flge 003A  
                  ?___fleq 0070                    ?___wmul 0070                    ?_efgtoa 0068  
                  ?_floorf 0054                    ?_memcpy 0070                    ?_keypad 0070  
                  ?_strcpy 0070                  ?___xxtofl 0070              ??_ADC_Convert 0058  
        _lcd_DisplayString 1C6B                  ?_lcd_char 0070         ?_lcd_DisplayString 0072  
                ?_lcd_init 0070        ??_lcd_DisplayString 0074                    ___aodiv 147E  
                  ___fladd 0876                    ___aomod 13A2                    ___fldiv 1691  
                  ___awdiv 1004                    ___flneg 1C59                    ___awmod 1EC1  
                  ___flmul 003F                    ___flsub 1D39                    ___fltol 1F9F  
                ?_vfprintf 00E1                    __ptext1 1E80                    __ptext2 1E22  
                  __ptext3 1056                    __ptext4 1CC8                    __ptext5 1DD9  
                  __ptext6 1DFC                    __ptext7 1D1C                    __ptext8 0A2C  
                  __ptext9 023B                    _lcd_cmd 1E22       lcd_DisplayString@str 0072  
__end_of_lcd_DisplayString 1C7F                    _isdigit 1C7F                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _isspace 1CE3                    efgtoa@c 006C  
                  efgtoa@d 00AF                    efgtoa@e 00B4                    efgtoa@f 0068  
                  efgtoa@g 00C9                    efgtoa@h 00BE                    efgtoa@i 00BC  
                  efgtoa@l 00C2                    efgtoa@m 00B1                    efgtoa@n 00C7  
                  efgtoa@p 00A6                    efgtoa@t 00A8                    efgtoa@u 00CD  
                  efgtoa@w 00B6                    atoi@neg 0020                    main@hr0 01AE  
                  main@hr1 01B0                 ??_lcd_char 0070                    _sprintf 1DFC  
                  main@key 01C6                    main@min 01C1                    clrloop0 1C4E  
               ??_lcd_init 0070       end_of_initialization 07FD                    floorf@e 0062  
                  floorf@m 005E                    floorf@u 0064                    floorf@x 0054  
      __end_of_ADC_Convert 0876                    memcpy@d 0076                    memcpy@n 0071  
                  memcpy@s 0077                    fputc@fp 0072                    init_ram 1C53  
                  fputs@fp 0078                    initloop 1C54             display_int@num 012B  
           display_int@str 012D          __end_of_vfpfcnvrt 0C05                 efgtoa@mode 00AD  
               efgtoa@sign 00C6           vfpfcnvrt@convarg 00D5                 ??_vfprintf 006F  
                  strcpy@d 0076                    strcpy@s 0074                  _PORTCbits 000E  
                _PORTDbits 000F                ___fladd@grs 007B              ___xxtofl@sign 0078  
               lcd_cmd@cmd 0071                ___fldiv@grs 004E                ___fldiv@rem 0047  
    __end_of_display_float 1DFC                ___flmul@grs 002F                 main@count2 01D2  
            ??_display_int 007E             __end_of___flge 11B6             __end_of___fleq 1F4E  
              vfpfcnvrt@ap 006E                vfpfcnvrt@cp 00DF                vfpfcnvrt@fp 00DE  
           __end_of___wmul 1CC8             __end_of_efgtoa 07E0             __end_of_floorf 13A2  
           __end_of_memcpy 1DD9                 floorf@F526 0143             __end_of_keypad 10C3  
           __end_of_strcpy 1D1C        start_initialization 07E0                _ADC_Convert 0803  
              __end_of_abs 1CAD                __end_of_pad 003F      __end_of___fpclassifyf 113B  
              vfprintf@fmt 00E1                   ??___flge 0042                   ??___fleq 0078  
                 ??___wmul 0074          ADC_Convert@result 005E                   ??_efgtoa 00A0  
                __Umul8_16 1D57                __pdataBANK3 01D4                   ??_floorf 0058  
                 ??_memcpy 0073                   ??_keypad 0070                   ??_strcpy 0072  
                ___fladd@a 0074                  ___fladd@b 0070                  ___fldiv@a 003A  
                ___fldiv@b 003E        __end_of_display_int 1CE3                  ___flmul@a 0024  
                ___flmul@b 0020                  ___flsub@a 003A                  ___flsub@b 003E  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
            __pcstackBANK2 0120              __pcstackBANK3 01A0           ___aodiv@dividend 0028  
     main@inputTemperature 01A4                   ?___aodiv 0020                   ?___fladd 0070  
                 ?___aomod 0020                   ?___fldiv 003A                   ?___awdiv 0077  
         ___aodiv@quotient 0073                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0020                   ?___flsub 003A                   ?___fltol 0070  
               ?__Umul8_16 0070                   ?_lcd_cmd 0070                   ?_isdigit 0070  
                 ?_isspace 0070                   _ADC_init 0005                   ?_sprintf 00E7  
           ___wmul@product 0074                   _LATCbits 010E                   _LATDbits 010F  
                clear_ram0 1C4D                  main@F3475 01DA                  main@F3477 01D4  
              _display_int 1CC8                  _vfpfcnvrt 0A2C                  lcd_char@c 0071  
               _ADCON0bits 009D                 _ADCON1bits 009E          ___wmul@multiplier 0070  
                main@count 01C7                  main@start 01B6               _isspace$1035 0074  
               vfpfcnvrt@c 00DD                  memcpy@tmp 0074                 vfprintf@ap 00E3  
               vfprintf@fp 00E4                ??__Umul8_16 0072                 ?_vfpfcnvrt 006D  
          ___aodiv@divisor 0020            ___aodiv@counter 0071         ___fpclassifyf@F465 0147  
               sprintf@fmt 00E9                   ___xxtofl 123D               ?_ADC_Convert 0054  
                 _dtoa$924 0039                   __ptext10 1CFF                   __ptext11 1DB6  
                 __ptext20 1F06                   __ptext12 1D76                   __ptext21 1571  
                 __ptext13 12D0                   __ptext30 1CE3                   __ptext22 000F  
                 __ptext14 10C3                   __ptext31 1C7F                   __ptext23 1D95  
                 __ptext15 1F9F                   __ptext40 003F                   __ptext32 1CAD  
                 __ptext24 1F4E                   __ptext16 1D39                   __ptext41 1D57  
                 __ptext33 1C6B                   __ptext25 0004                   __ptext17 0876  
                 __ptext42 1691                   __ptext34 1E50                   __ptext26 1C96  
                 __ptext18 1C59                   __ptext35 1EC1                   __ptext27 13A2  
                 __ptext19 113B                   __ptext36 1004                   __ptext28 147E  
                 __ptext37 0005                   __ptext29 11B6                   __ptext38 0803  
                 __ptext39 123D                   _lcd_char 1E50                   _lcd_init 1E80  
               strcpy@dest 0077           display_float@num 012B           display_float@str 012F  
                 efgtoa@fp 00B3                   efgtoa@ne 00A4                   efgtoa@pp 00AC  
                 efgtoa@ou 00B8            main@tempVoltage 01A0                   _vfprintf 1D1C  
                 main@min0 01B2                   main@min1 01B4                   main@temp 01BD  
         ___aomod@dividend 0028                   memcpy@d1 0075                   memcpy@s1 0070  
           __pstringtext10 1872             __pstringtext11 1878             __pstringtext12 187D  
           __pstringtext13 1882             __pstringtext14 1886             __pstringtext15 188A  
           __pstringtext16 188D             __pstringtext17 0000                   isdigit@c 0070  
                sprintf@ap 0120                   isspace@c 0070                  strcpy@src 0070  
              efgtoa@nmode 00AE            ___aomod@divisor 0020                ??_vfpfcnvrt 00D1  
          ___aomod@counter 0071              __pstringtext1 1800              __pstringtext2 1810  
            __pstringtext3 181F              __pstringtext4 182E              __pstringtext5 183C  
            __pstringtext6 184A              __pstringtext7 1856              __pstringtext8 1862  
            __pstringtext9 186B     __Umul8_16@multiplicand 0070                   sprintf@f 0121  
                 sprintf@s 00E7              ___fladd@signs 0078               ___aodiv@sign 0072  
            _display_float 1DD9               ___fladd@aexp 0079               ___fladd@bexp 007A  
     __Umul8_16@multiplier 0078               ___aomod@sign 0072          __Umul8_16@product 0074  
