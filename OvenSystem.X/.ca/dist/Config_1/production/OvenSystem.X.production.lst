

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 24 18:32:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    25                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    27                           	psect	inittext,global,class=CODE,delta=2
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text33,local,class=CODE,merge=1,delta=2
    68                           	psect	text34,local,class=CODE,merge=1,delta=2
    69                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text37,local,class=CODE,merge=1,delta=2
    72                           	psect	text38,local,class=CODE,merge=1,delta=2
    73                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    79                           	dabs	1,0x7E,2
    80     0000                     
    81                           ; Version 2.40
    82                           ; Generated 17/11/2021 GMT
    83                           ; 
    84                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F1937 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     008F                     	;# 
   151     0090                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     0110                     	;# 
   171     0111                     	;# 
   172     0112                     	;# 
   173     0113                     	;# 
   174     0114                     	;# 
   175     0115                     	;# 
   176     0116                     	;# 
   177     0117                     	;# 
   178     0118                     	;# 
   179     0119                     	;# 
   180     011A                     	;# 
   181     011B                     	;# 
   182     011D                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     018F                     	;# 
   186     0190                     	;# 
   187     0191                     	;# 
   188     0191                     	;# 
   189     0192                     	;# 
   190     0193                     	;# 
   191     0193                     	;# 
   192     0193                     	;# 
   193     0194                     	;# 
   194     0195                     	;# 
   195     0196                     	;# 
   196     0199                     	;# 
   197     019A                     	;# 
   198     019B                     	;# 
   199     019B                     	;# 
   200     019B                     	;# 
   201     019B                     	;# 
   202     019C                     	;# 
   203     019C                     	;# 
   204     019D                     	;# 
   205     019E                     	;# 
   206     019F                     	;# 
   207     020D                     	;# 
   208     0210                     	;# 
   209     0211                     	;# 
   210     0212                     	;# 
   211     0213                     	;# 
   212     0214                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0216                     	;# 
   216     0217                     	;# 
   217     0291                     	;# 
   218     0291                     	;# 
   219     0292                     	;# 
   220     0293                     	;# 
   221     0294                     	;# 
   222     0295                     	;# 
   223     0295                     	;# 
   224     0296                     	;# 
   225     0298                     	;# 
   226     0298                     	;# 
   227     0299                     	;# 
   228     029A                     	;# 
   229     029B                     	;# 
   230     029C                     	;# 
   231     029C                     	;# 
   232     029D                     	;# 
   233     029E                     	;# 
   234     029F                     	;# 
   235     0311                     	;# 
   236     0311                     	;# 
   237     0312                     	;# 
   238     0313                     	;# 
   239     0314                     	;# 
   240     0315                     	;# 
   241     0315                     	;# 
   242     0316                     	;# 
   243     0318                     	;# 
   244     0318                     	;# 
   245     0319                     	;# 
   246     031A                     	;# 
   247     031C                     	;# 
   248     031C                     	;# 
   249     031D                     	;# 
   250     031E                     	;# 
   251     0394                     	;# 
   252     0395                     	;# 
   253     0396                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0791                     	;# 
   261     0792                     	;# 
   262     0793                     	;# 
   263     0794                     	;# 
   264     0795                     	;# 
   265     0798                     	;# 
   266     0799                     	;# 
   267     079A                     	;# 
   268     07A0                     	;# 
   269     07A1                     	;# 
   270     07A2                     	;# 
   271     07A3                     	;# 
   272     07A4                     	;# 
   273     07A5                     	;# 
   274     07A6                     	;# 
   275     07A7                     	;# 
   276     07A8                     	;# 
   277     07A9                     	;# 
   278     07AA                     	;# 
   279     07AB                     	;# 
   280     0FE4                     	;# 
   281     0FE5                     	;# 
   282     0FE6                     	;# 
   283     0FE7                     	;# 
   284     0FE8                     	;# 
   285     0FE9                     	;# 
   286     0FEA                     	;# 
   287     0FEB                     	;# 
   288     0FED                     	;# 
   289     0FEE                     	;# 
   290     0FEF                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0015                     	;# 
   312     0016                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001C                     	;# 
   320     001E                     	;# 
   321     001F                     	;# 
   322     008C                     	;# 
   323     008D                     	;# 
   324     008E                     	;# 
   325     008F                     	;# 
   326     0090                     	;# 
   327     0091                     	;# 
   328     0092                     	;# 
   329     0093                     	;# 
   330     0095                     	;# 
   331     0096                     	;# 
   332     0097                     	;# 
   333     0098                     	;# 
   334     0099                     	;# 
   335     009A                     	;# 
   336     009B                     	;# 
   337     009B                     	;# 
   338     009C                     	;# 
   339     009D                     	;# 
   340     009E                     	;# 
   341     010C                     	;# 
   342     010D                     	;# 
   343     010E                     	;# 
   344     010F                     	;# 
   345     0110                     	;# 
   346     0111                     	;# 
   347     0112                     	;# 
   348     0113                     	;# 
   349     0114                     	;# 
   350     0115                     	;# 
   351     0116                     	;# 
   352     0117                     	;# 
   353     0118                     	;# 
   354     0119                     	;# 
   355     011A                     	;# 
   356     011B                     	;# 
   357     011D                     	;# 
   358     018C                     	;# 
   359     018D                     	;# 
   360     018F                     	;# 
   361     0190                     	;# 
   362     0191                     	;# 
   363     0191                     	;# 
   364     0192                     	;# 
   365     0193                     	;# 
   366     0193                     	;# 
   367     0193                     	;# 
   368     0194                     	;# 
   369     0195                     	;# 
   370     0196                     	;# 
   371     0199                     	;# 
   372     019A                     	;# 
   373     019B                     	;# 
   374     019B                     	;# 
   375     019B                     	;# 
   376     019B                     	;# 
   377     019C                     	;# 
   378     019C                     	;# 
   379     019D                     	;# 
   380     019E                     	;# 
   381     019F                     	;# 
   382     020D                     	;# 
   383     0210                     	;# 
   384     0211                     	;# 
   385     0212                     	;# 
   386     0213                     	;# 
   387     0214                     	;# 
   388     0215                     	;# 
   389     0215                     	;# 
   390     0216                     	;# 
   391     0217                     	;# 
   392     0291                     	;# 
   393     0291                     	;# 
   394     0292                     	;# 
   395     0293                     	;# 
   396     0294                     	;# 
   397     0295                     	;# 
   398     0295                     	;# 
   399     0296                     	;# 
   400     0298                     	;# 
   401     0298                     	;# 
   402     0299                     	;# 
   403     029A                     	;# 
   404     029B                     	;# 
   405     029C                     	;# 
   406     029C                     	;# 
   407     029D                     	;# 
   408     029E                     	;# 
   409     029F                     	;# 
   410     0311                     	;# 
   411     0311                     	;# 
   412     0312                     	;# 
   413     0313                     	;# 
   414     0314                     	;# 
   415     0315                     	;# 
   416     0315                     	;# 
   417     0316                     	;# 
   418     0318                     	;# 
   419     0318                     	;# 
   420     0319                     	;# 
   421     031A                     	;# 
   422     031C                     	;# 
   423     031C                     	;# 
   424     031D                     	;# 
   425     031E                     	;# 
   426     0394                     	;# 
   427     0395                     	;# 
   428     0396                     	;# 
   429     0415                     	;# 
   430     0416                     	;# 
   431     0417                     	;# 
   432     041C                     	;# 
   433     041D                     	;# 
   434     041E                     	;# 
   435     0791                     	;# 
   436     0792                     	;# 
   437     0793                     	;# 
   438     0794                     	;# 
   439     0795                     	;# 
   440     0798                     	;# 
   441     0799                     	;# 
   442     079A                     	;# 
   443     07A0                     	;# 
   444     07A1                     	;# 
   445     07A2                     	;# 
   446     07A3                     	;# 
   447     07A4                     	;# 
   448     07A5                     	;# 
   449     07A6                     	;# 
   450     07A7                     	;# 
   451     07A8                     	;# 
   452     07A9                     	;# 
   453     07AA                     	;# 
   454     07AB                     	;# 
   455     0FE4                     	;# 
   456     0FE5                     	;# 
   457     0FE6                     	;# 
   458     0FE7                     	;# 
   459     0FE8                     	;# 
   460     0FE9                     	;# 
   461     0FEA                     	;# 
   462     0FEB                     	;# 
   463     0FED                     	;# 
   464     0FEE                     	;# 
   465     0FEF                     	;# 
   466                           
   467                           	psect	idataBANK3
   468     1006                     __pidataBANK3:
   469                           
   470                           ;initializer for main@F3477
   471     1006  3430               	retlw	48
   472     1007  3430               	retlw	48
   473     1008  343A               	retlw	58
   474     1009  3430               	retlw	48
   475     100A  3430               	retlw	48
   476     100B  3400               	retlw	0
   477                           
   478                           ;initializer for main@F3475
   479     100C  3430               	retlw	48
   480     100D  3430               	retlw	48
   481     100E  3430               	retlw	48
   482     000E                     _PORTCbits	set	14
   483     000F                     _PORTDbits	set	15
   484     008E                     _TRISC	set	142
   485     008D                     _TRISB	set	141
   486     008F                     _TRISD	set	143
   487     009B                     _ADRESL	set	155
   488     009C                     _ADRESH	set	156
   489     009E                     _ADCON1bits	set	158
   490     009D                     _ADCON0bits	set	157
   491     010E                     _LATCbits	set	270
   492     010F                     _LATDbits	set	271
   493     010D                     _LATB	set	269
   494     018C                     _ANSELA	set	396
   495     018F                     _ANSELD	set	399
   496                           
   497                           	psect	stringtext1
   498     1800                     __pstringtext1:
   499     1800                     STR_6:
   500     1800  3449               	retlw	73	;'I'
   501     1801  346E               	retlw	110	;'n'
   502     1802  3470               	retlw	112	;'p'
   503     1803  3475               	retlw	117	;'u'
   504     1804  3474               	retlw	116	;'t'
   505     1805  3465               	retlw	101	;'e'
   506     1806  3464               	retlw	100	;'d'
   507     1807  3420               	retlw	32	;' '
   508     1808  3454               	retlw	84	;'T'
   509     1809  3465               	retlw	101	;'e'
   510     180A  346D               	retlw	109	;'m'
   511     180B  3470               	retlw	112	;'p'
   512     180C  342E               	retlw	46	;'.'
   513     180D  3420               	retlw	32	;' '
   514     180E  343A               	retlw	58	;':'
   515     180F  3400               	retlw	0
   516                           
   517                           	psect	stringtext2
   518     1810                     __pstringtext2:
   519     1810                     STR_9:
   520     1810  344F               	retlw	79	;'O'
   521     1811  3456               	retlw	86	;'V'
   522     1812  3445               	retlw	69	;'E'
   523     1813  344E               	retlw	78	;'N'
   524     1814  3420               	retlw	32	;' '
   525     1815  3453               	retlw	83	;'S'
   526     1816  3454               	retlw	84	;'T'
   527     1817  3441               	retlw	65	;'A'
   528     1818  3452               	retlw	82	;'R'
   529     1819  3454               	retlw	84	;'T'
   530     181A  3449               	retlw	73	;'I'
   531     181B  344E               	retlw	78	;'N'
   532     181C  3447               	retlw	71	;'G'
   533     181D  3420               	retlw	32	;' '
   534     181E  3400               	retlw	0
   535                           
   536                           	psect	stringtext3
   537     181F                     __pstringtext3:
   538     181F                     STR_13:
   539     181F  3454               	retlw	84	;'T'
   540     1820  3449               	retlw	73	;'I'
   541     1821  344D               	retlw	77	;'M'
   542     1822  3445               	retlw	69	;'E'
   543     1823  3452               	retlw	82	;'R'
   544     1824  3420               	retlw	32	;' '
   545     1825  3446               	retlw	70	;'F'
   546     1826  3449               	retlw	73	;'I'
   547     1827  344E               	retlw	78	;'N'
   548     1828  3449               	retlw	73	;'I'
   549     1829  3453               	retlw	83	;'S'
   550     182A  3448               	retlw	72	;'H'
   551     182B  3445               	retlw	69	;'E'
   552     182C  3444               	retlw	68	;'D'
   553     182D  3400               	retlw	0
   554                           
   555                           	psect	stringtext4
   556     182E                     __pstringtext4:
   557     182E                     STR_7:
   558     182E  3445               	retlw	69	;'E'
   559     182F  346E               	retlw	110	;'n'
   560     1830  3474               	retlw	116	;'t'
   561     1831  3465               	retlw	101	;'e'
   562     1832  3472               	retlw	114	;'r'
   563     1833  3420               	retlw	32	;' '
   564     1834  3454               	retlw	84	;'T'
   565     1835  3465               	retlw	101	;'e'
   566     1836  346D               	retlw	109	;'m'
   567     1837  3470               	retlw	112	;'p'
   568     1838  342E               	retlw	46	;'.'
   569     1839  3420               	retlw	32	;' '
   570     183A  343A               	retlw	58	;':'
   571     183B  3400               	retlw	0
   572                           
   573                           	psect	stringtext5
   574     183C                     __pstringtext5:
   575     183C                     STR_8:
   576     183C  3449               	retlw	73	;'I'
   577     183D  346E               	retlw	110	;'n'
   578     183E  3470               	retlw	112	;'p'
   579     183F  3475               	retlw	117	;'u'
   580     1840  3474               	retlw	116	;'t'
   581     1841  3465               	retlw	101	;'e'
   582     1842  3464               	retlw	100	;'d'
   583     1843  3420               	retlw	32	;' '
   584     1844  3454               	retlw	84	;'T'
   585     1845  3469               	retlw	105	;'i'
   586     1846  346D               	retlw	109	;'m'
   587     1847  3465               	retlw	101	;'e'
   588     1848  343A               	retlw	58	;':'
   589     1849  3400               	retlw	0
   590                           
   591                           	psect	stringtext6
   592     184A                     __pstringtext6:
   593     184A                     STR_11:
   594     184A  3445               	retlw	69	;'E'
   595     184B  346E               	retlw	110	;'n'
   596     184C  3474               	retlw	116	;'t'
   597     184D  3465               	retlw	101	;'e'
   598     184E  3472               	retlw	114	;'r'
   599     184F  3420               	retlw	32	;' '
   600     1850  3454               	retlw	84	;'T'
   601     1851  3469               	retlw	105	;'i'
   602     1852  346D               	retlw	109	;'m'
   603     1853  3465               	retlw	101	;'e'
   604     1854  343A               	retlw	58	;':'
   605     1855  3400               	retlw	0
   606                           
   607                           	psect	stringtext7
   608     1856                     __pstringtext7:
   609     1856                     STR_4:
   610     1856  344F               	retlw	79	;'O'
   611     1857  3456               	retlw	86	;'V'
   612     1858  3445               	retlw	69	;'E'
   613     1859  344E               	retlw	78	;'N'
   614     185A  3420               	retlw	32	;' '
   615     185B  3453               	retlw	83	;'S'
   616     185C  3459               	retlw	89	;'Y'
   617     185D  3453               	retlw	83	;'S'
   618     185E  3454               	retlw	84	;'T'
   619     185F  3445               	retlw	69	;'E'
   620     1860  344D               	retlw	77	;'M'
   621     1861  3400               	retlw	0
   622                           
   623                           	psect	stringtext8
   624     1862                     __pstringtext8:
   625     1862                     STR_5:
   626     1862  3447               	retlw	71	;'G'
   627     1863  3452               	retlw	82	;'R'
   628     1864  344F               	retlw	79	;'O'
   629     1865  3455               	retlw	85	;'U'
   630     1866  3450               	retlw	80	;'P'
   631     1867  342D               	retlw	45	;'-'
   632     1868  3420               	retlw	32	;' '
   633     1869  3448               	retlw	72	;'H'
   634     186A  3400               	retlw	0
   635                           
   636                           	psect	stringtext9
   637     186B                     __pstringtext9:
   638     186B                     STR_10:
   639     186B  344E               	retlw	78	;'N'
   640     186C  344F               	retlw	79	;'O'
   641     186D  3457               	retlw	87	;'W'
   642     186E  342E               	retlw	46	;'.'
   643     186F  342E               	retlw	46	;'.'
   644     1870  342E               	retlw	46	;'.'
   645     1871  3400               	retlw	0
   646                           
   647                           	psect	stringtext10
   648     1872                     __pstringtext10:
   649     1872                     STR_12:
   650     1872  3454               	retlw	84	;'T'
   651     1873  3445               	retlw	69	;'E'
   652     1874  344D               	retlw	77	;'M'
   653     1875  3450               	retlw	80	;'P'
   654     1876  343A               	retlw	58	;':'
   655     1877  3400               	retlw	0
   656                           
   657                           	psect	stringtext11
   658     1878                     __pstringtext11:
   659     1878                     STR_14:
   660     1878  342A               	retlw	42	;'*'
   661     1879  342A               	retlw	42	;'*'
   662     187A  342A               	retlw	42	;'*'
   663     187B  342A               	retlw	42	;'*'
   664     187C  3400               	retlw	0
   665                           
   666                           	psect	stringtext12
   667     187D                     __pstringtext12:
   668     187D                     STR_1:
   669     187D  3425               	retlw	37	;'%'
   670     187E  342E               	retlw	46	;'.'
   671     187F  3432               	retlw	50	;'2'
   672     1880  3466               	retlw	102	;'f'
   673     1881  3400               	retlw	0
   674                           
   675                           	psect	stringtext13
   676     1882                     __pstringtext13:
   677     1882                     STR_15:
   678     1882  3469               	retlw	105	;'i'
   679     1883  346E               	retlw	110	;'n'
   680     1884  3466               	retlw	102	;'f'
   681     1885  3400               	retlw	0
   682                           
   683                           	psect	stringtext14
   684     1886                     __pstringtext14:
   685     1886                     STR_18:
   686     1886  346E               	retlw	110	;'n'
   687     1887  3461               	retlw	97	;'a'
   688     1888  346E               	retlw	110	;'n'
   689     1889  3400               	retlw	0
   690                           
   691                           	psect	stringtext15
   692     188A                     __pstringtext15:
   693     188A                     STR_3:
   694     188A  3425               	retlw	37	;'%'
   695     188B  3464               	retlw	100	;'d'
   696     188C  3400               	retlw	0
   697                           
   698                           	psect	stringtext16
   699     188D                     __pstringtext16:
   700     188D                     STR_2:
   701     188D  3425               	retlw	37	;'%'
   702     188E  3466               	retlw	102	;'f'
   703     188F  3400               	retlw	0
   704                           
   705                           	psect	stringtext17
   706     0000                     __pstringtext17:
   707     1882                     
   708                           	psect	cinit
   709     07E0                     start_initialization:	
   710                           ; #config settings
   711                           
   712     07E0                     __initialization:
   713                           
   714                           ; Initialize objects allocated to BANK3
   715     07E0  3006               	movlw	low __pidataBANK3
   716     07E1  0084               	movwf	4
   717     07E2  3090               	movlw	(high __pidataBANK3)| (0+128)
   718     07E3  0085               	movwf	5
   719     07E4  30D4               	movlw	low __pdataBANK3
   720     07E5  0086               	movwf	6
   721     07E6  3001               	movlw	high __pdataBANK3
   722     07E7  0087               	movwf	7
   723     07E8  3009               	movlw	9
   724     07E9  3188  2000  3187   	fcall	init_ram
   725                           
   726                           ; Clear objects allocated to BANK1
   727     07EC  0021               	movlb	1	; select bank1
   728     07ED  01EF               	clrf	__pbssBANK1& (0+127)
   729                           
   730                           ; Clear objects allocated to BANK2
   731     07EE  3043               	movlw	low __pbssBANK2
   732     07EF  0084               	movwf	4
   733     07F0  3001               	movlw	high __pbssBANK2
   734     07F1  0085               	movwf	5
   735     07F2  300C               	movlw	12
   736     07F3  3190  2000  3187   	fcall	clear_ram0
   737                           
   738                           ; Clear objects allocated to BANK4
   739     07F6  3020               	movlw	low __pbssBANK4
   740     07F7  0084               	movwf	4
   741     07F8  3002               	movlw	high __pbssBANK4
   742     07F9  0085               	movwf	5
   743     07FA  3050               	movlw	80
   744     07FB  3190  2000         	fcall	clear_ram0
   745     07FD                     end_of_initialization:	
   746                           ;End of C runtime variable initialization code
   747                           
   748     07FD                     __end_of__initialization:
   749     07FD  0020               	movlb	0
   750     07FE  318C  2C03         	ljmp	_main	;jump to C main() function
   751                           
   752                           	psect	bssBANK1
   753     00EF                     __pbssBANK1:
   754     00EF                     _flags:
   755     00EF                     	ds	1
   756                           
   757                           	psect	bssBANK2
   758     0143                     __pbssBANK2:
   759     0143                     floorf@F526:
   760     0143                     	ds	4
   761     0147                     ___fpclassifyf@F465:
   762     0147                     	ds	4
   763     014B                     _width:
   764     014B                     	ds	2
   765     014D                     _prec:
   766     014D                     	ds	2
   767                           
   768                           	psect	dataBANK3
   769     01D4                     __pdataBANK3:
   770     01D4                     main@F3477:
   771     01D4                     	ds	6
   772     01DA                     main@F3475:
   773     01DA                     	ds	3
   774                           
   775                           	psect	bssBANK4
   776     0220                     __pbssBANK4:
   777     0220                     _dbuf:
   778     0220                     	ds	80
   779                           
   780                           	psect	inittext
   781     0800                     init_ram:
   782     0800  00FE               	movwf	126
   783     0801                     initloop:
   784     0801  0012               	moviw fsr0++
   785     0802  001E               	movwi fsr1++
   786     0803  0BFE               	decfsz	126,f
   787     0804  2801               	goto	initloop
   788     0805  3400               	retlw	0
   789                           
   790                           	psect	clrtext
   791     1000                     clear_ram0:	
   792                           ;	Called with FSR0 containing the base address, and
   793                           ;	WREG with the size to clear
   794                           
   795     1000  0064               	clrwdt	;clear the watchdog before getting into this loop
   796     1001                     clrloop0:
   797     1001  0180               	clrf	0	;clear RAM location pointed to by FSR
   798     1002  3101               	addfsr 0,1
   799     1003  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   800     1004  2801               	goto	clrloop0	;have we reached the end yet?
   801     1005  3400               	retlw	0	;all done for this memory range, return
   802                           
   803                           	psect	cstackBANK3
   804     01A0                     __pcstackBANK3:
   805     01A0                     main@tempVoltage:
   806                           
   807                           ; 4 bytes @ 0x0
   808     01A0                     	ds	4
   809     01A4                     main@inputTemperature:
   810                           
   811                           ; 4 bytes @ 0x4
   812     01A4                     	ds	4
   813     01A8                     main@n0:
   814                           
   815                           ; 2 bytes @ 0x8
   816     01A8                     	ds	2
   817     01AA                     main@n1:
   818                           
   819                           ; 2 bytes @ 0xA
   820     01AA                     	ds	2
   821     01AC                     main@n2:
   822                           
   823                           ; 2 bytes @ 0xC
   824     01AC                     	ds	2
   825     01AE                     main@hr0:
   826                           
   827                           ; 2 bytes @ 0xE
   828     01AE                     	ds	2
   829     01B0                     main@hr1:
   830                           
   831                           ; 2 bytes @ 0x10
   832     01B0                     	ds	2
   833     01B2                     main@min0:
   834                           
   835                           ; 2 bytes @ 0x12
   836     01B2                     	ds	2
   837     01B4                     main@min1:
   838                           
   839                           ; 2 bytes @ 0x14
   840     01B4                     	ds	2
   841     01B6                     main@start:
   842                           
   843                           ; 1 bytes @ 0x16
   844     01B6                     	ds	1
   845     01B7                     main@currentTemperature:
   846                           
   847                           ; 4 bytes @ 0x17
   848     01B7                     	ds	4
   849     01BB                     main@tempBool:
   850                           
   851                           ; 1 bytes @ 0x1B
   852     01BB                     	ds	1
   853     01BC                     main@timeBool:
   854                           
   855                           ; 1 bytes @ 0x1C
   856     01BC                     	ds	1
   857     01BD                     main@temp:
   858                           
   859                           ; 2 bytes @ 0x1D
   860     01BD                     	ds	2
   861     01BF                     main@hr:
   862                           
   863                           ; 2 bytes @ 0x1F
   864     01BF                     	ds	2
   865     01C1                     main@min:
   866                           
   867                           ; 2 bytes @ 0x21
   868     01C1                     	ds	2
   869     01C3                     main@seconds:
   870                           
   871                           ; 2 bytes @ 0x23
   872     01C3                     	ds	2
   873     01C5                     main@v:
   874                           
   875                           ; 1 bytes @ 0x25
   876     01C5                     	ds	1
   877     01C6                     main@key:
   878                           
   879                           ; 1 bytes @ 0x26
   880     01C6                     	ds	1
   881     01C7                     main@count:
   882                           
   883                           ; 2 bytes @ 0x27
   884     01C7                     	ds	2
   885     01C9                     main@inputTime:
   886                           
   887                           ; 6 bytes @ 0x29
   888     01C9                     	ds	6
   889     01CF                     main@inputTemp:
   890                           
   891                           ; 3 bytes @ 0x2F
   892     01CF                     	ds	3
   893     01D2                     main@count2:
   894                           
   895                           ; 2 bytes @ 0x32
   896     01D2                     	ds	2
   897                           
   898                           	psect	cstackBANK2
   899     0120                     __pcstackBANK2:
   900     0120                     sprintf@ap:
   901                           
   902                           ; 1 bytes @ 0x0
   903     0120                     	ds	1
   904     0121                     sprintf@f:
   905                           
   906                           ; 10 bytes @ 0x1
   907     0121                     	ds	10
   908     012B                     ?_display_float:
   909     012B                     ?_display_int:	
   910                           ; 1 bytes @ 0xB
   911                           
   912     012B                     display_int@num:	
   913                           ; 1 bytes @ 0xB
   914                           
   915     012B                     display_float@num:	
   916                           ; 2 bytes @ 0xB
   917                           
   918                           
   919                           ; 4 bytes @ 0xB
   920     012B                     	ds	2
   921     012D                     display_int@str:
   922                           
   923                           ; 16 bytes @ 0xD
   924     012D                     	ds	2
   925     012F                     display_float@str:
   926                           
   927                           ; 16 bytes @ 0xF
   928     012F                     	ds	16
   929     013F                     ??_main:
   930                           
   931                           ; 1 bytes @ 0x1F
   932     013F                     	ds	4
   933                           
   934                           	psect	cstackBANK1
   935     00A0                     __pcstackBANK1:
   936     00A0                     ??_efgtoa:
   937                           
   938                           ; 1 bytes @ 0x0
   939     00A0                     	ds	4
   940     00A4                     efgtoa@ne:
   941                           
   942                           ; 2 bytes @ 0x4
   943     00A4                     	ds	2
   944     00A6                     efgtoa@p:
   945                           
   946                           ; 2 bytes @ 0x6
   947     00A6                     	ds	2
   948     00A8                     efgtoa@t:
   949                           
   950                           ; 2 bytes @ 0x8
   951     00A8                     	ds	2
   952     00AA                     _efgtoa$955:
   953                           
   954                           ; 2 bytes @ 0xA
   955     00AA                     	ds	2
   956     00AC                     efgtoa@pp:
   957                           
   958                           ; 1 bytes @ 0xC
   959     00AC                     	ds	1
   960     00AD                     efgtoa@mode:
   961                           
   962                           ; 1 bytes @ 0xD
   963     00AD                     	ds	1
   964     00AE                     efgtoa@nmode:
   965                           
   966                           ; 1 bytes @ 0xE
   967     00AE                     	ds	1
   968     00AF                     efgtoa@d:
   969                           
   970                           ; 2 bytes @ 0xF
   971     00AF                     	ds	2
   972     00B1                     efgtoa@m:
   973                           
   974                           ; 2 bytes @ 0x11
   975     00B1                     	ds	2
   976     00B3                     efgtoa@fp:
   977                           
   978                           ; 1 bytes @ 0x13
   979     00B3                     	ds	1
   980     00B4                     efgtoa@e:
   981                           
   982                           ; 2 bytes @ 0x14
   983     00B4                     	ds	2
   984     00B6                     efgtoa@w:
   985                           
   986                           ; 2 bytes @ 0x16
   987     00B6                     	ds	2
   988     00B8                     efgtoa@ou:
   989                           
   990                           ; 4 bytes @ 0x18
   991     00B8                     	ds	4
   992     00BC                     efgtoa@i:
   993                           
   994                           ; 2 bytes @ 0x1C
   995     00BC                     	ds	2
   996     00BE                     efgtoa@h:
   997                           
   998                           ; 4 bytes @ 0x1E
   999     00BE                     	ds	4
  1000     00C2                     efgtoa@l:
  1001                           
  1002                           ; 4 bytes @ 0x22
  1003     00C2                     	ds	4
  1004     00C6                     efgtoa@sign:
  1005                           
  1006                           ; 1 bytes @ 0x26
  1007     00C6                     	ds	1
  1008     00C7                     efgtoa@n:
  1009                           
  1010                           ; 2 bytes @ 0x27
  1011     00C7                     	ds	2
  1012     00C9                     efgtoa@g:
  1013                           
  1014                           ; 4 bytes @ 0x29
  1015     00C9                     	ds	4
  1016     00CD                     efgtoa@u:
  1017                           
  1018                           ; 4 bytes @ 0x2D
  1019     00CD                     	ds	4
  1020     00D1                     ??_vfpfcnvrt:
  1021                           
  1022                           ; 1 bytes @ 0x31
  1023     00D1                     	ds	4
  1024     00D5                     vfpfcnvrt@convarg:
  1025                           
  1026                           ; 8 bytes @ 0x35
  1027     00D5                     	ds	8
  1028     00DD                     vfpfcnvrt@c:
  1029                           
  1030                           ; 1 bytes @ 0x3D
  1031     00DD                     	ds	1
  1032     00DE                     vfpfcnvrt@fp:
  1033                           
  1034                           ; 1 bytes @ 0x3E
  1035     00DE                     	ds	1
  1036     00DF                     vfpfcnvrt@cp:
  1037                           
  1038                           ; 2 bytes @ 0x3F
  1039     00DF                     	ds	2
  1040     00E1                     ?_vfprintf:
  1041     00E1                     vfprintf@fmt:	
  1042                           ; 2 bytes @ 0x41
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0x41
  1046     00E1                     	ds	2
  1047     00E3                     vfprintf@ap:
  1048                           
  1049                           ; 1 bytes @ 0x43
  1050     00E3                     	ds	1
  1051     00E4                     vfprintf@fp:
  1052                           
  1053                           ; 1 bytes @ 0x44
  1054     00E4                     	ds	1
  1055     00E5                     vfprintf@cfmt:
  1056                           
  1057                           ; 2 bytes @ 0x45
  1058     00E5                     	ds	2
  1059     00E7                     ?_sprintf:
  1060     00E7                     sprintf@s:	
  1061                           ; 2 bytes @ 0x47
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x47
  1065     00E7                     	ds	2
  1066     00E9                     sprintf@fmt:
  1067                           
  1068                           ; 2 bytes @ 0x49
  1069     00E9                     	ds	6
  1070                           
  1071                           	psect	cstackCOMMON
  1072     0070                     __pcstackCOMMON:
  1073     0070                     ?___fleq:
  1074     0070                     ?_strcpy:	
  1075                           ; 1 bit 
  1076                           
  1077     0070                     ?_memcpy:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080     0070                     ?_putch:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083     0070                     ??_putch:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086     0070                     ?_lcd_init:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089     0070                     ??_lcd_init:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092     0070                     ?_lcd_cmd:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095     0070                     ??_lcd_cmd:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098     0070                     ?_lcd_char:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101     0070                     ??_lcd_char:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104     0070                     ?_ADC_init:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107     0070                     ??_ADC_init:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110     0070                     ?_keypad:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113     0070                     ??_keypad:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116     0070                     ?_main:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119     0070                     ??___aodiv:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122     0070                     ??___aomod:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     0070                     ?__Umul8_16:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128     0070                     ?_fputc:	
  1129                           ; 2 bytes @ 0x0
  1130                           
  1131     0070                     ?___fpclassifyf:	
  1132                           ; 2 bytes @ 0x0
  1133                           
  1134     0070                     ?_isdigit:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137     0070                     ?_isspace:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140     0070                     ?___wmul:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143     0070                     ?___awmod:	
  1144                           ; 2 bytes @ 0x0
  1145                           
  1146     0070                     ?_labs:	
  1147                           ; 2 bytes @ 0x0
  1148                           
  1149     0070                     ?___flneg:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152     0070                     ?___fltol:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155     0070                     ?___fladd:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158     0070                     ?___xxtofl:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161     0070                     __Umul8_16@multiplicand:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164     0070                     memcpy@s1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167     0070                     putch@c:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0070                     ___wmul@multiplier:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173     0070                     ___awmod@divisor:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176     0070                     isdigit@c:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179     0070                     isspace@c:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182     0070                     fputc@c:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185     0070                     strcpy@src:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188     0070                     ___fleq@ff1:	
  1189                           ; 2 bytes @ 0x0
  1190                           
  1191     0070                     ___flneg@f1:	
  1192                           ; 4 bytes @ 0x0
  1193                           
  1194     0070                     ___fltol@f1:	
  1195                           ; 4 bytes @ 0x0
  1196                           
  1197     0070                     ___fladd@b:	
  1198                           ; 4 bytes @ 0x0
  1199                           
  1200     0070                     ___xxtofl@val:	
  1201                           ; 4 bytes @ 0x0
  1202                           
  1203     0070                     ___fpclassifyf@x:	
  1204                           ; 4 bytes @ 0x0
  1205                           
  1206     0070                     labs@a:	
  1207                           ; 4 bytes @ 0x0
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x0
  1211     0070                     	ds	1
  1212     0071                     lcd_cmd@cmd:
  1213     0071                     lcd_char@c:	
  1214                           ; 1 bytes @ 0x1
  1215                           
  1216     0071                     ___aodiv@counter:	
  1217                           ; 1 bytes @ 0x1
  1218                           
  1219     0071                     ___aomod@counter:	
  1220                           ; 1 bytes @ 0x1
  1221                           
  1222     0071                     memcpy@n:	
  1223                           ; 1 bytes @ 0x1
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0x1
  1227     0071                     	ds	1
  1228     0072                     ??__Umul8_16:
  1229     0072                     ??_strcpy:	
  1230                           ; 1 bytes @ 0x2
  1231                           
  1232     0072                     ??_isdigit:	
  1233                           ; 1 bytes @ 0x2
  1234                           
  1235     0072                     ??_isspace:	
  1236                           ; 1 bytes @ 0x2
  1237                           
  1238     0072                     ?_lcd_DisplayString:	
  1239                           ; 1 bytes @ 0x2
  1240                           
  1241     0072                     ___aodiv@sign:	
  1242                           ; 1 bytes @ 0x2
  1243                           
  1244     0072                     ___aomod@sign:	
  1245                           ; 1 bytes @ 0x2
  1246                           
  1247     0072                     fputc@fp:	
  1248                           ; 1 bytes @ 0x2
  1249                           
  1250     0072                     lcd_DisplayString@str:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253     0072                     ___wmul@multiplicand:	
  1254                           ; 2 bytes @ 0x2
  1255                           
  1256     0072                     ___awmod@dividend:	
  1257                           ; 2 bytes @ 0x2
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x2
  1261     0072                     	ds	1
  1262     0073                     ??_fputc:
  1263     0073                     ??_memcpy:	
  1264                           ; 1 bytes @ 0x3
  1265                           
  1266     0073                     ?_abs:	
  1267                           ; 1 bytes @ 0x3
  1268                           
  1269     0073                     abs@a:	
  1270                           ; 2 bytes @ 0x3
  1271                           
  1272     0073                     ___aodiv@quotient:	
  1273                           ; 2 bytes @ 0x3
  1274                           
  1275                           
  1276                           ; 8 bytes @ 0x3
  1277     0073                     	ds	1
  1278     0074                     ??___fpclassifyf:
  1279     0074                     ??_labs:	
  1280                           ; 1 bytes @ 0x4
  1281                           
  1282     0074                     ??_lcd_DisplayString:	
  1283                           ; 1 bytes @ 0x4
  1284                           
  1285     0074                     ??___wmul:	
  1286                           ; 1 bytes @ 0x4
  1287                           
  1288     0074                     ??___awmod:	
  1289                           ; 1 bytes @ 0x4
  1290                           
  1291     0074                     ??___flneg:	
  1292                           ; 1 bytes @ 0x4
  1293                           
  1294     0074                     ??___fltol:	
  1295                           ; 1 bytes @ 0x4
  1296                           
  1297     0074                     ??___xxtofl:	
  1298                           ; 1 bytes @ 0x4
  1299                           
  1300     0074                     _isspace$1035:	
  1301                           ; 1 bytes @ 0x4
  1302                           
  1303     0074                     memcpy@tmp:	
  1304                           ; 1 bytes @ 0x4
  1305                           
  1306     0074                     ___wmul@product:	
  1307                           ; 1 bytes @ 0x4
  1308                           
  1309     0074                     __Umul8_16@product:	
  1310                           ; 2 bytes @ 0x4
  1311                           
  1312     0074                     strcpy@s:	
  1313                           ; 2 bytes @ 0x4
  1314                           
  1315     0074                     ___fleq@ff2:	
  1316                           ; 2 bytes @ 0x4
  1317                           
  1318     0074                     ___fladd@a:	
  1319                           ; 4 bytes @ 0x4
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x4
  1323     0074                     	ds	1
  1324     0075                     ??_abs:
  1325     0075                     ___awmod@counter:	
  1326                           ; 1 bytes @ 0x5
  1327                           
  1328     0075                     memcpy@d1:	
  1329                           ; 1 bytes @ 0x5
  1330                           
  1331                           
  1332                           ; 1 bytes @ 0x5
  1333     0075                     	ds	1
  1334     0076                     ?_atoi:
  1335     0076                     ___awmod@sign:	
  1336                           ; 2 bytes @ 0x6
  1337                           
  1338     0076                     memcpy@d:	
  1339                           ; 1 bytes @ 0x6
  1340                           
  1341     0076                     strcpy@d:	
  1342                           ; 1 bytes @ 0x6
  1343                           
  1344     0076                     __Umul8_16@word_mpld:	
  1345                           ; 1 bytes @ 0x6
  1346                           
  1347     0076                     atoi@s:	
  1348                           ; 2 bytes @ 0x6
  1349                           
  1350                           
  1351                           ; 2 bytes @ 0x6
  1352     0076                     	ds	1
  1353     0077                     ?___awdiv:
  1354     0077                     memcpy@s:	
  1355                           ; 2 bytes @ 0x7
  1356                           
  1357     0077                     strcpy@dest:	
  1358                           ; 1 bytes @ 0x7
  1359                           
  1360     0077                     ___awdiv@divisor:	
  1361                           ; 1 bytes @ 0x7
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0x7
  1365     0077                     	ds	1
  1366     0078                     ??_atoi:
  1367     0078                     ??___fleq:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370     0078                     ?_fputs:	
  1371                           ; 1 bytes @ 0x8
  1372                           
  1373     0078                     ___fltol@sign1:	
  1374                           ; 2 bytes @ 0x8
  1375                           
  1376     0078                     ___fladd@signs:	
  1377                           ; 1 bytes @ 0x8
  1378                           
  1379     0078                     __Umul8_16@multiplier:	
  1380                           ; 1 bytes @ 0x8
  1381                           
  1382     0078                     ___xxtofl@sign:	
  1383                           ; 1 bytes @ 0x8
  1384                           
  1385     0078                     fputs@fp:	
  1386                           ; 1 bytes @ 0x8
  1387                           
  1388                           
  1389                           ; 1 bytes @ 0x8
  1390     0078                     	ds	1
  1391     0079                     ??_fputs:
  1392     0079                     ___fltol@exp1:	
  1393                           ; 1 bytes @ 0x9
  1394                           
  1395     0079                     ___fladd@aexp:	
  1396                           ; 1 bytes @ 0x9
  1397                           
  1398     0079                     ___xxtofl@exp:	
  1399                           ; 1 bytes @ 0x9
  1400                           
  1401     0079                     ___awdiv@dividend:	
  1402                           ; 1 bytes @ 0x9
  1403                           
  1404                           
  1405                           ; 2 bytes @ 0x9
  1406     0079                     	ds	1
  1407     007A                     ___fladd@bexp:
  1408     007A                     ___xxtofl@arg:	
  1409                           ; 1 bytes @ 0xA
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0xA
  1413     007A                     	ds	1
  1414     007B                     ??___awdiv:
  1415     007B                     ?_pad:	
  1416                           ; 1 bytes @ 0xB
  1417                           
  1418     007B                     ___fladd@grs:	
  1419                           ; 1 bytes @ 0xB
  1420                           
  1421     007B                     pad@buf:	
  1422                           ; 1 bytes @ 0xB
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0xB
  1426     007B                     	ds	1
  1427     007C                     pad@p:
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430     007C                     	ds	2
  1431     007E                     ??_sprintf:
  1432     007E                     ??_display_float:	
  1433                           ; 1 bytes @ 0xE
  1434                           
  1435     007E                     ??_display_int:	
  1436                           ; 1 bytes @ 0xE
  1437                           
  1438     007E                     ??___flsub:	
  1439                           ; 1 bytes @ 0xE
  1440                           
  1441                           
  1442                           	psect	cstackBANK0
  1443     0020                     __pcstackBANK0:	
  1444                           ; 1 bytes @ 0xE
  1445                           
  1446     0020                     ??___fladd:
  1447     0020                     ?___flmul:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0020                     ?___aodiv:	
  1451                           ; 4 bytes @ 0x0
  1452                           
  1453     0020                     ?___aomod:	
  1454                           ; 8 bytes @ 0x0
  1455                           
  1456     0020                     ___awdiv@counter:	
  1457                           ; 8 bytes @ 0x0
  1458                           
  1459     0020                     fputs@c:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0020                     ___fpclassifyf@e:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465     0020                     atoi@neg:	
  1466                           ; 2 bytes @ 0x0
  1467                           
  1468     0020                     ___flmul@b:	
  1469                           ; 2 bytes @ 0x0
  1470                           
  1471     0020                     ___aodiv@divisor:	
  1472                           ; 4 bytes @ 0x0
  1473                           
  1474     0020                     ___aomod@divisor:	
  1475                           ; 8 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 8 bytes @ 0x0
  1479     0020                     	ds	1
  1480     0021                     ___awdiv@sign:
  1481     0021                     fputs@i:	
  1482                           ; 1 bytes @ 0x1
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x1
  1486     0021                     	ds	1
  1487     0022                     ___awdiv@quotient:
  1488     0022                     atoi@n:	
  1489                           ; 2 bytes @ 0x2
  1490                           
  1491     0022                     ___fpclassifyf@u:	
  1492                           ; 2 bytes @ 0x2
  1493                           
  1494                           
  1495                           ; 4 bytes @ 0x2
  1496     0022                     	ds	1
  1497     0023                     fputs@s:
  1498                           
  1499                           ; 1 bytes @ 0x3
  1500     0023                     	ds	1
  1501     0024                     ??_pad:
  1502     0024                     ___flmul@a:	
  1503                           ; 1 bytes @ 0x4
  1504                           
  1505                           
  1506                           ; 4 bytes @ 0x4
  1507     0024                     	ds	1
  1508     0025                     pad@i:
  1509                           
  1510                           ; 2 bytes @ 0x5
  1511     0025                     	ds	2
  1512     0027                     pad@w:
  1513                           
  1514                           ; 2 bytes @ 0x7
  1515     0027                     	ds	1
  1516     0028                     ??___flmul:
  1517     0028                     ___aodiv@dividend:	
  1518                           ; 1 bytes @ 0x8
  1519                           
  1520     0028                     ___aomod@dividend:	
  1521                           ; 8 bytes @ 0x8
  1522                           
  1523                           
  1524                           ; 8 bytes @ 0x8
  1525     0028                     	ds	1
  1526     0029                     pad@fp:
  1527                           
  1528                           ; 1 bytes @ 0x9
  1529     0029                     	ds	4
  1530     002D                     ___flmul@sign:
  1531                           
  1532                           ; 1 bytes @ 0xD
  1533     002D                     	ds	1
  1534     002E                     ___flmul@grs:
  1535                           
  1536                           ; 4 bytes @ 0xE
  1537     002E                     	ds	2
  1538     0030                     ?_dtoa:
  1539     0030                     dtoa@d:	
  1540                           ; 1 bytes @ 0x10
  1541                           
  1542                           
  1543                           ; 8 bytes @ 0x10
  1544     0030                     	ds	2
  1545     0032                     ___flmul@aexp:
  1546                           
  1547                           ; 1 bytes @ 0x12
  1548     0032                     	ds	1
  1549     0033                     ___flmul@bexp:
  1550                           
  1551                           ; 1 bytes @ 0x13
  1552     0033                     	ds	1
  1553     0034                     ___flmul@prod:
  1554                           
  1555                           ; 4 bytes @ 0x14
  1556     0034                     	ds	4
  1557     0038                     ??_dtoa:
  1558     0038                     ___flmul@temp:	
  1559                           ; 1 bytes @ 0x18
  1560                           
  1561                           
  1562                           ; 2 bytes @ 0x18
  1563     0038                     	ds	1
  1564     0039                     _dtoa$924:
  1565                           
  1566                           ; 2 bytes @ 0x19
  1567     0039                     	ds	1
  1568     003A                     ?___flge:
  1569     003A                     ?___flsub:	
  1570                           ; 1 bit 
  1571                           
  1572     003A                     ?___fldiv:	
  1573                           ; 4 bytes @ 0x1A
  1574                           
  1575     003A                     ___flge@ff1:	
  1576                           ; 4 bytes @ 0x1A
  1577                           
  1578     003A                     ___flsub@a:	
  1579                           ; 4 bytes @ 0x1A
  1580                           
  1581     003A                     ___fldiv@a:	
  1582                           ; 4 bytes @ 0x1A
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x1A
  1586     003A                     	ds	1
  1587     003B                     dtoa@fp:
  1588                           
  1589                           ; 1 bytes @ 0x1B
  1590     003B                     	ds	1
  1591     003C                     dtoa@p:
  1592                           
  1593                           ; 2 bytes @ 0x1C
  1594     003C                     	ds	2
  1595     003E                     dtoa@w:
  1596     003E                     ___flge@ff2:	
  1597                           ; 2 bytes @ 0x1E
  1598                           
  1599     003E                     ___flsub@b:	
  1600                           ; 4 bytes @ 0x1E
  1601                           
  1602     003E                     ___fldiv@b:	
  1603                           ; 4 bytes @ 0x1E
  1604                           
  1605                           
  1606                           ; 4 bytes @ 0x1E
  1607     003E                     	ds	2
  1608     0040                     dtoa@n:
  1609                           
  1610                           ; 8 bytes @ 0x20
  1611     0040                     	ds	2
  1612     0042                     ??___flge:
  1613     0042                     ??___fldiv:	
  1614                           ; 1 bytes @ 0x22
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0x22
  1618     0042                     	ds	5
  1619     0047                     ___fldiv@rem:
  1620                           
  1621                           ; 4 bytes @ 0x27
  1622     0047                     	ds	1
  1623     0048                     dtoa@i:
  1624                           
  1625                           ; 2 bytes @ 0x28
  1626     0048                     	ds	2
  1627     004A                     dtoa@s:
  1628                           
  1629                           ; 1 bytes @ 0x2A
  1630     004A                     	ds	1
  1631     004B                     ___fldiv@sign:
  1632                           
  1633                           ; 1 bytes @ 0x2B
  1634     004B                     	ds	1
  1635     004C                     ___fldiv@new_exp:
  1636                           
  1637                           ; 2 bytes @ 0x2C
  1638     004C                     	ds	2
  1639     004E                     ___fldiv@grs:
  1640                           
  1641                           ; 4 bytes @ 0x2E
  1642     004E                     	ds	4
  1643     0052                     ___fldiv@bexp:
  1644                           
  1645                           ; 1 bytes @ 0x32
  1646     0052                     	ds	1
  1647     0053                     ___fldiv@aexp:
  1648                           
  1649                           ; 1 bytes @ 0x33
  1650     0053                     	ds	1
  1651     0054                     ?_floorf:
  1652     0054                     ?_ADC_Convert:	
  1653                           ; 4 bytes @ 0x34
  1654                           
  1655     0054                     ADC_Convert@chan:	
  1656                           ; 4 bytes @ 0x34
  1657                           
  1658     0054                     floorf@x:	
  1659                           ; 2 bytes @ 0x34
  1660                           
  1661                           
  1662                           ; 4 bytes @ 0x34
  1663     0054                     	ds	4
  1664     0058                     ??_floorf:
  1665     0058                     ??_ADC_Convert:	
  1666                           ; 1 bytes @ 0x38
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x38
  1670     0058                     	ds	2
  1671     005A                     ADC_Convert@voltage:
  1672                           
  1673                           ; 4 bytes @ 0x3A
  1674     005A                     	ds	4
  1675     005E                     ADC_Convert@result:
  1676     005E                     floorf@m:	
  1677                           ; 2 bytes @ 0x3E
  1678                           
  1679                           
  1680                           ; 4 bytes @ 0x3E
  1681     005E                     	ds	4
  1682     0062                     floorf@e:
  1683                           
  1684                           ; 2 bytes @ 0x42
  1685     0062                     	ds	2
  1686     0064                     floorf@u:
  1687                           
  1688                           ; 4 bytes @ 0x44
  1689     0064                     	ds	4
  1690     0068                     ?_efgtoa:
  1691     0068                     efgtoa@f:	
  1692                           ; 1 bytes @ 0x48
  1693                           
  1694                           
  1695                           ; 4 bytes @ 0x48
  1696     0068                     	ds	4
  1697     006C                     efgtoa@c:
  1698                           
  1699                           ; 1 bytes @ 0x4C
  1700     006C                     	ds	1
  1701     006D                     ?_vfpfcnvrt:
  1702     006D                     vfpfcnvrt@fmt:	
  1703                           ; 1 bytes @ 0x4D
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0x4D
  1707     006D                     	ds	1
  1708     006E                     vfpfcnvrt@ap:
  1709                           
  1710                           ; 1 bytes @ 0x4E
  1711     006E                     	ds	1
  1712     006F                     ??_vfprintf:
  1713                           
  1714                           ; 1 bytes @ 0x4F
  1715     006F                     	ds	1
  1716                           
  1717                           	psect	maintext
  1718     0C03                     __pmaintext:	
  1719 ;;
  1720 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1721 ;;
  1722 ;; *************** function _main *****************
  1723 ;; Defined at:
  1724 ;;		line 215 in file "main.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  currentTempe    4   23[BANK3 ] float 
  1729 ;;  inputTempera    4    4[BANK3 ] float 
  1730 ;;  tempVoltage     4    0[BANK3 ] float 
  1731 ;;  min1            2   20[BANK3 ] int 
  1732 ;;  min0            2   18[BANK3 ] int 
  1733 ;;  hr1             2   16[BANK3 ] int 
  1734 ;;  hr0             2   14[BANK3 ] int 
  1735 ;;  n2              2   12[BANK3 ] int 
  1736 ;;  n1              2   10[BANK3 ] int 
  1737 ;;  n0              2    8[BANK3 ] int 
  1738 ;;  seconds         2   35[BANK3 ] int 
  1739 ;;  key             1   38[BANK3 ] unsigned char 
  1740 ;;  v               1   37[BANK3 ] unsigned char 
  1741 ;;  inputTime       6   41[BANK3 ] unsigned char [6]
  1742 ;;  inputTemp       3   47[BANK3 ] unsigned char [3]
  1743 ;;  count2          2   50[BANK3 ] int 
  1744 ;;  count           2   39[BANK3 ] int 
  1745 ;;  min             2   33[BANK3 ] int 
  1746 ;;  hr              2   31[BANK3 ] int 
  1747 ;;  temp            2   29[BANK3 ] int 
  1748 ;;  timeBool        1   28[BANK3 ] _Bool 
  1749 ;;  tempBool        1   27[BANK3 ] _Bool 
  1750 ;;  start           1   22[BANK3 ] _Bool 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : B1F/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1760 ;;      Params:         0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0      52       0       0       0
  1762 ;;      Temps:          0       0       0       4       0       0       0       0
  1763 ;;      Totals:         0       0       0       4      52       0       0       0
  1764 ;;Total ram usage:       56 bytes
  1765 ;; Hardware stack levels required when called: 9
  1766 ;; This function calls:
  1767 ;;		_ADC_Convert
  1768 ;;		_ADC_init
  1769 ;;		___awdiv
  1770 ;;		___awmod
  1771 ;;		___flge
  1772 ;;		___flmul
  1773 ;;		___wmul
  1774 ;;		___xxtofl
  1775 ;;		_display_float
  1776 ;;		_display_int
  1777 ;;		_keypad
  1778 ;;		_lcd_DisplayString
  1779 ;;		_lcd_char
  1780 ;;		_lcd_cmd
  1781 ;;		_lcd_init
  1782 ;; This function is called by:
  1783 ;;		Startup code after reset
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787     0C03                     _main:	
  1788                           ;psect for function _main
  1789                           
  1790                           
  1791                           ;main.c: 217:     TRISD=0xF0;
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1795     0C03  30F0               	movlw	240
  1796     0C04  0021               	movlb	1	; select bank1
  1797     0C05  008F               	movwf	15	;volatile
  1798                           
  1799                           ;main.c: 218:     ANSELD = 0x00;
  1800     0C06  0023               	movlb	3	; select bank3
  1801     0C07  018F               	clrf	15	;volatile
  1802                           
  1803                           ;main.c: 219:     TRISB=0x00;
  1804     0C08  0021               	movlb	1	; select bank1
  1805     0C09  018D               	clrf	13	;volatile
  1806                           
  1807                           ;main.c: 221:     TRISC=0x00;
  1808     0C0A  018E               	clrf	14	;volatile
  1809                           
  1810                           ;main.c: 223:     ANSELA = 0xff;
  1811     0C0B  30FF               	movlw	255
  1812     0C0C  0023               	movlb	3	; select bank3
  1813     0C0D  008C               	movwf	12	;volatile
  1814                           
  1815                           ;main.c: 225:     lcd_init();
  1816     0C0E  319E  262E  318C   	fcall	_lcd_init
  1817                           
  1818                           ;main.c: 226:     lcd_cmd(0x28);
  1819     0C11  3028               	movlw	40
  1820     0C12  319D  25D0  318C   	fcall	_lcd_cmd
  1821                           
  1822                           ;main.c: 227:     lcd_cmd(0x0C);
  1823     0C15  300C               	movlw	12
  1824     0C16  319D  25D0  318C   	fcall	_lcd_cmd
  1825                           
  1826                           ;main.c: 228:     lcd_cmd(0x06);
  1827     0C19  3006               	movlw	6
  1828     0C1A  319D  25D0  318C   	fcall	_lcd_cmd
  1829                           
  1830                           ;main.c: 229:     lcd_cmd(0x01);
  1831     0C1D  3001               	movlw	1
  1832     0C1E  319D  25D0  318C   	fcall	_lcd_cmd
  1833                           
  1834                           ;main.c: 231:     lcd_cmd(0x82);
  1835     0C21  3082               	movlw	130
  1836     0C22  319D  25D0  318C   	fcall	_lcd_cmd
  1837                           
  1838                           ;main.c: 232:     lcd_DisplayString("OVEN SYSTEM");
  1839     0C25  3056               	movlw	low (STR_4| (0+32768))
  1840     0C26  00F2               	movwf	lcd_DisplayString@str
  1841     0C27  3098               	movlw	high (STR_4| (0+32768))
  1842     0C28  00F3               	movwf	lcd_DisplayString@str+1
  1843     0C29  319C  2415  318C   	fcall	_lcd_DisplayString
  1844                           
  1845                           ;main.c: 233:     lcd_cmd(0xC4);
  1846     0C2C  30C4               	movlw	196
  1847     0C2D  319D  25D0  318C   	fcall	_lcd_cmd
  1848                           
  1849                           ;main.c: 234:     lcd_DisplayString("GROUP- H");
  1850     0C30  3062               	movlw	low (STR_5| (0+32768))
  1851     0C31  00F2               	movwf	lcd_DisplayString@str
  1852     0C32  3098               	movlw	high (STR_5| (0+32768))
  1853     0C33  00F3               	movwf	lcd_DisplayString@str+1
  1854     0C34  319C  2415  318C   	fcall	_lcd_DisplayString
  1855                           
  1856                           ;main.c: 235:     _delay((unsigned long)((5000)*(19600000/4000.0)));
  1857     0C37  307D               	movlw	125
  1858     0C38  0022               	movlb	2	; select bank2
  1859     0C39  00C0               	movwf	(??_main^(0+256)+1)
  1860     0C3A  304A               	movlw	74
  1861     0C3B  00BF               	movwf	??_main^(0+256)
  1862     0C3C  30D9               	movlw	217
  1863     0C3D                     u6717:
  1864     0C3D  0B89               	decfsz	9,f
  1865     0C3E  2C3D               	goto	u6717
  1866     0C3F  0BBF               	decfsz	??_main^(0+256),f
  1867     0C40  2C3D               	goto	u6717
  1868     0C41  0BC0               	decfsz	(??_main^(0+256)+1),f
  1869     0C42  2C3D               	goto	u6717
  1870     0C43  3200               	nop2
  1871                           
  1872                           ;main.c: 236:     lcd_cmd(0x01);
  1873     0C44  3001               	movlw	1
  1874     0C45  319D  25D0  318C   	fcall	_lcd_cmd
  1875                           
  1876                           ;main.c: 238:     ADC_init();
  1877     0C48  3180  2008  318C   	fcall	_ADC_init
  1878                           
  1879                           ;main.c: 240:     char inputTemp[3] = {'0','0','0'};
  1880     0C4B  0023               	movlb	3	; select bank3
  1881     0C4C  085A               	movf	main@F3475^(0+384),w
  1882     0C4D  00CF               	movwf	main@inputTemp^(0+384)
  1883     0C4E  085B               	movf	(main@F3475+1)^(0+384),w
  1884     0C4F  00D0               	movwf	(main@inputTemp+1)^(0+384)
  1885     0C50  085C               	movf	(main@F3475+2)^(0+384),w
  1886     0C51  00D1               	movwf	(main@inputTemp+2)^(0+384)
  1887                           
  1888                           ;main.c: 241:     char inputTime[6] = {'0','0',':','0','0',0x00};
  1889     0C52  30D4               	movlw	low main@F3477
  1890     0C53  0086               	movwf	6
  1891     0C54  3001               	movlw	high main@F3477
  1892     0C55  0087               	movwf	7
  1893     0C56  30C9               	movlw	low main@inputTime
  1894     0C57  0084               	movwf	4
  1895     0C58  3001               	movlw	high main@inputTime
  1896     0C59  0085               	movwf	5
  1897     0C5A  3006               	movlw	6
  1898     0C5B  0022               	movlb	2	; select bank2
  1899     0C5C  00BF               	movwf	??_main^(0+256)
  1900     0C5D                     u6400:
  1901     0C5D  0016               	moviw fsr1++
  1902     0C5E  001A               	movwi fsr0++
  1903     0C5F  0BBF               	decfsz	??_main^(0+256),f
  1904     0C60  2C5D               	goto	u6400
  1905                           
  1906                           ;main.c: 243:     int temp = 0;
  1907     0C61  0023               	movlb	3	; select bank3
  1908     0C62  01BD               	clrf	main@temp^(0+384)
  1909     0C63  01BE               	clrf	(main@temp+1)^(0+384)
  1910                           
  1911                           ;main.c: 245:     int hr = 0;
  1912     0C64  01BF               	clrf	main@hr^(0+384)
  1913     0C65  01C0               	clrf	(main@hr+1)^(0+384)
  1914                           
  1915                           ;main.c: 246:     int min = 0;
  1916     0C66  01C1               	clrf	main@min^(0+384)
  1917     0C67  01C2               	clrf	(main@min+1)^(0+384)
  1918                           
  1919                           ;main.c: 248:     int count = 0;
  1920     0C68  01C7               	clrf	main@count^(0+384)
  1921     0C69  01C8               	clrf	(main@count+1)^(0+384)
  1922                           
  1923                           ;main.c: 249:     int count2 = 0;
  1924     0C6A  01D2               	clrf	main@count2^(0+384)
  1925     0C6B  01D3               	clrf	(main@count2+1)^(0+384)
  1926                           
  1927                           ;main.c: 251:     _Bool tempBool = 1;
  1928     0C6C  01BB               	clrf	main@tempBool^(0+384)
  1929     0C6D  0ABB               	incf	main@tempBool^(0+384),f
  1930                           
  1931                           ;main.c: 252:     _Bool timeBool = 0;
  1932     0C6E  01BC               	clrf	main@timeBool^(0+384)
  1933                           
  1934                           ;main.c: 253:     _Bool start = 0;
  1935     0C6F  01B6               	clrf	main@start^(0+384)
  1936     0C70  2E76               	goto	l4549
  1937     0C71                     l4551:
  1938                           
  1939                           ;main.c: 256:             if(temp != 0){
  1940     0C71  083D               	movf	main@temp^(0+384),w
  1941     0C72  043E               	iorwf	(main@temp+1)^(0+384),w
  1942     0C73  1903               	btfsc	3,2
  1943     0C74  2CA5               	goto	l4569
  1944                           
  1945                           ;main.c: 257:                 lcd_cmd(0x80);
  1946     0C75  3080               	movlw	128
  1947     0C76  319D  25D0  318C   	fcall	_lcd_cmd
  1948                           
  1949                           ;main.c: 258:                 lcd_DisplayString("Inputed Temp. :");
  1950     0C79  3000               	movlw	low (STR_6| (0+32768))
  1951     0C7A  00F2               	movwf	lcd_DisplayString@str
  1952     0C7B  3098               	movlw	high (STR_6| (0+32768))
  1953     0C7C  00F3               	movwf	lcd_DisplayString@str+1
  1954     0C7D  319C  2415  318C   	fcall	_lcd_DisplayString
  1955                           
  1956                           ;main.c: 259:                 lcd_cmd(0xC0);
  1957     0C80  30C0               	movlw	192
  1958     0C81  319D  25D0  318C   	fcall	_lcd_cmd
  1959                           
  1960                           ;main.c: 260:                 display_int(temp);
  1961     0C84  0023               	movlb	3	; select bank3
  1962     0C85  083E               	movf	(main@temp+1)^(0+384),w
  1963     0C86  0022               	movlb	2	; select bank2
  1964     0C87  00AC               	movwf	(display_int@num+1)^(0+256)
  1965     0C88  0023               	movlb	3	; select bank3
  1966     0C89  083D               	movf	main@temp^(0+384),w
  1967     0C8A  0022               	movlb	2	; select bank2
  1968     0C8B  00AB               	movwf	display_int@num^(0+256)
  1969     0C8C  319C  2472  318C   	fcall	_display_int
  1970                           
  1971                           ;main.c: 261:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  1972     0C8F  3032               	movlw	50
  1973     0C90  0022               	movlb	2	; select bank2
  1974     0C91  00C0               	movwf	(??_main^(0+256)+1)
  1975     0C92  30B8               	movlw	184
  1976     0C93  00BF               	movwf	??_main^(0+256)
  1977     0C94  3022               	movlw	34
  1978     0C95                     u6727:
  1979     0C95  0B89               	decfsz	9,f
  1980     0C96  2C95               	goto	u6727
  1981     0C97  0BBF               	decfsz	??_main^(0+256),f
  1982     0C98  2C95               	goto	u6727
  1983     0C99  0BC0               	decfsz	(??_main^(0+256)+1),f
  1984     0C9A  2C95               	goto	u6727
  1985     0C9B  0000               	nop
  1986                           
  1987                           ;main.c: 262:                 tempBool = 0;
  1988     0C9C  0023               	movlb	3	; select bank3
  1989     0C9D  01BB               	clrf	main@tempBool^(0+384)
  1990                           
  1991                           ;main.c: 263:                 timeBool = 1;
  1992     0C9E  01BC               	clrf	main@timeBool^(0+384)
  1993     0C9F  0ABC               	incf	main@timeBool^(0+384),f
  1994                           
  1995                           ;main.c: 264:                 lcd_cmd(0x01);
  1996     0CA0  3001               	movlw	1
  1997     0CA1  319D  25D0  318C   	fcall	_lcd_cmd
  1998                           
  1999                           ;main.c: 265:             }
  2000     0CA4  2E76               	goto	l4549
  2001     0CA5                     l4569:
  2002                           
  2003                           ;main.c: 267:                 lcd_cmd(0x80);
  2004     0CA5  3080               	movlw	128
  2005     0CA6  319D  25D0  318C   	fcall	_lcd_cmd
  2006                           
  2007                           ;main.c: 268:                 lcd_DisplayString("Enter Temp. :");
  2008     0CA9  302E               	movlw	low (STR_7| (0+32768))
  2009     0CAA  00F2               	movwf	lcd_DisplayString@str
  2010     0CAB  3098               	movlw	high (STR_7| (0+32768))
  2011     0CAC  00F3               	movwf	lcd_DisplayString@str+1
  2012     0CAD  319C  2415  318C   	fcall	_lcd_DisplayString
  2013                           
  2014                           ;main.c: 269:                 lcd_cmd(0xC0);
  2015     0CB0  30C0               	movlw	192
  2016     0CB1  319D  25D0  318C   	fcall	_lcd_cmd
  2017                           
  2018                           ;main.c: 270:                 lcd_DisplayString(inputTemp);
  2019     0CB4  30CF               	movlw	low main@inputTemp
  2020     0CB5  00F2               	movwf	lcd_DisplayString@str
  2021     0CB6  3001               	movlw	high main@inputTemp
  2022     0CB7  00F3               	movwf	lcd_DisplayString@str+1
  2023     0CB8  319C  2415  318C   	fcall	_lcd_DisplayString
  2024                           
  2025                           ;main.c: 271:                 char v = keypad();
  2026     0CBB  3188  2006  318C   	fcall	_keypad
  2027     0CBE  0023               	movlb	3	; select bank3
  2028     0CBF  00C5               	movwf	main@v^(0+384)
  2029                           
  2030                           ;main.c: 272:                 if( v =='#'){
  2031     0CC0  3023               	movlw	35
  2032     0CC1  0645               	xorwf	main@v^(0+384),w
  2033     0CC2  1D03               	btfss	3,2
  2034     0CC3  2D0D               	goto	l4589
  2035                           
  2036                           ;main.c: 273:                     lcd_cmd(0x01);
  2037     0CC4  3001               	movlw	1
  2038     0CC5  319D  25D0  318C   	fcall	_lcd_cmd
  2039                           
  2040                           ;main.c: 274:                     int n0 = inputTemp[2]-'0';
  2041     0CC8  0023               	movlb	3	; select bank3
  2042     0CC9  0851               	movf	(main@inputTemp^(0+384)+2),w
  2043     0CCA  3ED0               	addlw	208
  2044     0CCB  00A8               	movwf	main@n0^(0+384)
  2045     0CCC  30FF               	movlw	255
  2046     0CCD  1803               	skipnc
  2047     0CCE  3000               	movlw	0
  2048     0CCF  00A9               	movwf	(main@n0^(0+384)+1)
  2049                           
  2050                           ;main.c: 275:                     int n1 = inputTemp[1]-'0';
  2051     0CD0  0850               	movf	(main@inputTemp^(0+384)+1),w
  2052     0CD1  3ED0               	addlw	208
  2053     0CD2  00AA               	movwf	main@n1^(0+384)
  2054     0CD3  30FF               	movlw	255
  2055     0CD4  1803               	skipnc
  2056     0CD5  3000               	movlw	0
  2057     0CD6  00AB               	movwf	(main@n1^(0+384)+1)
  2058                           
  2059                           ;main.c: 276:                     int n2 = inputTemp[0]-'0';
  2060     0CD7  084F               	movf	main@inputTemp^(0+384),w
  2061     0CD8  3ED0               	addlw	208
  2062     0CD9  00AC               	movwf	main@n2^(0+384)
  2063     0CDA  30FF               	movlw	255
  2064     0CDB  1803               	skipnc
  2065     0CDC  3000               	movlw	0
  2066     0CDD  00AD               	movwf	(main@n2^(0+384)+1)
  2067                           
  2068                           ;main.c: 277:                     temp = n0 + n1*10 + n2*100;
  2069     0CDE  082D               	movf	(main@n2+1)^(0+384),w
  2070     0CDF  00F1               	movwf	___wmul@multiplier+1
  2071     0CE0  082C               	movf	main@n2^(0+384),w
  2072     0CE1  00F0               	movwf	___wmul@multiplier
  2073     0CE2  3064               	movlw	100
  2074     0CE3  00F2               	movwf	___wmul@multiplicand
  2075     0CE4  3000               	movlw	0
  2076     0CE5  00F3               	movwf	___wmul@multiplicand+1
  2077     0CE6  319C  2457  318C   	fcall	___wmul
  2078     0CE9  0870               	movf	?___wmul,w
  2079     0CEA  0022               	movlb	2	; select bank2
  2080     0CEB  00BF               	movwf	??_main^(0+256)
  2081     0CEC  0871               	movf	?___wmul+1,w
  2082     0CED  00C0               	movwf	(??_main^(0+256)+1)
  2083     0CEE  0023               	movlb	3	; select bank3
  2084     0CEF  082B               	movf	(main@n1+1)^(0+384),w
  2085     0CF0  00F1               	movwf	___wmul@multiplier+1
  2086     0CF1  082A               	movf	main@n1^(0+384),w
  2087     0CF2  00F0               	movwf	___wmul@multiplier
  2088     0CF3  300A               	movlw	10
  2089     0CF4  00F2               	movwf	___wmul@multiplicand
  2090     0CF5  3000               	movlw	0
  2091     0CF6  00F3               	movwf	___wmul@multiplicand+1
  2092     0CF7  319C  2457  318C   	fcall	___wmul
  2093     0CFA  0870               	movf	?___wmul,w
  2094     0CFB  0022               	movlb	2	; select bank2
  2095     0CFC  073F               	addwf	??_main^(0+256),w
  2096     0CFD  00C1               	movwf	(??_main+2)^(0+256)
  2097     0CFE  0871               	movf	?___wmul+1,w
  2098     0CFF  3D40               	addwfc	(??_main+1)^(0+256),w
  2099     0D00  00C2               	movwf	(??_main+3)^(0+256)
  2100     0D01  0023               	movlb	3	; select bank3
  2101     0D02  0828               	movf	main@n0^(0+384),w
  2102     0D03  0022               	movlb	2	; select bank2
  2103     0D04  0741               	addwf	(??_main+2)^(0+256),w
  2104     0D05  0023               	movlb	3	; select bank3
  2105     0D06  00BD               	movwf	main@temp^(0+384)
  2106     0D07  0829               	movf	(main@n0+1)^(0+384),w
  2107     0D08  0022               	movlb	2	; select bank2
  2108     0D09  3D42               	addwfc	(??_main+3)^(0+256),w
  2109     0D0A  0023               	movlb	3	; select bank3
  2110     0D0B  00BE               	movwf	(main@temp+1)^(0+384)
  2111                           
  2112                           ;main.c: 278:                 }
  2113     0D0C  2E76               	goto	l4549
  2114     0D0D                     l4589:
  2115     0D0D  302A               	movlw	42
  2116     0D0E  0645               	xorwf	main@v^(0+384),w
  2117     0D0F  1D03               	btfss	3,2
  2118     0D10  2D31               	goto	l4603
  2119                           
  2120                           ;main.c: 280:                     if (count == 1){
  2121     0D11  0347               	decf	main@count^(0+384),w
  2122     0D12  0448               	iorwf	(main@count+1)^(0+384),w
  2123     0D13  1D03               	btfss	3,2
  2124     0D14  2D18               	goto	l4595
  2125                           
  2126                           ;main.c: 281:                         inputTemp[2] = '0';
  2127     0D15  3030               	movlw	48
  2128     0D16  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2129     0D17  2D2D               	goto	L2
  2130     0D18                     l4595:	
  2131                           ;main.c: 283:                     }
  2132                           
  2133                           ;main.c: 282:                         count--;
  2134                           
  2135     0D18  3002               	movlw	2
  2136     0D19  0647               	xorwf	main@count^(0+384),w
  2137     0D1A  0448               	iorwf	(main@count+1)^(0+384),w
  2138     0D1B  1D03               	btfss	3,2
  2139     0D1C  2D22               	goto	l4599
  2140                           
  2141                           ;main.c: 285:                         inputTemp[2] = inputTemp[1];
  2142     0D1D  0850               	movf	(main@inputTemp^(0+384)+1),w
  2143     0D1E  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2144                           
  2145                           ;main.c: 286:                         inputTemp[1] = '0';
  2146     0D1F  3030               	movlw	48
  2147     0D20  00D0               	movwf	(main@inputTemp^(0+384)+1)
  2148     0D21  2D2D               	goto	L2
  2149     0D22                     l4599:	
  2150                           ;main.c: 288:                     }
  2151                           
  2152                           ;main.c: 287:                         count--;
  2153                           
  2154     0D22  3003               	movlw	3
  2155     0D23  0647               	xorwf	main@count^(0+384),w
  2156     0D24  0448               	iorwf	(main@count+1)^(0+384),w
  2157     0D25  1D03               	btfss	3,2
  2158     0D26  2E76               	goto	l4549
  2159                           
  2160                           ;main.c: 290:                         inputTemp[2] = inputTemp[1];
  2161     0D27  0850               	movf	(main@inputTemp^(0+384)+1),w
  2162     0D28  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2163                           
  2164                           ;main.c: 291:                         inputTemp[1] = inputTemp[0];
  2165     0D29  084F               	movf	main@inputTemp^(0+384),w
  2166     0D2A  00D0               	movwf	(main@inputTemp^(0+384)+1)
  2167                           
  2168                           ;main.c: 292:                         inputTemp[0] ='0';
  2169     0D2B  3030               	movlw	48
  2170     0D2C  00CF               	movwf	main@inputTemp^(0+384)
  2171     0D2D                     L2:
  2172                           
  2173                           ;main.c: 293:                         count--;
  2174     0D2D  30FF               	movlw	255
  2175     0D2E  07C7               	addwf	main@count^(0+384),f
  2176     0D2F  30FF               	movlw	255
  2177     0D30  2D4B               	goto	L14
  2178     0D31                     l4603:	
  2179                           ;main.c: 295:                 }
  2180                           
  2181     0D31  3020               	movlw	32
  2182     0D32  0645               	xorwf	main@v^(0+384),w
  2183     0D33  1903               	btfsc	3,2
  2184     0D34  2E76               	goto	l4549
  2185                           
  2186                           ;main.c: 297:                     if (count == 0){
  2187     0D35  0847               	movf	main@count^(0+384),w
  2188     0D36  0448               	iorwf	(main@count+1)^(0+384),w
  2189     0D37  1903               	btfsc	3,2
  2190     0D38  2D46               	goto	L4
  2191                           
  2192                           ;main.c: 300:                     }
  2193                           
  2194                           ;main.c: 299:                         count++;
  2195                           
  2196                           ;main.c: 298:                         inputTemp[2] = v;
  2197     0D39  0347               	decf	main@count^(0+384),w
  2198     0D3A  0448               	iorwf	(main@count+1)^(0+384),w
  2199     0D3B  1903               	btfsc	3,2
  2200     0D3C  2D44               	goto	L12
  2201                           
  2202                           ;main.c: 305:                     }
  2203                           
  2204                           ;main.c: 304:                         count++;
  2205                           
  2206                           ;main.c: 303:                         inputTemp[2] = v;
  2207                           
  2208                           ;main.c: 302:                         inputTemp[1] = inputTemp[2] ;
  2209     0D3D  3002               	movlw	2
  2210     0D3E  0647               	xorwf	main@count^(0+384),w
  2211     0D3F  0448               	iorwf	(main@count+1)^(0+384),w
  2212     0D40  1D03               	btfss	3,2
  2213     0D41  2E76               	goto	l4549
  2214                           
  2215                           ;main.c: 307:                         inputTemp[0] = inputTemp[1];
  2216     0D42  0850               	movf	(main@inputTemp^(0+384)+1),w
  2217     0D43  00CF               	movwf	main@inputTemp^(0+384)
  2218     0D44                     L12:
  2219                           
  2220                           ;main.c: 308:                         inputTemp[1] = inputTemp[2];
  2221     0D44  0851               	movf	(main@inputTemp^(0+384)+2),w
  2222     0D45  00D0               	movwf	(main@inputTemp^(0+384)+1)
  2223     0D46                     L4:
  2224                           
  2225                           ;main.c: 309:                         inputTemp[2] = v;
  2226     0D46  0845               	movf	main@v^(0+384),w
  2227     0D47  00D1               	movwf	(main@inputTemp^(0+384)+2)
  2228                           
  2229                           ;main.c: 310:                         count++;
  2230     0D48  3001               	movlw	1
  2231     0D49  07C7               	addwf	main@count^(0+384),f
  2232     0D4A  3000               	movlw	0
  2233     0D4B                     L14:
  2234     0D4B  3DC8               	addwfc	(main@count+1)^(0+384),f
  2235     0D4C  2E76               	goto	l4549
  2236     0D4D                     l4619:
  2237                           
  2238                           ;main.c: 316:             if ((hr!=0) || (min!=0)){
  2239     0D4D  083F               	movf	main@hr^(0+384),w
  2240     0D4E  0440               	iorwf	(main@hr+1)^(0+384),w
  2241     0D4F  1D03               	btfss	3,2
  2242     0D50  2D55               	goto	l4623
  2243     0D51  0841               	movf	main@min^(0+384),w
  2244     0D52  0442               	iorwf	(main@min+1)^(0+384),w
  2245     0D53  1903               	btfsc	3,2
  2246     0D54  2DBD               	goto	l4657
  2247     0D55                     l4623:
  2248                           
  2249                           ;main.c: 317:                 lcd_cmd(0x80);
  2250     0D55  3080               	movlw	128
  2251     0D56  319D  25D0  318C   	fcall	_lcd_cmd
  2252                           
  2253                           ;main.c: 318:                 lcd_DisplayString("Inputed Time:");
  2254     0D59  303C               	movlw	low (STR_8| (0+32768))
  2255     0D5A  00F2               	movwf	lcd_DisplayString@str
  2256     0D5B  3098               	movlw	high (STR_8| (0+32768))
  2257     0D5C  00F3               	movwf	lcd_DisplayString@str+1
  2258     0D5D  319C  2415  318C   	fcall	_lcd_DisplayString
  2259                           
  2260                           ;main.c: 319:                 lcd_cmd(0xC0);
  2261     0D60  30C0               	movlw	192
  2262     0D61  319D  25D0  318C   	fcall	_lcd_cmd
  2263                           
  2264                           ;main.c: 320:                 display_int(hr);
  2265     0D64  0023               	movlb	3	; select bank3
  2266     0D65  0840               	movf	(main@hr+1)^(0+384),w
  2267     0D66  0022               	movlb	2	; select bank2
  2268     0D67  00AC               	movwf	(display_int@num+1)^(0+256)
  2269     0D68  0023               	movlb	3	; select bank3
  2270     0D69  083F               	movf	main@hr^(0+384),w
  2271     0D6A  0022               	movlb	2	; select bank2
  2272     0D6B  00AB               	movwf	display_int@num^(0+256)
  2273     0D6C  319C  2472  318C   	fcall	_display_int
  2274                           
  2275                           ;main.c: 321:                 lcd_char(':');
  2276     0D6F  303A               	movlw	58
  2277     0D70  319D  25FE  318C   	fcall	_lcd_char
  2278                           
  2279                           ;main.c: 322:                 display_int(min);
  2280     0D73  0023               	movlb	3	; select bank3
  2281     0D74  0842               	movf	(main@min+1)^(0+384),w
  2282     0D75  0022               	movlb	2	; select bank2
  2283     0D76  00AC               	movwf	(display_int@num+1)^(0+256)
  2284     0D77  0023               	movlb	3	; select bank3
  2285     0D78  0841               	movf	main@min^(0+384),w
  2286     0D79  0022               	movlb	2	; select bank2
  2287     0D7A  00AB               	movwf	display_int@num^(0+256)
  2288     0D7B  319C  2472  318C   	fcall	_display_int
  2289                           
  2290                           ;main.c: 323:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  2291     0D7E  3032               	movlw	50
  2292     0D7F  0022               	movlb	2	; select bank2
  2293     0D80  00C0               	movwf	(??_main^(0+256)+1)
  2294     0D81  30B8               	movlw	184
  2295     0D82  00BF               	movwf	??_main^(0+256)
  2296     0D83  3022               	movlw	34
  2297     0D84                     u6737:
  2298     0D84  0B89               	decfsz	9,f
  2299     0D85  2D84               	goto	u6737
  2300     0D86  0BBF               	decfsz	??_main^(0+256),f
  2301     0D87  2D84               	goto	u6737
  2302     0D88  0BC0               	decfsz	(??_main^(0+256)+1),f
  2303     0D89  2D84               	goto	u6737
  2304     0D8A  0000               	nop
  2305                           
  2306                           ;main.c: 324:                 lcd_cmd(0x01);
  2307     0D8B  3001               	movlw	1
  2308     0D8C  319D  25D0  318C   	fcall	_lcd_cmd
  2309                           
  2310                           ;main.c: 325:                 lcd_cmd(0x80);
  2311     0D8F  3080               	movlw	128
  2312     0D90  319D  25D0  318C   	fcall	_lcd_cmd
  2313                           
  2314                           ;main.c: 326:                 lcd_DisplayString("OVEN STARTING ");
  2315     0D93  3010               	movlw	low (STR_9| (0+32768))
  2316     0D94  00F2               	movwf	lcd_DisplayString@str
  2317     0D95  3098               	movlw	high (STR_9| (0+32768))
  2318     0D96  00F3               	movwf	lcd_DisplayString@str+1
  2319     0D97  319C  2415  318C   	fcall	_lcd_DisplayString
  2320                           
  2321                           ;main.c: 327:                 lcd_cmd(0xC0);
  2322     0D9A  30C0               	movlw	192
  2323     0D9B  319D  25D0  318C   	fcall	_lcd_cmd
  2324                           
  2325                           ;main.c: 328:                 lcd_DisplayString("NOW...");
  2326     0D9E  306B               	movlw	low (STR_10| (0+32768))
  2327     0D9F  00F2               	movwf	lcd_DisplayString@str
  2328     0DA0  3098               	movlw	high (STR_10| (0+32768))
  2329     0DA1  00F3               	movwf	lcd_DisplayString@str+1
  2330     0DA2  319C  2415  318C   	fcall	_lcd_DisplayString
  2331                           
  2332                           ;main.c: 329:                 _delay((unsigned long)((2000)*(19600000/4000.0)));
  2333     0DA5  3032               	movlw	50
  2334     0DA6  0022               	movlb	2	; select bank2
  2335     0DA7  00C0               	movwf	(??_main^(0+256)+1)
  2336     0DA8  30B8               	movlw	184
  2337     0DA9  00BF               	movwf	??_main^(0+256)
  2338     0DAA  3022               	movlw	34
  2339     0DAB                     u6747:
  2340     0DAB  0B89               	decfsz	9,f
  2341     0DAC  2DAB               	goto	u6747
  2342     0DAD  0BBF               	decfsz	??_main^(0+256),f
  2343     0DAE  2DAB               	goto	u6747
  2344     0DAF  0BC0               	decfsz	(??_main^(0+256)+1),f
  2345     0DB0  2DAB               	goto	u6747
  2346     0DB1  0000               	nop
  2347                           
  2348                           ;main.c: 330:                 lcd_cmd(0x01);
  2349     0DB2  3001               	movlw	1
  2350     0DB3  319D  25D0  318C   	fcall	_lcd_cmd
  2351                           
  2352                           ;main.c: 331:                 timeBool = 0;
  2353     0DB6  0023               	movlb	3	; select bank3
  2354     0DB7  01BC               	clrf	main@timeBool^(0+384)
  2355                           
  2356                           ;main.c: 332:                 start = 1;
  2357     0DB8  01B6               	clrf	main@start^(0+384)
  2358     0DB9  0AB6               	incf	main@start^(0+384),f
  2359                           
  2360                           ;main.c: 334:                 PORTCbits.RC0 = 1;
  2361     0DBA  0020               	movlb	0	; select bank0
  2362     0DBB  140E               	bsf	14,0	;volatile
  2363                           
  2364                           ;main.c: 335:             }
  2365     0DBC  2E76               	goto	l4549
  2366     0DBD                     l4657:
  2367                           
  2368                           ;main.c: 337:                 lcd_cmd(0x80);
  2369     0DBD  3080               	movlw	128
  2370     0DBE  319D  25D0  318C   	fcall	_lcd_cmd
  2371                           
  2372                           ;main.c: 338:                 lcd_DisplayString("Enter Time:");
  2373     0DC1  304A               	movlw	low (STR_11| (0+32768))
  2374     0DC2  00F2               	movwf	lcd_DisplayString@str
  2375     0DC3  3098               	movlw	high (STR_11| (0+32768))
  2376     0DC4  00F3               	movwf	lcd_DisplayString@str+1
  2377     0DC5  319C  2415  318C   	fcall	_lcd_DisplayString
  2378                           
  2379                           ;main.c: 339:                 lcd_cmd(0xC0);
  2380     0DC8  30C0               	movlw	192
  2381     0DC9  319D  25D0  318C   	fcall	_lcd_cmd
  2382                           
  2383                           ;main.c: 340:                 lcd_DisplayString(inputTime);
  2384     0DCC  30C9               	movlw	low main@inputTime
  2385     0DCD  00F2               	movwf	lcd_DisplayString@str
  2386     0DCE  3001               	movlw	high main@inputTime
  2387     0DCF  00F3               	movwf	lcd_DisplayString@str+1
  2388     0DD0  319C  2415  318C   	fcall	_lcd_DisplayString
  2389                           
  2390                           ;main.c: 342:                 char key = keypad();
  2391     0DD3  3188  2006  318C   	fcall	_keypad
  2392     0DD6  0023               	movlb	3	; select bank3
  2393     0DD7  00C6               	movwf	main@key^(0+384)
  2394                           
  2395                           ;main.c: 343:                 if(key == '#'){
  2396     0DD8  3023               	movlw	35
  2397     0DD9  0646               	xorwf	main@key^(0+384),w
  2398     0DDA  1D03               	btfss	3,2
  2399     0DDB  2E22               	goto	l4677
  2400                           
  2401                           ;main.c: 344:                     lcd_cmd(0x01);
  2402     0DDC  3001               	movlw	1
  2403     0DDD  319D  25D0  318C   	fcall	_lcd_cmd
  2404                           
  2405                           ;main.c: 345:                     int hr0 = inputTime[1] - '0';
  2406     0DE0  0023               	movlb	3	; select bank3
  2407     0DE1  084A               	movf	(main@inputTime^(0+384)+1),w
  2408     0DE2  3ED0               	addlw	208
  2409     0DE3  00AE               	movwf	main@hr0^(0+384)
  2410     0DE4  30FF               	movlw	255
  2411     0DE5  1803               	skipnc
  2412     0DE6  3000               	movlw	0
  2413     0DE7  00AF               	movwf	(main@hr0^(0+384)+1)
  2414                           
  2415                           ;main.c: 346:                     int hr1 = inputTime[0] - '0';
  2416     0DE8  0849               	movf	main@inputTime^(0+384),w
  2417     0DE9  3ED0               	addlw	208
  2418     0DEA  00B0               	movwf	main@hr1^(0+384)
  2419     0DEB  30FF               	movlw	255
  2420     0DEC  1803               	skipnc
  2421     0DED  3000               	movlw	0
  2422     0DEE  00B1               	movwf	(main@hr1^(0+384)+1)
  2423                           
  2424                           ;main.c: 348:                     int min0 = inputTime[4] - '0';
  2425     0DEF  084D               	movf	(main@inputTime^(0+384)+4),w
  2426     0DF0  3ED0               	addlw	208
  2427     0DF1  00B2               	movwf	main@min0^(0+384)
  2428     0DF2  30FF               	movlw	255
  2429     0DF3  1803               	skipnc
  2430     0DF4  3000               	movlw	0
  2431     0DF5  00B3               	movwf	(main@min0^(0+384)+1)
  2432                           
  2433                           ;main.c: 349:                     int min1 = inputTime[3] - '0';
  2434     0DF6  084C               	movf	(main@inputTime^(0+384)+3),w
  2435     0DF7  3ED0               	addlw	208
  2436     0DF8  00B4               	movwf	main@min1^(0+384)
  2437     0DF9  30FF               	movlw	255
  2438     0DFA  1803               	skipnc
  2439     0DFB  3000               	movlw	0
  2440     0DFC  00B5               	movwf	(main@min1^(0+384)+1)
  2441                           
  2442                           ;main.c: 351:                     hr = hr0 + (hr1*10);
  2443     0DFD  0831               	movf	(main@hr1+1)^(0+384),w
  2444     0DFE  00F1               	movwf	___wmul@multiplier+1
  2445     0DFF  0830               	movf	main@hr1^(0+384),w
  2446     0E00  00F0               	movwf	___wmul@multiplier
  2447     0E01  300A               	movlw	10
  2448     0E02  00F2               	movwf	___wmul@multiplicand
  2449     0E03  3000               	movlw	0
  2450     0E04  00F3               	movwf	___wmul@multiplicand+1
  2451     0E05  319C  2457  318C   	fcall	___wmul
  2452     0E08  0023               	movlb	3	; select bank3
  2453     0E09  082E               	movf	main@hr0^(0+384),w
  2454     0E0A  0770               	addwf	?___wmul,w
  2455     0E0B  00BF               	movwf	main@hr^(0+384)
  2456     0E0C  082F               	movf	(main@hr0+1)^(0+384),w
  2457     0E0D  3D71               	addwfc	?___wmul+1,w
  2458     0E0E  00C0               	movwf	(main@hr+1)^(0+384)
  2459                           
  2460                           ;main.c: 352:                     min = min0 + (min1*10);
  2461     0E0F  0835               	movf	(main@min1+1)^(0+384),w
  2462     0E10  00F1               	movwf	___wmul@multiplier+1
  2463     0E11  0834               	movf	main@min1^(0+384),w
  2464     0E12  00F0               	movwf	___wmul@multiplier
  2465     0E13  300A               	movlw	10
  2466     0E14  00F2               	movwf	___wmul@multiplicand
  2467     0E15  3000               	movlw	0
  2468     0E16  00F3               	movwf	___wmul@multiplicand+1
  2469     0E17  319C  2457  318C   	fcall	___wmul
  2470     0E1A  0023               	movlb	3	; select bank3
  2471     0E1B  0832               	movf	main@min0^(0+384),w
  2472     0E1C  0770               	addwf	?___wmul,w
  2473     0E1D  00C1               	movwf	main@min^(0+384)
  2474     0E1E  0833               	movf	(main@min0+1)^(0+384),w
  2475     0E1F  3D71               	addwfc	?___wmul+1,w
  2476     0E20  00C2               	movwf	(main@min+1)^(0+384)
  2477                           
  2478                           ;main.c: 353:                 }
  2479     0E21  2E76               	goto	l4549
  2480     0E22                     l4677:
  2481     0E22  302A               	movlw	42
  2482     0E23  0646               	xorwf	main@key^(0+384),w
  2483     0E24  1D03               	btfss	3,2
  2484     0E25  2E54               	goto	l4695
  2485                           
  2486                           ;main.c: 355:                     if (count2 ==1){
  2487     0E26  0352               	decf	main@count2^(0+384),w
  2488     0E27  0453               	iorwf	(main@count2+1)^(0+384),w
  2489     0E28  1D03               	btfss	3,2
  2490     0E29  2E2D               	goto	l4683
  2491                           
  2492                           ;main.c: 356:                         inputTime[4] = '0';
  2493     0E2A  3030               	movlw	48
  2494     0E2B  00CD               	movwf	(main@inputTime^(0+384)+4)
  2495     0E2C  2E50               	goto	L7
  2496     0E2D                     l4683:	
  2497                           ;main.c: 358:                     }
  2498                           
  2499                           ;main.c: 357:                         count2--;
  2500                           
  2501     0E2D  3002               	movlw	2
  2502     0E2E  0652               	xorwf	main@count2^(0+384),w
  2503     0E2F  0453               	iorwf	(main@count2+1)^(0+384),w
  2504     0E30  1D03               	btfss	3,2
  2505     0E31  2E37               	goto	l4687
  2506                           
  2507                           ;main.c: 360:                         inputTime[4] = inputTime[3];
  2508     0E32  084C               	movf	(main@inputTime^(0+384)+3),w
  2509     0E33  00CD               	movwf	(main@inputTime^(0+384)+4)
  2510                           
  2511                           ;main.c: 361:                         inputTime[3] = '0';
  2512     0E34  3030               	movlw	48
  2513     0E35  00CC               	movwf	(main@inputTime^(0+384)+3)
  2514     0E36  2E50               	goto	L7
  2515     0E37                     l4687:	
  2516                           ;main.c: 363:                     }
  2517                           
  2518                           ;main.c: 362:                         count2--;
  2519                           
  2520     0E37  3003               	movlw	3
  2521     0E38  0652               	xorwf	main@count2^(0+384),w
  2522     0E39  0453               	iorwf	(main@count2+1)^(0+384),w
  2523     0E3A  1D03               	btfss	3,2
  2524     0E3B  2E43               	goto	l4691
  2525                           
  2526                           ;main.c: 365:                         inputTime[4] = inputTime[3];
  2527     0E3C  084C               	movf	(main@inputTime^(0+384)+3),w
  2528     0E3D  00CD               	movwf	(main@inputTime^(0+384)+4)
  2529                           
  2530                           ;main.c: 366:                         inputTime[3] = inputTime[1];
  2531     0E3E  084A               	movf	(main@inputTime^(0+384)+1),w
  2532     0E3F  00CC               	movwf	(main@inputTime^(0+384)+3)
  2533                           
  2534                           ;main.c: 367:                         inputTime[1] = '0';
  2535     0E40  3030               	movlw	48
  2536     0E41  00CA               	movwf	(main@inputTime^(0+384)+1)
  2537     0E42  2E50               	goto	L7
  2538     0E43                     l4691:	
  2539                           ;main.c: 369:                     }
  2540                           
  2541                           ;main.c: 368:                         count2--;
  2542                           
  2543     0E43  3004               	movlw	4
  2544     0E44  0652               	xorwf	main@count2^(0+384),w
  2545     0E45  0453               	iorwf	(main@count2+1)^(0+384),w
  2546     0E46  1D03               	btfss	3,2
  2547     0E47  2E76               	goto	l4549
  2548                           
  2549                           ;main.c: 371:                         inputTime[4] = inputTime[3];
  2550     0E48  084C               	movf	(main@inputTime^(0+384)+3),w
  2551     0E49  00CD               	movwf	(main@inputTime^(0+384)+4)
  2552                           
  2553                           ;main.c: 372:                         inputTime[3] = inputTime[1];
  2554     0E4A  084A               	movf	(main@inputTime^(0+384)+1),w
  2555     0E4B  00CC               	movwf	(main@inputTime^(0+384)+3)
  2556                           
  2557                           ;main.c: 373:                         inputTime[1] = inputTime[0];
  2558     0E4C  0849               	movf	main@inputTime^(0+384),w
  2559     0E4D  00CA               	movwf	(main@inputTime^(0+384)+1)
  2560                           
  2561                           ;main.c: 374:                         inputTime[0] = '0';
  2562     0E4E  3030               	movlw	48
  2563     0E4F  00C9               	movwf	main@inputTime^(0+384)
  2564     0E50                     L7:
  2565                           
  2566                           ;main.c: 375:                         count2--;
  2567     0E50  30FF               	movlw	255
  2568     0E51  07D2               	addwf	main@count2^(0+384),f
  2569     0E52  30FF               	movlw	255
  2570     0E53  2E75               	goto	L11
  2571     0E54                     l4695:
  2572     0E54  3020               	movlw	32
  2573     0E55  0646               	xorwf	main@key^(0+384),w
  2574     0E56  1903               	btfsc	3,2
  2575     0E57  2E76               	goto	l4549
  2576                           
  2577                           ;main.c: 380:                     if (count2 == 0){
  2578     0E58  0852               	movf	main@count2^(0+384),w
  2579     0E59  0453               	iorwf	(main@count2+1)^(0+384),w
  2580     0E5A  1903               	btfsc	3,2
  2581     0E5B  2E70               	goto	L15
  2582                           
  2583                           ;main.c: 383:                     }
  2584                           
  2585                           ;main.c: 382:                         count2++;
  2586                           
  2587                           ;main.c: 381:                         inputTime[4] = key;
  2588     0E5C  0352               	decf	main@count2^(0+384),w
  2589     0E5D  0453               	iorwf	(main@count2+1)^(0+384),w
  2590     0E5E  1903               	btfsc	3,2
  2591     0E5F  2E6E               	goto	L13
  2592                           
  2593                           ;main.c: 388:                     }
  2594                           
  2595                           ;main.c: 387:                         count2++;
  2596                           
  2597                           ;main.c: 386:                         inputTime[4] = key;
  2598                           
  2599                           ;main.c: 385:                         inputTime[3] = inputTime[4];
  2600     0E60  3002               	movlw	2
  2601     0E61  0652               	xorwf	main@count2^(0+384),w
  2602     0E62  0453               	iorwf	(main@count2+1)^(0+384),w
  2603     0E63  1903               	btfsc	3,2
  2604     0E64  2E6C               	goto	L16
  2605                           
  2606                           ;main.c: 394:                     }
  2607                           
  2608                           ;main.c: 393:                         count2++;
  2609                           
  2610                           ;main.c: 392:                         inputTime[4] = key;
  2611                           
  2612                           ;main.c: 391:                         inputTime[3] = inputTime[4];
  2613                           
  2614                           ;main.c: 390:                         inputTime[1] = inputTime[3];
  2615     0E65  3003               	movlw	3
  2616     0E66  0652               	xorwf	main@count2^(0+384),w
  2617     0E67  0453               	iorwf	(main@count2+1)^(0+384),w
  2618     0E68  1D03               	btfss	3,2
  2619     0E69  2E76               	goto	l4549
  2620                           
  2621                           ;main.c: 396:                         inputTime[0] = inputTime[1];
  2622     0E6A  084A               	movf	(main@inputTime^(0+384)+1),w
  2623     0E6B  00C9               	movwf	main@inputTime^(0+384)
  2624     0E6C                     L16:
  2625                           
  2626                           ;main.c: 397:                         inputTime[1] = inputTime[3];
  2627     0E6C  084C               	movf	(main@inputTime^(0+384)+3),w
  2628     0E6D  00CA               	movwf	(main@inputTime^(0+384)+1)
  2629     0E6E                     L13:
  2630                           
  2631                           ;main.c: 398:                         inputTime[3] = inputTime[4];
  2632     0E6E  084D               	movf	(main@inputTime^(0+384)+4),w
  2633     0E6F  00CC               	movwf	(main@inputTime^(0+384)+3)
  2634     0E70                     L15:
  2635                           
  2636                           ;main.c: 399:                         inputTime[4] = key;
  2637     0E70  0846               	movf	main@key^(0+384),w
  2638     0E71  00CD               	movwf	(main@inputTime^(0+384)+4)
  2639                           
  2640                           ;main.c: 400:                         count2++;
  2641     0E72  3001               	movlw	1
  2642     0E73  07D2               	addwf	main@count2^(0+384),f
  2643     0E74  3000               	movlw	0
  2644     0E75                     L11:
  2645     0E75  3DD3               	addwfc	(main@count2+1)^(0+384),f
  2646     0E76                     l4549:
  2647                           
  2648                           ;main.c: 255:         if (tempBool){
  2649     0E76  0023               	movlb	3	; select bank3
  2650     0E77  083B               	movf	main@tempBool^(0+384),w
  2651     0E78  1D03               	btfss	3,2
  2652     0E79  2C71               	goto	l4551
  2653     0E7A  083C               	movf	main@timeBool^(0+384),w
  2654     0E7B  1D03               	btfss	3,2
  2655     0E7C  2D4D               	goto	l4619
  2656     0E7D  083C               	movf	main@timeBool^(0+384),w
  2657     0E7E  1D03               	btfss	3,2
  2658     0E7F  2E76               	goto	l4549
  2659     0E80  083B               	movf	main@tempBool^(0+384),w
  2660     0E81  1D03               	btfss	3,2
  2661     0E82  2E76               	goto	l4549
  2662                           
  2663                           ;main.c: 406:             if(start){
  2664     0E83  0836               	movf	main@start^(0+384),w
  2665     0E84  1903               	btfsc	3,2
  2666     0E85  2FD3               	goto	l4751
  2667                           
  2668                           ;main.c: 407:                 int seconds = hr*3600 + min * 60;
  2669     0E86  0840               	movf	(main@hr+1)^(0+384),w
  2670     0E87  00F1               	movwf	___wmul@multiplier+1
  2671     0E88  083F               	movf	main@hr^(0+384),w
  2672     0E89  00F0               	movwf	___wmul@multiplier
  2673     0E8A  3010               	movlw	16
  2674     0E8B  00F2               	movwf	___wmul@multiplicand
  2675     0E8C  300E               	movlw	14
  2676     0E8D  00F3               	movwf	___wmul@multiplicand+1
  2677     0E8E  319C  2457  318C   	fcall	___wmul
  2678     0E91  0870               	movf	?___wmul,w
  2679     0E92  0022               	movlb	2	; select bank2
  2680     0E93  00BF               	movwf	??_main^(0+256)
  2681     0E94  0871               	movf	?___wmul+1,w
  2682     0E95  00C0               	movwf	(??_main^(0+256)+1)
  2683     0E96  0023               	movlb	3	; select bank3
  2684     0E97  0842               	movf	(main@min+1)^(0+384),w
  2685     0E98  00F1               	movwf	___wmul@multiplier+1
  2686     0E99  0841               	movf	main@min^(0+384),w
  2687     0E9A  00F0               	movwf	___wmul@multiplier
  2688     0E9B  303C               	movlw	60
  2689     0E9C  00F2               	movwf	___wmul@multiplicand
  2690     0E9D  3000               	movlw	0
  2691     0E9E  00F3               	movwf	___wmul@multiplicand+1
  2692     0E9F  319C  2457  318C   	fcall	___wmul
  2693     0EA2  0870               	movf	?___wmul,w
  2694     0EA3  0022               	movlb	2	; select bank2
  2695     0EA4  073F               	addwf	??_main^(0+256),w
  2696     0EA5  0023               	movlb	3	; select bank3
  2697     0EA6  00C3               	movwf	main@seconds^(0+384)
  2698     0EA7  0871               	movf	?___wmul+1,w
  2699     0EA8  0022               	movlb	2	; select bank2
  2700     0EA9  3D40               	addwfc	(??_main+1)^(0+256),w
  2701     0EAA  0023               	movlb	3	; select bank3
  2702     0EAB  00C4               	movwf	(main@seconds+1)^(0+384)
  2703     0EAC                     l4747:	
  2704                           ;main.c: 408:                 while(seconds > 0 ){
  2705                           
  2706                           
  2707                           ;main.c: 408:                 while(seconds > 0 ){
  2708     0EAC  0023               	movlb	3	; select bank3
  2709     0EAD  0844               	movf	(main@seconds+1)^(0+384),w
  2710     0EAE  3A80               	xorlw	128
  2711     0EAF  0022               	movlb	2	; select bank2
  2712     0EB0  00BF               	movwf	??_main^(0+256)
  2713     0EB1  3080               	movlw	128
  2714     0EB2  023F               	subwf	??_main^(0+256),w
  2715     0EB3  1D03               	skipz
  2716     0EB4  2EB8               	goto	u6705
  2717     0EB5  3001               	movlw	1
  2718     0EB6  0023               	movlb	3	; select bank3
  2719     0EB7  0243               	subwf	main@seconds^(0+384),w
  2720     0EB8                     u6705:
  2721     0EB8  1C03               	btfss	3,0
  2722     0EB9  2FCC               	goto	l199
  2723                           
  2724                           ;main.c: 409:                     lcd_cmd(0x80);
  2725     0EBA  3080               	movlw	128
  2726     0EBB  319D  25D0  318C   	fcall	_lcd_cmd
  2727                           
  2728                           ;main.c: 410:                     display_int(seconds/3600);
  2729     0EBE  3010               	movlw	16
  2730     0EBF  00F7               	movwf	___awdiv@divisor
  2731     0EC0  300E               	movlw	14
  2732     0EC1  00F8               	movwf	___awdiv@divisor+1
  2733     0EC2  0023               	movlb	3	; select bank3
  2734     0EC3  0844               	movf	(main@seconds+1)^(0+384),w
  2735     0EC4  00FA               	movwf	___awdiv@dividend+1
  2736     0EC5  0843               	movf	main@seconds^(0+384),w
  2737     0EC6  00F9               	movwf	___awdiv@dividend
  2738     0EC7  319F  274D  318C   	fcall	___awdiv
  2739     0ECA  0878               	movf	?___awdiv+1,w
  2740     0ECB  0022               	movlb	2	; select bank2
  2741     0ECC  00AC               	movwf	(display_int@num+1)^(0+256)
  2742     0ECD  0877               	movf	?___awdiv,w
  2743     0ECE  00AB               	movwf	display_int@num^(0+256)
  2744     0ECF  319C  2472  318C   	fcall	_display_int
  2745                           
  2746                           ;main.c: 411:                     lcd_char(':');
  2747     0ED2  303A               	movlw	58
  2748     0ED3  319D  25FE  318C   	fcall	_lcd_char
  2749                           
  2750                           ;main.c: 412:                     display_int((seconds%3600)/60);
  2751     0ED6  303C               	movlw	60
  2752     0ED7  00F7               	movwf	___awdiv@divisor
  2753     0ED8  3000               	movlw	0
  2754     0ED9  00F8               	movwf	___awdiv@divisor+1
  2755     0EDA  0023               	movlb	3	; select bank3
  2756     0EDB  0844               	movf	(main@seconds+1)^(0+384),w
  2757     0EDC  00F3               	movwf	___awmod@dividend+1
  2758     0EDD  0843               	movf	main@seconds^(0+384),w
  2759     0EDE  00F2               	movwf	___awmod@dividend
  2760     0EDF  3010               	movlw	16
  2761     0EE0  00F0               	movwf	___awmod@divisor
  2762     0EE1  300E               	movlw	14
  2763     0EE2  00F1               	movwf	___awmod@divisor+1
  2764     0EE3  319E  266F  318C   	fcall	___awmod
  2765     0EE6  0871               	movf	?___awmod+1,w
  2766     0EE7  00FA               	movwf	___awdiv@dividend+1
  2767     0EE8  0870               	movf	?___awmod,w
  2768     0EE9  00F9               	movwf	___awdiv@dividend
  2769     0EEA  319F  274D  318C   	fcall	___awdiv
  2770     0EED  0878               	movf	?___awdiv+1,w
  2771     0EEE  0022               	movlb	2	; select bank2
  2772     0EEF  00AC               	movwf	(display_int@num+1)^(0+256)
  2773     0EF0  0877               	movf	?___awdiv,w
  2774     0EF1  00AB               	movwf	display_int@num^(0+256)
  2775     0EF2  319C  2472  318C   	fcall	_display_int
  2776                           
  2777                           ;main.c: 413:                     lcd_char(':');
  2778     0EF5  303A               	movlw	58
  2779     0EF6  319D  25FE  318C   	fcall	_lcd_char
  2780                           
  2781                           ;main.c: 414:                     display_int(seconds%60);
  2782     0EF9  303C               	movlw	60
  2783     0EFA  00F0               	movwf	___awmod@divisor
  2784     0EFB  3000               	movlw	0
  2785     0EFC  00F1               	movwf	___awmod@divisor+1
  2786     0EFD  0023               	movlb	3	; select bank3
  2787     0EFE  0844               	movf	(main@seconds+1)^(0+384),w
  2788     0EFF  00F3               	movwf	___awmod@dividend+1
  2789     0F00  0843               	movf	main@seconds^(0+384),w
  2790     0F01  00F2               	movwf	___awmod@dividend
  2791     0F02  319E  266F  318C   	fcall	___awmod
  2792     0F05  0871               	movf	?___awmod+1,w
  2793     0F06  0022               	movlb	2	; select bank2
  2794     0F07  00AC               	movwf	(display_int@num+1)^(0+256)
  2795     0F08  0870               	movf	?___awmod,w
  2796     0F09  00AB               	movwf	display_int@num^(0+256)
  2797     0F0A  319C  2472  318C   	fcall	_display_int
  2798                           
  2799                           ;main.c: 416:                     lcd_cmd(0xC0);
  2800     0F0D  30C0               	movlw	192
  2801     0F0E  319D  25D0  318C   	fcall	_lcd_cmd
  2802                           
  2803                           ;main.c: 417:                     float tempVoltage = ADC_Convert(0);
  2804     0F11  3000               	movlw	0
  2805     0F12  0020               	movlb	0	; select bank0
  2806     0F13  00D4               	movwf	ADC_Convert@chan
  2807     0F14  00D5               	movwf	ADC_Convert@chan+1
  2808     0F15  3190  203F  318C   	fcall	_ADC_Convert
  2809     0F18  0020               	movlb	0	; select bank0
  2810     0F19  0857               	movf	?_ADC_Convert+3,w
  2811     0F1A  0023               	movlb	3	; select bank3
  2812     0F1B  00A3               	movwf	(main@tempVoltage+3)^(0+384)
  2813     0F1C  0020               	movlb	0	; select bank0
  2814     0F1D  0856               	movf	?_ADC_Convert+2,w
  2815     0F1E  0023               	movlb	3	; select bank3
  2816     0F1F  00A2               	movwf	(main@tempVoltage+2)^(0+384)
  2817     0F20  0020               	movlb	0	; select bank0
  2818     0F21  0855               	movf	?_ADC_Convert+1,w
  2819     0F22  0023               	movlb	3	; select bank3
  2820     0F23  00A1               	movwf	(main@tempVoltage+1)^(0+384)
  2821     0F24  0020               	movlb	0	; select bank0
  2822     0F25  0854               	movf	?_ADC_Convert,w
  2823     0F26  0023               	movlb	3	; select bank3
  2824     0F27  00A0               	movwf	main@tempVoltage^(0+384)
  2825                           
  2826                           ;main.c: 418:                     float currentTemperature = tempVoltage*100;
  2827     0F28  3042               	movlw	66
  2828     0F29  0020               	movlb	0	; select bank0
  2829     0F2A  00A3               	movwf	___flmul@b+3
  2830     0F2B  30C8               	movlw	200
  2831     0F2C  00A2               	movwf	___flmul@b+2
  2832     0F2D  3000               	movlw	0
  2833     0F2E  00A1               	movwf	___flmul@b+1
  2834     0F2F  3000               	movlw	0
  2835     0F30  00A0               	movwf	___flmul@b
  2836     0F31  0023               	movlb	3	; select bank3
  2837     0F32  0823               	movf	(main@tempVoltage+3)^(0+384),w
  2838     0F33  0020               	movlb	0	; select bank0
  2839     0F34  00A7               	movwf	___flmul@a+3
  2840     0F35  0023               	movlb	3	; select bank3
  2841     0F36  0822               	movf	(main@tempVoltage+2)^(0+384),w
  2842     0F37  0020               	movlb	0	; select bank0
  2843     0F38  00A6               	movwf	___flmul@a+2
  2844     0F39  0023               	movlb	3	; select bank3
  2845     0F3A  0821               	movf	(main@tempVoltage+1)^(0+384),w
  2846     0F3B  0020               	movlb	0	; select bank0
  2847     0F3C  00A5               	movwf	___flmul@a+1
  2848     0F3D  0023               	movlb	3	; select bank3
  2849     0F3E  0820               	movf	main@tempVoltage^(0+384),w
  2850     0F3F  0020               	movlb	0	; select bank0
  2851     0F40  00A4               	movwf	___flmul@a
  2852     0F41  3180  2012  318C   	fcall	___flmul
  2853     0F44  0020               	movlb	0	; select bank0
  2854     0F45  0823               	movf	?___flmul+3,w
  2855     0F46  0023               	movlb	3	; select bank3
  2856     0F47  00BA               	movwf	(main@currentTemperature+3)^(0+384)
  2857     0F48  0020               	movlb	0	; select bank0
  2858     0F49  0822               	movf	?___flmul+2,w
  2859     0F4A  0023               	movlb	3	; select bank3
  2860     0F4B  00B9               	movwf	(main@currentTemperature+2)^(0+384)
  2861     0F4C  0020               	movlb	0	; select bank0
  2862     0F4D  0821               	movf	?___flmul+1,w
  2863     0F4E  0023               	movlb	3	; select bank3
  2864     0F4F  00B8               	movwf	(main@currentTemperature+1)^(0+384)
  2865     0F50  0020               	movlb	0	; select bank0
  2866     0F51  0820               	movf	?___flmul,w
  2867     0F52  0023               	movlb	3	; select bank3
  2868     0F53  00B7               	movwf	main@currentTemperature^(0+384)
  2869                           
  2870                           ;main.c: 419:                     lcd_DisplayString("TEMP:");
  2871     0F54  3072               	movlw	low (STR_12| (0+32768))
  2872     0F55  00F2               	movwf	lcd_DisplayString@str
  2873     0F56  3098               	movlw	high (STR_12| (0+32768))
  2874     0F57  00F3               	movwf	lcd_DisplayString@str+1
  2875     0F58  319C  2415  318C   	fcall	_lcd_DisplayString
  2876                           
  2877                           ;main.c: 420:                     display_float(currentTemperature);
  2878     0F5B  0023               	movlb	3	; select bank3
  2879     0F5C  083A               	movf	(main@currentTemperature+3)^(0+384),w
  2880     0F5D  0022               	movlb	2	; select bank2
  2881     0F5E  00AE               	movwf	(display_float@num+3)^(0+256)
  2882     0F5F  0023               	movlb	3	; select bank3
  2883     0F60  0839               	movf	(main@currentTemperature+2)^(0+384),w
  2884     0F61  0022               	movlb	2	; select bank2
  2885     0F62  00AD               	movwf	(display_float@num+2)^(0+256)
  2886     0F63  0023               	movlb	3	; select bank3
  2887     0F64  0838               	movf	(main@currentTemperature+1)^(0+384),w
  2888     0F65  0022               	movlb	2	; select bank2
  2889     0F66  00AC               	movwf	(display_float@num+1)^(0+256)
  2890     0F67  0023               	movlb	3	; select bank3
  2891     0F68  0837               	movf	main@currentTemperature^(0+384),w
  2892     0F69  0022               	movlb	2	; select bank2
  2893     0F6A  00AB               	movwf	display_float@num^(0+256)
  2894     0F6B  319D  2586  318C   	fcall	_display_float
  2895                           
  2896                           ;main.c: 421:                     _delay((unsigned long)((990)*(19600000/4000.0)));
  2897     0F6E  3019               	movlw	25
  2898     0F6F  0022               	movlb	2	; select bank2
  2899     0F70  00C0               	movwf	(??_main^(0+256)+1)
  2900     0F71  309C               	movlw	156
  2901     0F72  00BF               	movwf	??_main^(0+256)
  2902     0F73  30ED               	movlw	237
  2903     0F74                     u6757:
  2904     0F74  0B89               	decfsz	9,f
  2905     0F75  2F74               	goto	u6757
  2906     0F76  0BBF               	decfsz	??_main^(0+256),f
  2907     0F77  2F74               	goto	u6757
  2908     0F78  0BC0               	decfsz	(??_main^(0+256)+1),f
  2909     0F79  2F74               	goto	u6757
  2910     0F7A  3200               	nop2
  2911                           
  2912                           ;main.c: 422:                     lcd_cmd(0x01);
  2913     0F7B  3001               	movlw	1
  2914     0F7C  319D  25D0  318C   	fcall	_lcd_cmd
  2915                           
  2916                           ;main.c: 423:                     seconds--;
  2917     0F7F  30FF               	movlw	255
  2918     0F80  0023               	movlb	3	; select bank3
  2919     0F81  07C3               	addwf	main@seconds^(0+384),f
  2920     0F82  30FF               	movlw	255
  2921     0F83  3DC4               	addwfc	(main@seconds+1)^(0+384),f
  2922                           
  2923                           ;main.c: 425:                     float inputTemperature = temp+5;
  2924     0F84  083D               	movf	main@temp^(0+384),w
  2925     0F85  3E05               	addlw	5
  2926     0F86  00F0               	movwf	___xxtofl@val
  2927     0F87  3000               	movlw	0
  2928     0F88  3D3E               	addwfc	(main@temp+1)^(0+384),w
  2929     0F89  00F1               	movwf	___xxtofl@val+1
  2930     0F8A  01F2               	clrf	___xxtofl@val+2
  2931     0F8B  1BF1               	btfsc	___xxtofl@val+1,7
  2932     0F8C  03F2               	decf	___xxtofl@val+2,f
  2933     0F8D  0872               	movf	___xxtofl@val+2,w
  2934     0F8E  00F3               	movwf	___xxtofl@val+3
  2935     0F8F  3001               	movlw	1
  2936     0F90  3192  2234  318C   	fcall	___xxtofl
  2937     0F93  0873               	movf	?___xxtofl+3,w
  2938     0F94  0023               	movlb	3	; select bank3
  2939     0F95  00A7               	movwf	(main@inputTemperature+3)^(0+384)
  2940     0F96  0872               	movf	?___xxtofl+2,w
  2941     0F97  00A6               	movwf	(main@inputTemperature+2)^(0+384)
  2942     0F98  0871               	movf	?___xxtofl+1,w
  2943     0F99  00A5               	movwf	(main@inputTemperature+1)^(0+384)
  2944     0F9A  0870               	movf	?___xxtofl,w
  2945     0F9B  00A4               	movwf	main@inputTemperature^(0+384)
  2946                           
  2947                           ;main.c: 426:                     if(inputTemperature >= currentTemperature){
  2948     0F9C  0827               	movf	(main@inputTemperature+3)^(0+384),w
  2949     0F9D  0020               	movlb	0	; select bank0
  2950     0F9E  00BD               	movwf	___flge@ff1+3
  2951     0F9F  0023               	movlb	3	; select bank3
  2952     0FA0  0826               	movf	(main@inputTemperature+2)^(0+384),w
  2953     0FA1  0020               	movlb	0	; select bank0
  2954     0FA2  00BC               	movwf	___flge@ff1+2
  2955     0FA3  0023               	movlb	3	; select bank3
  2956     0FA4  0825               	movf	(main@inputTemperature+1)^(0+384),w
  2957     0FA5  0020               	movlb	0	; select bank0
  2958     0FA6  00BB               	movwf	___flge@ff1+1
  2959     0FA7  0023               	movlb	3	; select bank3
  2960     0FA8  0824               	movf	main@inputTemperature^(0+384),w
  2961     0FA9  0020               	movlb	0	; select bank0
  2962     0FAA  00BA               	movwf	___flge@ff1
  2963     0FAB  0023               	movlb	3	; select bank3
  2964     0FAC  083A               	movf	(main@currentTemperature+3)^(0+384),w
  2965     0FAD  0020               	movlb	0	; select bank0
  2966     0FAE  00C1               	movwf	___flge@ff2+3
  2967     0FAF  0023               	movlb	3	; select bank3
  2968     0FB0  0839               	movf	(main@currentTemperature+2)^(0+384),w
  2969     0FB1  0020               	movlb	0	; select bank0
  2970     0FB2  00C0               	movwf	___flge@ff2+2
  2971     0FB3  0023               	movlb	3	; select bank3
  2972     0FB4  0838               	movf	(main@currentTemperature+1)^(0+384),w
  2973     0FB5  0020               	movlb	0	; select bank0
  2974     0FB6  00BF               	movwf	___flge@ff2+1
  2975     0FB7  0023               	movlb	3	; select bank3
  2976     0FB8  0837               	movf	main@currentTemperature^(0+384),w
  2977     0FB9  0020               	movlb	0	; select bank0
  2978     0FBA  00BE               	movwf	___flge@ff2
  2979     0FBB  3191  212D  318C   	fcall	___flge
  2980     0FBE  1C03               	btfss	3,0
  2981     0FBF  2FC6               	goto	l197
  2982                           
  2983                           ;main.c: 427:                         LATCbits.LATC0 = 1;
  2984     0FC0  0022               	movlb	2	; select bank2
  2985     0FC1  140E               	bsf	14,0	;volatile
  2986                           
  2987                           ;main.c: 428:                         LATCbits.LATC1 = 0;
  2988     0FC2  108E               	bcf	14,1	;volatile
  2989                           
  2990                           ;main.c: 430:                         LATCbits.LATC2 = 0;
  2991     0FC3  110E               	bcf	14,2	;volatile
  2992                           
  2993                           ;main.c: 431:                         LATCbits.LATC3 = 1;
  2994     0FC4  158E               	bsf	14,3	;volatile
  2995                           
  2996                           ;main.c: 432:                     }
  2997     0FC5  2EAC               	goto	l4747
  2998     0FC6                     l197:	
  2999                           ;main.c: 433:                     else{
  3000                           
  3001                           
  3002                           ;main.c: 434:                         LATCbits.LATC0 = 0;
  3003     0FC6  0022               	movlb	2	; select bank2
  3004     0FC7  100E               	bcf	14,0	;volatile
  3005                           
  3006                           ;main.c: 435:                         LATCbits.LATC1 = 1;
  3007     0FC8  148E               	bsf	14,1	;volatile
  3008                           
  3009                           ;main.c: 437:                         LATCbits.LATC2 = 1;
  3010     0FC9  150E               	bsf	14,2	;volatile
  3011                           
  3012                           ;main.c: 438:                         LATCbits.LATC3 = 0;
  3013     0FCA  118E               	bcf	14,3	;volatile
  3014     0FCB  2EAC               	goto	l4747
  3015     0FCC                     l199:
  3016                           
  3017                           ;main.c: 441:                 LATCbits.LATC0 = 0;
  3018     0FCC  0022               	movlb	2	; select bank2
  3019     0FCD  100E               	bcf	14,0	;volatile
  3020                           
  3021                           ;main.c: 442:                 LATCbits.LATC1 = 1;
  3022     0FCE  148E               	bsf	14,1	;volatile
  3023                           
  3024                           ;main.c: 443:                 LATCbits.LATC2 = 0;
  3025     0FCF  110E               	bcf	14,2	;volatile
  3026                           
  3027                           ;main.c: 444:                 LATCbits.LATC3 = 1;
  3028     0FD0  158E               	bsf	14,3	;volatile
  3029                           
  3030                           ;main.c: 446:                 start = 0;
  3031     0FD1  0023               	movlb	3	; select bank3
  3032     0FD2  01B6               	clrf	main@start^(0+384)
  3033     0FD3                     l4751:
  3034                           
  3035                           ;main.c: 448:             lcd_cmd(0x80);
  3036     0FD3  3080               	movlw	128
  3037     0FD4  319D  25D0  318C   	fcall	_lcd_cmd
  3038                           
  3039                           ;main.c: 449:             lcd_DisplayString("TIMER FINISHED");
  3040     0FD7  301F               	movlw	low (STR_13| (0+32768))
  3041     0FD8  00F2               	movwf	lcd_DisplayString@str
  3042     0FD9  3098               	movlw	high (STR_13| (0+32768))
  3043     0FDA  00F3               	movwf	lcd_DisplayString@str+1
  3044     0FDB  319C  2415  318C   	fcall	_lcd_DisplayString
  3045                           
  3046                           ;main.c: 450:             lcd_cmd(0xC6);
  3047     0FDE  30C6               	movlw	198
  3048     0FDF  319D  25D0  318C   	fcall	_lcd_cmd
  3049                           
  3050                           ;main.c: 451:             lcd_DisplayString("****");
  3051     0FE2  3078               	movlw	low (STR_14| (0+32768))
  3052     0FE3  00F2               	movwf	lcd_DisplayString@str
  3053     0FE4  3098               	movlw	high (STR_14| (0+32768))
  3054     0FE5  00F3               	movwf	lcd_DisplayString@str+1
  3055     0FE6  319C  2415  318C   	fcall	_lcd_DisplayString
  3056                           
  3057                           ;main.c: 452:             _delay((unsigned long)((5000)*(19600000/4000.0)));
  3058     0FE9  307D               	movlw	125
  3059     0FEA  0022               	movlb	2	; select bank2
  3060     0FEB  00C0               	movwf	(??_main^(0+256)+1)
  3061     0FEC  304A               	movlw	74
  3062     0FED  00BF               	movwf	??_main^(0+256)
  3063     0FEE  30D9               	movlw	217
  3064     0FEF                     u6767:
  3065     0FEF  0B89               	decfsz	9,f
  3066     0FF0  2FEF               	goto	u6767
  3067     0FF1  0BBF               	decfsz	??_main^(0+256),f
  3068     0FF2  2FEF               	goto	u6767
  3069     0FF3  0BC0               	decfsz	(??_main^(0+256)+1),f
  3070     0FF4  2FEF               	goto	u6767
  3071     0FF5  3200               	nop2
  3072                           
  3073                           ;main.c: 453:             tempBool = 1;
  3074     0FF6  0023               	movlb	3	; select bank3
  3075     0FF7  01BB               	clrf	main@tempBool^(0+384)
  3076     0FF8  0ABB               	incf	main@tempBool^(0+384),f
  3077                           
  3078                           ;main.c: 454:             temp = 0;
  3079     0FF9  01BD               	clrf	main@temp^(0+384)
  3080     0FFA  01BE               	clrf	(main@temp+1)^(0+384)
  3081                           
  3082                           ;main.c: 455:             hr = 0;
  3083     0FFB  01BF               	clrf	main@hr^(0+384)
  3084     0FFC  01C0               	clrf	(main@hr+1)^(0+384)
  3085                           
  3086                           ;main.c: 456:             min = 0;
  3087     0FFD  01C1               	clrf	main@min^(0+384)
  3088     0FFE  01C2               	clrf	(main@min+1)^(0+384)
  3089     0FFF  2E76               	goto	l4549
  3090     1000                     __end_of_main:
  3091                           
  3092                           	psect	text1
  3093     1E2E                     __ptext1:	
  3094 ;; *************** function _lcd_init *****************
  3095 ;; Defined at:
  3096 ;;		line 43 in file "main.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3110 ;;      Params:         0       0       0       0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0       0       0       0
  3112 ;;      Temps:          2       0       0       0       0       0       0       0
  3113 ;;      Totals:         2       0       0       0       0       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123     1E2E                     _lcd_init:	
  3124                           ;psect for function _lcd_init
  3125                           
  3126                           
  3127                           ;main.c: 45:     _delay((unsigned long)((60)*(19600000/4000.0)));
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _lcd_init: [wreg]
  3131     1E2E  3002               	movlw	2
  3132     1E2F  00F1               	movwf	??_lcd_init+1
  3133     1E30  307E               	movlw	126
  3134     1E31  00F0               	movwf	??_lcd_init
  3135     1E32  30CE               	movlw	206
  3136     1E33                     u6777:
  3137     1E33  0B89               	decfsz	9,f
  3138     1E34  2E33               	goto	u6777
  3139     1E35  0BF0               	decfsz	??_lcd_init,f
  3140     1E36  2E33               	goto	u6777
  3141     1E37  0BF1               	decfsz	??_lcd_init+1,f
  3142     1E38  2E33               	goto	u6777
  3143     1E39  3200               	nop2
  3144                           
  3145                           ;main.c: 46:     LATB = 0x23;
  3146     1E3A  3023               	movlw	35
  3147     1E3B  0022               	movlb	2	; select bank2
  3148     1E3C  008D               	movwf	13	;volatile
  3149                           
  3150                           ;main.c: 47:     LATB = 0x03;
  3151     1E3D  3003               	movlw	3
  3152     1E3E  008D               	movwf	13	;volatile
  3153                           
  3154                           ;main.c: 48:     _delay((unsigned long)((20)*(19600000/4000.0)));
  3155     1E3F  3080               	movlw	128
  3156     1E40  00F0               	movwf	??_lcd_init
  3157     1E41  3044               	movlw	68
  3158     1E42                     u6787:
  3159     1E42  0B89               	decfsz	9,f
  3160     1E43  2E42               	goto	u6787
  3161     1E44  0BF0               	decfsz	??_lcd_init,f
  3162     1E45  2E42               	goto	u6787
  3163     1E46  3200               	nop2
  3164                           
  3165                           ;main.c: 49:     LATB = 0x23;
  3166     1E47  3023               	movlw	35
  3167     1E48  0022               	movlb	2	; select bank2
  3168     1E49  008D               	movwf	13	;volatile
  3169                           
  3170                           ;main.c: 50:     LATB = 0x03;
  3171     1E4A  3003               	movlw	3
  3172     1E4B  008D               	movwf	13	;volatile
  3173                           
  3174                           ;main.c: 51:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3175     1E4C  3020               	movlw	32
  3176     1E4D  00F0               	movwf	??_lcd_init
  3177     1E4E  30D0               	movlw	208
  3178     1E4F                     u6797:
  3179     1E4F  0B89               	decfsz	9,f
  3180     1E50  2E4F               	goto	u6797
  3181     1E51  0BF0               	decfsz	??_lcd_init,f
  3182     1E52  2E4F               	goto	u6797
  3183     1E53  3200               	nop2
  3184                           
  3185                           ;main.c: 52:     LATB = 0x23;
  3186     1E54  3023               	movlw	35
  3187     1E55  0022               	movlb	2	; select bank2
  3188     1E56  008D               	movwf	13	;volatile
  3189                           
  3190                           ;main.c: 53:     LATB = 0x03;
  3191     1E57  3003               	movlw	3
  3192     1E58  008D               	movwf	13	;volatile
  3193                           
  3194                           ;main.c: 54:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3195     1E59  3020               	movlw	32
  3196     1E5A  00F0               	movwf	??_lcd_init
  3197     1E5B  30D0               	movlw	208
  3198     1E5C                     u6807:
  3199     1E5C  0B89               	decfsz	9,f
  3200     1E5D  2E5C               	goto	u6807
  3201     1E5E  0BF0               	decfsz	??_lcd_init,f
  3202     1E5F  2E5C               	goto	u6807
  3203     1E60  3200               	nop2
  3204                           
  3205                           ;main.c: 55:     LATB = 0x23;
  3206     1E61  3023               	movlw	35
  3207     1E62  0022               	movlb	2	; select bank2
  3208     1E63  008D               	movwf	13	;volatile
  3209                           
  3210                           ;main.c: 56:     LATB = 0x03;
  3211     1E64  3003               	movlw	3
  3212     1E65  008D               	movwf	13	;volatile
  3213                           
  3214                           ;main.c: 57:     _delay((unsigned long)((5)*(19600000/4000.0)));
  3215     1E66  3020               	movlw	32
  3216     1E67  00F0               	movwf	??_lcd_init
  3217     1E68  30D0               	movlw	208
  3218     1E69                     u6817:
  3219     1E69  0B89               	decfsz	9,f
  3220     1E6A  2E69               	goto	u6817
  3221     1E6B  0BF0               	decfsz	??_lcd_init,f
  3222     1E6C  2E69               	goto	u6817
  3223     1E6D  3200               	nop2
  3224     1E6E  0008               	return
  3225     1E6F                     __end_of_lcd_init:
  3226                           
  3227                           	psect	text2
  3228     1DD0                     __ptext2:	
  3229 ;; *************** function _lcd_cmd *****************
  3230 ;; Defined at:
  3231 ;;		line 60 in file "main.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  cmd             1    wreg     unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  cmd             1    1[COMMON] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3245 ;;      Params:         0       0       0       0       0       0       0       0
  3246 ;;      Locals:         1       0       0       0       0       0       0       0
  3247 ;;      Temps:          1       0       0       0       0       0       0       0
  3248 ;;      Totals:         2       0       0       0       0       0       0       0
  3249 ;;Total ram usage:        2 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;;		_ClearRow
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259     1DD0                     _lcd_cmd:	
  3260                           ;psect for function _lcd_cmd
  3261                           
  3262                           
  3263                           ;incstack = 0
  3264                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  3265                           ;lcd_cmd@cmd stored from wreg
  3266     1DD0  00F1               	movwf	lcd_cmd@cmd
  3267                           
  3268                           ;main.c: 60: void lcd_cmd(unsigned char cmd);main.c: 61: {;main.c: 62:     LATB = 0x10 +
      +                           ((cmd >> 4) & 0x0f);
  3269     1DD1  0871               	movf	lcd_cmd@cmd,w
  3270     1DD2  00F0               	movwf	??_lcd_cmd
  3271     1DD3  3004               	movlw	4
  3272     1DD4                     u5875:
  3273     1DD4  36F0               	lsrf	??_lcd_cmd,f
  3274     1DD5  0B89               	decfsz	9,f
  3275     1DD6  2DD4               	goto	u5875
  3276     1DD7  0870               	movf	??_lcd_cmd,w
  3277     1DD8  390F               	andlw	15
  3278     1DD9  3E10               	addlw	16
  3279     1DDA  0022               	movlb	2	; select bank2
  3280     1DDB  008D               	movwf	13	;volatile
  3281                           
  3282                           ;main.c: 63:     LATB = ((cmd >> 4) & 0x0f);
  3283     1DDC  0871               	movf	lcd_cmd@cmd,w
  3284     1DDD  00F0               	movwf	??_lcd_cmd
  3285     1DDE  3004               	movlw	4
  3286     1DDF                     u5885:
  3287     1DDF  36F0               	lsrf	??_lcd_cmd,f
  3288     1DE0  0B89               	decfsz	9,f
  3289     1DE1  2DDF               	goto	u5885
  3290     1DE2  0870               	movf	??_lcd_cmd,w
  3291     1DE3  390F               	andlw	15
  3292     1DE4  008D               	movwf	13	;volatile
  3293                           
  3294                           ;main.c: 64:     _delay((unsigned long)((2)*(19600000/4000.0)));
  3295     1DE5  300D               	movlw	13
  3296     1DE6  00F0               	movwf	??_lcd_cmd
  3297     1DE7  30B9               	movlw	185
  3298     1DE8                     u6827:
  3299     1DE8  0B89               	decfsz	9,f
  3300     1DE9  2DE8               	goto	u6827
  3301     1DEA  0BF0               	decfsz	??_lcd_cmd,f
  3302     1DEB  2DE8               	goto	u6827
  3303     1DEC  0000               	nop
  3304                           
  3305                           ;main.c: 65:     LATB = (0x10 + (cmd & 0x0f));
  3306     1DED  0871               	movf	lcd_cmd@cmd,w
  3307     1DEE  390F               	andlw	15
  3308     1DEF  3E10               	addlw	16
  3309     1DF0  0022               	movlb	2	; select bank2
  3310     1DF1  008D               	movwf	13	;volatile
  3311                           
  3312                           ;main.c: 66:     LATB = (cmd & 0x0f);
  3313     1DF2  0871               	movf	lcd_cmd@cmd,w
  3314     1DF3  390F               	andlw	15
  3315     1DF4  008D               	movwf	13	;volatile
  3316                           
  3317                           ;main.c: 67:     _delay((unsigned long)((2)*(19600000/4000.0)));
  3318     1DF5  300D               	movlw	13
  3319     1DF6  00F0               	movwf	??_lcd_cmd
  3320     1DF7  30B9               	movlw	185
  3321     1DF8                     u6837:
  3322     1DF8  0B89               	decfsz	9,f
  3323     1DF9  2DF8               	goto	u6837
  3324     1DFA  0BF0               	decfsz	??_lcd_cmd,f
  3325     1DFB  2DF8               	goto	u6837
  3326     1DFC  0000               	nop
  3327     1DFD  0008               	return
  3328     1DFE                     __end_of_lcd_cmd:
  3329                           
  3330                           	psect	text3
  3331     0806                     __ptext3:	
  3332 ;; *************** function _keypad *****************
  3333 ;; Defined at:
  3334 ;;		line 152 in file "main.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  key             1    0        unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      unsigned char 
  3341 ;; Registers used:
  3342 ;;		wreg
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3348 ;;      Params:         0       0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361     0806                     _keypad:	
  3362                           ;psect for function _keypad
  3363                           
  3364                           
  3365                           ;main.c: 154:     LATDbits.LATD0 =1; LATDbits.LATD1 = 0; LATDbits.LATD2 = 0;
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _keypad: [wreg]
  3369     0806  0022               	movlb	2	; select bank2
  3370     0807  140F               	bsf	15,0	;volatile
  3371     0808  108F               	bcf	15,1	;volatile
  3372     0809  110F               	bcf	15,2	;volatile
  3373                           
  3374                           ;main.c: 155:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3375     080A  3010               	movlw	16
  3376     080B                     u6847:
  3377     080B  0B89               	decfsz	9,f
  3378     080C  280B               	goto	u6847
  3379     080D  0000               	nop
  3380                           
  3381                           ;main.c: 156:     if(PORTDbits.RD4==1){
  3382     080E  0020               	movlb	0	; select bank0
  3383     080F  1E0F               	btfss	15,4	;volatile
  3384     0810  2815               	goto	l82
  3385     0811                     l83:
  3386     0811  1A0F               	btfsc	15,4	;volatile
  3387     0812  2811               	goto	l83
  3388                           
  3389                           ;main.c: 158:         return '1';
  3390     0813  3031               	movlw	49
  3391     0814  0008               	return
  3392     0815                     l82:	
  3393                           ;main.c: 160:     else if(PORTDbits.RD5==1){
  3394                           
  3395     0815  1E8F               	btfss	15,5	;volatile
  3396     0816  281B               	goto	l88
  3397     0817                     l89:
  3398     0817  1A8F               	btfsc	15,5	;volatile
  3399     0818  2817               	goto	l89
  3400                           
  3401                           ;main.c: 162:         return '4';
  3402     0819  3034               	movlw	52
  3403     081A  0008               	return
  3404     081B                     l88:	
  3405                           ;main.c: 164:     else if(PORTDbits.RD6==1){
  3406                           
  3407     081B  1F0F               	btfss	15,6	;volatile
  3408     081C  2821               	goto	l93
  3409     081D                     l94:
  3410     081D  1B0F               	btfsc	15,6	;volatile
  3411     081E  281D               	goto	l94
  3412                           
  3413                           ;main.c: 166:         return '7';
  3414     081F  3037               	movlw	55
  3415     0820  0008               	return
  3416     0821                     l93:	
  3417                           ;main.c: 168:     else if(PORTDbits.RD7==1){
  3418                           
  3419     0821  1F8F               	btfss	15,7	;volatile
  3420     0822  2827               	goto	l87
  3421     0823                     l99:
  3422     0823  1B8F               	btfsc	15,7	;volatile
  3423     0824  2823               	goto	l99
  3424                           
  3425                           ;main.c: 170:         return '*';
  3426     0825  302A               	movlw	42
  3427     0826  0008               	return
  3428     0827                     l87:
  3429                           
  3430                           ;main.c: 173:     LATDbits.LATD0 =0; LATDbits.LATD1 = 1; LATDbits.LATD2 = 0;
  3431     0827  0022               	movlb	2	; select bank2
  3432     0828  100F               	bcf	15,0	;volatile
  3433     0829  148F               	bsf	15,1	;volatile
  3434     082A  110F               	bcf	15,2	;volatile
  3435                           
  3436                           ;main.c: 174:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3437     082B  3010               	movlw	16
  3438     082C                     u6857:
  3439     082C  0B89               	decfsz	9,f
  3440     082D  282C               	goto	u6857
  3441     082E  0000               	nop
  3442                           
  3443                           ;main.c: 175:     if(PORTDbits.RD4==1){
  3444     082F  0020               	movlb	0	; select bank0
  3445     0830  1E0F               	btfss	15,4	;volatile
  3446     0831  2836               	goto	l102
  3447     0832                     l103:
  3448     0832  1A0F               	btfsc	15,4	;volatile
  3449     0833  2832               	goto	l103
  3450                           
  3451                           ;main.c: 177:         return '2';
  3452     0834  3032               	movlw	50
  3453     0835  0008               	return
  3454     0836                     l102:	
  3455                           ;main.c: 179:     else if(PORTDbits.RD5==1){
  3456                           
  3457     0836  1E8F               	btfss	15,5	;volatile
  3458     0837  283C               	goto	l107
  3459     0838                     l108:
  3460     0838  1A8F               	btfsc	15,5	;volatile
  3461     0839  2838               	goto	l108
  3462                           
  3463                           ;main.c: 181:         return '5';
  3464     083A  3035               	movlw	53
  3465     083B  0008               	return
  3466     083C                     l107:	
  3467                           ;main.c: 183:     else if(PORTDbits.RD6==1){
  3468                           
  3469     083C  1F0F               	btfss	15,6	;volatile
  3470     083D  2842               	goto	l112
  3471     083E                     l113:
  3472     083E  1B0F               	btfsc	15,6	;volatile
  3473     083F  283E               	goto	l113
  3474                           
  3475                           ;main.c: 185:         return '8';
  3476     0840  3038               	movlw	56
  3477     0841  0008               	return
  3478     0842                     l112:	
  3479                           ;main.c: 187:     else if(PORTDbits.RD7==1){
  3480                           
  3481     0842  1F8F               	btfss	15,7	;volatile
  3482     0843  2848               	goto	l106
  3483     0844                     l118:
  3484     0844  1B8F               	btfsc	15,7	;volatile
  3485     0845  2844               	goto	l118
  3486                           
  3487                           ;main.c: 189:         return '0';
  3488     0846  3030               	movlw	48
  3489     0847  0008               	return
  3490     0848                     l106:
  3491                           
  3492                           ;main.c: 192:     LATDbits.LATD0 =0; LATDbits.LATD1 = 0; LATDbits.LATD2 = 1;
  3493     0848  0022               	movlb	2	; select bank2
  3494     0849  100F               	bcf	15,0	;volatile
  3495     084A  108F               	bcf	15,1	;volatile
  3496     084B  150F               	bsf	15,2	;volatile
  3497                           
  3498                           ;main.c: 193:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3499     084C  3010               	movlw	16
  3500     084D                     u6867:
  3501     084D  0B89               	decfsz	9,f
  3502     084E  284D               	goto	u6867
  3503     084F  0000               	nop
  3504                           
  3505                           ;main.c: 194:     if(PORTDbits.RD4==1){
  3506     0850  0020               	movlb	0	; select bank0
  3507     0851  1E0F               	btfss	15,4	;volatile
  3508     0852  2857               	goto	l121
  3509     0853                     l122:
  3510     0853  1A0F               	btfsc	15,4	;volatile
  3511     0854  2853               	goto	l122
  3512                           
  3513                           ;main.c: 196:         return '3';
  3514     0855  3033               	movlw	51
  3515     0856  0008               	return
  3516     0857                     l121:	
  3517                           ;main.c: 198:     else if(PORTDbits.RD5==1){
  3518                           
  3519     0857  1E8F               	btfss	15,5	;volatile
  3520     0858  285D               	goto	l126
  3521     0859                     l127:
  3522     0859  1A8F               	btfsc	15,5	;volatile
  3523     085A  2859               	goto	l127
  3524                           
  3525                           ;main.c: 200:         return '6';
  3526     085B  3036               	movlw	54
  3527     085C  0008               	return
  3528     085D                     l126:	
  3529                           ;main.c: 202:     else if(PORTDbits.RD6==1){
  3530                           
  3531     085D  1F0F               	btfss	15,6	;volatile
  3532     085E  2863               	goto	l131
  3533     085F                     l132:
  3534     085F  1B0F               	btfsc	15,6	;volatile
  3535     0860  285F               	goto	l132
  3536                           
  3537                           ;main.c: 204:         return'9';
  3538     0861  3039               	movlw	57
  3539     0862  0008               	return
  3540     0863                     l131:	
  3541                           ;main.c: 206:     else if(PORTDbits.RD7==1){
  3542                           
  3543     0863  1F8F               	btfss	15,7	;volatile
  3544     0864  2869               	goto	l125
  3545     0865                     l137:
  3546     0865  1B8F               	btfsc	15,7	;volatile
  3547     0866  2865               	goto	l137
  3548                           
  3549                           ;main.c: 208:         return '#';
  3550     0867  3023               	movlw	35
  3551     0868  0008               	return
  3552     0869                     l125:
  3553                           
  3554                           ;main.c: 210:     LATDbits.LATD0 =0; LATDbits.LATD1 = 0; LATDbits.LATD2 = 0;
  3555     0869  0022               	movlb	2	; select bank2
  3556     086A  100F               	bcf	15,0	;volatile
  3557     086B  108F               	bcf	15,1	;volatile
  3558     086C  110F               	bcf	15,2	;volatile
  3559                           
  3560                           ;main.c: 211:     _delay((unsigned long)((10)*(19600000/4000000.0)));
  3561     086D  3010               	movlw	16
  3562     086E                     u6877:
  3563     086E  0B89               	decfsz	9,f
  3564     086F  286E               	goto	u6877
  3565     0870  0000               	nop
  3566                           
  3567                           ;main.c: 212:     return key;
  3568     0871  3020               	movlw	32
  3569     0872  0008               	return
  3570     0873                     __end_of_keypad:
  3571                           
  3572                           	psect	text4
  3573     1C72                     __ptext4:	
  3574 ;; *************** function _display_int *****************
  3575 ;; Defined at:
  3576 ;;		line 102 in file "main.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  num             2   11[BANK2 ] int 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  str            16   13[BANK2 ] unsigned char [16]
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3590 ;;      Params:         0       0       0       2       0       0       0       0
  3591 ;;      Locals:         0       0       0      16       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0      18       0       0       0       0
  3594 ;;Total ram usage:       18 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 8
  3597 ;; This function calls:
  3598 ;;		_lcd_DisplayString
  3599 ;;		_sprintf
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     1C72                     _display_int:	
  3606                           ;psect for function _display_int
  3607                           
  3608                           
  3609                           ;main.c: 103:     char str[16];;main.c: 104:     sprintf(str, "%d", num);
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in _display_int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3613     1C72  302D               	movlw	low display_int@str
  3614     1C73  0021               	movlb	1	; select bank1
  3615     1C74  00E7               	movwf	sprintf@s^(0+128)
  3616     1C75  3001               	movlw	high display_int@str
  3617     1C76  00E8               	movwf	(sprintf@s+1)^(0+128)
  3618     1C77  308A               	movlw	low (STR_3| (0+32768))
  3619     1C78  00E9               	movwf	sprintf@fmt^(0+128)
  3620     1C79  3098               	movlw	high (STR_3| (0+32768))
  3621     1C7A  00EA               	movwf	(sprintf@fmt^(0+128)+1)
  3622     1C7B  0022               	movlb	2	; select bank2
  3623     1C7C  082C               	movf	(display_int@num+1)^(0+256),w
  3624     1C7D  0021               	movlb	1	; select bank1
  3625     1C7E  00EC               	movwf	((?_sprintf+1)^(0+128)+4)
  3626     1C7F  0022               	movlb	2	; select bank2
  3627     1C80  082B               	movf	display_int@num^(0+256),w
  3628     1C81  0021               	movlb	1	; select bank1
  3629     1C82  00EB               	movwf	(?_sprintf^(0+128)+4)
  3630     1C83  319D  25A9  319C   	fcall	_sprintf
  3631                           
  3632                           ;main.c: 105:     lcd_DisplayString(str);
  3633     1C86  302D               	movlw	low display_int@str
  3634     1C87  00F2               	movwf	lcd_DisplayString@str
  3635     1C88  3001               	movlw	high display_int@str
  3636     1C89  00F3               	movwf	lcd_DisplayString@str+1
  3637     1C8A  319C  2415         	fcall	_lcd_DisplayString
  3638     1C8C  0008               	return
  3639     1C8D                     __end_of_display_int:
  3640                           
  3641                           	psect	text5
  3642     1D86                     __ptext5:	
  3643 ;; *************** function _display_float *****************
  3644 ;; Defined at:
  3645 ;;		line 89 in file "main.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  num             4   11[BANK2 ] float 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  str            16   15[BANK2 ] unsigned char [16]
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3659 ;;      Params:         0       0       0       4       0       0       0       0
  3660 ;;      Locals:         0       0       0      16       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0
  3662 ;;      Totals:         0       0       0      20       0       0       0       0
  3663 ;;Total ram usage:       20 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 8
  3666 ;; This function calls:
  3667 ;;		_lcd_DisplayString
  3668 ;;		_sprintf
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674     1D86                     _display_float:	
  3675                           ;psect for function _display_float
  3676                           
  3677                           
  3678                           ;main.c: 90:     char str[16];;main.c: 91:     sprintf(str, "%.2f", num);
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _display_float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3682     1D86  302F               	movlw	low display_float@str
  3683     1D87  0021               	movlb	1	; select bank1
  3684     1D88  00E7               	movwf	sprintf@s^(0+128)
  3685     1D89  3001               	movlw	high display_float@str
  3686     1D8A  00E8               	movwf	(sprintf@s+1)^(0+128)
  3687     1D8B  307D               	movlw	low (STR_1| (0+32768))
  3688     1D8C  00E9               	movwf	sprintf@fmt^(0+128)
  3689     1D8D  3098               	movlw	high (STR_1| (0+32768))
  3690     1D8E  00EA               	movwf	(sprintf@fmt^(0+128)+1)
  3691     1D8F  0022               	movlb	2	; select bank2
  3692     1D90  082E               	movf	(display_float@num+3)^(0+256),w
  3693     1D91  0021               	movlb	1	; select bank1
  3694     1D92  00EE               	movwf	((?_sprintf+3)^(0+128)+4)
  3695     1D93  0022               	movlb	2	; select bank2
  3696     1D94  082D               	movf	(display_float@num+2)^(0+256),w
  3697     1D95  0021               	movlb	1	; select bank1
  3698     1D96  00ED               	movwf	((?_sprintf+2)^(0+128)+4)
  3699     1D97  0022               	movlb	2	; select bank2
  3700     1D98  082C               	movf	(display_float@num+1)^(0+256),w
  3701     1D99  0021               	movlb	1	; select bank1
  3702     1D9A  00EC               	movwf	((?_sprintf+1)^(0+128)+4)
  3703     1D9B  0022               	movlb	2	; select bank2
  3704     1D9C  082B               	movf	display_float@num^(0+256),w
  3705     1D9D  0021               	movlb	1	; select bank1
  3706     1D9E  00EB               	movwf	(?_sprintf^(0+128)+4)
  3707     1D9F  319D  25A9  319D   	fcall	_sprintf
  3708                           
  3709                           ;main.c: 92:     lcd_DisplayString(str);
  3710     1DA2  302F               	movlw	low display_float@str
  3711     1DA3  00F2               	movwf	lcd_DisplayString@str
  3712     1DA4  3001               	movlw	high display_float@str
  3713     1DA5  00F3               	movwf	lcd_DisplayString@str+1
  3714     1DA6  319C  2415         	fcall	_lcd_DisplayString
  3715     1DA8  0008               	return
  3716     1DA9                     __end_of_display_float:
  3717                           
  3718                           	psect	text6
  3719     1DA9                     __ptext6:	
  3720 ;; *************** function _sprintf *****************
  3721 ;; Defined at:
  3722 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  s               2   71[BANK1 ] PTR unsigned char 
  3725 ;;		 -> display_int@str(16), display_float2@str(16), display_float@str(16), 
  3726 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  3727 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  f              10    1[BANK2 ] struct _IO_FILE
  3730 ;;  ret             2    0        int 
  3731 ;;  ap              1    0[BANK2 ] PTR void [1]
  3732 ;;		 -> ?_sprintf(2), 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2   71[BANK1 ] int 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3742 ;;      Params:         0       0       8       0       0       0       0       0
  3743 ;;      Locals:         0       0       0      11       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0
  3745 ;;      Totals:         0       0       8      11       0       0       0       0
  3746 ;;Total ram usage:       19 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 7
  3749 ;; This function calls:
  3750 ;;		_vfprintf
  3751 ;; This function is called by:
  3752 ;;		_display_float
  3753 ;;		_display_int
  3754 ;;		_display_float2
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758     1DA9                     _sprintf:	
  3759                           ;psect for function _sprintf
  3760                           
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3764     1DA9  30EB               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  3765     1DAA  0022               	movlb	2	; select bank2
  3766     1DAB  00A0               	movwf	sprintf@ap^(0+256)
  3767     1DAC  0021               	movlb	1	; select bank1
  3768     1DAD  0868               	movf	(sprintf@s+1)^(0+128),w
  3769     1DAE  0022               	movlb	2	; select bank2
  3770     1DAF  00A2               	movwf	(sprintf@f+1)^(0+256)
  3771     1DB0  0021               	movlb	1	; select bank1
  3772     1DB1  0867               	movf	sprintf@s^(0+128),w
  3773     1DB2  0022               	movlb	2	; select bank2
  3774     1DB3  00A1               	movwf	sprintf@f^(0+256)
  3775     1DB4  01A3               	clrf	(sprintf@f^(0+256)+2)
  3776     1DB5  01A4               	clrf	((sprintf@f+1)^(0+256)+2)
  3777     1DB6  01A9               	clrf	(sprintf@f^(0+256)+8)
  3778     1DB7  01AA               	clrf	((sprintf@f+1)^(0+256)+8)
  3779     1DB8  0021               	movlb	1	; select bank1
  3780     1DB9  086A               	movf	(sprintf@fmt+1)^(0+128),w
  3781     1DBA  00E2               	movwf	(vfprintf@fmt+1)^(0+128)
  3782     1DBB  0869               	movf	sprintf@fmt^(0+128),w
  3783     1DBC  00E1               	movwf	vfprintf@fmt^(0+128)
  3784     1DBD  3020               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3785     1DBE  00E3               	movwf	vfprintf@ap^(0+128)
  3786     1DBF  3021               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3787     1DC0  319C  24C6         	fcall	_vfprintf
  3788     1DC2  3002               	movlw	2
  3789     1DC3  3E21               	addlw	(low (sprintf@f| (0+256)))& (0+255)
  3790     1DC4  0086               	movwf	6
  3791     1DC5  3001               	movlw	1	; select bank2/3
  3792     1DC6  0087               	movwf	7
  3793     1DC7  3F40               	moviw [0]fsr1
  3794     1DC8  0021               	movlb	1	; select bank1
  3795     1DC9  0767               	addwf	sprintf@s^(0+128),w
  3796     1DCA  0084               	movwf	4
  3797     1DCB  3F41               	moviw [1]fsr1
  3798     1DCC  3D68               	addwfc	(sprintf@s+1)^(0+128),w
  3799     1DCD  0085               	movwf	5
  3800     1DCE  0180               	clrf	0
  3801     1DCF  0008               	return
  3802     1DD0                     __end_of_sprintf:
  3803                           
  3804                           	psect	text7
  3805     1CC6                     __ptext7:	
  3806 ;; *************** function _vfprintf *****************
  3807 ;; Defined at:
  3808 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  fp              1    wreg     PTR struct _IO_FILE
  3811 ;;		 -> sprintf@f(10), 
  3812 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  3813 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3814 ;;  ap              1   67[BANK1 ] PTR PTR void 
  3815 ;;		 -> sprintf@ap(1), 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  fp              1   68[BANK1 ] PTR struct _IO_FILE
  3818 ;;		 -> sprintf@f(10), 
  3819 ;;  cfmt            2   69[BANK1 ] PTR unsigned char 
  3820 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2   65[BANK1 ] int 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3830 ;;      Params:         0       0       3       0       0       0       0       0
  3831 ;;      Locals:         0       0       3       0       0       0       0       0
  3832 ;;      Temps:          0       1       0       0       0       0       0       0
  3833 ;;      Totals:         0       1       6       0       0       0       0       0
  3834 ;;Total ram usage:        7 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 6
  3837 ;; This function calls:
  3838 ;;		_vfpfcnvrt
  3839 ;; This function is called by:
  3840 ;;		_sprintf
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     1CC6                     _vfprintf:	
  3845                           ;psect for function _vfprintf
  3846                           
  3847                           
  3848                           ;incstack = 0
  3849                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3850                           ;vfprintf@fp stored from wreg
  3851     1CC6  0021               	movlb	1	; select bank1
  3852     1CC7  00E4               	movwf	vfprintf@fp^(0+128)
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3855     1CC8  0862               	movf	(vfprintf@fmt+1)^(0+128),w
  3856     1CC9  00E6               	movwf	(vfprintf@cfmt+1)^(0+128)
  3857     1CCA  0861               	movf	vfprintf@fmt^(0+128),w
  3858     1CCB  00E5               	movwf	vfprintf@cfmt^(0+128)
  3859     1CCC                     l4141:	
  3860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3861                           
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3864     1CCC  0021               	movlb	1	; select bank1
  3865     1CCD  0865               	movf	vfprintf@cfmt^(0+128),w
  3866     1CCE  0084               	movwf	4
  3867     1CCF  0866               	movf	(vfprintf@cfmt+1)^(0+128),w
  3868     1CD0  0085               	movwf	5
  3869     1CD1  0012               	moviw fsr0++
  3870     1CD2  1903               	btfsc	3,2
  3871     1CD3  2CE1               	goto	l4143
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3874     1CD4  30E5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3875     1CD5  0020               	movlb	0	; select bank0
  3876     1CD6  00ED               	movwf	vfpfcnvrt@fmt
  3877     1CD7  0021               	movlb	1	; select bank1
  3878     1CD8  0863               	movf	vfprintf@ap^(0+128),w
  3879     1CD9  0020               	movlb	0	; select bank0
  3880     1CDA  00EE               	movwf	vfpfcnvrt@ap
  3881     1CDB  0021               	movlb	1	; select bank1
  3882     1CDC  0864               	movf	vfprintf@fp^(0+128),w
  3883     1CDD  318A  2229  319C   	fcall	_vfpfcnvrt
  3884     1CE0  2CCC               	goto	l4141
  3885     1CE1                     l4143:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3888     1CE1  01E1               	clrf	?_vfprintf^(0+128)
  3889     1CE2  01E2               	clrf	(?_vfprintf+1)^(0+128)
  3890     1CE3  0008               	return
  3891     1CE4                     __end_of_vfprintf:
  3892                           
  3893                           	psect	text8
  3894     0A29                     __ptext8:	
  3895 ;; *************** function _vfpfcnvrt *****************
  3896 ;; Defined at:
  3897 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  fp              1    wreg     PTR struct _IO_FILE
  3900 ;;		 -> sprintf@f(10), 
  3901 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  3902 ;;		 -> vfprintf@cfmt(2), 
  3903 ;;  ap              1   78[BANK0 ] PTR PTR void 
  3904 ;;		 -> sprintf@ap(1), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  3907 ;;		 -> sprintf@f(10), 
  3908 ;;  convarg         8   53[BANK1 ] struct .
  3909 ;;  cp              2   63[BANK1 ] PTR unsigned char 
  3910 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  3911 ;;  i               2    0        int 
  3912 ;;  done            2    0        int 
  3913 ;;  c               1   61[BANK1 ] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3923 ;;      Params:         0       2       0       0       0       0       0       0
  3924 ;;      Locals:         0       0      12       0       0       0       0       0
  3925 ;;      Temps:          0       0       4       0       0       0       0       0
  3926 ;;      Totals:         0       2      16       0       0       0       0       0
  3927 ;;Total ram usage:       18 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 5
  3930 ;; This function calls:
  3931 ;;		_atoi
  3932 ;;		_dtoa
  3933 ;;		_efgtoa
  3934 ;;		_fputc
  3935 ;;		_isdigit
  3936 ;; This function is called by:
  3937 ;;		_vfprintf
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941     0A29                     _vfpfcnvrt:	
  3942                           ;psect for function _vfpfcnvrt
  3943                           
  3944                           
  3945                           ;incstack = 0
  3946                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3947                           ;vfpfcnvrt@fp stored from wreg
  3948     0A29  0021               	movlb	1	; select bank1
  3949     0A2A  00DE               	movwf	vfpfcnvrt@fp^(0+128)
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3952     0A2B  0020               	movlb	0	; select bank0
  3953     0A2C  086D               	movf	vfpfcnvrt@fmt,w
  3954     0A2D  0086               	movwf	6
  3955     0A2E  0187               	clrf	7
  3956     0A2F  3F40               	moviw [0]fsr1
  3957     0A30  0021               	movlb	1	; select bank1
  3958     0A31  00D1               	movwf	??_vfpfcnvrt^(0+128)
  3959     0A32  3F41               	moviw [1]fsr1
  3960     0A33  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3961     0A34  0851               	movf	??_vfpfcnvrt^(0+128),w
  3962     0A35  0084               	movwf	4
  3963     0A36  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3964     0A37  0085               	movwf	5
  3965     0A38  0012               	moviw fsr0++
  3966     0A39  3A25               	xorlw	37
  3967     0A3A  1D03               	btfss	3,2
  3968     0A3B  2BE9               	goto	l4109
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3971     0A3C  0020               	movlb	0	; select bank0
  3972     0A3D  086D               	movf	vfpfcnvrt@fmt,w
  3973     0A3E  0086               	movwf	6
  3974     0A3F  0187               	clrf	7
  3975     0A40  3001               	movlw	1
  3976     0A41  0781               	addwf	1,f
  3977     0A42  3141               	addfsr 1,1
  3978     0A43  1803               	skipnc
  3979     0A44  0A81               	incf	1,f
  3980                           
  3981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3982     0A45  0022               	movlb	2	; select bank2
  3983     0A46  01CB               	clrf	_width^(0+256)
  3984     0A47  01CC               	clrf	(_width+1)^(0+256)
  3985     0A48  1003               	clrc
  3986     0A49  3000               	movlw	0
  3987     0A4A  1803               	btfsc	3,0
  3988     0A4B  3001               	movlw	1
  3989     0A4C  0021               	movlb	1	; select bank1
  3990     0A4D  00EF               	movwf	_flags^(0+128)
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3993     0A4E  30FF               	movlw	255
  3994     0A4F  0022               	movlb	2	; select bank2
  3995     0A50  00CD               	movwf	_prec^(0+256)
  3996     0A51  30FF               	movlw	255
  3997     0A52  00CE               	movwf	(_prec^(0+256)+1)
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  4000     0A53  0020               	movlb	0	; select bank0
  4001     0A54  086D               	movf	vfpfcnvrt@fmt,w
  4002     0A55  0086               	movwf	6
  4003     0A56  0187               	clrf	7
  4004     0A57  3F40               	moviw [0]fsr1
  4005     0A58  0021               	movlb	1	; select bank1
  4006     0A59  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4007     0A5A  3F41               	moviw [1]fsr1
  4008     0A5B  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4009     0A5C  0851               	movf	??_vfpfcnvrt^(0+128),w
  4010     0A5D  0084               	movwf	4
  4011     0A5E  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4012     0A5F  0085               	movwf	5
  4013     0A60  0012               	moviw fsr0++
  4014     0A61  3A2E               	xorlw	46
  4015     0A62  1D03               	btfss	3,2
  4016     0A63  2ACD               	goto	l4057
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  4019     0A64  0022               	movlb	2	; select bank2
  4020     0A65  01CD               	clrf	_prec^(0+256)
  4021     0A66  01CE               	clrf	(_prec+1)^(0+256)
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  4024     0A67  0020               	movlb	0	; select bank0
  4025     0A68  086D               	movf	vfpfcnvrt@fmt,w
  4026     0A69  0086               	movwf	6
  4027     0A6A  0187               	clrf	7
  4028     0A6B  3001               	movlw	1
  4029     0A6C  0781               	addwf	1,f
  4030     0A6D  3141               	addfsr 1,1
  4031     0A6E  1803               	skipnc
  4032     0A6F  0A81               	incf	1,f
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  4035     0A70  086D               	movf	vfpfcnvrt@fmt,w
  4036     0A71  0086               	movwf	6
  4037     0A72  0187               	clrf	7
  4038     0A73  3F40               	moviw [0]fsr1
  4039     0A74  0021               	movlb	1	; select bank1
  4040     0A75  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4041     0A76  3F41               	moviw [1]fsr1
  4042     0A77  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4043     0A78  0851               	movf	??_vfpfcnvrt^(0+128),w
  4044     0A79  0084               	movwf	4
  4045     0A7A  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4046     0A7B  0085               	movwf	5
  4047     0A7C  0012               	moviw fsr0++
  4048     0A7D  3A2A               	xorlw	42
  4049     0A7E  1D03               	btfss	3,2
  4050     0A7F  2A98               	goto	l4049
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  4053     0A80  0020               	movlb	0	; select bank0
  4054     0A81  086D               	movf	vfpfcnvrt@fmt,w
  4055     0A82  0086               	movwf	6
  4056     0A83  0187               	clrf	7
  4057     0A84  3001               	movlw	1
  4058     0A85  0781               	addwf	1,f
  4059     0A86  3141               	addfsr 1,1
  4060     0A87  1803               	skipnc
  4061     0A88  0A81               	incf	1,f
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4064     0A89  086E               	movf	vfpfcnvrt@ap,w
  4065     0A8A  0086               	movwf	6
  4066     0A8B  3001               	movlw	1	; select bank2/3
  4067     0A8C  0087               	movwf	7
  4068     0A8D  0801               	movf	1,w
  4069     0A8E  0084               	movwf	4
  4070     0A8F  0185               	clrf	5
  4071     0A90  3002               	movlw	2
  4072     0A91  0781               	addwf	1,f
  4073     0A92  3F00               	moviw [0]fsr0
  4074     0A93  0022               	movlb	2	; select bank2
  4075     0A94  00CD               	movwf	_prec^(0+256)
  4076     0A95  3F01               	moviw [1]fsr0
  4077     0A96  00CE               	movwf	(_prec+1)^(0+256)
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  4080     0A97  2ACD               	goto	l4057
  4081     0A98                     l4049:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  4084     0A98  0020               	movlb	0	; select bank0
  4085     0A99  086D               	movf	vfpfcnvrt@fmt,w
  4086     0A9A  0086               	movwf	6
  4087     0A9B  0187               	clrf	7
  4088     0A9C  3F40               	moviw [0]fsr1
  4089     0A9D  00F6               	movwf	atoi@s
  4090     0A9E  3F41               	moviw [1]fsr1
  4091     0A9F  00F7               	movwf	atoi@s+1
  4092     0AA0  3191  21A9  318A   	fcall	_atoi
  4093     0AA3  0877               	movf	?_atoi+1,w
  4094     0AA4  0022               	movlb	2	; select bank2
  4095     0AA5  00CE               	movwf	(_prec+1)^(0+256)
  4096     0AA6  0876               	movf	?_atoi,w
  4097     0AA7  00CD               	movwf	_prec^(0+256)
  4098     0AA8                     l4055:	
  4099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4100                           
  4101     0AA8  0020               	movlb	0	; select bank0
  4102     0AA9  086D               	movf	vfpfcnvrt@fmt,w
  4103     0AAA  0086               	movwf	6
  4104     0AAB  0187               	clrf	7
  4105     0AAC  3F40               	moviw [0]fsr1
  4106     0AAD  0021               	movlb	1	; select bank1
  4107     0AAE  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4108     0AAF  3F41               	moviw [1]fsr1
  4109     0AB0  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4110     0AB1  0851               	movf	??_vfpfcnvrt^(0+128),w
  4111     0AB2  0084               	movwf	4
  4112     0AB3  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4113     0AB4  0085               	movwf	5
  4114     0AB5  0800               	movf	0,w	;code access
  4115     0AB6  3ED0               	addlw	208
  4116     0AB7  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4117     0AB8  30FF               	movlw	255
  4118     0AB9  1803               	skipnc
  4119     0ABA  3000               	movlw	0
  4120     0ABB  00D4               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  4121     0ABC  3000               	movlw	0
  4122     0ABD  0254               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  4123     0ABE  300A               	movlw	10
  4124     0ABF  1903               	skipnz
  4125     0AC0  0253               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  4126     0AC1  1803               	btfsc	3,0
  4127     0AC2  2ACD               	goto	l4057
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  4130     0AC3  0020               	movlb	0	; select bank0
  4131     0AC4  086D               	movf	vfpfcnvrt@fmt,w
  4132     0AC5  0086               	movwf	6
  4133     0AC6  0187               	clrf	7
  4134     0AC7  3001               	movlw	1
  4135     0AC8  0781               	addwf	1,f
  4136     0AC9  3141               	addfsr 1,1
  4137     0ACA  1803               	skipnc
  4138     0ACB  0A81               	incf	1,f
  4139     0ACC  2AA8               	goto	l4055
  4140     0ACD                     l4057:
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  4143     0ACD  0020               	movlb	0	; select bank0
  4144     0ACE  086D               	movf	vfpfcnvrt@fmt,w
  4145     0ACF  0086               	movwf	6
  4146     0AD0  0187               	clrf	7
  4147     0AD1  3F40               	moviw [0]fsr1
  4148     0AD2  0021               	movlb	1	; select bank1
  4149     0AD3  00DF               	movwf	vfpfcnvrt@cp^(0+128)
  4150     0AD4  3F41               	moviw [1]fsr1
  4151     0AD5  00E0               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4154     0AD6  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4155     0AD7  0084               	movwf	4
  4156     0AD8  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4157     0AD9  0085               	movwf	5
  4158     0ADA  0012               	moviw fsr0++
  4159     0ADB  3A64               	xorlw	100
  4160     0ADC  1903               	btfsc	3,2
  4161     0ADD  2AE6               	goto	l4063
  4162     0ADE  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4163     0ADF  0084               	movwf	4
  4164     0AE0  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4165     0AE1  0085               	movwf	5
  4166     0AE2  0012               	moviw fsr0++
  4167     0AE3  3A69               	xorlw	105
  4168     0AE4  1D03               	btfss	3,2
  4169     0AE5  2B35               	goto	l4071
  4170     0AE6                     l4063:
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4173     0AE6  0020               	movlb	0	; select bank0
  4174     0AE7  086E               	movf	vfpfcnvrt@ap,w
  4175     0AE8  0086               	movwf	6
  4176     0AE9  3001               	movlw	1	; select bank2/3
  4177     0AEA  0087               	movwf	7
  4178     0AEB  0801               	movf	1,w
  4179     0AEC  0084               	movwf	4
  4180     0AED  0185               	clrf	5
  4181     0AEE  3002               	movlw	2
  4182     0AEF  0781               	addwf	1,f
  4183     0AF0  3F00               	moviw [0]fsr0
  4184     0AF1  0021               	movlb	1	; select bank1
  4185     0AF2  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4186     0AF3  3F01               	moviw [1]fsr0
  4187     0AF4  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4188     0AF5  0851               	movf	??_vfpfcnvrt^(0+128),w
  4189     0AF6  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4190     0AF7  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4191     0AF8  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4192     0AF9  0D89               	rlf	9,f
  4193     0AFA  3B89               	subwfb	9,f
  4194     0AFB  0989               	comf	9,f
  4195     0AFC  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4196     0AFD  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4197     0AFE  00D9               	movwf	(vfpfcnvrt@convarg+4)^(0+128)
  4198     0AFF  00DA               	movwf	(vfpfcnvrt@convarg+5)^(0+128)
  4199     0B00  00DB               	movwf	(vfpfcnvrt@convarg+6)^(0+128)
  4200     0B01  00DC               	movwf	(vfpfcnvrt@convarg+7)^(0+128)
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4203     0B02  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4204     0B03  3E01               	addlw	1
  4205     0B04  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4206     0B05  3000               	movlw	0
  4207     0B06  3D60               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4208     0B07  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4209     0B08  0020               	movlb	0	; select bank0
  4210     0B09  086D               	movf	vfpfcnvrt@fmt,w
  4211     0B0A  0086               	movwf	6
  4212     0B0B  0187               	clrf	7
  4213     0B0C  0021               	movlb	1	; select bank1
  4214     0B0D  0851               	movf	??_vfpfcnvrt^(0+128),w
  4215     0B0E  3FC0               	movwi [0]fsr1
  4216     0B0F  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4217     0B10  3FC1               	movwi [1]fsr1
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4220     0B11  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4221     0B12  0020               	movlb	0	; select bank0
  4222     0B13  00B0               	movwf	dtoa@d
  4223     0B14  0021               	movlb	1	; select bank1
  4224     0B15  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4225     0B16  0020               	movlb	0	; select bank0
  4226     0B17  00B1               	movwf	dtoa@d+1
  4227     0B18  0021               	movlb	1	; select bank1
  4228     0B19  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4229     0B1A  0020               	movlb	0	; select bank0
  4230     0B1B  00B2               	movwf	dtoa@d+2
  4231     0B1C  0021               	movlb	1	; select bank1
  4232     0B1D  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4233     0B1E  0020               	movlb	0	; select bank0
  4234     0B1F  00B3               	movwf	dtoa@d+3
  4235     0B20  0021               	movlb	1	; select bank1
  4236     0B21  0859               	movf	(vfpfcnvrt@convarg+4)^(0+128),w
  4237     0B22  0020               	movlb	0	; select bank0
  4238     0B23  00B4               	movwf	dtoa@d+4
  4239     0B24  0021               	movlb	1	; select bank1
  4240     0B25  085A               	movf	(vfpfcnvrt@convarg+5)^(0+128),w
  4241     0B26  0020               	movlb	0	; select bank0
  4242     0B27  00B5               	movwf	dtoa@d+5
  4243     0B28  0021               	movlb	1	; select bank1
  4244     0B29  085B               	movf	(vfpfcnvrt@convarg+6)^(0+128),w
  4245     0B2A  0020               	movlb	0	; select bank0
  4246     0B2B  00B6               	movwf	dtoa@d+6
  4247     0B2C  0021               	movlb	1	; select bank1
  4248     0B2D  085C               	movf	(vfpfcnvrt@convarg+7)^(0+128),w
  4249     0B2E  0020               	movlb	0	; select bank0
  4250     0B2F  00B7               	movwf	dtoa@d+7
  4251     0B30  0021               	movlb	1	; select bank1
  4252     0B31  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4253     0B32  3195  256E         	fcall	_dtoa
  4254     0B34  0008               	return
  4255     0B35                     l4071:
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  4258     0B35  0020               	movlb	0	; select bank0
  4259     0B36  086D               	movf	vfpfcnvrt@fmt,w
  4260     0B37  0086               	movwf	6
  4261     0B38  0187               	clrf	7
  4262     0B39  3F40               	moviw [0]fsr1
  4263     0B3A  0021               	movlb	1	; select bank1
  4264     0B3B  00DF               	movwf	vfpfcnvrt@cp^(0+128)
  4265     0B3C  3F41               	moviw [1]fsr1
  4266     0B3D  00E0               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  4269     0B3E  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4270     0B3F  0084               	movwf	4
  4271     0B40  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4272     0B41  0085               	movwf	5
  4273     0B42  0800               	movf	0,w	;code access
  4274     0B43  00DD               	movwf	vfpfcnvrt@c^(0+128)
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  4277     0B44  2B4F               	goto	l4083
  4278     0B45                     l4075:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  4281     0B45  3001               	movlw	1
  4282     0B46  07DF               	addwf	vfpfcnvrt@cp^(0+128),f
  4283     0B47  3000               	movlw	0
  4284     0B48  3DE0               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4285                           
  4286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  4287     0B49  2B62               	goto	l4085
  4288     0B4A                     l4077:
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  4291     0B4A  306C               	movlw	108
  4292     0B4B  00DD               	movwf	vfpfcnvrt@c^(0+128)
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  4295     0B4C  2B62               	goto	l4085
  4296     0B4D                     l4079:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  4299     0B4D  01DD               	clrf	vfpfcnvrt@c^(0+128)
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  4302     0B4E  2B62               	goto	l4085
  4303     0B4F                     l4083:
  4304     0B4F  085D               	movf	vfpfcnvrt@c^(0+128),w
  4305     0B50  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4306     0B51  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4307                           
  4308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4309                           ; Switch size 1, requested type "simple"
  4310                           ; Number of cases is 1, Range of values is 0 to 0
  4311                           ; switch strategies available:
  4312                           ; Name         Instructions Cycles
  4313                           ; simple_byte            4     3 (average)
  4314                           ; direct_byte            8     6 (fixed)
  4315                           ; jumptable            260     6 (fixed)
  4316                           ;	Chosen strategy is simple_byte
  4317     0B52  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4318     0B53  3A00               	xorlw	0	; case 0
  4319     0B54  1903               	skipnz
  4320     0B55  2B57               	goto	l4849
  4321     0B56  2B4D               	goto	l4079
  4322     0B57                     l4849:
  4323                           
  4324                           ; Switch size 1, requested type "simple"
  4325                           ; Number of cases is 3, Range of values is 76 to 108
  4326                           ; switch strategies available:
  4327                           ; Name         Instructions Cycles
  4328                           ; simple_byte           10     6 (average)
  4329                           ; direct_byte           75     9 (fixed)
  4330                           ; jumptable            263     9 (fixed)
  4331                           ;	Chosen strategy is simple_byte
  4332     0B57  0851               	movf	??_vfpfcnvrt^(0+128),w
  4333     0B58  3A4C               	xorlw	76	; case 76
  4334     0B59  1903               	skipnz
  4335     0B5A  2B45               	goto	l4075
  4336     0B5B  3A2A               	xorlw	42	; case 102
  4337     0B5C  1903               	skipnz
  4338     0B5D  2B4A               	goto	l4077
  4339     0B5E  3A0A               	xorlw	10	; case 108
  4340     0B5F  1903               	skipnz
  4341     0B60  2B45               	goto	l4075
  4342     0B61  2B4D               	goto	l4079
  4343     0B62                     l4085:
  4344     0B62  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4345     0B63  0084               	movwf	4
  4346     0B64  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4347     0B65  0085               	movwf	5
  4348     0B66  0012               	moviw fsr0++
  4349     0B67  3A66               	xorlw	102
  4350     0B68  1903               	btfsc	3,2
  4351     0B69  2B92               	goto	l4093
  4352     0B6A  2BDF               	goto	l4105
  4353     0B6B                     l4087:
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4356     0B6B  0020               	movlb	0	; select bank0
  4357     0B6C  086E               	movf	vfpfcnvrt@ap,w
  4358     0B6D  0086               	movwf	6
  4359     0B6E  3001               	movlw	1	; select bank2/3
  4360     0B6F  0087               	movwf	7
  4361     0B70  0801               	movf	1,w
  4362     0B71  0084               	movwf	4
  4363     0B72  0185               	clrf	5
  4364     0B73  3004               	movlw	4
  4365     0B74  0781               	addwf	1,f
  4366     0B75  3F00               	moviw [0]fsr0
  4367     0B76  0021               	movlb	1	; select bank1
  4368     0B77  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4369     0B78  3F01               	moviw [1]fsr0
  4370     0B79  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4371     0B7A  3F02               	moviw [2]fsr0
  4372     0B7B  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4373     0B7C  3F03               	moviw [3]fsr0
  4374     0B7D  2B90               	goto	L17
  4375     0B7E                     l4089:	
  4376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  4377                           
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4380     0B7E  0020               	movlb	0	; select bank0
  4381     0B7F  086E               	movf	vfpfcnvrt@ap,w
  4382     0B80  0086               	movwf	6
  4383     0B81  3001               	movlw	1	; select bank2/3
  4384     0B82  0087               	movwf	7
  4385     0B83  0801               	movf	1,w
  4386     0B84  0084               	movwf	4
  4387     0B85  0185               	clrf	5
  4388     0B86  3004               	movlw	4
  4389     0B87  0781               	addwf	1,f
  4390     0B88  3F00               	moviw [0]fsr0
  4391     0B89  0021               	movlb	1	; select bank1
  4392     0B8A  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4393     0B8B  3F01               	moviw [1]fsr0
  4394     0B8C  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4395     0B8D  3F02               	moviw [2]fsr0
  4396     0B8E  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4397     0B8F  3F03               	moviw [3]fsr0
  4398     0B90                     L17:
  4399     0B90  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  4402     0B91  2BA2               	goto	l4095
  4403     0B92                     l4093:
  4404     0B92  085D               	movf	vfpfcnvrt@c^(0+128),w
  4405     0B93  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4406     0B94  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4407                           
  4408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4409                           ; Switch size 1, requested type "simple"
  4410                           ; Number of cases is 1, Range of values is 0 to 0
  4411                           ; switch strategies available:
  4412                           ; Name         Instructions Cycles
  4413                           ; simple_byte            4     3 (average)
  4414                           ; direct_byte            8     6 (fixed)
  4415                           ; jumptable            260     6 (fixed)
  4416                           ;	Chosen strategy is simple_byte
  4417     0B95  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4418     0B96  3A00               	xorlw	0	; case 0
  4419     0B97  1903               	skipnz
  4420     0B98  2B9A               	goto	l4851
  4421     0B99  2BA2               	goto	l4095
  4422     0B9A                     l4851:
  4423                           
  4424                           ; Switch size 1, requested type "simple"
  4425                           ; Number of cases is 2, Range of values is 76 to 108
  4426                           ; switch strategies available:
  4427                           ; Name         Instructions Cycles
  4428                           ; simple_byte            7     4 (average)
  4429                           ; direct_byte           75     9 (fixed)
  4430                           ; jumptable            263     9 (fixed)
  4431                           ;	Chosen strategy is simple_byte
  4432     0B9A  0851               	movf	??_vfpfcnvrt^(0+128),w
  4433     0B9B  3A4C               	xorlw	76	; case 76
  4434     0B9C  1903               	skipnz
  4435     0B9D  2B7E               	goto	l4089
  4436     0B9E  3A20               	xorlw	32	; case 108
  4437     0B9F  1903               	skipnz
  4438     0BA0  2B6B               	goto	l4087
  4439     0BA1  2BA2               	goto	l4095
  4440     0BA2                     l4095:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  4443     0BA2  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4444     0BA3  3E01               	addlw	1
  4445     0BA4  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4446     0BA5  3000               	movlw	0
  4447     0BA6  3D60               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4448     0BA7  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4449     0BA8  0020               	movlb	0	; select bank0
  4450     0BA9  086D               	movf	vfpfcnvrt@fmt,w
  4451     0BAA  0086               	movwf	6
  4452     0BAB  0187               	clrf	7
  4453     0BAC  0021               	movlb	1	; select bank1
  4454     0BAD  0851               	movf	??_vfpfcnvrt^(0+128),w
  4455     0BAE  3FC0               	movwi [0]fsr1
  4456     0BAF  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4457     0BB0  3FC1               	movwi [1]fsr1
  4458                           
  4459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  4460     0BB1  2BCE               	goto	l4103
  4461     0BB2                     l4097:
  4462                           
  4463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4464     0BB2  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4465     0BB3  0020               	movlb	0	; select bank0
  4466     0BB4  00EB               	movwf	efgtoa@f+3
  4467     0BB5  0021               	movlb	1	; select bank1
  4468     0BB6  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4469     0BB7  0020               	movlb	0	; select bank0
  4470     0BB8  00EA               	movwf	efgtoa@f+2
  4471     0BB9  0021               	movlb	1	; select bank1
  4472     0BBA  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4473     0BBB  0020               	movlb	0	; select bank0
  4474     0BBC  00E9               	movwf	efgtoa@f+1
  4475     0BBD  0021               	movlb	1	; select bank1
  4476     0BBE  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4477     0BBF  0020               	movlb	0	; select bank0
  4478     0BC0  00E8               	movwf	efgtoa@f
  4479     0BC1  0021               	movlb	1	; select bank1
  4480     0BC2  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4481     0BC3  0084               	movwf	4
  4482     0BC4  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4483     0BC5  0085               	movwf	5
  4484     0BC6  0800               	movf	0,w	;code access
  4485     0BC7  0020               	movlb	0	; select bank0
  4486     0BC8  00EC               	movwf	efgtoa@c
  4487     0BC9  0021               	movlb	1	; select bank1
  4488     0BCA  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4489     0BCB  3182  2222         	fcall	_efgtoa
  4490     0BCD  0008               	return
  4491     0BCE                     l4103:
  4492     0BCE  085F               	movf	vfpfcnvrt@cp^(0+128),w
  4493     0BCF  0084               	movwf	4
  4494     0BD0  0860               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4495     0BD1  0085               	movwf	5
  4496     0BD2  0800               	movf	0,w	;code access
  4497     0BD3  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4498     0BD4  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4499                           
  4500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4501                           ; Switch size 1, requested type "simple"
  4502                           ; Number of cases is 1, Range of values is 0 to 0
  4503                           ; switch strategies available:
  4504                           ; Name         Instructions Cycles
  4505                           ; simple_byte            4     3 (average)
  4506                           ; direct_byte            8     6 (fixed)
  4507                           ; jumptable            260     6 (fixed)
  4508                           ;	Chosen strategy is simple_byte
  4509     0BD5  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4510     0BD6  3A00               	xorlw	0	; case 0
  4511     0BD7  1903               	skipnz
  4512     0BD8  2BDA               	goto	l4853
  4513     0BD9  2BDF               	goto	l4105
  4514     0BDA                     l4853:
  4515                           
  4516                           ; Switch size 1, requested type "simple"
  4517                           ; Number of cases is 1, Range of values is 102 to 102
  4518                           ; switch strategies available:
  4519                           ; Name         Instructions Cycles
  4520                           ; simple_byte            4     3 (average)
  4521                           ; direct_byte           11     9 (fixed)
  4522                           ; jumptable            263     9 (fixed)
  4523                           ;	Chosen strategy is simple_byte
  4524     0BDA  0851               	movf	??_vfpfcnvrt^(0+128),w
  4525     0BDB  3A66               	xorlw	102	; case 102
  4526     0BDC  1903               	skipnz
  4527     0BDD  2BB2               	goto	l4097
  4528     0BDE  2BDF               	goto	l4105
  4529     0BDF                     l4105:
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4532     0BDF  0020               	movlb	0	; select bank0
  4533     0BE0  086D               	movf	vfpfcnvrt@fmt,w
  4534     0BE1  0086               	movwf	6
  4535     0BE2  0187               	clrf	7
  4536     0BE3  3001               	movlw	1
  4537     0BE4  0781               	addwf	1,f
  4538     0BE5  3141               	addfsr 1,1
  4539     0BE6  1803               	skipnc
  4540     0BE7  0A81               	incf	1,f
  4541     0BE8  0008               	return
  4542     0BE9                     l4109:
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4545     0BE9  0020               	movlb	0	; select bank0
  4546     0BEA  086D               	movf	vfpfcnvrt@fmt,w
  4547     0BEB  0086               	movwf	6
  4548     0BEC  0187               	clrf	7
  4549     0BED  3F40               	moviw [0]fsr1
  4550     0BEE  0021               	movlb	1	; select bank1
  4551     0BEF  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4552     0BF0  3F41               	moviw [1]fsr1
  4553     0BF1  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4554     0BF2  0851               	movf	??_vfpfcnvrt^(0+128),w
  4555     0BF3  0084               	movwf	4
  4556     0BF4  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4557     0BF5  0085               	movwf	5
  4558     0BF6  0800               	movf	0,w	;code access
  4559     0BF7  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4560     0BF8  01D4               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4561     0BF9  0853               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4562     0BFA  00F0               	movwf	fputc@c
  4563     0BFB  0854               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4564     0BFC  00F1               	movwf	fputc@c+1
  4565     0BFD  085E               	movf	vfpfcnvrt@fp^(0+128),w
  4566     0BFE  00F2               	movwf	fputc@fp
  4567     0BFF  319E  26FC  318A   	fcall	_fputc
  4568     0C02  2BDF               	goto	l4105
  4569     0C03                     __end_of_vfpfcnvrt:
  4570                           
  4571                           	psect	text9
  4572     0222                     __ptext9:	
  4573 ;; *************** function _efgtoa *****************
  4574 ;; Defined at:
  4575 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  fp              1    wreg     PTR struct _IO_FILE
  4578 ;;		 -> sprintf@f(10), 
  4579 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  4580 ;;  c               1   76[BANK0 ] unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  fp              1   19[BANK1 ] PTR struct _IO_FILE
  4583 ;;		 -> sprintf@f(10), 
  4584 ;;  u               4   45[BANK1 ] struct flui
  4585 ;;  g               4   41[BANK1 ] struct flui
  4586 ;;  l               4   34[BANK1 ] struct flui
  4587 ;;  h               4   30[BANK1 ] struct flui
  4588 ;;  ou              4   24[BANK1 ] struct flui
  4589 ;;  n               2   39[BANK1 ] int 
  4590 ;;  i               2   28[BANK1 ] int 
  4591 ;;  w               2   22[BANK1 ] int 
  4592 ;;  e               2   20[BANK1 ] int 
  4593 ;;  m               2   17[BANK1 ] int 
  4594 ;;  d               2   15[BANK1 ] int 
  4595 ;;  t               2    8[BANK1 ] int 
  4596 ;;  p               2    6[BANK1 ] int 
  4597 ;;  ne              2    4[BANK1 ] int 
  4598 ;;  sign            1   38[BANK1 ] unsigned char 
  4599 ;;  nmode           1   14[BANK1 ] unsigned char 
  4600 ;;  mode            1   13[BANK1 ] unsigned char 
  4601 ;;  pp              1   12[BANK1 ] unsigned char 
  4602 ;;  esign           1    0        unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4612 ;;      Params:         0       5       0       0       0       0       0       0
  4613 ;;      Locals:         0       0      45       0       0       0       0       0
  4614 ;;      Temps:          0       0       4       0       0       0       0       0
  4615 ;;      Totals:         0       5      49       0       0       0       0       0
  4616 ;;Total ram usage:       54 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 4
  4619 ;; This function calls:
  4620 ;;		___fladd
  4621 ;;		___fldiv
  4622 ;;		___fleq
  4623 ;;		___flge
  4624 ;;		___flmul
  4625 ;;		___flneg
  4626 ;;		___flsub
  4627 ;;		___fltol
  4628 ;;		___fpclassifyf
  4629 ;;		_floorf
  4630 ;;		_labs
  4631 ;;		_memcpy
  4632 ;;		_pad
  4633 ;;		_strcpy
  4634 ;; This function is called by:
  4635 ;;		_vfpfcnvrt
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639     0222                     _efgtoa:	
  4640                           ;psect for function _efgtoa
  4641                           
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4645                           ;efgtoa@fp stored from wreg
  4646     0222  0021               	movlb	1	; select bank1
  4647     0223  00B3               	movwf	efgtoa@fp^(0+128)
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  4650     0224  01C6               	clrf	efgtoa@sign^(0+128)
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  4653     0225  0020               	movlb	0	; select bank0
  4654     0226  086B               	movf	efgtoa@f+3,w
  4655     0227  0021               	movlb	1	; select bank1
  4656     0228  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4657     0229  0020               	movlb	0	; select bank0
  4658     022A  086A               	movf	efgtoa@f+2,w
  4659     022B  0021               	movlb	1	; select bank1
  4660     022C  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4661     022D  0020               	movlb	0	; select bank0
  4662     022E  0869               	movf	efgtoa@f+1,w
  4663     022F  0021               	movlb	1	; select bank1
  4664     0230  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4665     0231  0020               	movlb	0	; select bank0
  4666     0232  0868               	movf	efgtoa@f,w
  4667     0233  0021               	movlb	1	; select bank1
  4668     0234  00C9               	movwf	efgtoa@g^(0+128)
  4669                           
  4670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  4671     0235  084C               	movf	(efgtoa@g+3)^(0+128),w
  4672     0236  0020               	movlb	0	; select bank0
  4673     0237  00BD               	movwf	___flge@ff1+3
  4674     0238  0021               	movlb	1	; select bank1
  4675     0239  084B               	movf	(efgtoa@g+2)^(0+128),w
  4676     023A  0020               	movlb	0	; select bank0
  4677     023B  00BC               	movwf	___flge@ff1+2
  4678     023C  0021               	movlb	1	; select bank1
  4679     023D  084A               	movf	(efgtoa@g+1)^(0+128),w
  4680     023E  0020               	movlb	0	; select bank0
  4681     023F  00BB               	movwf	___flge@ff1+1
  4682     0240  0021               	movlb	1	; select bank1
  4683     0241  0849               	movf	efgtoa@g^(0+128),w
  4684     0242  0020               	movlb	0	; select bank0
  4685     0243  00BA               	movwf	___flge@ff1
  4686     0244  3000               	movlw	0
  4687     0245  00C1               	movwf	___flge@ff2+3
  4688     0246  3000               	movlw	0
  4689     0247  00C0               	movwf	___flge@ff2+2
  4690     0248  3000               	movlw	0
  4691     0249  00BF               	movwf	___flge@ff2+1
  4692     024A  3000               	movlw	0
  4693     024B  00BE               	movwf	___flge@ff2
  4694     024C  3191  212D  3182   	fcall	___flge
  4695     024F  1803               	btfsc	3,0
  4696     0250  2A68               	goto	l3803
  4697                           
  4698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  4699     0251  0021               	movlb	1	; select bank1
  4700     0252  01C6               	clrf	efgtoa@sign^(0+128)
  4701     0253  0AC6               	incf	efgtoa@sign^(0+128),f
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  4704     0254  084C               	movf	(efgtoa@g+3)^(0+128),w
  4705     0255  00F3               	movwf	___flneg@f1+3
  4706     0256  084B               	movf	(efgtoa@g+2)^(0+128),w
  4707     0257  00F2               	movwf	___flneg@f1+2
  4708     0258  084A               	movf	(efgtoa@g+1)^(0+128),w
  4709     0259  00F1               	movwf	___flneg@f1+1
  4710     025A  0849               	movf	efgtoa@g^(0+128),w
  4711     025B  00F0               	movwf	___flneg@f1
  4712     025C  319C  240C  3182   	fcall	___flneg
  4713     025F  0873               	movf	?___flneg+3,w
  4714     0260  0021               	movlb	1	; select bank1
  4715     0261  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4716     0262  0872               	movf	?___flneg+2,w
  4717     0263  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4718     0264  0871               	movf	?___flneg+1,w
  4719     0265  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4720     0266  0870               	movf	?___flneg,w
  4721     0267  00C9               	movwf	efgtoa@g^(0+128)
  4722     0268                     l3803:
  4723                           
  4724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  4725     0268  0021               	movlb	1	; select bank1
  4726     0269  01C7               	clrf	efgtoa@n^(0+128)
  4727     026A  01C8               	clrf	(efgtoa@n+1)^(0+128)
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  4730     026B  0022               	movlb	2	; select bank2
  4731     026C  084C               	movf	(_width+1)^(0+256),w
  4732     026D  0021               	movlb	1	; select bank1
  4733     026E  00B7               	movwf	(efgtoa@w+1)^(0+128)
  4734     026F  0022               	movlb	2	; select bank2
  4735     0270  084B               	movf	_width^(0+256),w
  4736     0271  0021               	movlb	1	; select bank1
  4737     0272  00B6               	movwf	efgtoa@w^(0+128)
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  4740     0273  0846               	movf	efgtoa@sign^(0+128),w
  4741     0274  1903               	btfsc	3,2
  4742     0275  2A81               	goto	l3815
  4743                           
  4744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  4745     0276  0846               	movf	efgtoa@sign^(0+128),w
  4746     0277  1D03               	btfss	3,2
  4747     0278  2A7B               	goto	l3813
  4748     0279  302B               	movlw	43
  4749     027A  2A7C               	goto	L18
  4750     027B                     l3813:
  4751     027B  302D               	movlw	45
  4752     027C                     L18:
  4753     027C  00AA               	movwf	_efgtoa$955^(0+128)
  4754     027D  3000               	movlw	0
  4755     027E  00AB               	movwf	(_efgtoa$955^(0+128)+1)
  4756     027F  082A               	movf	_efgtoa$955^(0+128),w
  4757     0280  00C6               	movwf	efgtoa@sign^(0+128)
  4758     0281                     l3815:
  4759                           
  4760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4761     0281  084C               	movf	(efgtoa@g+3)^(0+128),w
  4762     0282  00F3               	movwf	___fpclassifyf@x+3
  4763     0283  084B               	movf	(efgtoa@g+2)^(0+128),w
  4764     0284  00F2               	movwf	___fpclassifyf@x+2
  4765     0285  084A               	movf	(efgtoa@g+1)^(0+128),w
  4766     0286  00F1               	movwf	___fpclassifyf@x+1
  4767     0287  0849               	movf	efgtoa@g^(0+128),w
  4768     0288  00F0               	movwf	___fpclassifyf@x
  4769     0289  3190  20B5  3182   	fcall	___fpclassifyf
  4770     028C  0370               	decf	?___fpclassifyf,w
  4771     028D  0471               	iorwf	?___fpclassifyf+1,w
  4772     028E  1D03               	btfss	3,2
  4773     028F  2AB8               	goto	l3827
  4774                           
  4775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  4776     0290  0021               	movlb	1	; select bank1
  4777     0291  0846               	movf	efgtoa@sign^(0+128),w
  4778     0292  1903               	btfsc	3,2
  4779     0293  2AA0               	goto	l3821
  4780                           
  4781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  4782     0294  0846               	movf	efgtoa@sign^(0+128),w
  4783     0295  0024               	movlb	4	; select bank4
  4784     0296  00A0               	movwf	_dbuf^(0+512)
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  4787     0297  30FF               	movlw	255
  4788     0298  0021               	movlb	1	; select bank1
  4789     0299  07B6               	addwf	efgtoa@w^(0+128),f
  4790     029A  30FF               	movlw	255
  4791     029B  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  4794     029C  3001               	movlw	1
  4795     029D  00C7               	movwf	efgtoa@n^(0+128)
  4796     029E  3000               	movlw	0
  4797     029F  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4798     02A0                     l3821:
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  4801     02A0  3082               	movlw	low (STR_15| (0+32768))
  4802     02A1  00F0               	movwf	strcpy@src
  4803     02A2  3098               	movlw	high (STR_15| (0+32768))
  4804     02A3  00F1               	movwf	strcpy@src+1
  4805     02A4  0847               	movf	efgtoa@n^(0+128),w
  4806     02A5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4807     02A6  319C  24A9  3182   	fcall	_strcpy
  4808                           
  4809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4810     02A9  30FD               	movlw	253
  4811     02AA  0021               	movlb	1	; select bank1
  4812     02AB  07B6               	addwf	efgtoa@w^(0+128),f
  4813     02AC  30FF               	movlw	255
  4814     02AD  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4815                           
  4816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4817     02AE  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4818     02AF  00FB               	movwf	pad@buf
  4819     02B0  0837               	movf	(efgtoa@w+1)^(0+128),w
  4820     02B1  00FD               	movwf	pad@p+1
  4821     02B2  0836               	movf	efgtoa@w^(0+128),w
  4822     02B3  00FC               	movwf	pad@p
  4823     02B4  0833               	movf	efgtoa@fp^(0+128),w
  4824     02B5  3190  200F         	fcall	_pad
  4825     02B7  0008               	return
  4826     02B8                     l3827:
  4827                           
  4828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4829     02B8  0021               	movlb	1	; select bank1
  4830     02B9  084C               	movf	(efgtoa@g+3)^(0+128),w
  4831     02BA  00F3               	movwf	___fpclassifyf@x+3
  4832     02BB  084B               	movf	(efgtoa@g+2)^(0+128),w
  4833     02BC  00F2               	movwf	___fpclassifyf@x+2
  4834     02BD  084A               	movf	(efgtoa@g+1)^(0+128),w
  4835     02BE  00F1               	movwf	___fpclassifyf@x+1
  4836     02BF  0849               	movf	efgtoa@g^(0+128),w
  4837     02C0  00F0               	movwf	___fpclassifyf@x
  4838     02C1  3190  20B5  3182   	fcall	___fpclassifyf
  4839     02C4  0870               	movf	?___fpclassifyf,w
  4840     02C5  0471               	iorwf	?___fpclassifyf+1,w
  4841     02C6  1D03               	btfss	3,2
  4842     02C7  2AF0               	goto	l3839
  4843                           
  4844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4845     02C8  0021               	movlb	1	; select bank1
  4846     02C9  0846               	movf	efgtoa@sign^(0+128),w
  4847     02CA  1903               	btfsc	3,2
  4848     02CB  2AD8               	goto	l3833
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4851     02CC  0846               	movf	efgtoa@sign^(0+128),w
  4852     02CD  0024               	movlb	4	; select bank4
  4853     02CE  00A0               	movwf	_dbuf^(0+512)
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4856     02CF  30FF               	movlw	255
  4857     02D0  0021               	movlb	1	; select bank1
  4858     02D1  07B6               	addwf	efgtoa@w^(0+128),f
  4859     02D2  30FF               	movlw	255
  4860     02D3  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4861                           
  4862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4863     02D4  3001               	movlw	1
  4864     02D5  00C7               	movwf	efgtoa@n^(0+128)
  4865     02D6  3000               	movlw	0
  4866     02D7  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4867     02D8                     l3833:
  4868                           
  4869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4870     02D8  3086               	movlw	low (STR_18| (0+32768))
  4871     02D9  00F0               	movwf	strcpy@src
  4872     02DA  3098               	movlw	high (STR_18| (0+32768))
  4873     02DB  00F1               	movwf	strcpy@src+1
  4874     02DC  0847               	movf	efgtoa@n^(0+128),w
  4875     02DD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4876     02DE  319C  24A9  3182   	fcall	_strcpy
  4877                           
  4878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 570:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 571:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  4879     02E1  30FD               	movlw	253
  4880     02E2  0021               	movlb	1	; select bank1
  4881     02E3  07B6               	addwf	efgtoa@w^(0+128),f
  4882     02E4  30FF               	movlw	255
  4883     02E5  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4884                           
  4885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 572:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4886     02E6  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4887     02E7  00FB               	movwf	pad@buf
  4888     02E8  0837               	movf	(efgtoa@w+1)^(0+128),w
  4889     02E9  00FD               	movwf	pad@p+1
  4890     02EA  0836               	movf	efgtoa@w^(0+128),w
  4891     02EB  00FC               	movwf	pad@p
  4892     02EC  0833               	movf	efgtoa@fp^(0+128),w
  4893     02ED  3190  200F         	fcall	_pad
  4894     02EF  0008               	return
  4895     02F0                     l3839:
  4896                           
  4897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4898     02F0  303F               	movlw	63
  4899     02F1  0021               	movlb	1	; select bank1
  4900     02F2  00D0               	movwf	(efgtoa@u+3)^(0+128)
  4901     02F3  3080               	movlw	128
  4902     02F4  00CF               	movwf	(efgtoa@u+2)^(0+128)
  4903     02F5  3000               	movlw	0
  4904     02F6  00CE               	movwf	(efgtoa@u+1)^(0+128)
  4905     02F7  3000               	movlw	0
  4906     02F8  00CD               	movwf	efgtoa@u^(0+128)
  4907                           
  4908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4909     02F9  01B4               	clrf	efgtoa@e^(0+128)
  4910     02FA  01B5               	clrf	(efgtoa@e+1)^(0+128)
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4913     02FB  084C               	movf	(efgtoa@g+3)^(0+128),w
  4914     02FC  00F3               	movwf	___fleq@ff1+3
  4915     02FD  084B               	movf	(efgtoa@g+2)^(0+128),w
  4916     02FE  00F2               	movwf	___fleq@ff1+2
  4917     02FF  084A               	movf	(efgtoa@g+1)^(0+128),w
  4918     0300  00F1               	movwf	___fleq@ff1+1
  4919     0301  0849               	movf	efgtoa@g^(0+128),w
  4920     0302  00F0               	movwf	___fleq@ff1
  4921     0303  3000               	movlw	0
  4922     0304  00F7               	movwf	___fleq@ff2+3
  4923     0305  3000               	movlw	0
  4924     0306  00F6               	movwf	___fleq@ff2+2
  4925     0307  3000               	movlw	0
  4926     0308  00F5               	movwf	___fleq@ff2+1
  4927     0309  3000               	movlw	0
  4928     030A  00F4               	movwf	___fleq@ff2
  4929     030B  319E  26B4  3182   	fcall	___fleq
  4930     030E  1C03               	btfss	3,0
  4931     030F  2B1E               	goto	l3849
  4932     0310  2C1C               	goto	l3869
  4933     0311                     l3847:
  4934                           
  4935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4936     0311  0021               	movlb	1	; select bank1
  4937     0312  083B               	movf	(efgtoa@ou+3)^(0+128),w
  4938     0313  00D0               	movwf	(efgtoa@u+3)^(0+128)
  4939     0314  083A               	movf	(efgtoa@ou+2)^(0+128),w
  4940     0315  00CF               	movwf	(efgtoa@u+2)^(0+128)
  4941     0316  0839               	movf	(efgtoa@ou+1)^(0+128),w
  4942     0317  00CE               	movwf	(efgtoa@u+1)^(0+128)
  4943     0318  0838               	movf	efgtoa@ou^(0+128),w
  4944     0319  00CD               	movwf	efgtoa@u^(0+128)
  4945                           
  4946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4947     031A  3001               	movlw	1
  4948     031B  07B4               	addwf	efgtoa@e^(0+128),f
  4949     031C  3000               	movlw	0
  4950     031D  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  4951     031E                     l3849:
  4952                           
  4953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4954     031E  3041               	movlw	65
  4955     031F  0020               	movlb	0	; select bank0
  4956     0320  00A3               	movwf	___flmul@b+3
  4957     0321  3020               	movlw	32
  4958     0322  00A2               	movwf	___flmul@b+2
  4959     0323  3000               	movlw	0
  4960     0324  00A1               	movwf	___flmul@b+1
  4961     0325  3000               	movlw	0
  4962     0326  00A0               	movwf	___flmul@b
  4963     0327  0021               	movlb	1	; select bank1
  4964     0328  0850               	movf	(efgtoa@u+3)^(0+128),w
  4965     0329  0020               	movlb	0	; select bank0
  4966     032A  00A7               	movwf	___flmul@a+3
  4967     032B  0021               	movlb	1	; select bank1
  4968     032C  084F               	movf	(efgtoa@u+2)^(0+128),w
  4969     032D  0020               	movlb	0	; select bank0
  4970     032E  00A6               	movwf	___flmul@a+2
  4971     032F  0021               	movlb	1	; select bank1
  4972     0330  084E               	movf	(efgtoa@u+1)^(0+128),w
  4973     0331  0020               	movlb	0	; select bank0
  4974     0332  00A5               	movwf	___flmul@a+1
  4975     0333  0021               	movlb	1	; select bank1
  4976     0334  084D               	movf	efgtoa@u^(0+128),w
  4977     0335  0020               	movlb	0	; select bank0
  4978     0336  00A4               	movwf	___flmul@a
  4979     0337  3180  2012  3182   	fcall	___flmul
  4980     033A  0020               	movlb	0	; select bank0
  4981     033B  0823               	movf	?___flmul+3,w
  4982     033C  0021               	movlb	1	; select bank1
  4983     033D  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  4984     033E  0020               	movlb	0	; select bank0
  4985     033F  0822               	movf	?___flmul+2,w
  4986     0340  0021               	movlb	1	; select bank1
  4987     0341  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  4988     0342  0020               	movlb	0	; select bank0
  4989     0343  0821               	movf	?___flmul+1,w
  4990     0344  0021               	movlb	1	; select bank1
  4991     0345  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  4992     0346  0020               	movlb	0	; select bank0
  4993     0347  0820               	movf	?___flmul,w
  4994     0348  0021               	movlb	1	; select bank1
  4995     0349  00B8               	movwf	efgtoa@ou^(0+128)
  4996     034A  0838               	movf	efgtoa@ou^(0+128),w
  4997     034B  0249               	subwf	efgtoa@g^(0+128),w
  4998     034C  00A0               	movwf	??_efgtoa^(0+128)
  4999     034D  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5000     034E  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5001     034F  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5002     0350  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5003     0351  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5004     0352  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5005     0353  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5006     0354  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5007     0355  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5008     0356  0823               	movf	(??_efgtoa+3)^(0+128),w
  5009     0357  00F3               	movwf	labs@a+3
  5010     0358  0822               	movf	(??_efgtoa+2)^(0+128),w
  5011     0359  00F2               	movwf	labs@a+2
  5012     035A  0821               	movf	(??_efgtoa+1)^(0+128),w
  5013     035B  00F1               	movwf	labs@a+1
  5014     035C  0820               	movf	??_efgtoa^(0+128),w
  5015     035D  00F0               	movwf	labs@a
  5016     035E  319D  2522  3182   	fcall	_labs
  5017     0361  1BF3               	btfsc	?_labs+3,7
  5018     0362  2B11               	goto	l3847
  5019     0363  0873               	movf	?_labs+3,w
  5020     0364  1D03               	btfss	3,2
  5021     0365  2B70               	goto	l3853
  5022     0366  0872               	movf	?_labs+2,w
  5023     0367  1D03               	btfss	3,2
  5024     0368  2B70               	goto	l3853
  5025     0369  0871               	movf	?_labs+1,w
  5026     036A  1D03               	btfss	3,2
  5027     036B  2B70               	goto	l3853
  5028     036C  3002               	movlw	2
  5029     036D  0270               	subwf	?_labs,w
  5030     036E  1C03               	btfss	3,0
  5031     036F  2B11               	goto	l3847
  5032     0370                     l3853:
  5033     0370  0021               	movlb	1	; select bank1
  5034     0371  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5035     0372  0020               	movlb	0	; select bank0
  5036     0373  00BD               	movwf	___flge@ff1+3
  5037     0374  0021               	movlb	1	; select bank1
  5038     0375  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5039     0376  0020               	movlb	0	; select bank0
  5040     0377  00BC               	movwf	___flge@ff1+2
  5041     0378  0021               	movlb	1	; select bank1
  5042     0379  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5043     037A  0020               	movlb	0	; select bank0
  5044     037B  00BB               	movwf	___flge@ff1+1
  5045     037C  0021               	movlb	1	; select bank1
  5046     037D  0838               	movf	efgtoa@ou^(0+128),w
  5047     037E  0020               	movlb	0	; select bank0
  5048     037F  00BA               	movwf	___flge@ff1
  5049     0380  0021               	movlb	1	; select bank1
  5050     0381  084C               	movf	(efgtoa@g+3)^(0+128),w
  5051     0382  0020               	movlb	0	; select bank0
  5052     0383  00C1               	movwf	___flge@ff2+3
  5053     0384  0021               	movlb	1	; select bank1
  5054     0385  084B               	movf	(efgtoa@g+2)^(0+128),w
  5055     0386  0020               	movlb	0	; select bank0
  5056     0387  00C0               	movwf	___flge@ff2+2
  5057     0388  0021               	movlb	1	; select bank1
  5058     0389  084A               	movf	(efgtoa@g+1)^(0+128),w
  5059     038A  0020               	movlb	0	; select bank0
  5060     038B  00BF               	movwf	___flge@ff2+1
  5061     038C  0021               	movlb	1	; select bank1
  5062     038D  0849               	movf	efgtoa@g^(0+128),w
  5063     038E  0020               	movlb	0	; select bank0
  5064     038F  00BE               	movwf	___flge@ff2
  5065     0390  3191  212D  3182   	fcall	___flge
  5066     0393  1C03               	btfss	3,0
  5067     0394  2B11               	goto	l3847
  5068                           
  5069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5070     0395  0021               	movlb	1	; select bank1
  5071     0396                     L19:
  5072     0396  084D               	movf	efgtoa@u^(0+128),w
  5073     0397  0249               	subwf	efgtoa@g^(0+128),w
  5074     0398  00A0               	movwf	??_efgtoa^(0+128)
  5075     0399  084E               	movf	(efgtoa@u+1)^(0+128),w
  5076     039A  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5077     039B  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5078     039C  084F               	movf	(efgtoa@u+2)^(0+128),w
  5079     039D  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5080     039E  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5081     039F  0850               	movf	(efgtoa@u+3)^(0+128),w
  5082     03A0  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5083     03A1  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5084     03A2  0823               	movf	(??_efgtoa+3)^(0+128),w
  5085     03A3  00F3               	movwf	labs@a+3
  5086     03A4  0822               	movf	(??_efgtoa+2)^(0+128),w
  5087     03A5  00F2               	movwf	labs@a+2
  5088     03A6  0821               	movf	(??_efgtoa+1)^(0+128),w
  5089     03A7  00F1               	movwf	labs@a+1
  5090     03A8  0820               	movf	??_efgtoa^(0+128),w
  5091     03A9  00F0               	movwf	labs@a
  5092     03AA  319D  2522  3182   	fcall	_labs
  5093     03AD  1BF3               	btfsc	?_labs+3,7
  5094     03AE  2BBC               	goto	l3857
  5095     03AF  0873               	movf	?_labs+3,w
  5096     03B0  1D03               	btfss	3,2
  5097     03B1  2BF7               	goto	l3867
  5098     03B2  0872               	movf	?_labs+2,w
  5099     03B3  1D03               	btfss	3,2
  5100     03B4  2BF7               	goto	l3867
  5101     03B5  0871               	movf	?_labs+1,w
  5102     03B6  1D03               	btfss	3,2
  5103     03B7  2BF7               	goto	l3867
  5104     03B8  3002               	movlw	2
  5105     03B9  0270               	subwf	?_labs,w
  5106     03BA  1803               	btfsc	3,0
  5107     03BB  2BF7               	goto	l3867
  5108     03BC                     l3857:
  5109                           
  5110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  5111     03BC  0021               	movlb	1	; select bank1
  5112     03BD  0850               	movf	(efgtoa@u+3)^(0+128),w
  5113     03BE  00CC               	movwf	(efgtoa@g+3)^(0+128)
  5114     03BF  084F               	movf	(efgtoa@u+2)^(0+128),w
  5115     03C0  00CB               	movwf	(efgtoa@g+2)^(0+128)
  5116     03C1  084E               	movf	(efgtoa@u+1)^(0+128),w
  5117     03C2  00CA               	movwf	(efgtoa@g+1)^(0+128)
  5118     03C3  084D               	movf	efgtoa@u^(0+128),w
  5119     03C4  00C9               	movwf	efgtoa@g^(0+128)
  5120                           
  5121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  5122     03C5  2C1C               	goto	l3869
  5123     03C6                     l3859:
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  5126     03C6  3041               	movlw	65
  5127     03C7  0020               	movlb	0	; select bank0
  5128     03C8  00BD               	movwf	___fldiv@a+3
  5129     03C9  3020               	movlw	32
  5130     03CA  00BC               	movwf	___fldiv@a+2
  5131     03CB  3000               	movlw	0
  5132     03CC  00BB               	movwf	___fldiv@a+1
  5133     03CD  3000               	movlw	0
  5134     03CE  00BA               	movwf	___fldiv@a
  5135     03CF  0021               	movlb	1	; select bank1
  5136     03D0  0850               	movf	(efgtoa@u+3)^(0+128),w
  5137     03D1  0020               	movlb	0	; select bank0
  5138     03D2  00C1               	movwf	___fldiv@b+3
  5139     03D3  0021               	movlb	1	; select bank1
  5140     03D4  084F               	movf	(efgtoa@u+2)^(0+128),w
  5141     03D5  0020               	movlb	0	; select bank0
  5142     03D6  00C0               	movwf	___fldiv@b+2
  5143     03D7  0021               	movlb	1	; select bank1
  5144     03D8  084E               	movf	(efgtoa@u+1)^(0+128),w
  5145     03D9  0020               	movlb	0	; select bank0
  5146     03DA  00BF               	movwf	___fldiv@b+1
  5147     03DB  0021               	movlb	1	; select bank1
  5148     03DC  084D               	movf	efgtoa@u^(0+128),w
  5149     03DD  0020               	movlb	0	; select bank0
  5150     03DE  00BE               	movwf	___fldiv@b
  5151     03DF  3196  2690  3182   	fcall	___fldiv
  5152     03E2  0020               	movlb	0	; select bank0
  5153     03E3  083D               	movf	?___fldiv+3,w
  5154     03E4  0021               	movlb	1	; select bank1
  5155     03E5  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5156     03E6  0020               	movlb	0	; select bank0
  5157     03E7  083C               	movf	?___fldiv+2,w
  5158     03E8  0021               	movlb	1	; select bank1
  5159     03E9  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5160     03EA  0020               	movlb	0	; select bank0
  5161     03EB  083B               	movf	?___fldiv+1,w
  5162     03EC  0021               	movlb	1	; select bank1
  5163     03ED  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5164     03EE  0020               	movlb	0	; select bank0
  5165     03EF  083A               	movf	?___fldiv,w
  5166     03F0  0021               	movlb	1	; select bank1
  5167     03F1  00CD               	movwf	efgtoa@u^(0+128)
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  5170     03F2  30FF               	movlw	255
  5171     03F3  07B4               	addwf	efgtoa@e^(0+128),f
  5172     03F4  30FF               	movlw	255
  5173     03F5  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5174     03F6  2B96               	goto	L19
  5175     03F7                     l3867:	
  5176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5177                           
  5178                           
  5179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  5180     03F7  0021               	movlb	1	; select bank1
  5181     03F8  084C               	movf	(efgtoa@g+3)^(0+128),w
  5182     03F9  0020               	movlb	0	; select bank0
  5183     03FA  00BD               	movwf	___flge@ff1+3
  5184     03FB  0021               	movlb	1	; select bank1
  5185     03FC  084B               	movf	(efgtoa@g+2)^(0+128),w
  5186     03FD  0020               	movlb	0	; select bank0
  5187     03FE  00BC               	movwf	___flge@ff1+2
  5188     03FF  0021               	movlb	1	; select bank1
  5189     0400  084A               	movf	(efgtoa@g+1)^(0+128),w
  5190     0401  0020               	movlb	0	; select bank0
  5191     0402  00BB               	movwf	___flge@ff1+1
  5192     0403  0021               	movlb	1	; select bank1
  5193     0404  0849               	movf	efgtoa@g^(0+128),w
  5194     0405  0020               	movlb	0	; select bank0
  5195     0406  00BA               	movwf	___flge@ff1
  5196     0407  0021               	movlb	1	; select bank1
  5197     0408  0850               	movf	(efgtoa@u+3)^(0+128),w
  5198     0409  0020               	movlb	0	; select bank0
  5199     040A  00C1               	movwf	___flge@ff2+3
  5200     040B  0021               	movlb	1	; select bank1
  5201     040C  084F               	movf	(efgtoa@u+2)^(0+128),w
  5202     040D  0020               	movlb	0	; select bank0
  5203     040E  00C0               	movwf	___flge@ff2+2
  5204     040F  0021               	movlb	1	; select bank1
  5205     0410  084E               	movf	(efgtoa@u+1)^(0+128),w
  5206     0411  0020               	movlb	0	; select bank0
  5207     0412  00BF               	movwf	___flge@ff2+1
  5208     0413  0021               	movlb	1	; select bank1
  5209     0414  084D               	movf	efgtoa@u^(0+128),w
  5210     0415  0020               	movlb	0	; select bank0
  5211     0416  00BE               	movwf	___flge@ff2
  5212     0417  3191  212D  3182   	fcall	___flge
  5213     041A  1C03               	btfss	3,0
  5214     041B  2BC6               	goto	l3859
  5215     041C                     l3869:
  5216                           
  5217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  5218     041C  0020               	movlb	0	; select bank0
  5219     041D  086C               	movf	efgtoa@c,w
  5220     041E  0021               	movlb	1	; select bank1
  5221     041F  00AD               	movwf	efgtoa@mode^(0+128)
  5222                           
  5223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  5224     0420  082D               	movf	efgtoa@mode^(0+128),w
  5225     0421  00AE               	movwf	efgtoa@nmode^(0+128)
  5226                           
  5227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  5228     0422  0022               	movlb	2	; select bank2
  5229     0423  1BCE               	btfsc	(_prec+1)^(0+256),7
  5230     0424  2C2D               	goto	l3875
  5231     0425  084E               	movf	(_prec+1)^(0+256),w
  5232     0426  0021               	movlb	1	; select bank1
  5233     0427  00A7               	movwf	(efgtoa@p+1)^(0+128)
  5234     0428  0022               	movlb	2	; select bank2
  5235     0429  084D               	movf	_prec^(0+256),w
  5236     042A  0021               	movlb	1	; select bank1
  5237     042B  00A6               	movwf	efgtoa@p^(0+128)
  5238     042C  2C32               	goto	l901
  5239     042D                     l3875:
  5240     042D  3006               	movlw	6
  5241     042E  0021               	movlb	1	; select bank1
  5242     042F  00A6               	movwf	efgtoa@p^(0+128)
  5243     0430  3000               	movlw	0
  5244     0431  00A7               	movwf	(efgtoa@p^(0+128)+1)
  5245     0432                     l901:
  5246                           
  5247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  5248     0432  0827               	movf	(efgtoa@p+1)^(0+128),w
  5249     0433  00B2               	movwf	(efgtoa@m+1)^(0+128)
  5250     0434  0826               	movf	efgtoa@p^(0+128),w
  5251     0435  00B1               	movwf	efgtoa@m^(0+128)
  5252                           
  5253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  5254     0436  3001               	movlw	1
  5255     0437  07B1               	addwf	efgtoa@m^(0+128),f
  5256     0438  3000               	movlw	0
  5257     0439  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5258                           
  5259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  5260     043A  3066               	movlw	102
  5261     043B  062E               	xorwf	efgtoa@nmode^(0+128),w
  5262     043C  1D03               	btfss	3,2
  5263     043D  2C52               	goto	l3889
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  5266     043E  1FB5               	btfss	(efgtoa@e+1)^(0+128),7
  5267     043F  2C4A               	goto	l3885
  5268                           
  5269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  5270     0440  303F               	movlw	63
  5271     0441  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5272     0442  3080               	movlw	128
  5273     0443  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5274     0444  3000               	movlw	0
  5275     0445  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5276     0446  3000               	movlw	0
  5277     0447  00CD               	movwf	efgtoa@u^(0+128)
  5278                           
  5279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  5280     0448  01B4               	clrf	efgtoa@e^(0+128)
  5281     0449  01B5               	clrf	(efgtoa@e+1)^(0+128)
  5282     044A                     l3885:
  5283                           
  5284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  5285     044A  3067               	movlw	103
  5286     044B  062D               	xorwf	efgtoa@mode^(0+128),w
  5287     044C  1903               	btfsc	3,2
  5288     044D  2C52               	goto	l3889
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  5291     044E  0834               	movf	efgtoa@e^(0+128),w
  5292     044F  07B1               	addwf	efgtoa@m^(0+128),f
  5293     0450  0835               	movf	(efgtoa@e+1)^(0+128),w
  5294     0451  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5295     0452                     l3889:
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  5298     0452  01BC               	clrf	efgtoa@i^(0+128)
  5299     0453  01BD               	clrf	(efgtoa@i+1)^(0+128)
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  5302     0454  084C               	movf	(efgtoa@g+3)^(0+128),w
  5303     0455  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5304     0456  084B               	movf	(efgtoa@g+2)^(0+128),w
  5305     0457  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5306     0458  084A               	movf	(efgtoa@g+1)^(0+128),w
  5307     0459  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5308     045A  0849               	movf	efgtoa@g^(0+128),w
  5309     045B  00BE               	movwf	efgtoa@h^(0+128)
  5310                           
  5311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  5312     045C  0850               	movf	(efgtoa@u+3)^(0+128),w
  5313     045D  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5314     045E  084F               	movf	(efgtoa@u+2)^(0+128),w
  5315     045F  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5316     0460  084E               	movf	(efgtoa@u+1)^(0+128),w
  5317     0461  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5318     0462  084D               	movf	efgtoa@u^(0+128),w
  5319     0463  00B8               	movwf	efgtoa@ou^(0+128)
  5320     0464                     l3899:	
  5321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5322                           
  5323                           
  5324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5325     0464  083D               	movf	(efgtoa@i+1)^(0+128),w
  5326     0465  3A80               	xorlw	128
  5327     0466  00A0               	movwf	??_efgtoa^(0+128)
  5328     0467  0832               	movf	(efgtoa@m+1)^(0+128),w
  5329     0468  3A80               	xorlw	128
  5330     0469  0220               	subwf	??_efgtoa^(0+128),w
  5331     046A  1D03               	skipz
  5332     046B  2C6E               	goto	u5435
  5333     046C  0831               	movf	efgtoa@m^(0+128),w
  5334     046D  023C               	subwf	efgtoa@i^(0+128),w
  5335     046E                     u5435:
  5336     046E  1803               	btfsc	3,0
  5337     046F  2D3E               	goto	l3901
  5338                           
  5339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  5340     0470  0021               	movlb	1	; select bank1
  5341     0471  0850               	movf	(efgtoa@u+3)^(0+128),w
  5342     0472  0020               	movlb	0	; select bank0
  5343     0473  00BD               	movwf	___fldiv@a+3
  5344     0474  0021               	movlb	1	; select bank1
  5345     0475  084F               	movf	(efgtoa@u+2)^(0+128),w
  5346     0476  0020               	movlb	0	; select bank0
  5347     0477  00BC               	movwf	___fldiv@a+2
  5348     0478  0021               	movlb	1	; select bank1
  5349     0479  084E               	movf	(efgtoa@u+1)^(0+128),w
  5350     047A  0020               	movlb	0	; select bank0
  5351     047B  00BB               	movwf	___fldiv@a+1
  5352     047C  0021               	movlb	1	; select bank1
  5353     047D  084D               	movf	efgtoa@u^(0+128),w
  5354     047E  0020               	movlb	0	; select bank0
  5355     047F  00BA               	movwf	___fldiv@a
  5356     0480  0021               	movlb	1	; select bank1
  5357     0481  0841               	movf	(efgtoa@h+3)^(0+128),w
  5358     0482  0020               	movlb	0	; select bank0
  5359     0483  00C1               	movwf	___fldiv@b+3
  5360     0484  0021               	movlb	1	; select bank1
  5361     0485  0840               	movf	(efgtoa@h+2)^(0+128),w
  5362     0486  0020               	movlb	0	; select bank0
  5363     0487  00C0               	movwf	___fldiv@b+2
  5364     0488  0021               	movlb	1	; select bank1
  5365     0489  083F               	movf	(efgtoa@h+1)^(0+128),w
  5366     048A  0020               	movlb	0	; select bank0
  5367     048B  00BF               	movwf	___fldiv@b+1
  5368     048C  0021               	movlb	1	; select bank1
  5369     048D  083E               	movf	efgtoa@h^(0+128),w
  5370     048E  0020               	movlb	0	; select bank0
  5371     048F  00BE               	movwf	___fldiv@b
  5372     0490  3196  2690  3182   	fcall	___fldiv
  5373     0493  0020               	movlb	0	; select bank0
  5374     0494  083D               	movf	?___fldiv+3,w
  5375     0495  00D7               	movwf	floorf@x+3
  5376     0496  083C               	movf	?___fldiv+2,w
  5377     0497  00D6               	movwf	floorf@x+2
  5378     0498  083B               	movf	?___fldiv+1,w
  5379     0499  00D5               	movwf	floorf@x+1
  5380     049A  083A               	movf	?___fldiv,w
  5381     049B  00D4               	movwf	floorf@x
  5382     049C  3192  22C7  3182   	fcall	_floorf
  5383     049F  0020               	movlb	0	; select bank0
  5384     04A0  0857               	movf	?_floorf+3,w
  5385     04A1  0021               	movlb	1	; select bank1
  5386     04A2  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5387     04A3  0020               	movlb	0	; select bank0
  5388     04A4  0856               	movf	?_floorf+2,w
  5389     04A5  0021               	movlb	1	; select bank1
  5390     04A6  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5391     04A7  0020               	movlb	0	; select bank0
  5392     04A8  0855               	movf	?_floorf+1,w
  5393     04A9  0021               	movlb	1	; select bank1
  5394     04AA  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5395     04AB  0020               	movlb	0	; select bank0
  5396     04AC  0854               	movf	?_floorf,w
  5397     04AD  0021               	movlb	1	; select bank1
  5398     04AE  00C2               	movwf	efgtoa@l^(0+128)
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  5401     04AF  0845               	movf	(efgtoa@l+3)^(0+128),w
  5402     04B0  00F3               	movwf	___fltol@f1+3
  5403     04B1  0844               	movf	(efgtoa@l+2)^(0+128),w
  5404     04B2  00F2               	movwf	___fltol@f1+2
  5405     04B3  0843               	movf	(efgtoa@l+1)^(0+128),w
  5406     04B4  00F1               	movwf	___fltol@f1+1
  5407     04B5  0842               	movf	efgtoa@l^(0+128),w
  5408     04B6  00F0               	movwf	___fltol@f1
  5409     04B7  319F  279F  3182   	fcall	___fltol
  5410     04BA  0871               	movf	?___fltol+1,w
  5411     04BB  0021               	movlb	1	; select bank1
  5412     04BC  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5413     04BD  0870               	movf	?___fltol,w
  5414     04BE  00AF               	movwf	efgtoa@d^(0+128)
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  5417     04BF  0850               	movf	(efgtoa@u+3)^(0+128),w
  5418     04C0  0020               	movlb	0	; select bank0
  5419     04C1  00A7               	movwf	___flmul@a+3
  5420     04C2  0021               	movlb	1	; select bank1
  5421     04C3  084F               	movf	(efgtoa@u+2)^(0+128),w
  5422     04C4  0020               	movlb	0	; select bank0
  5423     04C5  00A6               	movwf	___flmul@a+2
  5424     04C6  0021               	movlb	1	; select bank1
  5425     04C7  084E               	movf	(efgtoa@u+1)^(0+128),w
  5426     04C8  0020               	movlb	0	; select bank0
  5427     04C9  00A5               	movwf	___flmul@a+1
  5428     04CA  0021               	movlb	1	; select bank1
  5429     04CB  084D               	movf	efgtoa@u^(0+128),w
  5430     04CC  0020               	movlb	0	; select bank0
  5431     04CD  00A4               	movwf	___flmul@a
  5432     04CE  0021               	movlb	1	; select bank1
  5433     04CF  0845               	movf	(efgtoa@l+3)^(0+128),w
  5434     04D0  0020               	movlb	0	; select bank0
  5435     04D1  00A3               	movwf	___flmul@b+3
  5436     04D2  0021               	movlb	1	; select bank1
  5437     04D3  0844               	movf	(efgtoa@l+2)^(0+128),w
  5438     04D4  0020               	movlb	0	; select bank0
  5439     04D5  00A2               	movwf	___flmul@b+2
  5440     04D6  0021               	movlb	1	; select bank1
  5441     04D7  0843               	movf	(efgtoa@l+1)^(0+128),w
  5442     04D8  0020               	movlb	0	; select bank0
  5443     04D9  00A1               	movwf	___flmul@b+1
  5444     04DA  0021               	movlb	1	; select bank1
  5445     04DB  0842               	movf	efgtoa@l^(0+128),w
  5446     04DC  0020               	movlb	0	; select bank0
  5447     04DD  00A0               	movwf	___flmul@b
  5448     04DE  3180  2012  3182   	fcall	___flmul
  5449     04E1  0020               	movlb	0	; select bank0
  5450     04E2  0823               	movf	?___flmul+3,w
  5451     04E3  00BD               	movwf	___flsub@a+3
  5452     04E4  0822               	movf	?___flmul+2,w
  5453     04E5  00BC               	movwf	___flsub@a+2
  5454     04E6  0821               	movf	?___flmul+1,w
  5455     04E7  00BB               	movwf	___flsub@a+1
  5456     04E8  0820               	movf	?___flmul,w
  5457     04E9  00BA               	movwf	___flsub@a
  5458     04EA  0021               	movlb	1	; select bank1
  5459     04EB  0841               	movf	(efgtoa@h+3)^(0+128),w
  5460     04EC  0020               	movlb	0	; select bank0
  5461     04ED  00C1               	movwf	___flsub@b+3
  5462     04EE  0021               	movlb	1	; select bank1
  5463     04EF  0840               	movf	(efgtoa@h+2)^(0+128),w
  5464     04F0  0020               	movlb	0	; select bank0
  5465     04F1  00C0               	movwf	___flsub@b+2
  5466     04F2  0021               	movlb	1	; select bank1
  5467     04F3  083F               	movf	(efgtoa@h+1)^(0+128),w
  5468     04F4  0020               	movlb	0	; select bank0
  5469     04F5  00BF               	movwf	___flsub@b+1
  5470     04F6  0021               	movlb	1	; select bank1
  5471     04F7  083E               	movf	efgtoa@h^(0+128),w
  5472     04F8  0020               	movlb	0	; select bank0
  5473     04F9  00BE               	movwf	___flsub@b
  5474     04FA  319D  2503  3182   	fcall	___flsub
  5475     04FD  0020               	movlb	0	; select bank0
  5476     04FE  083D               	movf	?___flsub+3,w
  5477     04FF  0021               	movlb	1	; select bank1
  5478     0500  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5479     0501  0020               	movlb	0	; select bank0
  5480     0502  083C               	movf	?___flsub+2,w
  5481     0503  0021               	movlb	1	; select bank1
  5482     0504  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5483     0505  0020               	movlb	0	; select bank0
  5484     0506  083B               	movf	?___flsub+1,w
  5485     0507  0021               	movlb	1	; select bank1
  5486     0508  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5487     0509  0020               	movlb	0	; select bank0
  5488     050A  083A               	movf	?___flsub,w
  5489     050B  0021               	movlb	1	; select bank1
  5490     050C  00BE               	movwf	efgtoa@h^(0+128)
  5491                           
  5492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  5493     050D  3041               	movlw	65
  5494     050E  0020               	movlb	0	; select bank0
  5495     050F  00BD               	movwf	___fldiv@a+3
  5496     0510  3020               	movlw	32
  5497     0511  00BC               	movwf	___fldiv@a+2
  5498     0512  3000               	movlw	0
  5499     0513  00BB               	movwf	___fldiv@a+1
  5500     0514  3000               	movlw	0
  5501     0515  00BA               	movwf	___fldiv@a
  5502     0516  0021               	movlb	1	; select bank1
  5503     0517  0850               	movf	(efgtoa@u+3)^(0+128),w
  5504     0518  0020               	movlb	0	; select bank0
  5505     0519  00C1               	movwf	___fldiv@b+3
  5506     051A  0021               	movlb	1	; select bank1
  5507     051B  084F               	movf	(efgtoa@u+2)^(0+128),w
  5508     051C  0020               	movlb	0	; select bank0
  5509     051D  00C0               	movwf	___fldiv@b+2
  5510     051E  0021               	movlb	1	; select bank1
  5511     051F  084E               	movf	(efgtoa@u+1)^(0+128),w
  5512     0520  0020               	movlb	0	; select bank0
  5513     0521  00BF               	movwf	___fldiv@b+1
  5514     0522  0021               	movlb	1	; select bank1
  5515     0523  084D               	movf	efgtoa@u^(0+128),w
  5516     0524  0020               	movlb	0	; select bank0
  5517     0525  00BE               	movwf	___fldiv@b
  5518     0526  3196  2690  3182   	fcall	___fldiv
  5519     0529  0020               	movlb	0	; select bank0
  5520     052A  083D               	movf	?___fldiv+3,w
  5521     052B  0021               	movlb	1	; select bank1
  5522     052C  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5523     052D  0020               	movlb	0	; select bank0
  5524     052E  083C               	movf	?___fldiv+2,w
  5525     052F  0021               	movlb	1	; select bank1
  5526     0530  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5527     0531  0020               	movlb	0	; select bank0
  5528     0532  083B               	movf	?___fldiv+1,w
  5529     0533  0021               	movlb	1	; select bank1
  5530     0534  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5531     0535  0020               	movlb	0	; select bank0
  5532     0536  083A               	movf	?___fldiv,w
  5533     0537  0021               	movlb	1	; select bank1
  5534     0538  00CD               	movwf	efgtoa@u^(0+128)
  5535                           
  5536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  5537     0539  3001               	movlw	1
  5538     053A  07BC               	addwf	efgtoa@i^(0+128),f
  5539     053B  3000               	movlw	0
  5540     053C  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  5541     053D  2C64               	goto	l3899
  5542     053E                     l3901:
  5543                           
  5544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  5545     053E  3040               	movlw	64
  5546     053F  0020               	movlb	0	; select bank0
  5547     0540  00A3               	movwf	___flmul@b+3
  5548     0541  30A0               	movlw	160
  5549     0542  00A2               	movwf	___flmul@b+2
  5550     0543  3000               	movlw	0
  5551     0544  00A1               	movwf	___flmul@b+1
  5552     0545  3000               	movlw	0
  5553     0546  00A0               	movwf	___flmul@b
  5554     0547  0021               	movlb	1	; select bank1
  5555     0548  0850               	movf	(efgtoa@u+3)^(0+128),w
  5556     0549  0020               	movlb	0	; select bank0
  5557     054A  00A7               	movwf	___flmul@a+3
  5558     054B  0021               	movlb	1	; select bank1
  5559     054C  084F               	movf	(efgtoa@u+2)^(0+128),w
  5560     054D  0020               	movlb	0	; select bank0
  5561     054E  00A6               	movwf	___flmul@a+2
  5562     054F  0021               	movlb	1	; select bank1
  5563     0550  084E               	movf	(efgtoa@u+1)^(0+128),w
  5564     0551  0020               	movlb	0	; select bank0
  5565     0552  00A5               	movwf	___flmul@a+1
  5566     0553  0021               	movlb	1	; select bank1
  5567     0554  084D               	movf	efgtoa@u^(0+128),w
  5568     0555  0020               	movlb	0	; select bank0
  5569     0556  00A4               	movwf	___flmul@a
  5570     0557  3180  2012  3182   	fcall	___flmul
  5571     055A  0020               	movlb	0	; select bank0
  5572     055B  0823               	movf	?___flmul+3,w
  5573     055C  0021               	movlb	1	; select bank1
  5574     055D  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5575     055E  0020               	movlb	0	; select bank0
  5576     055F  0822               	movf	?___flmul+2,w
  5577     0560  0021               	movlb	1	; select bank1
  5578     0561  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5579     0562  0020               	movlb	0	; select bank0
  5580     0563  0821               	movf	?___flmul+1,w
  5581     0564  0021               	movlb	1	; select bank1
  5582     0565  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5583     0566  0020               	movlb	0	; select bank0
  5584     0567  0820               	movf	?___flmul,w
  5585     0568  0021               	movlb	1	; select bank1
  5586     0569  00C2               	movwf	efgtoa@l^(0+128)
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  5589     056A  0841               	movf	(efgtoa@h+3)^(0+128),w
  5590     056B  0020               	movlb	0	; select bank0
  5591     056C  00BD               	movwf	___flge@ff1+3
  5592     056D  0021               	movlb	1	; select bank1
  5593     056E  0840               	movf	(efgtoa@h+2)^(0+128),w
  5594     056F  0020               	movlb	0	; select bank0
  5595     0570  00BC               	movwf	___flge@ff1+2
  5596     0571  0021               	movlb	1	; select bank1
  5597     0572  083F               	movf	(efgtoa@h+1)^(0+128),w
  5598     0573  0020               	movlb	0	; select bank0
  5599     0574  00BB               	movwf	___flge@ff1+1
  5600     0575  0021               	movlb	1	; select bank1
  5601     0576  083E               	movf	efgtoa@h^(0+128),w
  5602     0577  0020               	movlb	0	; select bank0
  5603     0578  00BA               	movwf	___flge@ff1
  5604     0579  0021               	movlb	1	; select bank1
  5605     057A  0845               	movf	(efgtoa@l+3)^(0+128),w
  5606     057B  0020               	movlb	0	; select bank0
  5607     057C  00C1               	movwf	___flge@ff2+3
  5608     057D  0021               	movlb	1	; select bank1
  5609     057E  0844               	movf	(efgtoa@l+2)^(0+128),w
  5610     057F  0020               	movlb	0	; select bank0
  5611     0580  00C0               	movwf	___flge@ff2+2
  5612     0581  0021               	movlb	1	; select bank1
  5613     0582  0843               	movf	(efgtoa@l+1)^(0+128),w
  5614     0583  0020               	movlb	0	; select bank0
  5615     0584  00BF               	movwf	___flge@ff2+1
  5616     0585  0021               	movlb	1	; select bank1
  5617     0586  0842               	movf	efgtoa@l^(0+128),w
  5618     0587  0020               	movlb	0	; select bank0
  5619     0588  00BE               	movwf	___flge@ff2
  5620     0589  3191  212D  3182   	fcall	___flge
  5621     058C  1803               	btfsc	3,0
  5622     058D  2D91               	goto	l3905
  5623                           
  5624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  5625     058E  3000               	movlw	0
  5626     058F  0021               	movlb	1	; select bank1
  5627     0590  2DAB               	goto	L20
  5628     0591                     l3905:	
  5629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  5630                           
  5631                           
  5632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  5633     0591  0021               	movlb	1	; select bank1
  5634     0592  0841               	movf	(efgtoa@h+3)^(0+128),w
  5635     0593  00F3               	movwf	___fleq@ff1+3
  5636     0594  0840               	movf	(efgtoa@h+2)^(0+128),w
  5637     0595  00F2               	movwf	___fleq@ff1+2
  5638     0596  083F               	movf	(efgtoa@h+1)^(0+128),w
  5639     0597  00F1               	movwf	___fleq@ff1+1
  5640     0598  083E               	movf	efgtoa@h^(0+128),w
  5641     0599  00F0               	movwf	___fleq@ff1
  5642     059A  0845               	movf	(efgtoa@l+3)^(0+128),w
  5643     059B  00F7               	movwf	___fleq@ff2+3
  5644     059C  0844               	movf	(efgtoa@l+2)^(0+128),w
  5645     059D  00F6               	movwf	___fleq@ff2+2
  5646     059E  0843               	movf	(efgtoa@l+1)^(0+128),w
  5647     059F  00F5               	movwf	___fleq@ff2+1
  5648     05A0  0842               	movf	efgtoa@l^(0+128),w
  5649     05A1  00F4               	movwf	___fleq@ff2
  5650     05A2  319E  26B4  3182   	fcall	___fleq
  5651     05A5  1C03               	btfss	3,0
  5652     05A6  2DB2               	goto	l3911
  5653     05A7  0021               	movlb	1	; select bank1
  5654     05A8  182F               	btfsc	efgtoa@d^(0+128),0
  5655     05A9  2DB2               	goto	l3911
  5656                           
  5657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  5658     05AA  3000               	movlw	0
  5659     05AB                     L20:
  5660     05AB  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5661     05AC  3000               	movlw	0
  5662     05AD  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5663     05AE  3000               	movlw	0
  5664     05AF  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5665     05B0  3000               	movlw	0
  5666     05B1  00C2               	movwf	efgtoa@l^(0+128)
  5667     05B2                     l3911:
  5668                           
  5669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  5670     05B2  0021               	movlb	1	; select bank1
  5671     05B3  0845               	movf	(efgtoa@l+3)^(0+128),w
  5672     05B4  00F3               	movwf	___fladd@b+3
  5673     05B5  0844               	movf	(efgtoa@l+2)^(0+128),w
  5674     05B6  00F2               	movwf	___fladd@b+2
  5675     05B7  0843               	movf	(efgtoa@l+1)^(0+128),w
  5676     05B8  00F1               	movwf	___fladd@b+1
  5677     05B9  0842               	movf	efgtoa@l^(0+128),w
  5678     05BA  00F0               	movwf	___fladd@b
  5679     05BB  084C               	movf	(efgtoa@g+3)^(0+128),w
  5680     05BC  00F7               	movwf	___fladd@a+3
  5681     05BD  084B               	movf	(efgtoa@g+2)^(0+128),w
  5682     05BE  00F6               	movwf	___fladd@a+2
  5683     05BF  084A               	movf	(efgtoa@g+1)^(0+128),w
  5684     05C0  00F5               	movwf	___fladd@a+1
  5685     05C1  0849               	movf	efgtoa@g^(0+128),w
  5686     05C2  00F4               	movwf	___fladd@a
  5687     05C3  3188  2073  3182   	fcall	___fladd
  5688     05C6  0873               	movf	?___fladd+3,w
  5689     05C7  0021               	movlb	1	; select bank1
  5690     05C8  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5691     05C9  0872               	movf	?___fladd+2,w
  5692     05CA  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5693     05CB  0871               	movf	?___fladd+1,w
  5694     05CC  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5695     05CD  0870               	movf	?___fladd,w
  5696     05CE  00BE               	movwf	efgtoa@h^(0+128)
  5697                           
  5698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  5699     05CF  0841               	movf	(efgtoa@h+3)^(0+128),w
  5700     05D0  0020               	movlb	0	; select bank0
  5701     05D1  00BD               	movwf	___flge@ff1+3
  5702     05D2  0021               	movlb	1	; select bank1
  5703     05D3  0840               	movf	(efgtoa@h+2)^(0+128),w
  5704     05D4  0020               	movlb	0	; select bank0
  5705     05D5  00BC               	movwf	___flge@ff1+2
  5706     05D6  0021               	movlb	1	; select bank1
  5707     05D7  083F               	movf	(efgtoa@h+1)^(0+128),w
  5708     05D8  0020               	movlb	0	; select bank0
  5709     05D9  00BB               	movwf	___flge@ff1+1
  5710     05DA  0021               	movlb	1	; select bank1
  5711     05DB  083E               	movf	efgtoa@h^(0+128),w
  5712     05DC  0020               	movlb	0	; select bank0
  5713     05DD  00BA               	movwf	___flge@ff1
  5714     05DE  3041               	movlw	65
  5715     05DF  00A3               	movwf	___flmul@b+3
  5716     05E0  3020               	movlw	32
  5717     05E1  00A2               	movwf	___flmul@b+2
  5718     05E2  3000               	movlw	0
  5719     05E3  00A1               	movwf	___flmul@b+1
  5720     05E4  3000               	movlw	0
  5721     05E5  00A0               	movwf	___flmul@b
  5722     05E6  0021               	movlb	1	; select bank1
  5723     05E7  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5724     05E8  0020               	movlb	0	; select bank0
  5725     05E9  00A7               	movwf	___flmul@a+3
  5726     05EA  0021               	movlb	1	; select bank1
  5727     05EB  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5728     05EC  0020               	movlb	0	; select bank0
  5729     05ED  00A6               	movwf	___flmul@a+2
  5730     05EE  0021               	movlb	1	; select bank1
  5731     05EF  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5732     05F0  0020               	movlb	0	; select bank0
  5733     05F1  00A5               	movwf	___flmul@a+1
  5734     05F2  0021               	movlb	1	; select bank1
  5735     05F3  0838               	movf	efgtoa@ou^(0+128),w
  5736     05F4  0020               	movlb	0	; select bank0
  5737     05F5  00A4               	movwf	___flmul@a
  5738     05F6  3180  2012  3182   	fcall	___flmul
  5739     05F9  0020               	movlb	0	; select bank0
  5740     05FA  0823               	movf	?___flmul+3,w
  5741     05FB  00C1               	movwf	___flge@ff2+3
  5742     05FC  0822               	movf	?___flmul+2,w
  5743     05FD  00C0               	movwf	___flge@ff2+2
  5744     05FE  0821               	movf	?___flmul+1,w
  5745     05FF  00BF               	movwf	___flge@ff2+1
  5746     0600  0820               	movf	?___flmul,w
  5747     0601  00BE               	movwf	___flge@ff2
  5748     0602  3191  212D  3182   	fcall	___flge
  5749     0605  1C03               	btfss	3,0
  5750     0606  2E40               	goto	l911
  5751                           
  5752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  5753     0607  3001               	movlw	1
  5754     0608  0021               	movlb	1	; select bank1
  5755     0609  07B4               	addwf	efgtoa@e^(0+128),f
  5756     060A  3000               	movlw	0
  5757     060B  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5758                           
  5759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  5760     060C  3041               	movlw	65
  5761     060D  0020               	movlb	0	; select bank0
  5762     060E  00A3               	movwf	___flmul@b+3
  5763     060F  3020               	movlw	32
  5764     0610  00A2               	movwf	___flmul@b+2
  5765     0611  3000               	movlw	0
  5766     0612  00A1               	movwf	___flmul@b+1
  5767     0613  3000               	movlw	0
  5768     0614  00A0               	movwf	___flmul@b
  5769     0615  0021               	movlb	1	; select bank1
  5770     0616  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5771     0617  0020               	movlb	0	; select bank0
  5772     0618  00A7               	movwf	___flmul@a+3
  5773     0619  0021               	movlb	1	; select bank1
  5774     061A  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5775     061B  0020               	movlb	0	; select bank0
  5776     061C  00A6               	movwf	___flmul@a+2
  5777     061D  0021               	movlb	1	; select bank1
  5778     061E  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5779     061F  0020               	movlb	0	; select bank0
  5780     0620  00A5               	movwf	___flmul@a+1
  5781     0621  0021               	movlb	1	; select bank1
  5782     0622  0838               	movf	efgtoa@ou^(0+128),w
  5783     0623  0020               	movlb	0	; select bank0
  5784     0624  00A4               	movwf	___flmul@a
  5785     0625  3180  2012  3182   	fcall	___flmul
  5786     0628  0020               	movlb	0	; select bank0
  5787     0629  0823               	movf	?___flmul+3,w
  5788     062A  0021               	movlb	1	; select bank1
  5789     062B  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5790     062C  0020               	movlb	0	; select bank0
  5791     062D  0822               	movf	?___flmul+2,w
  5792     062E  0021               	movlb	1	; select bank1
  5793     062F  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5794     0630  0020               	movlb	0	; select bank0
  5795     0631  0821               	movf	?___flmul+1,w
  5796     0632  0021               	movlb	1	; select bank1
  5797     0633  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5798     0634  0020               	movlb	0	; select bank0
  5799     0635  0820               	movf	?___flmul,w
  5800     0636  0021               	movlb	1	; select bank1
  5801     0637  00B8               	movwf	efgtoa@ou^(0+128)
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  5804     0638  3066               	movlw	102
  5805     0639  062E               	xorwf	efgtoa@nmode^(0+128),w
  5806     063A  1D03               	btfss	3,2
  5807     063B  2E40               	goto	l911
  5808                           
  5809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  5810     063C  3001               	movlw	1
  5811     063D  07B1               	addwf	efgtoa@m^(0+128),f
  5812     063E  3000               	movlw	0
  5813     063F  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5814     0640                     l911:	
  5815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 686:  }
  5816                           
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  5819     0640  0021               	movlb	1	; select bank1
  5820     0641  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5821     0642  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5822     0643  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5823     0644  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5824     0645  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5825     0646  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5826     0647  0838               	movf	efgtoa@ou^(0+128),w
  5827     0648  00CD               	movwf	efgtoa@u^(0+128)
  5828                           
  5829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  5830     0649  0835               	movf	(efgtoa@e+1)^(0+128),w
  5831     064A  00A5               	movwf	(efgtoa@ne+1)^(0+128)
  5832     064B  0834               	movf	efgtoa@e^(0+128),w
  5833     064C  00A4               	movwf	efgtoa@ne^(0+128)
  5834                           
  5835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  5836     064D  01AC               	clrf	efgtoa@pp^(0+128)
  5837                           
  5838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  5839     064E  01A8               	clrf	efgtoa@t^(0+128)
  5840     064F  01A9               	clrf	(efgtoa@t+1)^(0+128)
  5841                           
  5842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  5843     0650  01BC               	clrf	efgtoa@i^(0+128)
  5844     0651  01BD               	clrf	(efgtoa@i+1)^(0+128)
  5845                           
  5846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5847     0652  2F7F               	goto	l3971
  5848     0653                     l3929:
  5849                           
  5850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  5851     0653  0021               	movlb	1	; select bank1
  5852     0654  0850               	movf	(efgtoa@u+3)^(0+128),w
  5853     0655  0020               	movlb	0	; select bank0
  5854     0656  00BD               	movwf	___fldiv@a+3
  5855     0657  0021               	movlb	1	; select bank1
  5856     0658  084F               	movf	(efgtoa@u+2)^(0+128),w
  5857     0659  0020               	movlb	0	; select bank0
  5858     065A  00BC               	movwf	___fldiv@a+2
  5859     065B  0021               	movlb	1	; select bank1
  5860     065C  084E               	movf	(efgtoa@u+1)^(0+128),w
  5861     065D  0020               	movlb	0	; select bank0
  5862     065E  00BB               	movwf	___fldiv@a+1
  5863     065F  0021               	movlb	1	; select bank1
  5864     0660  084D               	movf	efgtoa@u^(0+128),w
  5865     0661  0020               	movlb	0	; select bank0
  5866     0662  00BA               	movwf	___fldiv@a
  5867     0663  0021               	movlb	1	; select bank1
  5868     0664  0841               	movf	(efgtoa@h+3)^(0+128),w
  5869     0665  0020               	movlb	0	; select bank0
  5870     0666  00C1               	movwf	___fldiv@b+3
  5871     0667  0021               	movlb	1	; select bank1
  5872     0668  0840               	movf	(efgtoa@h+2)^(0+128),w
  5873     0669  0020               	movlb	0	; select bank0
  5874     066A  00C0               	movwf	___fldiv@b+2
  5875     066B  0021               	movlb	1	; select bank1
  5876     066C  083F               	movf	(efgtoa@h+1)^(0+128),w
  5877     066D  0020               	movlb	0	; select bank0
  5878     066E  00BF               	movwf	___fldiv@b+1
  5879     066F  0021               	movlb	1	; select bank1
  5880     0670  083E               	movf	efgtoa@h^(0+128),w
  5881     0671  0020               	movlb	0	; select bank0
  5882     0672  00BE               	movwf	___fldiv@b
  5883     0673  3196  2690  3182   	fcall	___fldiv
  5884     0676  0020               	movlb	0	; select bank0
  5885     0677  083D               	movf	?___fldiv+3,w
  5886     0678  00D7               	movwf	floorf@x+3
  5887     0679  083C               	movf	?___fldiv+2,w
  5888     067A  00D6               	movwf	floorf@x+2
  5889     067B  083B               	movf	?___fldiv+1,w
  5890     067C  00D5               	movwf	floorf@x+1
  5891     067D  083A               	movf	?___fldiv,w
  5892     067E  00D4               	movwf	floorf@x
  5893     067F  3192  22C7  3182   	fcall	_floorf
  5894     0682  0020               	movlb	0	; select bank0
  5895     0683  0857               	movf	?_floorf+3,w
  5896     0684  0021               	movlb	1	; select bank1
  5897     0685  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5898     0686  0020               	movlb	0	; select bank0
  5899     0687  0856               	movf	?_floorf+2,w
  5900     0688  0021               	movlb	1	; select bank1
  5901     0689  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5902     068A  0020               	movlb	0	; select bank0
  5903     068B  0855               	movf	?_floorf+1,w
  5904     068C  0021               	movlb	1	; select bank1
  5905     068D  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5906     068E  0020               	movlb	0	; select bank0
  5907     068F  0854               	movf	?_floorf,w
  5908     0690  0021               	movlb	1	; select bank1
  5909     0691  00C2               	movwf	efgtoa@l^(0+128)
  5910                           
  5911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5912     0692  0845               	movf	(efgtoa@l+3)^(0+128),w
  5913     0693  00F3               	movwf	___fltol@f1+3
  5914     0694  0844               	movf	(efgtoa@l+2)^(0+128),w
  5915     0695  00F2               	movwf	___fltol@f1+2
  5916     0696  0843               	movf	(efgtoa@l+1)^(0+128),w
  5917     0697  00F1               	movwf	___fltol@f1+1
  5918     0698  0842               	movf	efgtoa@l^(0+128),w
  5919     0699  00F0               	movwf	___fltol@f1
  5920     069A  319F  279F  3182   	fcall	___fltol
  5921     069D  0871               	movf	?___fltol+1,w
  5922     069E  3A80               	xorlw	128
  5923     069F  0021               	movlb	1	; select bank1
  5924     06A0  00A0               	movwf	??_efgtoa^(0+128)
  5925     06A1  3080               	movlw	128
  5926     06A2  0220               	subwf	??_efgtoa^(0+128),w
  5927     06A3  1D03               	skipz
  5928     06A4  2EA7               	goto	u5495
  5929     06A5  300A               	movlw	10
  5930     06A6  0270               	subwf	?___fltol,w
  5931     06A7                     u5495:
  5932     06A7  1803               	skipnc
  5933     06A8  2EBB               	goto	l3933
  5934     06A9  0021               	movlb	1	; select bank1
  5935     06AA  0845               	movf	(efgtoa@l+3)^(0+128),w
  5936     06AB  00F3               	movwf	___fltol@f1+3
  5937     06AC  0844               	movf	(efgtoa@l+2)^(0+128),w
  5938     06AD  00F2               	movwf	___fltol@f1+2
  5939     06AE  0843               	movf	(efgtoa@l+1)^(0+128),w
  5940     06AF  00F1               	movwf	___fltol@f1+1
  5941     06B0  0842               	movf	efgtoa@l^(0+128),w
  5942     06B1  00F0               	movwf	___fltol@f1
  5943     06B2  319F  279F  3182   	fcall	___fltol
  5944     06B5  0871               	movf	?___fltol+1,w
  5945     06B6  0021               	movlb	1	; select bank1
  5946     06B7  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5947     06B8  0870               	movf	?___fltol,w
  5948     06B9  00AF               	movwf	efgtoa@d^(0+128)
  5949     06BA  2EC0               	goto	l3935
  5950     06BB                     l3933:
  5951     06BB  3009               	movlw	9
  5952     06BC  0021               	movlb	1	; select bank1
  5953     06BD  00AF               	movwf	efgtoa@d^(0+128)
  5954     06BE  3000               	movlw	0
  5955     06BF  00B0               	movwf	(efgtoa@d^(0+128)+1)
  5956     06C0                     l3935:
  5957                           
  5958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  5959     06C0  082C               	movf	efgtoa@pp^(0+128),w
  5960     06C1  1903               	btfsc	3,2
  5961     06C2  1FA5               	btfss	(efgtoa@ne+1)^(0+128),7
  5962     06C3  2ED5               	goto	l3955
  5963                           
  5964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  5965     06C4  0847               	movf	efgtoa@n^(0+128),w
  5966     06C5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5967     06C6  0086               	movwf	6
  5968     06C7  3002               	movlw	2	; select bank4/5
  5969     06C8  0087               	movwf	7
  5970     06C9  302E               	movlw	46
  5971     06CA  0081               	movwf	1
  5972     06CB  3001               	movlw	1
  5973     06CC  07C7               	addwf	efgtoa@n^(0+128),f
  5974     06CD  3000               	movlw	0
  5975     06CE  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  5976                           
  5977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  5978     06CF  30FF               	movlw	255
  5979     06D0  07B6               	addwf	efgtoa@w^(0+128),f
  5980     06D1  30FF               	movlw	255
  5981     06D2  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  5982                           
  5983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  5984     06D3  01AC               	clrf	efgtoa@pp^(0+128)
  5985     06D4  0AAC               	incf	efgtoa@pp^(0+128),f
  5986     06D5                     l3955:
  5987                           
  5988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  5989     06D5  0828               	movf	efgtoa@t^(0+128),w
  5990     06D6  0429               	iorwf	(efgtoa@t+1)^(0+128),w
  5991     06D7  1903               	btfsc	3,2
  5992     06D8  2EED               	goto	l3957
  5993                           
  5994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  5995     06D9  0847               	movf	efgtoa@n^(0+128),w
  5996     06DA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5997     06DB  0086               	movwf	6
  5998     06DC  3002               	movlw	2	; select bank4/5
  5999     06DD  0087               	movwf	7
  6000     06DE  3030               	movlw	48
  6001     06DF  0081               	movwf	1
  6002     06E0  3001               	movlw	1
  6003     06E1  07C7               	addwf	efgtoa@n^(0+128),f
  6004     06E2  3000               	movlw	0
  6005     06E3  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6006                           
  6007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  6008     06E4  30FF               	movlw	255
  6009     06E5  07B6               	addwf	efgtoa@w^(0+128),f
  6010     06E6  30FF               	movlw	255
  6011     06E7  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  6014     06E8  30FF               	movlw	255
  6015     06E9  07A8               	addwf	efgtoa@t^(0+128),f
  6016     06EA  30FF               	movlw	255
  6017     06EB  3DA9               	addwfc	(efgtoa@t+1)^(0+128),f
  6018     06EC  2ED5               	goto	l3955
  6019     06ED                     l3957:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6022     06ED  0847               	movf	efgtoa@n^(0+128),w
  6023     06EE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6024     06EF  0086               	movwf	6
  6025     06F0  3002               	movlw	2	; select bank4/5
  6026     06F1  0087               	movwf	7
  6027     06F2  082F               	movf	efgtoa@d^(0+128),w
  6028     06F3  3E30               	addlw	48
  6029     06F4  0081               	movwf	1
  6030     06F5  3001               	movlw	1
  6031     06F6  07C7               	addwf	efgtoa@n^(0+128),f
  6032     06F7  3000               	movlw	0
  6033     06F8  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6034                           
  6035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  6036     06F9  30FF               	movlw	255
  6037     06FA  07B6               	addwf	efgtoa@w^(0+128),f
  6038     06FB  30FF               	movlw	255
  6039     06FC  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  6042     06FD  0850               	movf	(efgtoa@u+3)^(0+128),w
  6043     06FE  0020               	movlb	0	; select bank0
  6044     06FF  00A7               	movwf	___flmul@a+3
  6045     0700  0021               	movlb	1	; select bank1
  6046     0701  084F               	movf	(efgtoa@u+2)^(0+128),w
  6047     0702  0020               	movlb	0	; select bank0
  6048     0703  00A6               	movwf	___flmul@a+2
  6049     0704  0021               	movlb	1	; select bank1
  6050     0705  084E               	movf	(efgtoa@u+1)^(0+128),w
  6051     0706  0020               	movlb	0	; select bank0
  6052     0707  00A5               	movwf	___flmul@a+1
  6053     0708  0021               	movlb	1	; select bank1
  6054     0709  084D               	movf	efgtoa@u^(0+128),w
  6055     070A  0020               	movlb	0	; select bank0
  6056     070B  00A4               	movwf	___flmul@a
  6057     070C  0021               	movlb	1	; select bank1
  6058     070D  0845               	movf	(efgtoa@l+3)^(0+128),w
  6059     070E  0020               	movlb	0	; select bank0
  6060     070F  00A3               	movwf	___flmul@b+3
  6061     0710  0021               	movlb	1	; select bank1
  6062     0711  0844               	movf	(efgtoa@l+2)^(0+128),w
  6063     0712  0020               	movlb	0	; select bank0
  6064     0713  00A2               	movwf	___flmul@b+2
  6065     0714  0021               	movlb	1	; select bank1
  6066     0715  0843               	movf	(efgtoa@l+1)^(0+128),w
  6067     0716  0020               	movlb	0	; select bank0
  6068     0717  00A1               	movwf	___flmul@b+1
  6069     0718  0021               	movlb	1	; select bank1
  6070     0719  0842               	movf	efgtoa@l^(0+128),w
  6071     071A  0020               	movlb	0	; select bank0
  6072     071B  00A0               	movwf	___flmul@b
  6073     071C  3180  2012  3182   	fcall	___flmul
  6074     071F  0020               	movlb	0	; select bank0
  6075     0720  0823               	movf	?___flmul+3,w
  6076     0721  00BD               	movwf	___flsub@a+3
  6077     0722  0822               	movf	?___flmul+2,w
  6078     0723  00BC               	movwf	___flsub@a+2
  6079     0724  0821               	movf	?___flmul+1,w
  6080     0725  00BB               	movwf	___flsub@a+1
  6081     0726  0820               	movf	?___flmul,w
  6082     0727  00BA               	movwf	___flsub@a
  6083     0728  0021               	movlb	1	; select bank1
  6084     0729  0841               	movf	(efgtoa@h+3)^(0+128),w
  6085     072A  0020               	movlb	0	; select bank0
  6086     072B  00C1               	movwf	___flsub@b+3
  6087     072C  0021               	movlb	1	; select bank1
  6088     072D  0840               	movf	(efgtoa@h+2)^(0+128),w
  6089     072E  0020               	movlb	0	; select bank0
  6090     072F  00C0               	movwf	___flsub@b+2
  6091     0730  0021               	movlb	1	; select bank1
  6092     0731  083F               	movf	(efgtoa@h+1)^(0+128),w
  6093     0732  0020               	movlb	0	; select bank0
  6094     0733  00BF               	movwf	___flsub@b+1
  6095     0734  0021               	movlb	1	; select bank1
  6096     0735  083E               	movf	efgtoa@h^(0+128),w
  6097     0736  0020               	movlb	0	; select bank0
  6098     0737  00BE               	movwf	___flsub@b
  6099     0738  319D  2503  3182   	fcall	___flsub
  6100     073B  0020               	movlb	0	; select bank0
  6101     073C  083D               	movf	?___flsub+3,w
  6102     073D  0021               	movlb	1	; select bank1
  6103     073E  00C1               	movwf	(efgtoa@h+3)^(0+128)
  6104     073F  0020               	movlb	0	; select bank0
  6105     0740  083C               	movf	?___flsub+2,w
  6106     0741  0021               	movlb	1	; select bank1
  6107     0742  00C0               	movwf	(efgtoa@h+2)^(0+128)
  6108     0743  0020               	movlb	0	; select bank0
  6109     0744  083B               	movf	?___flsub+1,w
  6110     0745  0021               	movlb	1	; select bank1
  6111     0746  00BF               	movwf	(efgtoa@h+1)^(0+128)
  6112     0747  0020               	movlb	0	; select bank0
  6113     0748  083A               	movf	?___flsub,w
  6114     0749  0021               	movlb	1	; select bank1
  6115     074A  00BE               	movwf	efgtoa@h^(0+128)
  6116                           
  6117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  6118     074B  3041               	movlw	65
  6119     074C  0020               	movlb	0	; select bank0
  6120     074D  00BD               	movwf	___fldiv@a+3
  6121     074E  3020               	movlw	32
  6122     074F  00BC               	movwf	___fldiv@a+2
  6123     0750  3000               	movlw	0
  6124     0751  00BB               	movwf	___fldiv@a+1
  6125     0752  3000               	movlw	0
  6126     0753  00BA               	movwf	___fldiv@a
  6127     0754  0021               	movlb	1	; select bank1
  6128     0755  0850               	movf	(efgtoa@u+3)^(0+128),w
  6129     0756  0020               	movlb	0	; select bank0
  6130     0757  00C1               	movwf	___fldiv@b+3
  6131     0758  0021               	movlb	1	; select bank1
  6132     0759  084F               	movf	(efgtoa@u+2)^(0+128),w
  6133     075A  0020               	movlb	0	; select bank0
  6134     075B  00C0               	movwf	___fldiv@b+2
  6135     075C  0021               	movlb	1	; select bank1
  6136     075D  084E               	movf	(efgtoa@u+1)^(0+128),w
  6137     075E  0020               	movlb	0	; select bank0
  6138     075F  00BF               	movwf	___fldiv@b+1
  6139     0760  0021               	movlb	1	; select bank1
  6140     0761  084D               	movf	efgtoa@u^(0+128),w
  6141     0762  0020               	movlb	0	; select bank0
  6142     0763  00BE               	movwf	___fldiv@b
  6143     0764  3196  2690  3182   	fcall	___fldiv
  6144     0767  0020               	movlb	0	; select bank0
  6145     0768  083D               	movf	?___fldiv+3,w
  6146     0769  0021               	movlb	1	; select bank1
  6147     076A  00D0               	movwf	(efgtoa@u+3)^(0+128)
  6148     076B  0020               	movlb	0	; select bank0
  6149     076C  083C               	movf	?___fldiv+2,w
  6150     076D  0021               	movlb	1	; select bank1
  6151     076E  00CF               	movwf	(efgtoa@u+2)^(0+128)
  6152     076F  0020               	movlb	0	; select bank0
  6153     0770  083B               	movf	?___fldiv+1,w
  6154     0771  0021               	movlb	1	; select bank1
  6155     0772  00CE               	movwf	(efgtoa@u+1)^(0+128)
  6156     0773  0020               	movlb	0	; select bank0
  6157     0774  083A               	movf	?___fldiv,w
  6158     0775  0021               	movlb	1	; select bank1
  6159     0776  00CD               	movwf	efgtoa@u^(0+128)
  6160                           
  6161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  6162     0777  30FF               	movlw	255
  6163     0778  07A4               	addwf	efgtoa@ne^(0+128),f
  6164     0779  30FF               	movlw	255
  6165     077A  3DA5               	addwfc	(efgtoa@ne+1)^(0+128),f
  6166                           
  6167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  6168     077B  3001               	movlw	1
  6169     077C  07BC               	addwf	efgtoa@i^(0+128),f
  6170     077D  3000               	movlw	0
  6171     077E  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  6172     077F                     l3971:
  6173                           
  6174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6175     077F  083D               	movf	(efgtoa@i+1)^(0+128),w
  6176     0780  3A80               	xorlw	128
  6177     0781  00A0               	movwf	??_efgtoa^(0+128)
  6178     0782  0832               	movf	(efgtoa@m+1)^(0+128),w
  6179     0783  3A80               	xorlw	128
  6180     0784  0220               	subwf	??_efgtoa^(0+128),w
  6181     0785  1D03               	skipz
  6182     0786  2F89               	goto	u5535
  6183     0787  0831               	movf	efgtoa@m^(0+128),w
  6184     0788  023C               	subwf	efgtoa@i^(0+128),w
  6185     0789                     u5535:
  6186     0789  1803               	skipnc
  6187     078A  2F97               	goto	l3975
  6188     078B  0021               	movlb	1	; select bank1
  6189     078C  0848               	movf	(efgtoa@n+1)^(0+128),w
  6190     078D  3A80               	xorlw	128
  6191     078E  00A0               	movwf	??_efgtoa^(0+128)
  6192     078F  3080               	movlw	128
  6193     0790  0220               	subwf	??_efgtoa^(0+128),w
  6194     0791  1D03               	skipz
  6195     0792  2F95               	goto	u5545
  6196     0793  304B               	movlw	75
  6197     0794  0247               	subwf	efgtoa@n^(0+128),w
  6198     0795                     u5545:
  6199     0795  1C03               	skipc
  6200     0796  2E53               	goto	l3929
  6201     0797                     l3975:
  6202                           
  6203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  6204     0797  304F               	movlw	79
  6205     0798  0021               	movlb	1	; select bank1
  6206     0799  00BC               	movwf	efgtoa@i^(0+128)
  6207     079A  3000               	movlw	0
  6208     079B  00BD               	movwf	(efgtoa@i^(0+128)+1)
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  6211     079C  083C               	movf	efgtoa@i^(0+128),w
  6212     079D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6213     079E  0086               	movwf	6
  6214     079F  3002               	movlw	2	; select bank4/5
  6215     07A0  0087               	movwf	7
  6216     07A1  0181               	clrf	1
  6217                           
  6218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6219     07A2  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6220     07A3  00F0               	movwf	memcpy@s1
  6221     07A4  0848               	movf	(efgtoa@n+1)^(0+128),w
  6222     07A5  00F2               	movwf	memcpy@n+1
  6223     07A6  0847               	movf	efgtoa@n^(0+128),w
  6224     07A7  00F1               	movwf	memcpy@n
  6225     07A8  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6226     07A9  00A0               	movwf	??_efgtoa^(0+128)
  6227     07AA  0847               	movf	efgtoa@n^(0+128),w
  6228     07AB  0220               	subwf	??_efgtoa^(0+128),w
  6229     07AC  073C               	addwf	efgtoa@i^(0+128),w
  6230     07AD  319D  2563  3182   	fcall	_memcpy
  6231                           
  6232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  6233     07B0  0021               	movlb	1	; select bank1
  6234     07B1  0847               	movf	efgtoa@n^(0+128),w
  6235     07B2  023C               	subwf	efgtoa@i^(0+128),w
  6236     07B3  00C7               	movwf	efgtoa@n^(0+128)
  6237     07B4  0848               	movf	(efgtoa@n+1)^(0+128),w
  6238     07B5  3B3D               	subwfb	(efgtoa@i+1)^(0+128),w
  6239     07B6  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6240                           
  6241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  6242     07B7  0846               	movf	efgtoa@sign^(0+128),w
  6243     07B8  1903               	btfsc	3,2
  6244     07B9  2FBC               	goto	u5550
  6245     07BA  3001               	movlw	1
  6246     07BB  2FBD               	goto	u5560
  6247     07BC                     u5550:
  6248     07BC  3000               	movlw	0
  6249     07BD                     u5560:
  6250     07BD  00A0               	movwf	??_efgtoa^(0+128)
  6251     07BE  01A1               	clrf	(??_efgtoa^(0+128)+1)
  6252     07BF  0820               	movf	??_efgtoa^(0+128),w
  6253     07C0  00BC               	movwf	efgtoa@i^(0+128)
  6254     07C1  0821               	movf	(??_efgtoa+1)^(0+128),w
  6255     07C2  00BD               	movwf	(efgtoa@i+1)^(0+128)
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  6258     07C3  0846               	movf	efgtoa@sign^(0+128),w
  6259     07C4  1903               	btfsc	3,2
  6260     07C5  2FD1               	goto	l3989
  6261                           
  6262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  6263     07C6  30FF               	movlw	255
  6264     07C7  07C7               	addwf	efgtoa@n^(0+128),f
  6265     07C8  30FF               	movlw	255
  6266     07C9  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6267     07CA  0847               	movf	efgtoa@n^(0+128),w
  6268     07CB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6269     07CC  0086               	movwf	6
  6270     07CD  3002               	movlw	2	; select bank4/5
  6271     07CE  0087               	movwf	7
  6272     07CF  0846               	movf	efgtoa@sign^(0+128),w
  6273     07D0  0081               	movwf	1
  6274     07D1                     l3989:
  6275                           
  6276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  6277     07D1  083C               	movf	efgtoa@i^(0+128),w
  6278     07D2  02B6               	subwf	efgtoa@w^(0+128),f
  6279     07D3  083D               	movf	(efgtoa@i+1)^(0+128),w
  6280     07D4  3BB7               	subwfb	(efgtoa@w+1)^(0+128),f
  6281                           
  6282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6283     07D5  0847               	movf	efgtoa@n^(0+128),w
  6284     07D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6285     07D7  00FB               	movwf	pad@buf
  6286     07D8  0837               	movf	(efgtoa@w+1)^(0+128),w
  6287     07D9  00FD               	movwf	pad@p+1
  6288     07DA  0836               	movf	efgtoa@w^(0+128),w
  6289     07DB  00FC               	movwf	pad@p
  6290     07DC  0833               	movf	efgtoa@fp^(0+128),w
  6291     07DD  3190  200F         	fcall	_pad
  6292     07DF  0008               	return
  6293     07E0                     __end_of_efgtoa:
  6294                           
  6295                           	psect	text10
  6296     1CA9                     __ptext10:	
  6297 ;; *************** function _strcpy *****************
  6298 ;; Defined at:
  6299 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  dest            1    wreg     PTR unsigned char 
  6302 ;;		 -> dbuf(80), 
  6303 ;;  src             2    0[COMMON] PTR const unsigned char 
  6304 ;;		 -> STR_18(4), STR_15(4), 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  dest            1    7[COMMON] PTR unsigned char 
  6307 ;;		 -> dbuf(80), 
  6308 ;;  s               2    4[COMMON] PTR const unsigned char 
  6309 ;;		 -> STR_18(4), STR_15(4), 
  6310 ;;  d               1    6[COMMON] PTR unsigned char 
  6311 ;;		 -> dbuf(80), 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      PTR unsigned char 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6321 ;;      Params:         2       0       0       0       0       0       0       0
  6322 ;;      Locals:         4       0       0       0       0       0       0       0
  6323 ;;      Temps:          2       0       0       0       0       0       0       0
  6324 ;;      Totals:         8       0       0       0       0       0       0       0
  6325 ;;Total ram usage:        8 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_efgtoa
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334     1CA9                     _strcpy:	
  6335                           ;psect for function _strcpy
  6336                           
  6337                           
  6338                           ;incstack = 0
  6339                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6340                           ;strcpy@dest stored from wreg
  6341     1CA9  00F7               	movwf	strcpy@dest
  6342     1CAA  0871               	movf	strcpy@src+1,w
  6343     1CAB  00F5               	movwf	strcpy@s+1
  6344     1CAC  0870               	movf	strcpy@src,w
  6345     1CAD  00F4               	movwf	strcpy@s
  6346     1CAE  0877               	movf	strcpy@dest,w
  6347     1CAF  00F6               	movwf	strcpy@d
  6348     1CB0                     l3683:
  6349     1CB0  0876               	movf	strcpy@d,w
  6350     1CB1  0086               	movwf	6
  6351     1CB2  3002               	movlw	2	; select bank4/5
  6352     1CB3  0087               	movwf	7
  6353     1CB4  0AF6               	incf	strcpy@d,f
  6354     1CB5  0875               	movf	strcpy@s+1,w
  6355     1CB6  00F3               	movwf	??_strcpy+1
  6356     1CB7  0874               	movf	strcpy@s,w
  6357     1CB8  00F2               	movwf	??_strcpy
  6358     1CB9  0AF4               	incf	strcpy@s,f
  6359     1CBA  1903               	skipnz
  6360     1CBB  0AF5               	incf	strcpy@s+1,f
  6361     1CBC  0872               	movf	??_strcpy,w
  6362     1CBD  0084               	movwf	4
  6363     1CBE  0873               	movf	??_strcpy+1,w
  6364     1CBF  0085               	movwf	5
  6365     1CC0  0800               	movf	0,w	;code access
  6366     1CC1  3FC0               	movwi [0]fsr1
  6367     1CC2  0889               	movf	9,f
  6368     1CC3  1903               	btfsc	3,2
  6369     1CC4  0008               	return
  6370     1CC5  2CB0               	goto	l3683
  6371     1CC6                     __end_of_strcpy:
  6372                           
  6373                           	psect	text11
  6374     1D63                     __ptext11:	
  6375 ;; *************** function _memcpy *****************
  6376 ;; Defined at:
  6377 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  d1              1    wreg     PTR void 
  6380 ;;		 -> dbuf(80), 
  6381 ;;  s1              1    0[COMMON] PTR const void 
  6382 ;;		 -> dbuf(80), 
  6383 ;;  n               2    1[COMMON] unsigned int 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  d1              1    5[COMMON] PTR void 
  6386 ;;		 -> dbuf(80), 
  6387 ;;  s               1    7[COMMON] PTR const unsigned char 
  6388 ;;		 -> dbuf(80), 
  6389 ;;  d               1    6[COMMON] PTR unsigned char 
  6390 ;;		 -> dbuf(80), 
  6391 ;;  tmp             1    4[COMMON] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      PTR void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6401 ;;      Params:         3       0       0       0       0       0       0       0
  6402 ;;      Locals:         4       0       0       0       0       0       0       0
  6403 ;;      Temps:          1       0       0       0       0       0       0       0
  6404 ;;      Totals:         8       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        8 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_efgtoa
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414     1D63                     _memcpy:	
  6415                           ;psect for function _memcpy
  6416                           
  6417                           
  6418                           ;incstack = 0
  6419                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6420                           ;memcpy@d1 stored from wreg
  6421     1D63  00F5               	movwf	memcpy@d1
  6422     1D64  0870               	movf	memcpy@s1,w
  6423     1D65  00F7               	movwf	memcpy@s
  6424     1D66  0875               	movf	memcpy@d1,w
  6425     1D67  00F6               	movwf	memcpy@d
  6426     1D68                     l1043:
  6427     1D68  3001               	movlw	1
  6428     1D69  02F1               	subwf	memcpy@n,f
  6429     1D6A  3000               	movlw	0
  6430     1D6B  3BF2               	subwfb	memcpy@n+1,f
  6431     1D6C  0A71               	incf	memcpy@n,w
  6432     1D6D  1903               	btfsc	3,2
  6433     1D6E  0A72               	incf	memcpy@n+1,w
  6434     1D6F  1903               	btfsc	3,2
  6435     1D70  0008               	return
  6436     1D71  0877               	movf	memcpy@s,w
  6437     1D72  0086               	movwf	6
  6438     1D73  3002               	movlw	2	; select bank4/5
  6439     1D74  0087               	movwf	7
  6440     1D75  0801               	movf	1,w
  6441     1D76  00F4               	movwf	memcpy@tmp
  6442     1D77  3001               	movlw	1
  6443     1D78  00F3               	movwf	??_memcpy
  6444     1D79  0873               	movf	??_memcpy,w
  6445     1D7A  07F7               	addwf	memcpy@s,f
  6446     1D7B  0876               	movf	memcpy@d,w
  6447     1D7C  0086               	movwf	6
  6448     1D7D  3002               	movlw	2	; select bank4/5
  6449     1D7E  0087               	movwf	7
  6450     1D7F  0874               	movf	memcpy@tmp,w
  6451     1D80  0081               	movwf	1
  6452     1D81  3001               	movlw	1
  6453     1D82  00F3               	movwf	??_memcpy
  6454     1D83  0873               	movf	??_memcpy,w
  6455     1D84  07F6               	addwf	memcpy@d,f
  6456     1D85  2D68               	goto	l1043
  6457     1D86                     __end_of_memcpy:
  6458                           
  6459                           	psect	text12
  6460     1D22                     __ptext12:	
  6461 ;; *************** function _labs *****************
  6462 ;; Defined at:
  6463 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  a               4    0[COMMON] long 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  4    0[COMMON] long 
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6477 ;;      Params:         4       0       0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0
  6480 ;;      Totals:         4       0       0       0       0       0       0       0
  6481 ;;Total ram usage:        4 bytes
  6482 ;; Hardware stack levels used: 1
  6483 ;; This function calls:
  6484 ;;		Nothing
  6485 ;; This function is called by:
  6486 ;;		_efgtoa
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490     1D22                     _labs:	
  6491                           ;psect for function _labs
  6492                           
  6493                           
  6494                           ;incstack = 0
  6495                           ; Regs used in _labs: [wreg+status,2+status,0]
  6496     1D22  1BF3               	btfsc	labs@a+3,7
  6497     1D23  2D31               	goto	l3687
  6498     1D24  0873               	movf	labs@a+3,w
  6499     1D25  1D03               	btfss	3,2
  6500     1D26  0008               	return
  6501     1D27  0872               	movf	labs@a+2,w
  6502     1D28  1D03               	btfss	3,2
  6503     1D29  0008               	return
  6504     1D2A  0871               	movf	labs@a+1,w
  6505     1D2B  1D03               	btfss	3,2
  6506     1D2C  0008               	return
  6507     1D2D  3001               	movlw	1
  6508     1D2E  0270               	subwf	labs@a,w
  6509     1D2F  1803               	btfsc	3,0
  6510     1D30  0008               	return
  6511     1D31                     l3687:
  6512     1D31  0970               	comf	labs@a,w
  6513     1D32  00F0               	movwf	?_labs
  6514     1D33  0971               	comf	labs@a+1,w
  6515     1D34  00F1               	movwf	?_labs+1
  6516     1D35  0972               	comf	labs@a+2,w
  6517     1D36  00F2               	movwf	?_labs+2
  6518     1D37  0973               	comf	labs@a+3,w
  6519     1D38  00F3               	movwf	?_labs+3
  6520     1D39  0AF0               	incf	?_labs,f
  6521     1D3A  1903               	skipnz
  6522     1D3B  0AF1               	incf	?_labs+1,f
  6523     1D3C  1903               	skipnz
  6524     1D3D  0AF2               	incf	?_labs+2,f
  6525     1D3E  1903               	skipnz
  6526     1D3F  0AF3               	incf	?_labs+3,f
  6527     1D40  0008               	return
  6528     1D41                     __end_of_labs:
  6529                           
  6530                           	psect	text13
  6531     12C7                     __ptext13:	
  6532 ;; *************** function _floorf *****************
  6533 ;; Defined at:
  6534 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  x               4   52[BANK0 ] float 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  u               4   68[BANK0 ] struct .
  6539 ;;  m               4   62[BANK0 ] unsigned long 
  6540 ;;  e               2   66[BANK0 ] int 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  4   52[BANK0 ] float 
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6550 ;;      Params:         0       4       0       0       0       0       0       0
  6551 ;;      Locals:         0      10       0       0       0       0       0       0
  6552 ;;      Temps:          0       6       0       0       0       0       0       0
  6553 ;;      Totals:         0      20       0       0       0       0       0       0
  6554 ;;Total ram usage:       20 bytes
  6555 ;; Hardware stack levels used: 1
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_efgtoa
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563     12C7                     _floorf:	
  6564                           ;psect for function _floorf
  6565                           
  6566                           
  6567                           ;incstack = 0
  6568                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6569     12C7  0022               	movlb	2	; select bank2
  6570     12C8  0846               	movf	(floorf@F526+3)^(0+256),w
  6571     12C9  0020               	movlb	0	; select bank0
  6572     12CA  00E7               	movwf	floorf@u+3
  6573     12CB  0022               	movlb	2	; select bank2
  6574     12CC  0845               	movf	(floorf@F526+2)^(0+256),w
  6575     12CD  0020               	movlb	0	; select bank0
  6576     12CE  00E6               	movwf	floorf@u+2
  6577     12CF  0022               	movlb	2	; select bank2
  6578     12D0  0844               	movf	(floorf@F526+1)^(0+256),w
  6579     12D1  0020               	movlb	0	; select bank0
  6580     12D2  00E5               	movwf	floorf@u+1
  6581     12D3  0022               	movlb	2	; select bank2
  6582     12D4  0843               	movf	floorf@F526^(0+256),w
  6583     12D5  0020               	movlb	0	; select bank0
  6584     12D6  00E4               	movwf	floorf@u
  6585     12D7  0857               	movf	floorf@x+3,w
  6586     12D8  00E7               	movwf	floorf@u+3
  6587     12D9  0856               	movf	floorf@x+2,w
  6588     12DA  00E6               	movwf	floorf@u+2
  6589     12DB  0855               	movf	floorf@x+1,w
  6590     12DC  00E5               	movwf	floorf@u+1
  6591     12DD  0854               	movf	floorf@x,w
  6592     12DE  00E4               	movwf	floorf@u
  6593     12DF  0864               	movf	floorf@u,w
  6594     12E0  00D8               	movwf	??_floorf
  6595     12E1  0865               	movf	floorf@u+1,w
  6596     12E2  00D9               	movwf	??_floorf+1
  6597     12E3  0866               	movf	floorf@u+2,w
  6598     12E4  00DA               	movwf	??_floorf+2
  6599     12E5  0867               	movf	floorf@u+3,w
  6600     12E6  00DB               	movwf	??_floorf+3
  6601     12E7  3017               	movlw	23
  6602     12E8                     u4995:
  6603     12E8  36DB               	lsrf	??_floorf+3,f
  6604     12E9  0CDA               	rrf	??_floorf+2,f
  6605     12EA  0CD9               	rrf	??_floorf+1,f
  6606     12EB  0CD8               	rrf	??_floorf,f
  6607     12EC  0B89               	decfsz	9,f
  6608     12ED  2AE8               	goto	u4995
  6609     12EE  30FF               	movlw	255
  6610     12EF  0558               	andwf	??_floorf,w
  6611     12F0  00DC               	movwf	??_floorf+4
  6612     12F1  3000               	movlw	0
  6613     12F2  0559               	andwf	??_floorf+1,w
  6614     12F3  00DD               	movwf	??_floorf+5
  6615     12F4  085C               	movf	??_floorf+4,w
  6616     12F5  3E81               	addlw	129
  6617     12F6  00E2               	movwf	floorf@e
  6618     12F7  30FF               	movlw	255
  6619     12F8  3D5D               	addwfc	??_floorf+5,w
  6620     12F9  00E3               	movwf	floorf@e+1
  6621     12FA  0863               	movf	floorf@e+1,w
  6622     12FB  3A80               	xorlw	128
  6623     12FC  00D8               	movwf	??_floorf
  6624     12FD  3080               	movlw	128
  6625     12FE  0258               	subwf	??_floorf,w
  6626     12FF  1D03               	skipz
  6627     1300  2B03               	goto	u5005
  6628     1301  3017               	movlw	23
  6629     1302  0262               	subwf	floorf@e,w
  6630     1303                     u5005:
  6631     1303  1803               	btfsc	3,0
  6632     1304  0008               	return
  6633     1305  0020               	movlb	0	; select bank0
  6634     1306  1BE3               	btfsc	floorf@e+1,7
  6635     1307  2B60               	goto	l3709
  6636     1308  30FF               	movlw	255
  6637     1309  00D8               	movwf	??_floorf
  6638     130A  30FF               	movlw	255
  6639     130B  00D9               	movwf	??_floorf+1
  6640     130C  307F               	movlw	127
  6641     130D  00DA               	movwf	??_floorf+2
  6642     130E  3000               	movlw	0
  6643     130F  00DB               	movwf	??_floorf+3
  6644     1310  0A62               	incf	floorf@e,w
  6645     1311  2B16               	goto	u5020
  6646     1312                     u5025:
  6647     1312  37DB               	asrf	??_floorf+3,f
  6648     1313  0CDA               	rrf	??_floorf+2,f
  6649     1314  0CD9               	rrf	??_floorf+1,f
  6650     1315  0CD8               	rrf	??_floorf,f
  6651     1316                     u5020:
  6652     1316  0B89               	decfsz	9,f
  6653     1317  2B12               	goto	u5025
  6654     1318  085B               	movf	??_floorf+3,w
  6655     1319  00E1               	movwf	floorf@m+3
  6656     131A  085A               	movf	??_floorf+2,w
  6657     131B  00E0               	movwf	floorf@m+2
  6658     131C  0859               	movf	??_floorf+1,w
  6659     131D  00DF               	movwf	floorf@m+1
  6660     131E  0858               	movf	??_floorf,w
  6661     131F  00DE               	movwf	floorf@m
  6662     1320  0864               	movf	floorf@u,w
  6663     1321  055E               	andwf	floorf@m,w
  6664     1322  00D8               	movwf	??_floorf
  6665     1323  0865               	movf	floorf@u+1,w
  6666     1324  055F               	andwf	floorf@m+1,w
  6667     1325  00D9               	movwf	??_floorf+1
  6668     1326  0866               	movf	floorf@u+2,w
  6669     1327  0560               	andwf	floorf@m+2,w
  6670     1328  00DA               	movwf	??_floorf+2
  6671     1329  0867               	movf	floorf@u+3,w
  6672     132A  0561               	andwf	floorf@m+3,w
  6673     132B  00DB               	movwf	??_floorf+3
  6674     132C  085B               	movf	??_floorf+3,w
  6675     132D  045A               	iorwf	??_floorf+2,w
  6676     132E  0459               	iorwf	??_floorf+1,w
  6677     132F  0458               	iorwf	??_floorf,w
  6678     1330  1903               	btfsc	3,2
  6679     1331  0008               	return
  6680     1332  0864               	movf	floorf@u,w
  6681     1333  00D8               	movwf	??_floorf
  6682     1334  0865               	movf	floorf@u+1,w
  6683     1335  00D9               	movwf	??_floorf+1
  6684     1336  0866               	movf	floorf@u+2,w
  6685     1337  00DA               	movwf	??_floorf+2
  6686     1338  0867               	movf	floorf@u+3,w
  6687     1339  00DB               	movwf	??_floorf+3
  6688     133A  301F               	movlw	31
  6689     133B                     u5045:
  6690     133B  36DB               	lsrf	??_floorf+3,f
  6691     133C  0CDA               	rrf	??_floorf+2,f
  6692     133D  0CD9               	rrf	??_floorf+1,f
  6693     133E  0CD8               	rrf	??_floorf,f
  6694     133F  0B89               	decfsz	9,f
  6695     1340  2B3B               	goto	u5045
  6696     1341  085B               	movf	??_floorf+3,w
  6697     1342  045A               	iorwf	??_floorf+2,w
  6698     1343  0459               	iorwf	??_floorf+1,w
  6699     1344  0458               	iorwf	??_floorf,w
  6700     1345  1903               	skipnz
  6701     1346  2B4F               	goto	l3707
  6702     1347  085E               	movf	floorf@m,w
  6703     1348  07E4               	addwf	floorf@u,f
  6704     1349  085F               	movf	floorf@m+1,w
  6705     134A  3DE5               	addwfc	floorf@u+1,f
  6706     134B  0860               	movf	floorf@m+2,w
  6707     134C  3DE6               	addwfc	floorf@u+2,f
  6708     134D  0861               	movf	floorf@m+3,w
  6709     134E  3DE7               	addwfc	floorf@u+3,f
  6710     134F                     l3707:
  6711     134F  095E               	comf	floorf@m,w
  6712     1350  00D8               	movwf	??_floorf
  6713     1351  095F               	comf	floorf@m+1,w
  6714     1352  00D9               	movwf	??_floorf+1
  6715     1353  0960               	comf	floorf@m+2,w
  6716     1354  00DA               	movwf	??_floorf+2
  6717     1355  0961               	comf	floorf@m+3,w
  6718     1356  00DB               	movwf	??_floorf+3
  6719     1357  0858               	movf	??_floorf,w
  6720     1358  05E4               	andwf	floorf@u,f
  6721     1359  0859               	movf	??_floorf+1,w
  6722     135A  05E5               	andwf	floorf@u+1,f
  6723     135B  085A               	movf	??_floorf+2,w
  6724     135C  05E6               	andwf	floorf@u+2,f
  6725     135D  085B               	movf	??_floorf+3,w
  6726     135E  05E7               	andwf	floorf@u+3,f
  6727     135F  2B96               	goto	l1016
  6728     1360                     l3709:
  6729     1360  0864               	movf	floorf@u,w
  6730     1361  00D8               	movwf	??_floorf
  6731     1362  0865               	movf	floorf@u+1,w
  6732     1363  00D9               	movwf	??_floorf+1
  6733     1364  0866               	movf	floorf@u+2,w
  6734     1365  00DA               	movwf	??_floorf+2
  6735     1366  0867               	movf	floorf@u+3,w
  6736     1367  00DB               	movwf	??_floorf+3
  6737     1368  301F               	movlw	31
  6738     1369                     u5065:
  6739     1369  36DB               	lsrf	??_floorf+3,f
  6740     136A  0CDA               	rrf	??_floorf+2,f
  6741     136B  0CD9               	rrf	??_floorf+1,f
  6742     136C  0CD8               	rrf	??_floorf,f
  6743     136D  0B89               	decfsz	9,f
  6744     136E  2B69               	goto	u5065
  6745     136F  085B               	movf	??_floorf+3,w
  6746     1370  045A               	iorwf	??_floorf+2,w
  6747     1371  0459               	iorwf	??_floorf+1,w
  6748     1372  0458               	iorwf	??_floorf,w
  6749     1373  1D03               	skipz
  6750     1374  2B79               	goto	l3713
  6751     1375  3000               	movlw	0
  6752     1376  00E7               	movwf	floorf@u+3
  6753     1377  3000               	movlw	0
  6754     1378  2B91               	goto	L21
  6755     1379                     l3713:
  6756     1379  0864               	movf	floorf@u,w
  6757     137A  00D8               	movwf	??_floorf
  6758     137B  0865               	movf	floorf@u+1,w
  6759     137C  00D9               	movwf	??_floorf+1
  6760     137D  0866               	movf	floorf@u+2,w
  6761     137E  00DA               	movwf	??_floorf+2
  6762     137F  0867               	movf	floorf@u+3,w
  6763     1380  00DB               	movwf	??_floorf+3
  6764     1381  3001               	movlw	1
  6765     1382                     u5085:
  6766     1382  35D8               	lslf	??_floorf,f
  6767     1383  0DD9               	rlf	??_floorf+1,f
  6768     1384  0DDA               	rlf	??_floorf+2,f
  6769     1385  0DDB               	rlf	??_floorf+3,f
  6770     1386  0B89               	decfsz	9,f
  6771     1387  2B82               	goto	u5085
  6772     1388  085B               	movf	??_floorf+3,w
  6773     1389  045A               	iorwf	??_floorf+2,w
  6774     138A  0459               	iorwf	??_floorf+1,w
  6775     138B  0458               	iorwf	??_floorf,w
  6776     138C  1903               	skipnz
  6777     138D  2B96               	goto	l1016
  6778     138E  30BF               	movlw	191
  6779     138F  00E7               	movwf	floorf@u+3
  6780     1390  3080               	movlw	128
  6781     1391                     L21:
  6782     1391  00E6               	movwf	floorf@u+2
  6783     1392  3000               	movlw	0
  6784     1393  00E5               	movwf	floorf@u+1
  6785     1394  3000               	movlw	0
  6786     1395  00E4               	movwf	floorf@u
  6787     1396                     l1016:
  6788     1396  0867               	movf	floorf@u+3,w
  6789     1397  00D7               	movwf	?_floorf+3
  6790     1398  0866               	movf	floorf@u+2,w
  6791     1399  00D6               	movwf	?_floorf+2
  6792     139A  0865               	movf	floorf@u+1,w
  6793     139B  00D5               	movwf	?_floorf+1
  6794     139C  0864               	movf	floorf@u,w
  6795     139D  00D4               	movwf	?_floorf
  6796     139E  0008               	return
  6797     139F                     __end_of_floorf:
  6798                           
  6799                           	psect	text14
  6800     10B5                     __ptext14:	
  6801 ;; *************** function ___fpclassifyf *****************
  6802 ;; Defined at:
  6803 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  x               4    0[COMMON] float 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  u               4    2[BANK0 ] struct .
  6808 ;;  e               2    0[BANK0 ] int 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  2    0[COMMON] int 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6818 ;;      Params:         4       0       0       0       0       0       0       0
  6819 ;;      Locals:         0       6       0       0       0       0       0       0
  6820 ;;      Temps:          6       0       0       0       0       0       0       0
  6821 ;;      Totals:        10       6       0       0       0       0       0       0
  6822 ;;Total ram usage:       16 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_efgtoa
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831     10B5                     ___fpclassifyf:	
  6832                           ;psect for function ___fpclassifyf
  6833                           
  6834                           
  6835                           ;incstack = 0
  6836                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6837     10B5  0022               	movlb	2	; select bank2
  6838     10B6  084A               	movf	(___fpclassifyf@F465+3)^(0+256),w
  6839     10B7  0020               	movlb	0	; select bank0
  6840     10B8  00A5               	movwf	___fpclassifyf@u+3
  6841     10B9  0022               	movlb	2	; select bank2
  6842     10BA  0849               	movf	(___fpclassifyf@F465+2)^(0+256),w
  6843     10BB  0020               	movlb	0	; select bank0
  6844     10BC  00A4               	movwf	___fpclassifyf@u+2
  6845     10BD  0022               	movlb	2	; select bank2
  6846     10BE  0848               	movf	(___fpclassifyf@F465+1)^(0+256),w
  6847     10BF  0020               	movlb	0	; select bank0
  6848     10C0  00A3               	movwf	___fpclassifyf@u+1
  6849     10C1  0022               	movlb	2	; select bank2
  6850     10C2  0847               	movf	___fpclassifyf@F465^(0+256),w
  6851     10C3  0020               	movlb	0	; select bank0
  6852     10C4  00A2               	movwf	___fpclassifyf@u
  6853     10C5  0873               	movf	___fpclassifyf@x+3,w
  6854     10C6  00A5               	movwf	___fpclassifyf@u+3
  6855     10C7  0872               	movf	___fpclassifyf@x+2,w
  6856     10C8  00A4               	movwf	___fpclassifyf@u+2
  6857     10C9  0871               	movf	___fpclassifyf@x+1,w
  6858     10CA  00A3               	movwf	___fpclassifyf@u+1
  6859     10CB  0870               	movf	___fpclassifyf@x,w
  6860     10CC  00A2               	movwf	___fpclassifyf@u
  6861     10CD  0822               	movf	___fpclassifyf@u,w
  6862     10CE  00F4               	movwf	??___fpclassifyf
  6863     10CF  0823               	movf	___fpclassifyf@u+1,w
  6864     10D0  00F5               	movwf	??___fpclassifyf+1
  6865     10D1  0824               	movf	___fpclassifyf@u+2,w
  6866     10D2  00F6               	movwf	??___fpclassifyf+2
  6867     10D3  0825               	movf	___fpclassifyf@u+3,w
  6868     10D4  00F7               	movwf	??___fpclassifyf+3
  6869     10D5  3017               	movlw	23
  6870     10D6                     u4895:
  6871     10D6  36F7               	lsrf	??___fpclassifyf+3,f
  6872     10D7  0CF6               	rrf	??___fpclassifyf+2,f
  6873     10D8  0CF5               	rrf	??___fpclassifyf+1,f
  6874     10D9  0CF4               	rrf	??___fpclassifyf,f
  6875     10DA  0B89               	decfsz	9,f
  6876     10DB  28D6               	goto	u4895
  6877     10DC  30FF               	movlw	255
  6878     10DD  0574               	andwf	??___fpclassifyf,w
  6879     10DE  00A0               	movwf	___fpclassifyf@e
  6880     10DF  3000               	movlw	0
  6881     10E0  0575               	andwf	??___fpclassifyf+1,w
  6882     10E1  00A1               	movwf	___fpclassifyf@e+1
  6883     10E2  0820               	movf	___fpclassifyf@e,w
  6884     10E3  0421               	iorwf	___fpclassifyf@e+1,w
  6885     10E4  1D03               	btfss	3,2
  6886     10E5  2905               	goto	l3671
  6887     10E6  0822               	movf	___fpclassifyf@u,w
  6888     10E7  00F4               	movwf	??___fpclassifyf
  6889     10E8  0823               	movf	___fpclassifyf@u+1,w
  6890     10E9  00F5               	movwf	??___fpclassifyf+1
  6891     10EA  0824               	movf	___fpclassifyf@u+2,w
  6892     10EB  00F6               	movwf	??___fpclassifyf+2
  6893     10EC  0825               	movf	___fpclassifyf@u+3,w
  6894     10ED  00F7               	movwf	??___fpclassifyf+3
  6895     10EE  3001               	movlw	1
  6896     10EF                     u4915:
  6897     10EF  35F4               	lslf	??___fpclassifyf,f
  6898     10F0  0DF5               	rlf	??___fpclassifyf+1,f
  6899     10F1  0DF6               	rlf	??___fpclassifyf+2,f
  6900     10F2  0DF7               	rlf	??___fpclassifyf+3,f
  6901     10F3  0B89               	decfsz	9,f
  6902     10F4  28EF               	goto	u4915
  6903     10F5  0877               	movf	??___fpclassifyf+3,w
  6904     10F6  0476               	iorwf	??___fpclassifyf+2,w
  6905     10F7  0475               	iorwf	??___fpclassifyf+1,w
  6906     10F8  0474               	iorwf	??___fpclassifyf,w
  6907     10F9  1D03               	skipz
  6908     10FA  2900               	goto	l3667
  6909     10FB  3002               	movlw	2
  6910     10FC  00F0               	movwf	?___fpclassifyf
  6911     10FD  3000               	movlw	0
  6912     10FE  00F1               	movwf	?___fpclassifyf+1
  6913     10FF  0008               	return
  6914     1100                     l3667:
  6915     1100  3003               	movlw	3
  6916     1101  00F0               	movwf	?___fpclassifyf
  6917     1102  3000               	movlw	0
  6918     1103  00F1               	movwf	?___fpclassifyf+1
  6919     1104  0008               	return
  6920     1105                     l3671:
  6921     1105  0A20               	incf	___fpclassifyf@e,w
  6922     1106  0421               	iorwf	___fpclassifyf@e+1,w
  6923     1107  1D03               	btfss	3,2
  6924     1108  2928               	goto	l3677
  6925     1109  0822               	movf	___fpclassifyf@u,w
  6926     110A  00F4               	movwf	??___fpclassifyf
  6927     110B  0823               	movf	___fpclassifyf@u+1,w
  6928     110C  00F5               	movwf	??___fpclassifyf+1
  6929     110D  0824               	movf	___fpclassifyf@u+2,w
  6930     110E  00F6               	movwf	??___fpclassifyf+2
  6931     110F  0825               	movf	___fpclassifyf@u+3,w
  6932     1110  00F7               	movwf	??___fpclassifyf+3
  6933     1111  3009               	movlw	9
  6934     1112                     u4945:
  6935     1112  35F4               	lslf	??___fpclassifyf,f
  6936     1113  0DF5               	rlf	??___fpclassifyf+1,f
  6937     1114  0DF6               	rlf	??___fpclassifyf+2,f
  6938     1115  0DF7               	rlf	??___fpclassifyf+3,f
  6939     1116  0B89               	decfsz	9,f
  6940     1117  2912               	goto	u4945
  6941     1118  0877               	movf	??___fpclassifyf+3,w
  6942     1119  0476               	iorwf	??___fpclassifyf+2,w
  6943     111A  0475               	iorwf	??___fpclassifyf+1,w
  6944     111B  0474               	iorwf	??___fpclassifyf,w
  6945     111C  1D03               	btfss	3,2
  6946     111D  2920               	goto	u4950
  6947     111E  3001               	movlw	1
  6948     111F  2921               	goto	u4960
  6949     1120                     u4950:
  6950     1120  3000               	movlw	0
  6951     1121                     u4960:
  6952     1121  00F8               	movwf	??___fpclassifyf+4
  6953     1122  01F9               	clrf	??___fpclassifyf+5
  6954     1123  0878               	movf	??___fpclassifyf+4,w
  6955     1124  00F0               	movwf	?___fpclassifyf
  6956     1125  0879               	movf	??___fpclassifyf+5,w
  6957     1126  00F1               	movwf	?___fpclassifyf+1
  6958     1127  0008               	return
  6959     1128                     l3677:
  6960     1128  3004               	movlw	4
  6961     1129  00F0               	movwf	?___fpclassifyf
  6962     112A  3000               	movlw	0
  6963     112B  00F1               	movwf	?___fpclassifyf+1
  6964     112C  0008               	return
  6965     112D                     __end_of___fpclassifyf:
  6966                           
  6967                           	psect	text15
  6968     1F9F                     __ptext15:	
  6969 ;; *************** function ___fltol *****************
  6970 ;; Defined at:
  6971 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  f1              4    0[COMMON] int 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  exp1            1    9[COMMON] unsigned char 
  6976 ;;  sign1           1    8[COMMON] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  4    0[COMMON] long 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6986 ;;      Params:         4       0       0       0       0       0       0       0
  6987 ;;      Locals:         2       0       0       0       0       0       0       0
  6988 ;;      Temps:          4       0       0       0       0       0       0       0
  6989 ;;      Totals:        10       0       0       0       0       0       0       0
  6990 ;;Total ram usage:       10 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_efgtoa
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999     1F9F                     ___fltol:	
  7000                           ;psect for function ___fltol
  7001                           
  7002                           
  7003                           ;incstack = 0
  7004                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7005     1F9F  1003               	clrc
  7006     1FA0  0D72               	rlf	___fltol@f1+2,w
  7007     1FA1  0D73               	rlf	___fltol@f1+3,w
  7008     1FA2  00F9               	movwf	___fltol@exp1
  7009     1FA3  0879               	movf	___fltol@exp1,w
  7010     1FA4  1D03               	btfss	3,2
  7011     1FA5  2FAF               	goto	l3323
  7012     1FA6                     l3319:
  7013     1FA6  3000               	movlw	0
  7014     1FA7  00F3               	movwf	?___fltol+3
  7015     1FA8  3000               	movlw	0
  7016     1FA9  00F2               	movwf	?___fltol+2
  7017     1FAA  3000               	movlw	0
  7018     1FAB  00F1               	movwf	?___fltol+1
  7019     1FAC  3000               	movlw	0
  7020     1FAD  00F0               	movwf	?___fltol
  7021     1FAE  0008               	return
  7022     1FAF                     l3323:
  7023     1FAF  0870               	movf	___fltol@f1,w
  7024     1FB0  00F4               	movwf	??___fltol
  7025     1FB1  0871               	movf	___fltol@f1+1,w
  7026     1FB2  00F5               	movwf	??___fltol+1
  7027     1FB3  0872               	movf	___fltol@f1+2,w
  7028     1FB4  00F6               	movwf	??___fltol+2
  7029     1FB5  0873               	movf	___fltol@f1+3,w
  7030     1FB6  00F7               	movwf	??___fltol+3
  7031     1FB7  301F               	movlw	31
  7032     1FB8                     u4225:
  7033     1FB8  36F7               	lsrf	??___fltol+3,f
  7034     1FB9  0CF6               	rrf	??___fltol+2,f
  7035     1FBA  0CF5               	rrf	??___fltol+1,f
  7036     1FBB  0CF4               	rrf	??___fltol,f
  7037     1FBC  0B89               	decfsz	9,f
  7038     1FBD  2FB8               	goto	u4225
  7039     1FBE  0874               	movf	??___fltol,w
  7040     1FBF  00F8               	movwf	___fltol@sign1
  7041     1FC0  17F2               	bsf	___fltol@f1+2,7
  7042     1FC1  30FF               	movlw	255
  7043     1FC2  05F0               	andwf	___fltol@f1,f
  7044     1FC3  30FF               	movlw	255
  7045     1FC4  05F1               	andwf	___fltol@f1+1,f
  7046     1FC5  30FF               	movlw	255
  7047     1FC6  05F2               	andwf	___fltol@f1+2,f
  7048     1FC7  3000               	movlw	0
  7049     1FC8  05F3               	andwf	___fltol@f1+3,f
  7050     1FC9  3096               	movlw	150
  7051     1FCA  02F9               	subwf	___fltol@exp1,f
  7052     1FCB  1FF9               	btfss	___fltol@exp1,7
  7053     1FCC  2FE0               	goto	l3341
  7054     1FCD  0879               	movf	___fltol@exp1,w
  7055     1FCE  3A80               	xorlw	128
  7056     1FCF  3E97               	addlw	151
  7057     1FD0  1C03               	btfss	3,0
  7058     1FD1  2FA6               	goto	l3319
  7059     1FD2                     l3339:
  7060     1FD2  3001               	movlw	1
  7061     1FD3                     u4255:
  7062     1FD3  36F3               	lsrf	___fltol@f1+3,f
  7063     1FD4  0CF2               	rrf	___fltol@f1+2,f
  7064     1FD5  0CF1               	rrf	___fltol@f1+1,f
  7065     1FD6  0CF0               	rrf	___fltol@f1,f
  7066     1FD7  0B89               	decfsz	9,f
  7067     1FD8  2FD3               	goto	u4255
  7068     1FD9  3001               	movlw	1
  7069     1FDA  00F4               	movwf	??___fltol
  7070     1FDB  0874               	movf	??___fltol,w
  7071     1FDC  07F9               	addwf	___fltol@exp1,f
  7072     1FDD  1903               	btfsc	3,2
  7073     1FDE  2FF1               	goto	l3349
  7074     1FDF  2FD2               	goto	l3339
  7075     1FE0                     l3341:
  7076     1FE0  3020               	movlw	32
  7077     1FE1  0279               	subwf	___fltol@exp1,w
  7078     1FE2  1803               	btfsc	3,0
  7079     1FE3  2FA6               	goto	l3319
  7080     1FE4                     l553:
  7081     1FE4  0879               	movf	___fltol@exp1,w
  7082     1FE5  1903               	btfsc	3,2
  7083     1FE6  2FF1               	goto	l3349
  7084     1FE7  3001               	movlw	1
  7085     1FE8                     u4285:
  7086     1FE8  35F0               	lslf	___fltol@f1,f
  7087     1FE9  0DF1               	rlf	___fltol@f1+1,f
  7088     1FEA  0DF2               	rlf	___fltol@f1+2,f
  7089     1FEB  0DF3               	rlf	___fltol@f1+3,f
  7090     1FEC  0B89               	decfsz	9,f
  7091     1FED  2FE8               	goto	u4285
  7092     1FEE  3001               	movlw	1
  7093     1FEF  02F9               	subwf	___fltol@exp1,f
  7094     1FF0  2FE4               	goto	l553
  7095     1FF1                     l3349:
  7096     1FF1  0878               	movf	___fltol@sign1,w
  7097     1FF2  1903               	btfsc	3,2
  7098     1FF3  0008               	return
  7099     1FF4  09F0               	comf	___fltol@f1,f
  7100     1FF5  09F1               	comf	___fltol@f1+1,f
  7101     1FF6  09F2               	comf	___fltol@f1+2,f
  7102     1FF7  09F3               	comf	___fltol@f1+3,f
  7103     1FF8  0AF0               	incf	___fltol@f1,f
  7104     1FF9  1903               	skipnz
  7105     1FFA  0AF1               	incf	___fltol@f1+1,f
  7106     1FFB  1903               	skipnz
  7107     1FFC  0AF2               	incf	___fltol@f1+2,f
  7108     1FFD  1903               	skipnz
  7109     1FFE  0AF3               	incf	___fltol@f1+3,f
  7110     1FFF  0008               	return
  7111     2000                     __end_of___fltol:
  7112                           
  7113                           	psect	text16
  7114     1D03                     __ptext16:	
  7115 ;; *************** function ___flsub *****************
  7116 ;; Defined at:
  7117 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  a               4   26[BANK0 ] long 
  7120 ;;  b               4   30[BANK0 ] long 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;		None
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  4   26[BANK0 ] long 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0, pclath, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7132 ;;      Params:         0       8       0       0       0       0       0       0
  7133 ;;      Locals:         0       0       0       0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0
  7135 ;;      Totals:         0       8       0       0       0       0       0       0
  7136 ;;Total ram usage:        8 bytes
  7137 ;; Hardware stack levels used: 1
  7138 ;; Hardware stack levels required when called: 1
  7139 ;; This function calls:
  7140 ;;		___fladd
  7141 ;; This function is called by:
  7142 ;;		_efgtoa
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146     1D03                     ___flsub:	
  7147                           ;psect for function ___flsub
  7148                           
  7149                           
  7150                           ;incstack = 0
  7151                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7152     1D03  3080               	movlw	128
  7153     1D04  0020               	movlb	0	; select bank0
  7154     1D05  06BD               	xorwf	___flsub@a+3,f
  7155     1D06  0841               	movf	___flsub@b+3,w
  7156     1D07  00F3               	movwf	___fladd@b+3
  7157     1D08  0840               	movf	___flsub@b+2,w
  7158     1D09  00F2               	movwf	___fladd@b+2
  7159     1D0A  083F               	movf	___flsub@b+1,w
  7160     1D0B  00F1               	movwf	___fladd@b+1
  7161     1D0C  083E               	movf	___flsub@b,w
  7162     1D0D  00F0               	movwf	___fladd@b
  7163     1D0E  083D               	movf	___flsub@a+3,w
  7164     1D0F  00F7               	movwf	___fladd@a+3
  7165     1D10  083C               	movf	___flsub@a+2,w
  7166     1D11  00F6               	movwf	___fladd@a+2
  7167     1D12  083B               	movf	___flsub@a+1,w
  7168     1D13  00F5               	movwf	___fladd@a+1
  7169     1D14  083A               	movf	___flsub@a,w
  7170     1D15  00F4               	movwf	___fladd@a
  7171     1D16  3188  2073         	fcall	___fladd
  7172     1D18  0873               	movf	?___fladd+3,w
  7173     1D19  0020               	movlb	0	; select bank0
  7174     1D1A  00BD               	movwf	?___flsub+3
  7175     1D1B  0872               	movf	?___fladd+2,w
  7176     1D1C  00BC               	movwf	?___flsub+2
  7177     1D1D  0871               	movf	?___fladd+1,w
  7178     1D1E  00BB               	movwf	?___flsub+1
  7179     1D1F  0870               	movf	?___fladd,w
  7180     1D20  00BA               	movwf	?___flsub
  7181     1D21  0008               	return
  7182     1D22                     __end_of___flsub:
  7183                           
  7184                           	psect	text17
  7185     0873                     __ptext17:	
  7186 ;; *************** function ___fladd *****************
  7187 ;; Defined at:
  7188 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  b               4    0[COMMON] long 
  7191 ;;  a               4    4[COMMON] long 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  grs             1   11[COMMON] unsigned char 
  7194 ;;  bexp            1   10[COMMON] unsigned char 
  7195 ;;  aexp            1    9[COMMON] unsigned char 
  7196 ;;  signs           1    8[COMMON] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  4    0[COMMON] unsigned char 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7206 ;;      Params:         8       0       0       0       0       0       0       0
  7207 ;;      Locals:         4       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       8       0       0       0       0       0       0
  7209 ;;      Totals:        12       8       0       0       0       0       0       0
  7210 ;;Total ram usage:       20 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		___flsub
  7216 ;;		_efgtoa
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220     0873                     ___fladd:	
  7221                           ;psect for function ___fladd
  7222                           
  7223                           
  7224                           ;incstack = 0
  7225                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7226     0873  0873               	movf	___fladd@b+3,w
  7227     0874  3980               	andlw	128
  7228     0875  00F8               	movwf	___fladd@signs
  7229     0876  3573               	lslf	___fladd@b+3,w
  7230     0877  00FA               	movwf	___fladd@bexp
  7231     0878  1BF2               	btfsc	___fladd@b+2,7
  7232     0879  147A               	bsf	___fladd@bexp,0
  7233     087A  087A               	movf	___fladd@bexp,w
  7234     087B  1903               	btfsc	3,2
  7235     087C  288B               	goto	l2997
  7236     087D  0A7A               	incf	___fladd@bexp,w
  7237     087E  1D03               	btfss	3,2
  7238     087F  2888               	goto	l2993
  7239     0880  3000               	movlw	0
  7240     0881  00F3               	movwf	___fladd@b+3
  7241     0882  3000               	movlw	0
  7242     0883  00F2               	movwf	___fladd@b+2
  7243     0884  3000               	movlw	0
  7244     0885  00F1               	movwf	___fladd@b+1
  7245     0886  3000               	movlw	0
  7246     0887  00F0               	movwf	___fladd@b
  7247     0888                     l2993:
  7248     0888  17F2               	bsf	___fladd@b+2,7
  7249     0889  01F3               	clrf	___fladd@b+3
  7250     088A  2893               	goto	l2999
  7251     088B                     l2997:
  7252     088B  3000               	movlw	0
  7253     088C  00F3               	movwf	___fladd@b+3
  7254     088D  3000               	movlw	0
  7255     088E  00F2               	movwf	___fladd@b+2
  7256     088F  3000               	movlw	0
  7257     0890  00F1               	movwf	___fladd@b+1
  7258     0891  3000               	movlw	0
  7259     0892  00F0               	movwf	___fladd@b
  7260     0893                     l2999:
  7261     0893  0877               	movf	___fladd@a+3,w
  7262     0894  3980               	andlw	128
  7263     0895  00F9               	movwf	___fladd@aexp
  7264     0896  0879               	movf	___fladd@aexp,w
  7265     0897  0678               	xorwf	___fladd@signs,w
  7266     0898  1D03               	btfss	3,2
  7267     0899  1778               	bsf	___fladd@signs,6
  7268     089A  3577               	lslf	___fladd@a+3,w
  7269     089B  00F9               	movwf	___fladd@aexp
  7270     089C  1BF6               	btfsc	___fladd@a+2,7
  7271     089D  1479               	bsf	___fladd@aexp,0
  7272     089E  0879               	movf	___fladd@aexp,w
  7273     089F  1903               	btfsc	3,2
  7274     08A0  28AF               	goto	l3021
  7275     08A1  0A79               	incf	___fladd@aexp,w
  7276     08A2  1D03               	btfss	3,2
  7277     08A3  28AC               	goto	l3017
  7278     08A4  3000               	movlw	0
  7279     08A5  00F7               	movwf	___fladd@a+3
  7280     08A6  3000               	movlw	0
  7281     08A7  00F6               	movwf	___fladd@a+2
  7282     08A8  3000               	movlw	0
  7283     08A9  00F5               	movwf	___fladd@a+1
  7284     08AA  3000               	movlw	0
  7285     08AB  00F4               	movwf	___fladd@a
  7286     08AC                     l3017:
  7287     08AC  17F6               	bsf	___fladd@a+2,7
  7288     08AD  01F7               	clrf	___fladd@a+3
  7289     08AE  28B7               	goto	l653
  7290     08AF                     l3021:
  7291     08AF  3000               	movlw	0
  7292     08B0  00F7               	movwf	___fladd@a+3
  7293     08B1  3000               	movlw	0
  7294     08B2  00F6               	movwf	___fladd@a+2
  7295     08B3  3000               	movlw	0
  7296     08B4  00F5               	movwf	___fladd@a+1
  7297     08B5  3000               	movlw	0
  7298     08B6  00F4               	movwf	___fladd@a
  7299     08B7                     l653:
  7300     08B7  087A               	movf	___fladd@bexp,w
  7301     08B8  0279               	subwf	___fladd@aexp,w
  7302     08B9  1803               	skipnc
  7303     08BA  28E0               	goto	l3057
  7304     08BB  1F78               	btfss	___fladd@signs,6
  7305     08BC  28C2               	goto	l3027
  7306     08BD  3080               	movlw	128
  7307     08BE  0020               	movlb	0	; select bank0
  7308     08BF  00A0               	movwf	??___fladd
  7309     08C0  0820               	movf	??___fladd,w
  7310     08C1  06F8               	xorwf	___fladd@signs,f
  7311     08C2                     l3027:
  7312     08C2  087A               	movf	___fladd@bexp,w
  7313     08C3  00FB               	movwf	___fladd@grs
  7314     08C4  0879               	movf	___fladd@aexp,w
  7315     08C5  00FA               	movwf	___fladd@bexp
  7316     08C6  087B               	movf	___fladd@grs,w
  7317     08C7  00F9               	movwf	___fladd@aexp
  7318     08C8  0870               	movf	___fladd@b,w
  7319     08C9  00FB               	movwf	___fladd@grs
  7320     08CA  0874               	movf	___fladd@a,w
  7321     08CB  00F0               	movwf	___fladd@b
  7322     08CC  087B               	movf	___fladd@grs,w
  7323     08CD  00F4               	movwf	___fladd@a
  7324     08CE  0871               	movf	___fladd@b+1,w
  7325     08CF  00FB               	movwf	___fladd@grs
  7326     08D0  0875               	movf	___fladd@a+1,w
  7327     08D1  00F1               	movwf	___fladd@b+1
  7328     08D2  087B               	movf	___fladd@grs,w
  7329     08D3  00F5               	movwf	___fladd@a+1
  7330     08D4  0872               	movf	___fladd@b+2,w
  7331     08D5  00FB               	movwf	___fladd@grs
  7332     08D6  0876               	movf	___fladd@a+2,w
  7333     08D7  00F2               	movwf	___fladd@b+2
  7334     08D8  087B               	movf	___fladd@grs,w
  7335     08D9  00F6               	movwf	___fladd@a+2
  7336     08DA  0873               	movf	___fladd@b+3,w
  7337     08DB  00FB               	movwf	___fladd@grs
  7338     08DC  0877               	movf	___fladd@a+3,w
  7339     08DD  00F3               	movwf	___fladd@b+3
  7340     08DE  087B               	movf	___fladd@grs,w
  7341     08DF  00F7               	movwf	___fladd@a+3
  7342     08E0                     l3057:
  7343     08E0  01FB               	clrf	___fladd@grs
  7344     08E1  0879               	movf	___fladd@aexp,w
  7345     08E2  0020               	movlb	0	; select bank0
  7346     08E3  00A0               	movwf	??___fladd
  7347     08E4  01A1               	clrf	??___fladd+1
  7348     08E5  0821               	movf	??___fladd+1,w
  7349     08E6  00A3               	movwf	??___fladd+3
  7350     08E7  087A               	movf	___fladd@bexp,w
  7351     08E8  0220               	subwf	??___fladd,w
  7352     08E9  00A2               	movwf	??___fladd+2
  7353     08EA  1C03               	skipc
  7354     08EB  03A3               	decf	??___fladd+3,f
  7355     08EC  0823               	movf	??___fladd+3,w
  7356     08ED  3A80               	xorlw	128
  7357     08EE  00A4               	movwf	??___fladd+4
  7358     08EF  3080               	movlw	128
  7359     08F0  0224               	subwf	??___fladd+4,w
  7360     08F1  1D03               	skipz
  7361     08F2  28F5               	goto	u3495
  7362     08F3  301A               	movlw	26
  7363     08F4  0222               	subwf	??___fladd+2,w
  7364     08F5                     u3495:
  7365     08F5  1C03               	skipc
  7366     08F6  2923               	goto	l3075
  7367     08F7  0873               	movf	___fladd@b+3,w
  7368     08F8  0472               	iorwf	___fladd@b+2,w
  7369     08F9  0471               	iorwf	___fladd@b+1,w
  7370     08FA  0470               	iorwf	___fladd@b,w
  7371     08FB  1903               	btfsc	3,2
  7372     08FC  28FF               	goto	u3500
  7373     08FD  3001               	movlw	1
  7374     08FE  2900               	goto	u3510
  7375     08FF                     u3500:
  7376     08FF  3000               	movlw	0
  7377     0900                     u3510:
  7378     0900  00FB               	movwf	___fladd@grs
  7379     0901  3000               	movlw	0
  7380     0902  00F3               	movwf	___fladd@b+3
  7381     0903  3000               	movlw	0
  7382     0904  00F2               	movwf	___fladd@b+2
  7383     0905  3000               	movlw	0
  7384     0906  00F1               	movwf	___fladd@b+1
  7385     0907  3000               	movlw	0
  7386     0908  00F0               	movwf	___fladd@b
  7387     0909  0879               	movf	___fladd@aexp,w
  7388     090A  00FA               	movwf	___fladd@bexp
  7389     090B  2927               	goto	l657
  7390     090C                     l659:
  7391     090C  1C7B               	btfss	___fladd@grs,0
  7392     090D  2912               	goto	l3065
  7393     090E  367B               	lsrf	___fladd@grs,w
  7394     090F  3801               	iorlw	1
  7395     0910  00FB               	movwf	___fladd@grs
  7396     0911  2914               	goto	l3067
  7397     0912                     l3065:
  7398     0912  1003               	clrc
  7399     0913  0CFB               	rrf	___fladd@grs,f
  7400     0914                     l3067:
  7401     0914  1870               	btfsc	___fladd@b,0
  7402     0915  17FB               	bsf	___fladd@grs,7
  7403     0916  3001               	movlw	1
  7404     0917  0020               	movlb	0	; select bank0
  7405     0918  00A0               	movwf	??___fladd
  7406     0919                     u3545:
  7407     0919  37F3               	asrf	___fladd@b+3,f
  7408     091A  0CF2               	rrf	___fladd@b+2,f
  7409     091B  0CF1               	rrf	___fladd@b+1,f
  7410     091C  0CF0               	rrf	___fladd@b,f
  7411     091D  0BA0               	decfsz	??___fladd& (0+127),f
  7412     091E  2919               	goto	u3545
  7413     091F  3001               	movlw	1
  7414     0920  00A0               	movwf	??___fladd
  7415     0921  0820               	movf	??___fladd,w
  7416     0922  07FA               	addwf	___fladd@bexp,f
  7417     0923                     l3075:
  7418     0923  0879               	movf	___fladd@aexp,w
  7419     0924  027A               	subwf	___fladd@bexp,w
  7420     0925  1C03               	skipc
  7421     0926  290C               	goto	l659
  7422     0927                     l657:
  7423     0927  1B78               	btfsc	___fladd@signs,6
  7424     0928  2957               	goto	l3101
  7425     0929  087A               	movf	___fladd@bexp,w
  7426     092A  1D03               	btfss	3,2
  7427     092B  2935               	goto	l3083
  7428     092C  3000               	movlw	0
  7429     092D  00F3               	movwf	?___fladd+3
  7430     092E  3000               	movlw	0
  7431     092F  00F2               	movwf	?___fladd+2
  7432     0930  3000               	movlw	0
  7433     0931  00F1               	movwf	?___fladd+1
  7434     0932  3000               	movlw	0
  7435     0933  00F0               	movwf	?___fladd
  7436     0934  0008               	return
  7437     0935                     l3083:
  7438     0935  0874               	movf	___fladd@a,w
  7439     0936  07F0               	addwf	___fladd@b,f
  7440     0937  0875               	movf	___fladd@a+1,w
  7441     0938  3DF1               	addwfc	___fladd@b+1,f
  7442     0939  0876               	movf	___fladd@a+2,w
  7443     093A  3DF2               	addwfc	___fladd@b+2,f
  7444     093B  0877               	movf	___fladd@a+3,w
  7445     093C  3DF3               	addwfc	___fladd@b+3,f
  7446     093D  1C73               	btfss	___fladd@b+3,0
  7447     093E  29D2               	goto	l3135
  7448     093F  1C7B               	btfss	___fladd@grs,0
  7449     0940  2945               	goto	l3091
  7450     0941  367B               	lsrf	___fladd@grs,w
  7451     0942  3801               	iorlw	1
  7452     0943  00FB               	movwf	___fladd@grs
  7453     0944  2947               	goto	l3093
  7454     0945                     l3091:
  7455     0945  1003               	clrc
  7456     0946  0CFB               	rrf	___fladd@grs,f
  7457     0947                     l3093:
  7458     0947  1870               	btfsc	___fladd@b,0
  7459     0948  17FB               	bsf	___fladd@grs,7
  7460     0949  3001               	movlw	1
  7461     094A  0020               	movlb	0	; select bank0
  7462     094B  00A0               	movwf	??___fladd
  7463     094C                     u3615:
  7464     094C  37F3               	asrf	___fladd@b+3,f
  7465     094D  0CF2               	rrf	___fladd@b+2,f
  7466     094E  0CF1               	rrf	___fladd@b+1,f
  7467     094F  0CF0               	rrf	___fladd@b,f
  7468     0950  0BA0               	decfsz	??___fladd& (0+127),f
  7469     0951  294C               	goto	u3615
  7470     0952  3001               	movlw	1
  7471     0953  00A0               	movwf	??___fladd
  7472     0954  0820               	movf	??___fladd,w
  7473     0955  07FA               	addwf	___fladd@bexp,f
  7474     0956  29D2               	goto	l3135
  7475     0957                     l3101:
  7476     0957  0873               	movf	___fladd@b+3,w
  7477     0958  3A80               	xorlw	128
  7478     0959  0020               	movlb	0	; select bank0
  7479     095A  00A0               	movwf	??___fladd
  7480     095B  0877               	movf	___fladd@a+3,w
  7481     095C  3A80               	xorlw	128
  7482     095D  0220               	subwf	??___fladd,w
  7483     095E  1D03               	skipz
  7484     095F  296A               	goto	u3623
  7485     0960  0876               	movf	___fladd@a+2,w
  7486     0961  0272               	subwf	___fladd@b+2,w
  7487     0962  1D03               	skipz
  7488     0963  296A               	goto	u3623
  7489     0964  0875               	movf	___fladd@a+1,w
  7490     0965  0271               	subwf	___fladd@b+1,w
  7491     0966  1D03               	skipz
  7492     0967  296A               	goto	u3623
  7493     0968  0874               	movf	___fladd@a,w
  7494     0969  0270               	subwf	___fladd@b,w
  7495     096A                     u3623:
  7496     096A  1803               	skipnc
  7497     096B  29A2               	goto	l3111
  7498     096C  30FF               	movlw	255
  7499     096D  00A0               	movwf	??___fladd
  7500     096E  30FF               	movlw	255
  7501     096F  00A1               	movwf	??___fladd+1
  7502     0970  30FF               	movlw	255
  7503     0971  00A2               	movwf	??___fladd+2
  7504     0972  30FF               	movlw	255
  7505     0973  00A3               	movwf	??___fladd+3
  7506     0974  0870               	movf	___fladd@b,w
  7507     0975  0274               	subwf	___fladd@a,w
  7508     0976  00A4               	movwf	??___fladd+4
  7509     0977  0871               	movf	___fladd@b+1,w
  7510     0978  3B75               	subwfb	___fladd@a+1,w
  7511     0979  00A5               	movwf	??___fladd+5
  7512     097A  0872               	movf	___fladd@b+2,w
  7513     097B  3B76               	subwfb	___fladd@a+2,w
  7514     097C  00A6               	movwf	??___fladd+6
  7515     097D  0873               	movf	___fladd@b+3,w
  7516     097E  3B77               	subwfb	___fladd@a+3,w
  7517     097F  00A7               	movwf	??___fladd+7
  7518     0980  0824               	movf	??___fladd+4,w
  7519     0981  07A0               	addwf	??___fladd,f
  7520     0982  0825               	movf	??___fladd+5,w
  7521     0983  3DA1               	addwfc	??___fladd+1,f
  7522     0984  0826               	movf	??___fladd+6,w
  7523     0985  3DA2               	addwfc	??___fladd+2,f
  7524     0986  0827               	movf	??___fladd+7,w
  7525     0987  3DA3               	addwfc	??___fladd+3,f
  7526     0988  0823               	movf	??___fladd+3,w
  7527     0989  00F3               	movwf	___fladd@b+3
  7528     098A  0822               	movf	??___fladd+2,w
  7529     098B  00F2               	movwf	___fladd@b+2
  7530     098C  0821               	movf	??___fladd+1,w
  7531     098D  00F1               	movwf	___fladd@b+1
  7532     098E  0820               	movf	??___fladd,w
  7533     098F  00F0               	movwf	___fladd@b
  7534     0990  3080               	movlw	128
  7535     0991  00A0               	movwf	??___fladd
  7536     0992  0820               	movf	??___fladd,w
  7537     0993  06F8               	xorwf	___fladd@signs,f
  7538     0994  09FB               	comf	___fladd@grs,f
  7539     0995  0AFB               	incf	___fladd@grs,f
  7540     0996  087B               	movf	___fladd@grs,w
  7541     0997  1D03               	btfss	3,2
  7542     0998  29AA               	goto	l674
  7543     0999  3001               	movlw	1
  7544     099A  07F0               	addwf	___fladd@b,f
  7545     099B  3000               	movlw	0
  7546     099C  3DF1               	addwfc	___fladd@b+1,f
  7547     099D  3000               	movlw	0
  7548     099E  3DF2               	addwfc	___fladd@b+2,f
  7549     099F  3000               	movlw	0
  7550     09A0  3DF3               	addwfc	___fladd@b+3,f
  7551     09A1  29AA               	goto	l674
  7552     09A2                     l3111:
  7553     09A2  0874               	movf	___fladd@a,w
  7554     09A3  02F0               	subwf	___fladd@b,f
  7555     09A4  0875               	movf	___fladd@a+1,w
  7556     09A5  3BF1               	subwfb	___fladd@b+1,f
  7557     09A6  0876               	movf	___fladd@a+2,w
  7558     09A7  3BF2               	subwfb	___fladd@b+2,f
  7559     09A8  0877               	movf	___fladd@a+3,w
  7560     09A9  3BF3               	subwfb	___fladd@b+3,f
  7561     09AA                     l674:
  7562     09AA  0873               	movf	___fladd@b+3,w
  7563     09AB  0472               	iorwf	___fladd@b+2,w
  7564     09AC  0471               	iorwf	___fladd@b+1,w
  7565     09AD  0470               	iorwf	___fladd@b,w
  7566     09AE  1D03               	skipz
  7567     09AF  29D0               	goto	l3133
  7568     09B0  087B               	movf	___fladd@grs,w
  7569     09B1  1D03               	btfss	3,2
  7570     09B2  29D0               	goto	l3133
  7571     09B3  3000               	movlw	0
  7572     09B4  00F3               	movwf	?___fladd+3
  7573     09B5  3000               	movlw	0
  7574     09B6  00F2               	movwf	?___fladd+2
  7575     09B7  3000               	movlw	0
  7576     09B8  00F1               	movwf	?___fladd+1
  7577     09B9  3000               	movlw	0
  7578     09BA  00F0               	movwf	?___fladd
  7579     09BB  0008               	return
  7580     09BC                     l3119:
  7581     09BC  3001               	movlw	1
  7582     09BD                     u3665:
  7583     09BD  35F0               	lslf	___fladd@b,f
  7584     09BE  0DF1               	rlf	___fladd@b+1,f
  7585     09BF  0DF2               	rlf	___fladd@b+2,f
  7586     09C0  0DF3               	rlf	___fladd@b+3,f
  7587     09C1  0B89               	decfsz	9,f
  7588     09C2  29BD               	goto	u3665
  7589     09C3  1BFB               	btfsc	___fladd@grs,7
  7590     09C4  1470               	bsf	___fladd@b,0
  7591     09C5  1C7B               	btfss	___fladd@grs,0
  7592     09C6  29C9               	goto	l3127
  7593     09C7  1403               	setc
  7594     09C8  29CA               	goto	L22
  7595     09C9                     l3127:
  7596     09C9  1003               	clrc
  7597     09CA                     L22:
  7598     09CA  0DFB               	rlf	___fladd@grs,f
  7599     09CB  087A               	movf	___fladd@bexp,w
  7600     09CC  1903               	btfsc	3,2
  7601     09CD  29D0               	goto	l3133
  7602     09CE  3001               	movlw	1
  7603     09CF  02FA               	subwf	___fladd@bexp,f
  7604     09D0                     l3133:
  7605     09D0  1FF2               	btfss	___fladd@b+2,7
  7606     09D1  29BC               	goto	l3119
  7607     09D2                     l3135:
  7608     09D2  01F9               	clrf	___fladd@aexp
  7609     09D3  1FFB               	btfss	___fladd@grs,7
  7610     09D4  29DD               	goto	l3145
  7611     09D5  087B               	movf	___fladd@grs,w
  7612     09D6  397F               	andlw	127
  7613     09D7  1903               	btfsc	3,2
  7614     09D8  1870               	btfsc	___fladd@b,0
  7615     09D9  29DB               	goto	l3141
  7616     09DA  29DD               	goto	l3145
  7617     09DB                     l3141:
  7618     09DB  01F9               	clrf	___fladd@aexp
  7619     09DC  0AF9               	incf	___fladd@aexp,f
  7620     09DD                     l3145:
  7621     09DD  0879               	movf	___fladd@aexp,w
  7622     09DE  1903               	btfsc	3,2
  7623     09DF  2A0A               	goto	l687
  7624     09E0  3001               	movlw	1
  7625     09E1  07F0               	addwf	___fladd@b,f
  7626     09E2  3000               	movlw	0
  7627     09E3  3DF1               	addwfc	___fladd@b+1,f
  7628     09E4  3000               	movlw	0
  7629     09E5  3DF2               	addwfc	___fladd@b+2,f
  7630     09E6  3000               	movlw	0
  7631     09E7  3DF3               	addwfc	___fladd@b+3,f
  7632     09E8  1C73               	btfss	___fladd@b+3,0
  7633     09E9  2A0A               	goto	l687
  7634     09EA  0870               	movf	___fladd@b,w
  7635     09EB  0020               	movlb	0	; select bank0
  7636     09EC  00A0               	movwf	??___fladd
  7637     09ED  0871               	movf	___fladd@b+1,w
  7638     09EE  00A1               	movwf	??___fladd+1
  7639     09EF  0872               	movf	___fladd@b+2,w
  7640     09F0  00A2               	movwf	??___fladd+2
  7641     09F1  0873               	movf	___fladd@b+3,w
  7642     09F2  00A3               	movwf	??___fladd+3
  7643     09F3  3001               	movlw	1
  7644     09F4  00A4               	movwf	??___fladd+4
  7645     09F5                     u3765:
  7646     09F5  37A3               	asrf	??___fladd+3,f
  7647     09F6  0CA2               	rrf	??___fladd+2,f
  7648     09F7  0CA1               	rrf	??___fladd+1,f
  7649     09F8  0CA0               	rrf	??___fladd,f
  7650     09F9  0BA4               	decfsz	??___fladd+4,f
  7651     09FA  29F5               	goto	u3765
  7652     09FB  0823               	movf	??___fladd+3,w
  7653     09FC  00F3               	movwf	___fladd@b+3
  7654     09FD  0822               	movf	??___fladd+2,w
  7655     09FE  00F2               	movwf	___fladd@b+2
  7656     09FF  0821               	movf	??___fladd+1,w
  7657     0A00  00F1               	movwf	___fladd@b+1
  7658     0A01  0820               	movf	??___fladd,w
  7659     0A02  00F0               	movwf	___fladd@b
  7660     0A03  0A7A               	incf	___fladd@bexp,w
  7661     0A04  1903               	btfsc	3,2
  7662     0A05  2A0A               	goto	l687
  7663     0A06  3001               	movlw	1
  7664     0A07  00A0               	movwf	??___fladd
  7665     0A08  0820               	movf	??___fladd,w
  7666     0A09  07FA               	addwf	___fladd@bexp,f
  7667     0A0A                     l687:
  7668     0A0A  0A7A               	incf	___fladd@bexp,w
  7669     0A0B  1D03               	btfss	3,2
  7670     0A0C  087A               	movf	___fladd@bexp,w
  7671     0A0D  1D03               	btfss	3,2
  7672     0A0E  2A1A               	goto	l3163
  7673     0A0F  3000               	movlw	0
  7674     0A10  00F3               	movwf	___fladd@b+3
  7675     0A11  3000               	movlw	0
  7676     0A12  00F2               	movwf	___fladd@b+2
  7677     0A13  3000               	movlw	0
  7678     0A14  00F1               	movwf	___fladd@b+1
  7679     0A15  3000               	movlw	0
  7680     0A16  00F0               	movwf	___fladd@b
  7681     0A17  087A               	movf	___fladd@bexp,w
  7682     0A18  1903               	btfsc	3,2
  7683     0A19  01F8               	clrf	___fladd@signs
  7684     0A1A                     l3163:
  7685     0A1A  1C7A               	btfss	___fladd@bexp,0
  7686     0A1B  2A1E               	goto	l3167
  7687     0A1C  17F2               	bsf	___fladd@b+2,7
  7688     0A1D  2A23               	goto	l695
  7689     0A1E                     l3167:
  7690     0A1E  307F               	movlw	127
  7691     0A1F  0020               	movlb	0	; select bank0
  7692     0A20  00A0               	movwf	??___fladd
  7693     0A21  0820               	movf	??___fladd,w
  7694     0A22  05F2               	andwf	___fladd@b+2,f
  7695     0A23                     l695:
  7696     0A23  367A               	lsrf	___fladd@bexp,w
  7697     0A24  00F3               	movwf	___fladd@b+3
  7698     0A25  1FF8               	btfss	___fladd@signs,7
  7699     0A26  0008               	return
  7700     0A27  17F3               	bsf	___fladd@b+3,7
  7701     0A28  0008               	return
  7702     0A29                     __end_of___fladd:
  7703                           
  7704                           	psect	text18
  7705     1C0C                     __ptext18:	
  7706 ;; *************** function ___flneg *****************
  7707 ;; Defined at:
  7708 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  f1              4    0[COMMON] unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  4    0[COMMON] unsigned char 
  7715 ;; Registers used:
  7716 ;;		wreg
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7722 ;;      Params:         4       0       0       0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0       0
  7725 ;;      Totals:         4       0       0       0       0       0       0       0
  7726 ;;Total ram usage:        4 bytes
  7727 ;; Hardware stack levels used: 1
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_efgtoa
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735     1C0C                     ___flneg:	
  7736                           ;psect for function ___flneg
  7737                           
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in ___flneg: [wreg]
  7741     1C0C  0873               	movf	___flneg@f1+3,w
  7742     1C0D  0472               	iorwf	___flneg@f1+2,w
  7743     1C0E  0471               	iorwf	___flneg@f1+1,w
  7744     1C0F  0470               	iorwf	___flneg@f1,w
  7745     1C10  1903               	skipnz
  7746     1C11  0008               	return
  7747     1C12  3080               	movlw	128
  7748     1C13  06F3               	xorwf	___flneg@f1+3,f
  7749     1C14  0008               	return
  7750     1C15                     __end_of___flneg:
  7751                           
  7752                           	psect	text19
  7753     112D                     __ptext19:	
  7754 ;; *************** function ___flge *****************
  7755 ;; Defined at:
  7756 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  ff1             4   26[BANK0 ] unsigned char 
  7759 ;;  ff2             4   30[BANK0 ] unsigned char 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;		None               void
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7771 ;;      Params:         0       8       0       0       0       0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0
  7773 ;;      Temps:          0       4       0       0       0       0       0       0
  7774 ;;      Totals:         0      12       0       0       0       0       0       0
  7775 ;;Total ram usage:       12 bytes
  7776 ;; Hardware stack levels used: 1
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;;		_efgtoa
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785     112D                     ___flge:	
  7786                           ;psect for function ___flge
  7787                           
  7788                           
  7789                           ;incstack = 0
  7790                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7791     112D  3000               	movlw	0
  7792     112E  0020               	movlb	0	; select bank0
  7793     112F  053A               	andwf	___flge@ff1,w
  7794     1130  00C2               	movwf	??___flge
  7795     1131  3000               	movlw	0
  7796     1132  053B               	andwf	___flge@ff1+1,w
  7797     1133  00C3               	movwf	??___flge+1
  7798     1134  3080               	movlw	128
  7799     1135  053C               	andwf	___flge@ff1+2,w
  7800     1136  00C4               	movwf	??___flge+2
  7801     1137  307F               	movlw	127
  7802     1138  053D               	andwf	___flge@ff1+3,w
  7803     1139  00C5               	movwf	??___flge+3
  7804     113A  0845               	movf	??___flge+3,w
  7805     113B  0444               	iorwf	??___flge+2,w
  7806     113C  0443               	iorwf	??___flge+1,w
  7807     113D  0442               	iorwf	??___flge,w
  7808     113E  1D03               	skipz
  7809     113F  2948               	goto	l530
  7810     1140  3000               	movlw	0
  7811     1141  00BD               	movwf	___flge@ff1+3
  7812     1142  3000               	movlw	0
  7813     1143  00BC               	movwf	___flge@ff1+2
  7814     1144  3000               	movlw	0
  7815     1145  00BB               	movwf	___flge@ff1+1
  7816     1146  3000               	movlw	0
  7817     1147  00BA               	movwf	___flge@ff1
  7818     1148                     l530:
  7819     1148  3000               	movlw	0
  7820     1149  053E               	andwf	___flge@ff2,w
  7821     114A  00C2               	movwf	??___flge
  7822     114B  3000               	movlw	0
  7823     114C  053F               	andwf	___flge@ff2+1,w
  7824     114D  00C3               	movwf	??___flge+1
  7825     114E  3080               	movlw	128
  7826     114F  0540               	andwf	___flge@ff2+2,w
  7827     1150  00C4               	movwf	??___flge+2
  7828     1151  307F               	movlw	127
  7829     1152  0541               	andwf	___flge@ff2+3,w
  7830     1153  00C5               	movwf	??___flge+3
  7831     1154  0845               	movf	??___flge+3,w
  7832     1155  0444               	iorwf	??___flge+2,w
  7833     1156  0443               	iorwf	??___flge+1,w
  7834     1157  0442               	iorwf	??___flge,w
  7835     1158  1D03               	skipz
  7836     1159  2962               	goto	l3295
  7837     115A  3000               	movlw	0
  7838     115B  00C1               	movwf	___flge@ff2+3
  7839     115C  3000               	movlw	0
  7840     115D  00C0               	movwf	___flge@ff2+2
  7841     115E  3000               	movlw	0
  7842     115F  00BF               	movwf	___flge@ff2+1
  7843     1160  3000               	movlw	0
  7844     1161  00BE               	movwf	___flge@ff2
  7845     1162                     l3295:
  7846     1162  1FBD               	btfss	___flge@ff1+3,7
  7847     1163  297C               	goto	l3299
  7848     1164  3000               	movlw	0
  7849     1165  00C2               	movwf	??___flge
  7850     1166  3000               	movlw	0
  7851     1167  00C3               	movwf	??___flge+1
  7852     1168  3000               	movlw	0
  7853     1169  00C4               	movwf	??___flge+2
  7854     116A  3080               	movlw	128
  7855     116B  00C5               	movwf	??___flge+3
  7856     116C  083A               	movf	___flge@ff1,w
  7857     116D  02C2               	subwf	??___flge,f
  7858     116E  083B               	movf	___flge@ff1+1,w
  7859     116F  3BC3               	subwfb	??___flge+1,f
  7860     1170  083C               	movf	___flge@ff1+2,w
  7861     1171  3BC4               	subwfb	??___flge+2,f
  7862     1172  083D               	movf	___flge@ff1+3,w
  7863     1173  3BC5               	subwfb	??___flge+3,f
  7864     1174  0845               	movf	??___flge+3,w
  7865     1175  00BD               	movwf	___flge@ff1+3
  7866     1176  0844               	movf	??___flge+2,w
  7867     1177  00BC               	movwf	___flge@ff1+2
  7868     1178  0843               	movf	??___flge+1,w
  7869     1179  00BB               	movwf	___flge@ff1+1
  7870     117A  0842               	movf	??___flge,w
  7871     117B  00BA               	movwf	___flge@ff1
  7872     117C                     l3299:
  7873     117C  1FC1               	btfss	___flge@ff2+3,7
  7874     117D  2996               	goto	l533
  7875     117E  3000               	movlw	0
  7876     117F  00C2               	movwf	??___flge
  7877     1180  3000               	movlw	0
  7878     1181  00C3               	movwf	??___flge+1
  7879     1182  3000               	movlw	0
  7880     1183  00C4               	movwf	??___flge+2
  7881     1184  3080               	movlw	128
  7882     1185  00C5               	movwf	??___flge+3
  7883     1186  083E               	movf	___flge@ff2,w
  7884     1187  02C2               	subwf	??___flge,f
  7885     1188  083F               	movf	___flge@ff2+1,w
  7886     1189  3BC3               	subwfb	??___flge+1,f
  7887     118A  0840               	movf	___flge@ff2+2,w
  7888     118B  3BC4               	subwfb	??___flge+2,f
  7889     118C  0841               	movf	___flge@ff2+3,w
  7890     118D  3BC5               	subwfb	??___flge+3,f
  7891     118E  0845               	movf	??___flge+3,w
  7892     118F  00C1               	movwf	___flge@ff2+3
  7893     1190  0844               	movf	??___flge+2,w
  7894     1191  00C0               	movwf	___flge@ff2+2
  7895     1192  0843               	movf	??___flge+1,w
  7896     1193  00BF               	movwf	___flge@ff2+1
  7897     1194  0842               	movf	??___flge,w
  7898     1195  00BE               	movwf	___flge@ff2
  7899     1196                     l533:
  7900     1196  3080               	movlw	128
  7901     1197  06BD               	xorwf	___flge@ff1+3,f
  7902     1198  3080               	movlw	128
  7903     1199  06C1               	xorwf	___flge@ff2+3,f
  7904     119A  0841               	movf	___flge@ff2+3,w
  7905     119B  023D               	subwf	___flge@ff1+3,w
  7906     119C  1D03               	skipz
  7907     119D  0008               	return
  7908     119E  0840               	movf	___flge@ff2+2,w
  7909     119F  023C               	subwf	___flge@ff1+2,w
  7910     11A0  1D03               	skipz
  7911     11A1  0008               	return
  7912     11A2  083F               	movf	___flge@ff2+1,w
  7913     11A3  023B               	subwf	___flge@ff1+1,w
  7914     11A4  1D03               	skipz
  7915     11A5  0008               	return
  7916     11A6  083E               	movf	___flge@ff2,w
  7917     11A7  023A               	subwf	___flge@ff1,w
  7918     11A8  0008               	return
  7919     11A9                     __end_of___flge:
  7920                           
  7921                           	psect	text20
  7922     1EB4                     __ptext20:	
  7923 ;; *************** function ___fleq *****************
  7924 ;; Defined at:
  7925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  ff1             4    0[COMMON] unsigned char 
  7928 ;;  ff2             4    4[COMMON] unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;		None
  7931 ;; Return value:  Size  Location     Type
  7932 ;;		None               void
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7940 ;;      Params:         8       0       0       0       0       0       0       0
  7941 ;;      Locals:         0       0       0       0       0       0       0       0
  7942 ;;      Temps:          4       0       0       0       0       0       0       0
  7943 ;;      Totals:        12       0       0       0       0       0       0       0
  7944 ;;Total ram usage:       12 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_efgtoa
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953     1EB4                     ___fleq:	
  7954                           ;psect for function ___fleq
  7955                           
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7959     1EB4  3000               	movlw	0
  7960     1EB5  0570               	andwf	___fleq@ff1,w
  7961     1EB6  00F8               	movwf	??___fleq
  7962     1EB7  3000               	movlw	0
  7963     1EB8  0571               	andwf	___fleq@ff1+1,w
  7964     1EB9  00F9               	movwf	??___fleq+1
  7965     1EBA  3080               	movlw	128
  7966     1EBB  0572               	andwf	___fleq@ff1+2,w
  7967     1EBC  00FA               	movwf	??___fleq+2
  7968     1EBD  307F               	movlw	127
  7969     1EBE  0573               	andwf	___fleq@ff1+3,w
  7970     1EBF  00FB               	movwf	??___fleq+3
  7971     1EC0  087B               	movf	??___fleq+3,w
  7972     1EC1  047A               	iorwf	??___fleq+2,w
  7973     1EC2  0479               	iorwf	??___fleq+1,w
  7974     1EC3  0478               	iorwf	??___fleq,w
  7975     1EC4  1D03               	skipz
  7976     1EC5  2ECE               	goto	l521
  7977     1EC6  3000               	movlw	0
  7978     1EC7  00F3               	movwf	___fleq@ff1+3
  7979     1EC8  3000               	movlw	0
  7980     1EC9  00F2               	movwf	___fleq@ff1+2
  7981     1ECA  3000               	movlw	0
  7982     1ECB  00F1               	movwf	___fleq@ff1+1
  7983     1ECC  3000               	movlw	0
  7984     1ECD  00F0               	movwf	___fleq@ff1
  7985     1ECE                     l521:
  7986     1ECE  3000               	movlw	0
  7987     1ECF  0574               	andwf	___fleq@ff2,w
  7988     1ED0  00F8               	movwf	??___fleq
  7989     1ED1  3000               	movlw	0
  7990     1ED2  0575               	andwf	___fleq@ff2+1,w
  7991     1ED3  00F9               	movwf	??___fleq+1
  7992     1ED4  3080               	movlw	128
  7993     1ED5  0576               	andwf	___fleq@ff2+2,w
  7994     1ED6  00FA               	movwf	??___fleq+2
  7995     1ED7  307F               	movlw	127
  7996     1ED8  0577               	andwf	___fleq@ff2+3,w
  7997     1ED9  00FB               	movwf	??___fleq+3
  7998     1EDA  087B               	movf	??___fleq+3,w
  7999     1EDB  047A               	iorwf	??___fleq+2,w
  8000     1EDC  0479               	iorwf	??___fleq+1,w
  8001     1EDD  0478               	iorwf	??___fleq,w
  8002     1EDE  1D03               	skipz
  8003     1EDF  2EE8               	goto	l522
  8004     1EE0  3000               	movlw	0
  8005     1EE1  00F7               	movwf	___fleq@ff2+3
  8006     1EE2  3000               	movlw	0
  8007     1EE3  00F6               	movwf	___fleq@ff2+2
  8008     1EE4  3000               	movlw	0
  8009     1EE5  00F5               	movwf	___fleq@ff2+1
  8010     1EE6  3000               	movlw	0
  8011     1EE7  00F4               	movwf	___fleq@ff2
  8012     1EE8                     l522:
  8013     1EE8  0877               	movf	___fleq@ff2+3,w
  8014     1EE9  0673               	xorwf	___fleq@ff1+3,w
  8015     1EEA  1D03               	skipz
  8016     1EEB  2EF6               	goto	u4145
  8017     1EEC  0876               	movf	___fleq@ff2+2,w
  8018     1EED  0672               	xorwf	___fleq@ff1+2,w
  8019     1EEE  1D03               	skipz
  8020     1EEF  2EF6               	goto	u4145
  8021     1EF0  0875               	movf	___fleq@ff2+1,w
  8022     1EF1  0671               	xorwf	___fleq@ff1+1,w
  8023     1EF2  1D03               	skipz
  8024     1EF3  2EF6               	goto	u4145
  8025     1EF4  0874               	movf	___fleq@ff2,w
  8026     1EF5  0670               	xorwf	___fleq@ff1,w
  8027     1EF6                     u4145:
  8028     1EF6  1903               	skipnz
  8029     1EF7  2EFA               	goto	l3285
  8030     1EF8  1003               	clrc
  8031     1EF9  0008               	return
  8032     1EFA                     l3285:
  8033     1EFA  1403               	setc
  8034     1EFB  0008               	return
  8035     1EFC                     __end_of___fleq:
  8036                           
  8037                           	psect	text21
  8038     156E                     __ptext21:	
  8039 ;; *************** function _dtoa *****************
  8040 ;; Defined at:
  8041 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  fp              1    wreg     PTR struct _IO_FILE
  8044 ;;		 -> sprintf@f(10), 
  8045 ;;  d               8   16[BANK0 ] long long 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  8048 ;;		 -> sprintf@f(10), 
  8049 ;;  n               8   32[BANK0 ] long long 
  8050 ;;  i               2   40[BANK0 ] int 
  8051 ;;  w               2   30[BANK0 ] int 
  8052 ;;  p               2   28[BANK0 ] int 
  8053 ;;  s               1   42[BANK0 ] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8063 ;;      Params:         0       8       0       0       0       0       0       0
  8064 ;;      Locals:         0      18       0       0       0       0       0       0
  8065 ;;      Temps:          0       1       0       0       0       0       0       0
  8066 ;;      Totals:         0      27       0       0       0       0       0       0
  8067 ;;Total ram usage:       27 bytes
  8068 ;; Hardware stack levels used: 1
  8069 ;; Hardware stack levels required when called: 4
  8070 ;; This function calls:
  8071 ;;		___aodiv
  8072 ;;		___aomod
  8073 ;;		_abs
  8074 ;;		_pad
  8075 ;; This function is called by:
  8076 ;;		_vfpfcnvrt
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080     156E                     _dtoa:	
  8081                           ;psect for function _dtoa
  8082                           
  8083                           
  8084                           ;incstack = 0
  8085                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8086                           ;dtoa@fp stored from wreg
  8087     156E  0020               	movlb	0	; select bank0
  8088     156F  00BB               	movwf	dtoa@fp
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8091     1570  0830               	movf	dtoa@d,w
  8092     1571  00C0               	movwf	dtoa@n
  8093     1572  0831               	movf	dtoa@d+1,w
  8094     1573  00C1               	movwf	dtoa@n+1
  8095     1574  0832               	movf	dtoa@d+2,w
  8096     1575  00C2               	movwf	dtoa@n+2
  8097     1576  0833               	movf	dtoa@d+3,w
  8098     1577  00C3               	movwf	dtoa@n+3
  8099     1578  0834               	movf	dtoa@d+4,w
  8100     1579  00C4               	movwf	dtoa@n+4
  8101     157A  0835               	movf	dtoa@d+5,w
  8102     157B  00C5               	movwf	dtoa@n+5
  8103     157C  0836               	movf	dtoa@d+6,w
  8104     157D  00C6               	movwf	dtoa@n+6
  8105     157E  0837               	movf	dtoa@d+7,w
  8106     157F  00C7               	movwf	dtoa@n+7
  8107                           
  8108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8109     1580  3040               	movlw	low dtoa@n
  8110     1581  0086               	movwf	6
  8111     1582  3000               	movlw	high dtoa@n
  8112     1583  0087               	movwf	7
  8113     1584  3F47               	moviw [7]fsr1
  8114     1585  00B8               	movwf	??_dtoa
  8115     1586  1FB8               	btfss	??_dtoa,7
  8116     1587  2D8A               	goto	u5150
  8117     1588  3001               	movlw	1
  8118     1589  2D8B               	goto	u5160
  8119     158A                     u5150:
  8120     158A  3000               	movlw	0
  8121     158B                     u5160:
  8122     158B  0020               	movlb	0	; select bank0
  8123     158C  00CA               	movwf	dtoa@s
  8124                           
  8125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8126     158D  084A               	movf	dtoa@s,w
  8127     158E  1903               	btfsc	3,2
  8128     158F  2DAE               	goto	l3751
  8129                           
  8130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8131     1590  09C0               	comf	dtoa@n,f
  8132     1591  09C1               	comf	dtoa@n+1,f
  8133     1592  09C2               	comf	dtoa@n+2,f
  8134     1593  09C3               	comf	dtoa@n+3,f
  8135     1594  09C4               	comf	dtoa@n+4,f
  8136     1595  09C5               	comf	dtoa@n+5,f
  8137     1596  09C6               	comf	dtoa@n+6,f
  8138     1597  09C7               	comf	dtoa@n+7,f
  8139     1598  0AC0               	incf	dtoa@n,f
  8140     1599  1D03               	skipz
  8141     159A  2DAE               	goto	l3751
  8142     159B  0AC1               	incf	dtoa@n+1,f
  8143     159C  1D03               	skipz
  8144     159D  2DAE               	goto	l3751
  8145     159E  0AC2               	incf	dtoa@n+2,f
  8146     159F  1D03               	skipz
  8147     15A0  2DAE               	goto	l3751
  8148     15A1  0AC3               	incf	dtoa@n+3,f
  8149     15A2  1D03               	skipz
  8150     15A3  2DAE               	goto	l3751
  8151     15A4  0AC4               	incf	dtoa@n+4,f
  8152     15A5  1D03               	skipz
  8153     15A6  2DAE               	goto	l3751
  8154     15A7  0AC5               	incf	dtoa@n+5,f
  8155     15A8  1D03               	skipz
  8156     15A9  2DAE               	goto	l3751
  8157     15AA  0AC6               	incf	dtoa@n+6,f
  8158     15AB  1D03               	skipz
  8159     15AC  2DAE               	goto	l3751
  8160     15AD  0AC7               	incf	dtoa@n+7,f
  8161     15AE                     l3751:
  8162                           
  8163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8164     15AE  0022               	movlb	2	; select bank2
  8165     15AF  084E               	movf	(_prec+1)^(0+256),w
  8166     15B0  3A80               	xorlw	128
  8167     15B1  0020               	movlb	0	; select bank0
  8168     15B2  00B8               	movwf	??_dtoa
  8169     15B3  3080               	movlw	128
  8170     15B4  0238               	subwf	??_dtoa,w
  8171     15B5  1D03               	skipz
  8172     15B6  2DBA               	goto	u5195
  8173     15B7  3001               	movlw	1
  8174     15B8  0022               	movlb	2	; select bank2
  8175     15B9  024D               	subwf	_prec^(0+256),w
  8176     15BA                     u5195:
  8177     15BA  1803               	skipnc
  8178     15BB  2DC2               	goto	l3755
  8179     15BC  3001               	movlw	1
  8180     15BD  0020               	movlb	0	; select bank0
  8181     15BE  00BC               	movwf	dtoa@p
  8182     15BF  3000               	movlw	0
  8183     15C0  00BD               	movwf	dtoa@p+1
  8184     15C1  2DCA               	goto	l862
  8185     15C2                     l3755:
  8186     15C2  0022               	movlb	2	; select bank2
  8187     15C3  084E               	movf	(_prec+1)^(0+256),w
  8188     15C4  0020               	movlb	0	; select bank0
  8189     15C5  00BD               	movwf	dtoa@p+1
  8190     15C6  0022               	movlb	2	; select bank2
  8191     15C7  084D               	movf	_prec^(0+256),w
  8192     15C8  0020               	movlb	0	; select bank0
  8193     15C9  00BC               	movwf	dtoa@p
  8194     15CA                     l862:
  8195                           
  8196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8197     15CA  0022               	movlb	2	; select bank2
  8198     15CB  084C               	movf	(_width+1)^(0+256),w
  8199     15CC  0020               	movlb	0	; select bank0
  8200     15CD  00BF               	movwf	dtoa@w+1
  8201     15CE  0022               	movlb	2	; select bank2
  8202     15CF  084B               	movf	_width^(0+256),w
  8203     15D0  0020               	movlb	0	; select bank0
  8204     15D1  00BE               	movwf	dtoa@w
  8205                           
  8206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8207     15D2  084A               	movf	dtoa@s,w
  8208     15D3  1903               	btfsc	3,2
  8209     15D4  2DE4               	goto	l863
  8210                           
  8211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8212     15D5  30FF               	movlw	255
  8213     15D6  07BE               	addwf	dtoa@w,f
  8214     15D7  30FF               	movlw	255
  8215     15D8  3DBF               	addwfc	dtoa@w+1,f
  8216                           
  8217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8218     15D9  084A               	movf	dtoa@s,w
  8219     15DA  1D03               	btfss	3,2
  8220     15DB  2DDE               	goto	l3765
  8221     15DC  302B               	movlw	43
  8222     15DD  2DDF               	goto	L24
  8223     15DE                     l3765:
  8224     15DE  302D               	movlw	45
  8225     15DF                     L24:
  8226     15DF  00B9               	movwf	_dtoa$924
  8227     15E0  3000               	movlw	0
  8228     15E1  00BA               	movwf	_dtoa$924+1
  8229     15E2  0839               	movf	_dtoa$924,w
  8230     15E3  00CA               	movwf	dtoa@s
  8231     15E4                     l863:	
  8232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 471:     }
  8233                           
  8234                           
  8235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8236     15E4  304F               	movlw	79
  8237     15E5  00C8               	movwf	dtoa@i
  8238     15E6  3000               	movlw	0
  8239     15E7  00C9               	movwf	dtoa@i+1
  8240                           
  8241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8242     15E8  0024               	movlb	4	; select bank4
  8243     15E9  01EF               	clrf	(_dbuf^(0+512)+79)
  8244                           
  8245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8246     15EA  2E6A               	goto	l868
  8247     15EB                     l3779:
  8248     15EB  0020               	movlb	0	; select bank0
  8249     15EC  0840               	movf	dtoa@n,w
  8250     15ED  0441               	iorwf	dtoa@n+1,w
  8251     15EE  0442               	iorwf	dtoa@n+2,w
  8252     15EF  0443               	iorwf	dtoa@n+3,w
  8253     15F0  0444               	iorwf	dtoa@n+4,w
  8254     15F1  0445               	iorwf	dtoa@n+5,w
  8255     15F2  0446               	iorwf	dtoa@n+6,w
  8256     15F3  0447               	iorwf	dtoa@n+7,w
  8257     15F4  1D03               	skipz
  8258     15F5  2E01               	goto	l3769
  8259     15F6  083D               	movf	dtoa@p+1,w
  8260     15F7  3A80               	xorlw	128
  8261     15F8  00B8               	movwf	??_dtoa
  8262     15F9  3080               	movlw	128
  8263     15FA  0238               	subwf	??_dtoa,w
  8264     15FB  1D03               	skipz
  8265     15FC  2DFF               	goto	u5245
  8266     15FD  3001               	movlw	1
  8267     15FE  023C               	subwf	dtoa@p,w
  8268     15FF                     u5245:
  8269     15FF  1C03               	btfss	3,0
  8270     1600  2E76               	goto	l3783
  8271     1601                     l3769:
  8272                           
  8273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8274     1601  30FF               	movlw	255
  8275     1602  0020               	movlb	0	; select bank0
  8276     1603  07C8               	addwf	dtoa@i,f
  8277     1604  30FF               	movlw	255
  8278     1605  3DC9               	addwfc	dtoa@i+1,f
  8279                           
  8280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8281     1606  300A               	movlw	10
  8282     1607  00A0               	movwf	___aomod@divisor
  8283     1608  01A1               	clrf	___aomod@divisor+1
  8284     1609  01A2               	clrf	___aomod@divisor+2
  8285     160A  01A3               	clrf	___aomod@divisor+3
  8286     160B  01A4               	clrf	___aomod@divisor+4
  8287     160C  01A5               	clrf	___aomod@divisor+5
  8288     160D  01A6               	clrf	___aomod@divisor+6
  8289     160E  01A7               	clrf	___aomod@divisor+7
  8290     160F  0840               	movf	dtoa@n,w
  8291     1610  00A8               	movwf	___aomod@dividend
  8292     1611  0841               	movf	dtoa@n+1,w
  8293     1612  00A9               	movwf	___aomod@dividend+1
  8294     1613  0842               	movf	dtoa@n+2,w
  8295     1614  00AA               	movwf	___aomod@dividend+2
  8296     1615  0843               	movf	dtoa@n+3,w
  8297     1616  00AB               	movwf	___aomod@dividend+3
  8298     1617  0844               	movf	dtoa@n+4,w
  8299     1618  00AC               	movwf	___aomod@dividend+4
  8300     1619  0845               	movf	dtoa@n+5,w
  8301     161A  00AD               	movwf	___aomod@dividend+5
  8302     161B  0846               	movf	dtoa@n+6,w
  8303     161C  00AE               	movwf	___aomod@dividend+6
  8304     161D  0847               	movf	dtoa@n+7,w
  8305     161E  00AF               	movwf	___aomod@dividend+7
  8306     161F  3193  239F  3195   	fcall	___aomod
  8307     1622  0020               	movlb	0	; select bank0
  8308     1623  0821               	movf	?___aomod+1,w
  8309     1624  00F4               	movwf	abs@a+1
  8310     1625  0820               	movf	?___aomod,w
  8311     1626  00F3               	movwf	abs@a
  8312     1627  319C  2440  3195   	fcall	_abs
  8313     162A  0873               	movf	?_abs,w
  8314     162B  3E30               	addlw	48
  8315     162C  0020               	movlb	0	; select bank0
  8316     162D  00B8               	movwf	??_dtoa
  8317     162E  0848               	movf	dtoa@i,w
  8318     162F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8319     1630  0086               	movwf	6
  8320     1631  3002               	movlw	2	; select bank4/5
  8321     1632  0087               	movwf	7
  8322     1633  0838               	movf	??_dtoa,w
  8323     1634  0081               	movwf	1
  8324                           
  8325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8326     1635  30FF               	movlw	255
  8327     1636  07BC               	addwf	dtoa@p,f
  8328     1637  30FF               	movlw	255
  8329     1638  3DBD               	addwfc	dtoa@p+1,f
  8330                           
  8331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8332     1639  30FF               	movlw	255
  8333     163A  07BE               	addwf	dtoa@w,f
  8334     163B  30FF               	movlw	255
  8335     163C  3DBF               	addwfc	dtoa@w+1,f
  8336                           
  8337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8338     163D  300A               	movlw	10
  8339     163E  00A0               	movwf	___aodiv@divisor
  8340     163F  01A1               	clrf	___aodiv@divisor+1
  8341     1640  01A2               	clrf	___aodiv@divisor+2
  8342     1641  01A3               	clrf	___aodiv@divisor+3
  8343     1642  01A4               	clrf	___aodiv@divisor+4
  8344     1643  01A5               	clrf	___aodiv@divisor+5
  8345     1644  01A6               	clrf	___aodiv@divisor+6
  8346     1645  01A7               	clrf	___aodiv@divisor+7
  8347     1646  0840               	movf	dtoa@n,w
  8348     1647  00A8               	movwf	___aodiv@dividend
  8349     1648  0841               	movf	dtoa@n+1,w
  8350     1649  00A9               	movwf	___aodiv@dividend+1
  8351     164A  0842               	movf	dtoa@n+2,w
  8352     164B  00AA               	movwf	___aodiv@dividend+2
  8353     164C  0843               	movf	dtoa@n+3,w
  8354     164D  00AB               	movwf	___aodiv@dividend+3
  8355     164E  0844               	movf	dtoa@n+4,w
  8356     164F  00AC               	movwf	___aodiv@dividend+4
  8357     1650  0845               	movf	dtoa@n+5,w
  8358     1651  00AD               	movwf	___aodiv@dividend+5
  8359     1652  0846               	movf	dtoa@n+6,w
  8360     1653  00AE               	movwf	___aodiv@dividend+6
  8361     1654  0847               	movf	dtoa@n+7,w
  8362     1655  00AF               	movwf	___aodiv@dividend+7
  8363     1656  3194  247B  3195   	fcall	___aodiv
  8364     1659  0020               	movlb	0	; select bank0
  8365     165A  0820               	movf	?___aodiv,w
  8366     165B  00C0               	movwf	dtoa@n
  8367     165C  0821               	movf	?___aodiv+1,w
  8368     165D  00C1               	movwf	dtoa@n+1
  8369     165E  0822               	movf	?___aodiv+2,w
  8370     165F  00C2               	movwf	dtoa@n+2
  8371     1660  0823               	movf	?___aodiv+3,w
  8372     1661  00C3               	movwf	dtoa@n+3
  8373     1662  0824               	movf	?___aodiv+4,w
  8374     1663  00C4               	movwf	dtoa@n+4
  8375     1664  0825               	movf	?___aodiv+5,w
  8376     1665  00C5               	movwf	dtoa@n+5
  8377     1666  0826               	movf	?___aodiv+6,w
  8378     1667  00C6               	movwf	dtoa@n+6
  8379     1668  0827               	movf	?___aodiv+7,w
  8380     1669  00C7               	movwf	dtoa@n+7
  8381     166A                     l868:	
  8382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 492:     }
  8383                           
  8384                           
  8385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8386     166A  0020               	movlb	0	; select bank0
  8387     166B  0849               	movf	dtoa@i+1,w
  8388     166C  3A80               	xorlw	128
  8389     166D  00B8               	movwf	??_dtoa
  8390     166E  3080               	movlw	128
  8391     166F  0238               	subwf	??_dtoa,w
  8392     1670  1D03               	skipz
  8393     1671  2E74               	goto	u5225
  8394     1672  3001               	movlw	1
  8395     1673  0248               	subwf	dtoa@i,w
  8396     1674                     u5225:
  8397     1674  1803               	btfsc	3,0
  8398     1675  2DEB               	goto	l3779
  8399     1676                     l3783:
  8400                           
  8401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8402     1676  0020               	movlb	0	; select bank0
  8403     1677  084A               	movf	dtoa@s,w
  8404     1678  1903               	btfsc	3,2
  8405     1679  2E85               	goto	l3789
  8406                           
  8407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8408     167A  30FF               	movlw	255
  8409     167B  07C8               	addwf	dtoa@i,f
  8410     167C  30FF               	movlw	255
  8411     167D  3DC9               	addwfc	dtoa@i+1,f
  8412                           
  8413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8414     167E  0848               	movf	dtoa@i,w
  8415     167F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8416     1680  0086               	movwf	6
  8417     1681  3002               	movlw	2	; select bank4/5
  8418     1682  0087               	movwf	7
  8419     1683  084A               	movf	dtoa@s,w
  8420     1684  0081               	movwf	1
  8421     1685                     l3789:
  8422                           
  8423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8424     1685  0848               	movf	dtoa@i,w
  8425     1686  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8426     1687  00FB               	movwf	pad@buf
  8427     1688  083F               	movf	dtoa@w+1,w
  8428     1689  00FD               	movwf	pad@p+1
  8429     168A  083E               	movf	dtoa@w,w
  8430     168B  00FC               	movwf	pad@p
  8431     168C  083B               	movf	dtoa@fp,w
  8432     168D  3190  200F         	fcall	_pad
  8433     168F  0008               	return
  8434     1690                     __end_of_dtoa:
  8435                           
  8436                           	psect	text22
  8437     100F                     __ptext22:	
  8438 ;; *************** function _pad *****************
  8439 ;; Defined at:
  8440 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  fp              1    wreg     PTR struct _IO_FILE
  8443 ;;		 -> sprintf@f(10), 
  8444 ;;  buf             1   11[COMMON] PTR unsigned char 
  8445 ;;		 -> dbuf(80), 
  8446 ;;  p               2   12[COMMON] int 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  8449 ;;		 -> sprintf@f(10), 
  8450 ;;  w               2    7[BANK0 ] int 
  8451 ;;  i               2    5[BANK0 ] int 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8461 ;;      Params:         3       0       0       0       0       0       0       0
  8462 ;;      Locals:         0       5       0       0       0       0       0       0
  8463 ;;      Temps:          0       1       0       0       0       0       0       0
  8464 ;;      Totals:         3       6       0       0       0       0       0       0
  8465 ;;Total ram usage:        9 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 3
  8468 ;; This function calls:
  8469 ;;		_fputc
  8470 ;;		_fputs
  8471 ;; This function is called by:
  8472 ;;		_dtoa
  8473 ;;		_efgtoa
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477     100F                     _pad:	
  8478                           ;psect for function _pad
  8479                           
  8480                           
  8481                           ;incstack = 0
  8482                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8483                           ;pad@fp stored from wreg
  8484     100F  0020               	movlb	0	; select bank0
  8485     1010  00A9               	movwf	pad@fp
  8486                           
  8487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8488     1011  1BFD               	btfsc	pad@p+1,7
  8489     1012  2818               	goto	l3643
  8490     1013  087D               	movf	pad@p+1,w
  8491     1014  00A8               	movwf	pad@w+1
  8492     1015  087C               	movf	pad@p,w
  8493     1016  00A7               	movwf	pad@w
  8494     1017  281A               	goto	l851
  8495     1018                     l3643:
  8496     1018  01A7               	clrf	pad@w
  8497     1019  01A8               	clrf	pad@w+1
  8498     101A                     l851:
  8499                           
  8500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8501     101A  01A5               	clrf	pad@i
  8502     101B  01A6               	clrf	pad@i+1
  8503     101C                     l3649:	
  8504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8505                           
  8506                           
  8507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8508     101C  0826               	movf	pad@i+1,w
  8509     101D  3A80               	xorlw	128
  8510     101E  00A4               	movwf	??_pad
  8511     101F  0828               	movf	pad@w+1,w
  8512     1020  3A80               	xorlw	128
  8513     1021  0224               	subwf	??_pad,w
  8514     1022  1D03               	skipz
  8515     1023  2826               	goto	u4875
  8516     1024  0827               	movf	pad@w,w
  8517     1025  0225               	subwf	pad@i,w
  8518     1026                     u4875:
  8519     1026  1803               	btfsc	3,0
  8520     1027  2838               	goto	l3651
  8521                           
  8522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8523     1028  3020               	movlw	32
  8524     1029  00F0               	movwf	fputc@c
  8525     102A  3000               	movlw	0
  8526     102B  00F1               	movwf	fputc@c+1
  8527     102C  0020               	movlb	0	; select bank0
  8528     102D  0829               	movf	pad@fp,w
  8529     102E  00F2               	movwf	fputc@fp
  8530     102F  319E  26FC  3190   	fcall	_fputc
  8531                           
  8532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8533     1032  3001               	movlw	1
  8534     1033  0020               	movlb	0	; select bank0
  8535     1034  07A5               	addwf	pad@i,f
  8536     1035  3000               	movlw	0
  8537     1036  3DA6               	addwfc	pad@i+1,f
  8538     1037  281C               	goto	l3649
  8539     1038                     l3651:
  8540                           
  8541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8542     1038  0020               	movlb	0	; select bank0
  8543     1039  0829               	movf	pad@fp,w
  8544     103A  00F8               	movwf	fputs@fp
  8545     103B  087B               	movf	pad@buf,w
  8546     103C  319D  2541         	fcall	_fputs
  8547     103E  0008               	return
  8548     103F                     __end_of_pad:
  8549                           
  8550                           	psect	text23
  8551     1D41                     __ptext23:	
  8552 ;; *************** function _fputs *****************
  8553 ;; Defined at:
  8554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  s               1    wreg     PTR const unsigned char 
  8557 ;;		 -> dbuf(80), 
  8558 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8559 ;;		 -> sprintf@f(10), 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8562 ;;		 -> dbuf(80), 
  8563 ;;  i               2    1[BANK0 ] int 
  8564 ;;  c               1    0[BANK0 ] unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  2    8[COMMON] int 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8574 ;;      Params:         1       0       0       0       0       0       0       0
  8575 ;;      Locals:         0       4       0       0       0       0       0       0
  8576 ;;      Temps:          2       0       0       0       0       0       0       0
  8577 ;;      Totals:         3       4       0       0       0       0       0       0
  8578 ;;Total ram usage:        7 bytes
  8579 ;; Hardware stack levels used: 1
  8580 ;; Hardware stack levels required when called: 2
  8581 ;; This function calls:
  8582 ;;		_fputc
  8583 ;; This function is called by:
  8584 ;;		_pad
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588     1D41                     _fputs:	
  8589                           ;psect for function _fputs
  8590                           
  8591                           
  8592                           ;incstack = 0
  8593                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8594                           ;fputs@s stored from wreg
  8595     1D41  0020               	movlb	0	; select bank0
  8596     1D42  00A3               	movwf	fputs@s
  8597     1D43  01A1               	clrf	fputs@i
  8598     1D44  01A2               	clrf	fputs@i+1
  8599     1D45                     l3193:
  8600     1D45  0821               	movf	fputs@i,w
  8601     1D46  0723               	addwf	fputs@s,w
  8602     1D47  00F9               	movwf	??_fputs
  8603     1D48  0879               	movf	??_fputs,w
  8604     1D49  0086               	movwf	6
  8605     1D4A  3002               	movlw	2	; select bank4/5
  8606     1D4B  0087               	movwf	7
  8607     1D4C  0801               	movf	1,w
  8608     1D4D  00A0               	movwf	fputs@c
  8609     1D4E  0820               	movf	fputs@c,w
  8610     1D4F  1903               	btfsc	3,2
  8611     1D50  0008               	return
  8612     1D51  0820               	movf	fputs@c,w
  8613     1D52  00F9               	movwf	??_fputs
  8614     1D53  01FA               	clrf	??_fputs+1
  8615     1D54  0879               	movf	??_fputs,w
  8616     1D55  00F0               	movwf	fputc@c
  8617     1D56  087A               	movf	??_fputs+1,w
  8618     1D57  00F1               	movwf	fputc@c+1
  8619     1D58  0878               	movf	fputs@fp,w
  8620     1D59  00F2               	movwf	fputc@fp
  8621     1D5A  319E  26FC  319D   	fcall	_fputc
  8622     1D5D  3001               	movlw	1
  8623     1D5E  0020               	movlb	0	; select bank0
  8624     1D5F  07A1               	addwf	fputs@i,f
  8625     1D60  3000               	movlw	0
  8626     1D61  3DA2               	addwfc	fputs@i+1,f
  8627     1D62  2D45               	goto	l3193
  8628     1D63                     __end_of_fputs:
  8629                           
  8630                           	psect	text24
  8631     1EFC                     __ptext24:	
  8632 ;; *************** function _fputc *****************
  8633 ;; Defined at:
  8634 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  c               2    0[COMMON] int 
  8637 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8638 ;;		 -> sprintf@f(10), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  2    0[COMMON] int 
  8643 ;; Registers used:
  8644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8650 ;;      Params:         3       0       0       0       0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0
  8652 ;;      Temps:          5       0       0       0       0       0       0       0
  8653 ;;      Totals:         8       0       0       0       0       0       0       0
  8654 ;;Total ram usage:        8 bytes
  8655 ;; Hardware stack levels used: 1
  8656 ;; Hardware stack levels required when called: 1
  8657 ;; This function calls:
  8658 ;;		_putch
  8659 ;; This function is called by:
  8660 ;;		_pad
  8661 ;;		_vfpfcnvrt
  8662 ;;		_fputs
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666     1EFC                     _fputc:	
  8667                           ;psect for function _fputc
  8668                           
  8669                           
  8670                           ;incstack = 0
  8671                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8672     1EFC  0872               	movf	fputc@fp,w
  8673     1EFD  1D03               	btfss	3,2
  8674     1EFE  0872               	movf	fputc@fp,w
  8675     1EFF  1D03               	btfss	3,2
  8676     1F00  2F05               	goto	l2969
  8677     1F01  0870               	movf	fputc@c,w
  8678     1F02  3180  2007         	fcall	_putch
  8679     1F04  0008               	return
  8680     1F05                     l2969:
  8681     1F05  0872               	movf	fputc@fp,w
  8682     1F06  3E08               	addlw	8
  8683     1F07  0086               	movwf	6
  8684     1F08  3001               	movlw	1	; select bank2/3
  8685     1F09  0087               	movwf	7
  8686     1F0A  0016               	moviw fsr1++
  8687     1F0B  0401               	iorwf	1,w
  8688     1F0C  1903               	btfsc	3,2
  8689     1F0D  2F2C               	goto	l2973
  8690     1F0E  0872               	movf	fputc@fp,w
  8691     1F0F  3E08               	addlw	8
  8692     1F10  0086               	movwf	6
  8693     1F11  3001               	movlw	1	; select bank2/3
  8694     1F12  0087               	movwf	7
  8695     1F13  3F40               	moviw [0]fsr1
  8696     1F14  00F3               	movwf	??_fputc
  8697     1F15  3F41               	moviw [1]fsr1
  8698     1F16  00F4               	movwf	??_fputc+1
  8699     1F17  0872               	movf	fputc@fp,w
  8700     1F18  3E02               	addlw	2
  8701     1F19  0086               	movwf	6
  8702     1F1A  3001               	movlw	1	; select bank2/3
  8703     1F1B  0087               	movwf	7
  8704     1F1C  3F40               	moviw [0]fsr1
  8705     1F1D  00F5               	movwf	??_fputc+2
  8706     1F1E  3F41               	moviw [1]fsr1
  8707     1F1F  00F6               	movwf	??_fputc+3
  8708     1F20  0876               	movf	??_fputc+3,w
  8709     1F21  3A80               	xorlw	128
  8710     1F22  00F7               	movwf	??_fputc+4
  8711     1F23  0874               	movf	??_fputc+1,w
  8712     1F24  3A80               	xorlw	128
  8713     1F25  0277               	subwf	??_fputc+4,w
  8714     1F26  1D03               	skipz
  8715     1F27  2F2A               	goto	u3395
  8716     1F28  0873               	movf	??_fputc,w
  8717     1F29  0275               	subwf	??_fputc+2,w
  8718     1F2A                     u3395:
  8719     1F2A  1803               	skipnc
  8720     1F2B  0008               	return
  8721     1F2C                     l2973:
  8722     1F2C  0872               	movf	fputc@fp,w
  8723     1F2D  3E02               	addlw	2
  8724     1F2E  0086               	movwf	6
  8725     1F2F  3001               	movlw	1	; select bank2/3
  8726     1F30  0087               	movwf	7
  8727     1F31  0872               	movf	fputc@fp,w
  8728     1F32  0084               	movwf	4
  8729     1F33  3001               	movlw	1	; select bank2/3
  8730     1F34  0085               	movwf	5
  8731     1F35  3F40               	moviw [0]fsr1
  8732     1F36  0700               	addwf	0,w
  8733     1F37  00F3               	movwf	??_fputc
  8734     1F38  3101               	addfsr 0,1
  8735     1F39  3F41               	moviw [1]fsr1
  8736     1F3A  3D00               	addwfc	0,w
  8737     1F3B  00F4               	movwf	??_fputc+1
  8738     1F3C  0873               	movf	??_fputc,w
  8739     1F3D  0086               	movwf	6
  8740     1F3E  0874               	movf	??_fputc+1,w
  8741     1F3F  0087               	movwf	7
  8742     1F40  0870               	movf	fputc@c,w
  8743     1F41  0081               	movwf	1
  8744     1F42  0872               	movf	fputc@fp,w
  8745     1F43  3E02               	addlw	2
  8746     1F44  0086               	movwf	6
  8747     1F45  3001               	movlw	1	; select bank2/3
  8748     1F46  0087               	movwf	7
  8749     1F47  3001               	movlw	1
  8750     1F48  0781               	addwf	1,f
  8751     1F49  3141               	addfsr 1,1
  8752     1F4A  1803               	skipnc
  8753     1F4B  0A81               	incf	1,f
  8754     1F4C  0008               	return
  8755     1F4D                     __end_of_fputc:
  8756                           
  8757                           	psect	text25
  8758     0007                     __ptext25:	
  8759 ;; *************** function _putch *****************
  8760 ;; Defined at:
  8761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  c               1    wreg     unsigned char 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  c               1    0[COMMON] unsigned char 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		wreg
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8775 ;;      Params:         0       0       0       0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0
  8777 ;;      Temps:          0       0       0       0       0       0       0       0
  8778 ;;      Totals:         0       0       0       0       0       0       0       0
  8779 ;;Total ram usage:        0 bytes
  8780 ;; Hardware stack levels used: 1
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_fputc
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788     0007                     _putch:	
  8789                           ;psect for function _putch
  8790                           
  8791                           
  8792                           ;incstack = 0
  8793                           ; Regs used in _putch: [wreg]
  8794     0007  0008               	return
  8795     0008                     __end_of_putch:
  8796                           
  8797                           	psect	text26
  8798     1C40                     __ptext26:	
  8799 ;; *************** function _abs *****************
  8800 ;; Defined at:
  8801 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  a               2    3[COMMON] int 
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  2    3[COMMON] int 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8815 ;;      Params:         2       0       0       0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0
  8817 ;;      Temps:          2       0       0       0       0       0       0       0
  8818 ;;      Totals:         4       0       0       0       0       0       0       0
  8819 ;;Total ram usage:        4 bytes
  8820 ;; Hardware stack levels used: 1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_dtoa
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828     1C40                     _abs:	
  8829                           ;psect for function _abs
  8830                           
  8831                           
  8832                           ;incstack = 0
  8833                           ; Regs used in _abs: [wreg+status,2+status,0]
  8834     1C40  0874               	movf	abs@a+1,w
  8835     1C41  3A80               	xorlw	128
  8836     1C42  00F5               	movwf	??_abs
  8837     1C43  3080               	movlw	128
  8838     1C44  0275               	subwf	??_abs,w
  8839     1C45  1D03               	skipz
  8840     1C46  2C49               	goto	u4885
  8841     1C47  3001               	movlw	1
  8842     1C48  0273               	subwf	abs@a,w
  8843     1C49                     u4885:
  8844     1C49  1803               	skipnc
  8845     1C4A  0008               	return
  8846     1C4B  0973               	comf	abs@a,w
  8847     1C4C  00F5               	movwf	??_abs
  8848     1C4D  0974               	comf	abs@a+1,w
  8849     1C4E  00F6               	movwf	??_abs+1
  8850     1C4F  0AF5               	incf	??_abs,f
  8851     1C50  1903               	skipnz
  8852     1C51  0AF6               	incf	??_abs+1,f
  8853     1C52  0875               	movf	??_abs,w
  8854     1C53  00F3               	movwf	?_abs
  8855     1C54  0876               	movf	??_abs+1,w
  8856     1C55  00F4               	movwf	?_abs+1
  8857     1C56  0008               	return
  8858     1C57                     __end_of_abs:
  8859                           
  8860                           	psect	text27
  8861     139F                     __ptext27:	
  8862 ;; *************** function ___aomod *****************
  8863 ;; Defined at:
  8864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  divisor         8    0[BANK0 ] long long 
  8867 ;;  dividend        8    8[BANK0 ] long long 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  sign            1    2[COMMON] unsigned char 
  8870 ;;  counter         1    1[COMMON] unsigned char 
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  8    0[BANK0 ] long long 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8880 ;;      Params:         0      16       0       0       0       0       0       0
  8881 ;;      Locals:         2       0       0       0       0       0       0       0
  8882 ;;      Temps:          1       0       0       0       0       0       0       0
  8883 ;;      Totals:         3      16       0       0       0       0       0       0
  8884 ;;Total ram usage:       19 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_dtoa
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893     139F                     ___aomod:	
  8894                           ;psect for function ___aomod
  8895                           
  8896                           
  8897                           ;incstack = 0
  8898                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8899     139F  01F2               	clrf	___aomod@sign
  8900     13A0  3028               	movlw	low ___aomod@dividend
  8901     13A1  0086               	movwf	6
  8902     13A2  3000               	movlw	high ___aomod@dividend
  8903     13A3  0087               	movwf	7
  8904     13A4  3F47               	moviw [7]fsr1
  8905     13A5  00F0               	movwf	??___aomod
  8906     13A6  1FF0               	btfss	??___aomod,7
  8907     13A7  2BC9               	goto	l3253
  8908     13A8  0020               	movlb	0	; select bank0
  8909     13A9  09A8               	comf	___aomod@dividend,f
  8910     13AA  09A9               	comf	___aomod@dividend+1,f
  8911     13AB  09AA               	comf	___aomod@dividend+2,f
  8912     13AC  09AB               	comf	___aomod@dividend+3,f
  8913     13AD  09AC               	comf	___aomod@dividend+4,f
  8914     13AE  09AD               	comf	___aomod@dividend+5,f
  8915     13AF  09AE               	comf	___aomod@dividend+6,f
  8916     13B0  09AF               	comf	___aomod@dividend+7,f
  8917     13B1  0AA8               	incf	___aomod@dividend,f
  8918     13B2  1D03               	skipz
  8919     13B3  2BC7               	goto	u403lld
  8920     13B4  0AA9               	incf	___aomod@dividend+1,f
  8921     13B5  1D03               	skipz
  8922     13B6  2BC7               	goto	u403lld
  8923     13B7  0AAA               	incf	___aomod@dividend+2,f
  8924     13B8  1D03               	skipz
  8925     13B9  2BC7               	goto	u403lld
  8926     13BA  0AAB               	incf	___aomod@dividend+3,f
  8927     13BB  1D03               	skipz
  8928     13BC  2BC7               	goto	u403lld
  8929     13BD  0AAC               	incf	___aomod@dividend+4,f
  8930     13BE  1D03               	skipz
  8931     13BF  2BC7               	goto	u403lld
  8932     13C0  0AAD               	incf	___aomod@dividend+5,f
  8933     13C1  1D03               	skipz
  8934     13C2  2BC7               	goto	u403lld
  8935     13C3  0AAE               	incf	___aomod@dividend+6,f
  8936     13C4  1D03               	skipz
  8937     13C5  2BC7               	goto	u403lld
  8938     13C6  0AAF               	incf	___aomod@dividend+7,f
  8939     13C7                     u403lld:
  8940     13C7  01F2               	clrf	___aomod@sign
  8941     13C8  0AF2               	incf	___aomod@sign,f
  8942     13C9                     l3253:
  8943     13C9  3020               	movlw	low ___aomod@divisor
  8944     13CA  0086               	movwf	6
  8945     13CB  3000               	movlw	high ___aomod@divisor
  8946     13CC  0087               	movwf	7
  8947     13CD  3F47               	moviw [7]fsr1
  8948     13CE  00F0               	movwf	??___aomod
  8949     13CF  1FF0               	btfss	??___aomod,7
  8950     13D0  2BF0               	goto	l3257
  8951     13D1  0020               	movlb	0	; select bank0
  8952     13D2  09A0               	comf	___aomod@divisor,f
  8953     13D3  09A1               	comf	___aomod@divisor+1,f
  8954     13D4  09A2               	comf	___aomod@divisor+2,f
  8955     13D5  09A3               	comf	___aomod@divisor+3,f
  8956     13D6  09A4               	comf	___aomod@divisor+4,f
  8957     13D7  09A5               	comf	___aomod@divisor+5,f
  8958     13D8  09A6               	comf	___aomod@divisor+6,f
  8959     13D9  09A7               	comf	___aomod@divisor+7,f
  8960     13DA  0AA0               	incf	___aomod@divisor,f
  8961     13DB  1D03               	skipz
  8962     13DC  2BF0               	goto	l3257
  8963     13DD  0AA1               	incf	___aomod@divisor+1,f
  8964     13DE  1D03               	skipz
  8965     13DF  2BF0               	goto	l3257
  8966     13E0  0AA2               	incf	___aomod@divisor+2,f
  8967     13E1  1D03               	skipz
  8968     13E2  2BF0               	goto	l3257
  8969     13E3  0AA3               	incf	___aomod@divisor+3,f
  8970     13E4  1D03               	skipz
  8971     13E5  2BF0               	goto	l3257
  8972     13E6  0AA4               	incf	___aomod@divisor+4,f
  8973     13E7  1D03               	skipz
  8974     13E8  2BF0               	goto	l3257
  8975     13E9  0AA5               	incf	___aomod@divisor+5,f
  8976     13EA  1D03               	skipz
  8977     13EB  2BF0               	goto	l3257
  8978     13EC  0AA6               	incf	___aomod@divisor+6,f
  8979     13ED  1D03               	skipz
  8980     13EE  2BF0               	goto	l3257
  8981     13EF  0AA7               	incf	___aomod@divisor+7,f
  8982     13F0                     l3257:
  8983     13F0  0020               	movlb	0	; select bank0
  8984     13F1  0820               	movf	___aomod@divisor,w
  8985     13F2  0421               	iorwf	___aomod@divisor+1,w
  8986     13F3  0422               	iorwf	___aomod@divisor+2,w
  8987     13F4  0423               	iorwf	___aomod@divisor+3,w
  8988     13F5  0424               	iorwf	___aomod@divisor+4,w
  8989     13F6  0425               	iorwf	___aomod@divisor+5,w
  8990     13F7  0426               	iorwf	___aomod@divisor+6,w
  8991     13F8  0427               	iorwf	___aomod@divisor+7,w
  8992     13F9  1903               	skipnz
  8993     13FA  2C48               	goto	l3273
  8994     13FB  01F1               	clrf	___aomod@counter
  8995     13FC  0AF1               	incf	___aomod@counter,f
  8996     13FD                     l3265:
  8997     13FD  1BA7               	btfsc	___aomod@divisor+7,7
  8998     13FE  2C0C               	goto	l3267
  8999     13FF  35A0               	lslf	___aomod@divisor,f
  9000     1400  0DA1               	rlf	___aomod@divisor+1,f
  9001     1401  0DA2               	rlf	___aomod@divisor+2,f
  9002     1402  0DA3               	rlf	___aomod@divisor+3,f
  9003     1403  0DA4               	rlf	___aomod@divisor+4,f
  9004     1404  0DA5               	rlf	___aomod@divisor+5,f
  9005     1405  0DA6               	rlf	___aomod@divisor+6,f
  9006     1406  0DA7               	rlf	___aomod@divisor+7,f
  9007     1407  3001               	movlw	1
  9008     1408  00F0               	movwf	??___aomod
  9009     1409  0870               	movf	??___aomod,w
  9010     140A  07F1               	addwf	___aomod@counter,f
  9011     140B  2BFD               	goto	l3265
  9012     140C                     l3267:
  9013     140C  0827               	movf	___aomod@divisor+7,w
  9014     140D  022F               	subwf	___aomod@dividend+7,w
  9015     140E  1D03               	skipz
  9016     140F  2C2A               	goto	u4085
  9017     1410  0826               	movf	___aomod@divisor+6,w
  9018     1411  022E               	subwf	___aomod@dividend+6,w
  9019     1412  1D03               	skipz
  9020     1413  2C2A               	goto	u4085
  9021     1414  0825               	movf	___aomod@divisor+5,w
  9022     1415  022D               	subwf	___aomod@dividend+5,w
  9023     1416  1D03               	skipz
  9024     1417  2C2A               	goto	u4085
  9025     1418  0824               	movf	___aomod@divisor+4,w
  9026     1419  022C               	subwf	___aomod@dividend+4,w
  9027     141A  1D03               	skipz
  9028     141B  2C2A               	goto	u4085
  9029     141C  0823               	movf	___aomod@divisor+3,w
  9030     141D  022B               	subwf	___aomod@dividend+3,w
  9031     141E  1D03               	skipz
  9032     141F  2C2A               	goto	u4085
  9033     1420  0822               	movf	___aomod@divisor+2,w
  9034     1421  022A               	subwf	___aomod@dividend+2,w
  9035     1422  1D03               	skipz
  9036     1423  2C2A               	goto	u4085
  9037     1424  0821               	movf	___aomod@divisor+1,w
  9038     1425  0229               	subwf	___aomod@dividend+1,w
  9039     1426  1D03               	skipz
  9040     1427  2C2A               	goto	u4085
  9041     1428  0820               	movf	___aomod@divisor,w
  9042     1429  0228               	subwf	___aomod@dividend,w
  9043     142A                     u4085:
  9044     142A  1C03               	skipc
  9045     142B  2C3C               	goto	l3271
  9046     142C  0820               	movf	___aomod@divisor,w
  9047     142D  02A8               	subwf	___aomod@dividend,f
  9048     142E  0821               	movf	___aomod@divisor+1,w
  9049     142F  3BA9               	subwfb	___aomod@dividend+1,f
  9050     1430  0822               	movf	___aomod@divisor+2,w
  9051     1431  3BAA               	subwfb	___aomod@dividend+2,f
  9052     1432  0823               	movf	___aomod@divisor+3,w
  9053     1433  3BAB               	subwfb	___aomod@dividend+3,f
  9054     1434  0824               	movf	___aomod@divisor+4,w
  9055     1435  3BAC               	subwfb	___aomod@dividend+4,f
  9056     1436  0825               	movf	___aomod@divisor+5,w
  9057     1437  3BAD               	subwfb	___aomod@dividend+5,f
  9058     1438  0826               	movf	___aomod@divisor+6,w
  9059     1439  3BAE               	subwfb	___aomod@dividend+6,f
  9060     143A  0827               	movf	___aomod@divisor+7,w
  9061     143B  3BAF               	subwfb	___aomod@dividend+7,f
  9062     143C                     l3271:
  9063     143C  36A7               	lsrf	___aomod@divisor+7,f
  9064     143D  0CA6               	rrf	___aomod@divisor+6,f
  9065     143E  0CA5               	rrf	___aomod@divisor+5,f
  9066     143F  0CA4               	rrf	___aomod@divisor+4,f
  9067     1440  0CA3               	rrf	___aomod@divisor+3,f
  9068     1441  0CA2               	rrf	___aomod@divisor+2,f
  9069     1442  0CA1               	rrf	___aomod@divisor+1,f
  9070     1443  0CA0               	rrf	___aomod@divisor,f
  9071     1444  3001               	movlw	1
  9072     1445  02F1               	subwf	___aomod@counter,f
  9073     1446  1D03               	btfss	3,2
  9074     1447  2C0C               	goto	l3267
  9075     1448                     l3273:
  9076     1448  0872               	movf	___aomod@sign,w
  9077     1449  1903               	btfsc	3,2
  9078     144A  2C69               	goto	l465
  9079     144B  09A8               	comf	___aomod@dividend,f
  9080     144C  09A9               	comf	___aomod@dividend+1,f
  9081     144D  09AA               	comf	___aomod@dividend+2,f
  9082     144E  09AB               	comf	___aomod@dividend+3,f
  9083     144F  09AC               	comf	___aomod@dividend+4,f
  9084     1450  09AD               	comf	___aomod@dividend+5,f
  9085     1451  09AE               	comf	___aomod@dividend+6,f
  9086     1452  09AF               	comf	___aomod@dividend+7,f
  9087     1453  0AA8               	incf	___aomod@dividend,f
  9088     1454  1D03               	skipz
  9089     1455  2C69               	goto	l465
  9090     1456  0AA9               	incf	___aomod@dividend+1,f
  9091     1457  1D03               	skipz
  9092     1458  2C69               	goto	l465
  9093     1459  0AAA               	incf	___aomod@dividend+2,f
  9094     145A  1D03               	skipz
  9095     145B  2C69               	goto	l465
  9096     145C  0AAB               	incf	___aomod@dividend+3,f
  9097     145D  1D03               	skipz
  9098     145E  2C69               	goto	l465
  9099     145F  0AAC               	incf	___aomod@dividend+4,f
  9100     1460  1D03               	skipz
  9101     1461  2C69               	goto	l465
  9102     1462  0AAD               	incf	___aomod@dividend+5,f
  9103     1463  1D03               	skipz
  9104     1464  2C69               	goto	l465
  9105     1465  0AAE               	incf	___aomod@dividend+6,f
  9106     1466  1D03               	skipz
  9107     1467  2C69               	goto	l465
  9108     1468  0AAF               	incf	___aomod@dividend+7,f
  9109     1469                     l465:
  9110     1469  0020               	movlb	0	; select bank0
  9111     146A  0828               	movf	___aomod@dividend,w
  9112     146B  00A0               	movwf	?___aomod
  9113     146C  0829               	movf	___aomod@dividend+1,w
  9114     146D  00A1               	movwf	?___aomod+1
  9115     146E  082A               	movf	___aomod@dividend+2,w
  9116     146F  00A2               	movwf	?___aomod+2
  9117     1470  082B               	movf	___aomod@dividend+3,w
  9118     1471  00A3               	movwf	?___aomod+3
  9119     1472  082C               	movf	___aomod@dividend+4,w
  9120     1473  00A4               	movwf	?___aomod+4
  9121     1474  082D               	movf	___aomod@dividend+5,w
  9122     1475  00A5               	movwf	?___aomod+5
  9123     1476  082E               	movf	___aomod@dividend+6,w
  9124     1477  00A6               	movwf	?___aomod+6
  9125     1478  082F               	movf	___aomod@dividend+7,w
  9126     1479  00A7               	movwf	?___aomod+7
  9127     147A  0008               	return
  9128     147B                     __end_of___aomod:
  9129                           
  9130                           	psect	text28
  9131     147B                     __ptext28:	
  9132 ;; *************** function ___aodiv *****************
  9133 ;; Defined at:
  9134 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;  divisor         8    0[BANK0 ] long long 
  9137 ;;  dividend        8    8[BANK0 ] long long 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  quotient        8    3[COMMON] long long 
  9140 ;;  sign            1    2[COMMON] unsigned char 
  9141 ;;  counter         1    1[COMMON] unsigned char 
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  8    0[BANK0 ] long long 
  9144 ;; Registers used:
  9145 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9151 ;;      Params:         0      16       0       0       0       0       0       0
  9152 ;;      Locals:        10       0       0       0       0       0       0       0
  9153 ;;      Temps:          1       0       0       0       0       0       0       0
  9154 ;;      Totals:        11      16       0       0       0       0       0       0
  9155 ;;Total ram usage:       27 bytes
  9156 ;; Hardware stack levels used: 1
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		_dtoa
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164     147B                     ___aodiv:	
  9165                           ;psect for function ___aodiv
  9166                           
  9167                           
  9168                           ;incstack = 0
  9169                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9170     147B  01F2               	clrf	___aodiv@sign
  9171     147C  3020               	movlw	low ___aodiv@divisor
  9172     147D  0086               	movwf	6
  9173     147E  3000               	movlw	high ___aodiv@divisor
  9174     147F  0087               	movwf	7
  9175     1480  3F47               	moviw [7]fsr1
  9176     1481  00F0               	movwf	??___aodiv
  9177     1482  1FF0               	btfss	??___aodiv,7
  9178     1483  2CA5               	goto	l3215
  9179     1484  0020               	movlb	0	; select bank0
  9180     1485  09A0               	comf	___aodiv@divisor,f
  9181     1486  09A1               	comf	___aodiv@divisor+1,f
  9182     1487  09A2               	comf	___aodiv@divisor+2,f
  9183     1488  09A3               	comf	___aodiv@divisor+3,f
  9184     1489  09A4               	comf	___aodiv@divisor+4,f
  9185     148A  09A5               	comf	___aodiv@divisor+5,f
  9186     148B  09A6               	comf	___aodiv@divisor+6,f
  9187     148C  09A7               	comf	___aodiv@divisor+7,f
  9188     148D  0AA0               	incf	___aodiv@divisor,f
  9189     148E  1D03               	skipz
  9190     148F  2CA3               	goto	u392lld
  9191     1490  0AA1               	incf	___aodiv@divisor+1,f
  9192     1491  1D03               	skipz
  9193     1492  2CA3               	goto	u392lld
  9194     1493  0AA2               	incf	___aodiv@divisor+2,f
  9195     1494  1D03               	skipz
  9196     1495  2CA3               	goto	u392lld
  9197     1496  0AA3               	incf	___aodiv@divisor+3,f
  9198     1497  1D03               	skipz
  9199     1498  2CA3               	goto	u392lld
  9200     1499  0AA4               	incf	___aodiv@divisor+4,f
  9201     149A  1D03               	skipz
  9202     149B  2CA3               	goto	u392lld
  9203     149C  0AA5               	incf	___aodiv@divisor+5,f
  9204     149D  1D03               	skipz
  9205     149E  2CA3               	goto	u392lld
  9206     149F  0AA6               	incf	___aodiv@divisor+6,f
  9207     14A0  1D03               	skipz
  9208     14A1  2CA3               	goto	u392lld
  9209     14A2  0AA7               	incf	___aodiv@divisor+7,f
  9210     14A3                     u392lld:
  9211     14A3  01F2               	clrf	___aodiv@sign
  9212     14A4  0AF2               	incf	___aodiv@sign,f
  9213     14A5                     l3215:
  9214     14A5  3028               	movlw	low ___aodiv@dividend
  9215     14A6  0086               	movwf	6
  9216     14A7  3000               	movlw	high ___aodiv@dividend
  9217     14A8  0087               	movwf	7
  9218     14A9  3F47               	moviw [7]fsr1
  9219     14AA  00F0               	movwf	??___aodiv
  9220     14AB  1FF0               	btfss	??___aodiv,7
  9221     14AC  2CD0               	goto	l3221
  9222     14AD  0020               	movlb	0	; select bank0
  9223     14AE  09A8               	comf	___aodiv@dividend,f
  9224     14AF  09A9               	comf	___aodiv@dividend+1,f
  9225     14B0  09AA               	comf	___aodiv@dividend+2,f
  9226     14B1  09AB               	comf	___aodiv@dividend+3,f
  9227     14B2  09AC               	comf	___aodiv@dividend+4,f
  9228     14B3  09AD               	comf	___aodiv@dividend+5,f
  9229     14B4  09AE               	comf	___aodiv@dividend+6,f
  9230     14B5  09AF               	comf	___aodiv@dividend+7,f
  9231     14B6  0AA8               	incf	___aodiv@dividend,f
  9232     14B7  1D03               	skipz
  9233     14B8  2CCC               	goto	l3219
  9234     14B9  0AA9               	incf	___aodiv@dividend+1,f
  9235     14BA  1D03               	skipz
  9236     14BB  2CCC               	goto	l3219
  9237     14BC  0AAA               	incf	___aodiv@dividend+2,f
  9238     14BD  1D03               	skipz
  9239     14BE  2CCC               	goto	l3219
  9240     14BF  0AAB               	incf	___aodiv@dividend+3,f
  9241     14C0  1D03               	skipz
  9242     14C1  2CCC               	goto	l3219
  9243     14C2  0AAC               	incf	___aodiv@dividend+4,f
  9244     14C3  1D03               	skipz
  9245     14C4  2CCC               	goto	l3219
  9246     14C5  0AAD               	incf	___aodiv@dividend+5,f
  9247     14C6  1D03               	skipz
  9248     14C7  2CCC               	goto	l3219
  9249     14C8  0AAE               	incf	___aodiv@dividend+6,f
  9250     14C9  1D03               	skipz
  9251     14CA  2CCC               	goto	l3219
  9252     14CB  0AAF               	incf	___aodiv@dividend+7,f
  9253     14CC                     l3219:
  9254     14CC  3001               	movlw	1
  9255     14CD  00F0               	movwf	??___aodiv
  9256     14CE  0870               	movf	??___aodiv,w
  9257     14CF  06F2               	xorwf	___aodiv@sign,f
  9258     14D0                     l3221:
  9259     14D0  3073               	movlw	low ___aodiv@quotient
  9260     14D1  0086               	movwf	6
  9261     14D2  3000               	movlw	high ___aodiv@quotient
  9262     14D3  0087               	movwf	7
  9263     14D4  3008               	movlw	8
  9264     14D5  00F0               	movwf	??___aodiv
  9265     14D6  3000               	movlw	0
  9266     14D7                     u3950:
  9267     14D7  001E               	movwi fsr1++
  9268     14D8  0BF0               	decfsz	??___aodiv,f
  9269     14D9  2CD7               	goto	u3950
  9270     14DA  0020               	movlb	0	; select bank0
  9271     14DB  0820               	movf	___aodiv@divisor,w
  9272     14DC  0421               	iorwf	___aodiv@divisor+1,w
  9273     14DD  0422               	iorwf	___aodiv@divisor+2,w
  9274     14DE  0423               	iorwf	___aodiv@divisor+3,w
  9275     14DF  0424               	iorwf	___aodiv@divisor+4,w
  9276     14E0  0425               	iorwf	___aodiv@divisor+5,w
  9277     14E1  0426               	iorwf	___aodiv@divisor+6,w
  9278     14E2  0427               	iorwf	___aodiv@divisor+7,w
  9279     14E3  1903               	skipnz
  9280     14E4  2D3B               	goto	l3243
  9281     14E5  01F1               	clrf	___aodiv@counter
  9282     14E6  0AF1               	incf	___aodiv@counter,f
  9283     14E7                     l3231:
  9284     14E7  1BA7               	btfsc	___aodiv@divisor+7,7
  9285     14E8  2CF6               	goto	l3233
  9286     14E9  35A0               	lslf	___aodiv@divisor,f
  9287     14EA  0DA1               	rlf	___aodiv@divisor+1,f
  9288     14EB  0DA2               	rlf	___aodiv@divisor+2,f
  9289     14EC  0DA3               	rlf	___aodiv@divisor+3,f
  9290     14ED  0DA4               	rlf	___aodiv@divisor+4,f
  9291     14EE  0DA5               	rlf	___aodiv@divisor+5,f
  9292     14EF  0DA6               	rlf	___aodiv@divisor+6,f
  9293     14F0  0DA7               	rlf	___aodiv@divisor+7,f
  9294     14F1  3001               	movlw	1
  9295     14F2  00F0               	movwf	??___aodiv
  9296     14F3  0870               	movf	??___aodiv,w
  9297     14F4  07F1               	addwf	___aodiv@counter,f
  9298     14F5  2CE7               	goto	l3231
  9299     14F6                     l3233:
  9300     14F6  35F3               	lslf	___aodiv@quotient,f
  9301     14F7  0DF4               	rlf	___aodiv@quotient+1,f
  9302     14F8  0DF5               	rlf	___aodiv@quotient+2,f
  9303     14F9  0DF6               	rlf	___aodiv@quotient+3,f
  9304     14FA  0DF7               	rlf	___aodiv@quotient+4,f
  9305     14FB  0DF8               	rlf	___aodiv@quotient+5,f
  9306     14FC  0DF9               	rlf	___aodiv@quotient+6,f
  9307     14FD  0DFA               	rlf	___aodiv@quotient+7,f
  9308     14FE  0827               	movf	___aodiv@divisor+7,w
  9309     14FF  022F               	subwf	___aodiv@dividend+7,w
  9310     1500  1D03               	skipz
  9311     1501  2D1C               	goto	u3985
  9312     1502  0826               	movf	___aodiv@divisor+6,w
  9313     1503  022E               	subwf	___aodiv@dividend+6,w
  9314     1504  1D03               	skipz
  9315     1505  2D1C               	goto	u3985
  9316     1506  0825               	movf	___aodiv@divisor+5,w
  9317     1507  022D               	subwf	___aodiv@dividend+5,w
  9318     1508  1D03               	skipz
  9319     1509  2D1C               	goto	u3985
  9320     150A  0824               	movf	___aodiv@divisor+4,w
  9321     150B  022C               	subwf	___aodiv@dividend+4,w
  9322     150C  1D03               	skipz
  9323     150D  2D1C               	goto	u3985
  9324     150E  0823               	movf	___aodiv@divisor+3,w
  9325     150F  022B               	subwf	___aodiv@dividend+3,w
  9326     1510  1D03               	skipz
  9327     1511  2D1C               	goto	u3985
  9328     1512  0822               	movf	___aodiv@divisor+2,w
  9329     1513  022A               	subwf	___aodiv@dividend+2,w
  9330     1514  1D03               	skipz
  9331     1515  2D1C               	goto	u3985
  9332     1516  0821               	movf	___aodiv@divisor+1,w
  9333     1517  0229               	subwf	___aodiv@dividend+1,w
  9334     1518  1D03               	skipz
  9335     1519  2D1C               	goto	u3985
  9336     151A  0820               	movf	___aodiv@divisor,w
  9337     151B  0228               	subwf	___aodiv@dividend,w
  9338     151C                     u3985:
  9339     151C  1C03               	skipc
  9340     151D  2D2F               	goto	l3241
  9341     151E  0820               	movf	___aodiv@divisor,w
  9342     151F  02A8               	subwf	___aodiv@dividend,f
  9343     1520  0821               	movf	___aodiv@divisor+1,w
  9344     1521  3BA9               	subwfb	___aodiv@dividend+1,f
  9345     1522  0822               	movf	___aodiv@divisor+2,w
  9346     1523  3BAA               	subwfb	___aodiv@dividend+2,f
  9347     1524  0823               	movf	___aodiv@divisor+3,w
  9348     1525  3BAB               	subwfb	___aodiv@dividend+3,f
  9349     1526  0824               	movf	___aodiv@divisor+4,w
  9350     1527  3BAC               	subwfb	___aodiv@dividend+4,f
  9351     1528  0825               	movf	___aodiv@divisor+5,w
  9352     1529  3BAD               	subwfb	___aodiv@dividend+5,f
  9353     152A  0826               	movf	___aodiv@divisor+6,w
  9354     152B  3BAE               	subwfb	___aodiv@dividend+6,f
  9355     152C  0827               	movf	___aodiv@divisor+7,w
  9356     152D  3BAF               	subwfb	___aodiv@dividend+7,f
  9357     152E  1473               	bsf	___aodiv@quotient,0
  9358     152F                     l3241:
  9359     152F  36A7               	lsrf	___aodiv@divisor+7,f
  9360     1530  0CA6               	rrf	___aodiv@divisor+6,f
  9361     1531  0CA5               	rrf	___aodiv@divisor+5,f
  9362     1532  0CA4               	rrf	___aodiv@divisor+4,f
  9363     1533  0CA3               	rrf	___aodiv@divisor+3,f
  9364     1534  0CA2               	rrf	___aodiv@divisor+2,f
  9365     1535  0CA1               	rrf	___aodiv@divisor+1,f
  9366     1536  0CA0               	rrf	___aodiv@divisor,f
  9367     1537  3001               	movlw	1
  9368     1538  02F1               	subwf	___aodiv@counter,f
  9369     1539  1D03               	btfss	3,2
  9370     153A  2CF6               	goto	l3233
  9371     153B                     l3243:
  9372     153B  0872               	movf	___aodiv@sign,w
  9373     153C  1903               	btfsc	3,2
  9374     153D  2D5C               	goto	l452
  9375     153E  09F3               	comf	___aodiv@quotient,f
  9376     153F  09F4               	comf	___aodiv@quotient+1,f
  9377     1540  09F5               	comf	___aodiv@quotient+2,f
  9378     1541  09F6               	comf	___aodiv@quotient+3,f
  9379     1542  09F7               	comf	___aodiv@quotient+4,f
  9380     1543  09F8               	comf	___aodiv@quotient+5,f
  9381     1544  09F9               	comf	___aodiv@quotient+6,f
  9382     1545  09FA               	comf	___aodiv@quotient+7,f
  9383     1546  0AF3               	incf	___aodiv@quotient,f
  9384     1547  1D03               	skipz
  9385     1548  2D5C               	goto	l452
  9386     1549  0AF4               	incf	___aodiv@quotient+1,f
  9387     154A  1D03               	skipz
  9388     154B  2D5C               	goto	l452
  9389     154C  0AF5               	incf	___aodiv@quotient+2,f
  9390     154D  1D03               	skipz
  9391     154E  2D5C               	goto	l452
  9392     154F  0AF6               	incf	___aodiv@quotient+3,f
  9393     1550  1D03               	skipz
  9394     1551  2D5C               	goto	l452
  9395     1552  0AF7               	incf	___aodiv@quotient+4,f
  9396     1553  1D03               	skipz
  9397     1554  2D5C               	goto	l452
  9398     1555  0AF8               	incf	___aodiv@quotient+5,f
  9399     1556  1D03               	skipz
  9400     1557  2D5C               	goto	l452
  9401     1558  0AF9               	incf	___aodiv@quotient+6,f
  9402     1559  1D03               	skipz
  9403     155A  2D5C               	goto	l452
  9404     155B  0AFA               	incf	___aodiv@quotient+7,f
  9405     155C                     l452:
  9406     155C  0873               	movf	___aodiv@quotient,w
  9407     155D  0020               	movlb	0	; select bank0
  9408     155E  00A0               	movwf	?___aodiv
  9409     155F  0874               	movf	___aodiv@quotient+1,w
  9410     1560  00A1               	movwf	?___aodiv+1
  9411     1561  0875               	movf	___aodiv@quotient+2,w
  9412     1562  00A2               	movwf	?___aodiv+2
  9413     1563  0876               	movf	___aodiv@quotient+3,w
  9414     1564  00A3               	movwf	?___aodiv+3
  9415     1565  0877               	movf	___aodiv@quotient+4,w
  9416     1566  00A4               	movwf	?___aodiv+4
  9417     1567  0878               	movf	___aodiv@quotient+5,w
  9418     1568  00A5               	movwf	?___aodiv+5
  9419     1569  0879               	movf	___aodiv@quotient+6,w
  9420     156A  00A6               	movwf	?___aodiv+6
  9421     156B  087A               	movf	___aodiv@quotient+7,w
  9422     156C  00A7               	movwf	?___aodiv+7
  9423     156D  0008               	return
  9424     156E                     __end_of___aodiv:
  9425                           
  9426                           	psect	text29
  9427     11A9                     __ptext29:	
  9428 ;; *************** function _atoi *****************
  9429 ;; Defined at:
  9430 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  s               2    6[COMMON] PTR const unsigned char 
  9433 ;;		 -> STR_3(3), STR_2(3), STR_1(5), 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  n               2    2[BANK0 ] int 
  9436 ;;  neg             2    0[BANK0 ] int 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  2    6[COMMON] int 
  9439 ;; Registers used:
  9440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9446 ;;      Params:         2       0       0       0       0       0       0       0
  9447 ;;      Locals:         0       4       0       0       0       0       0       0
  9448 ;;      Temps:          3       0       0       0       0       0       0       0
  9449 ;;      Totals:         5       4       0       0       0       0       0       0
  9450 ;;Total ram usage:        9 bytes
  9451 ;; Hardware stack levels used: 1
  9452 ;; Hardware stack levels required when called: 1
  9453 ;; This function calls:
  9454 ;;		___wmul
  9455 ;;		_isdigit
  9456 ;;		_isspace
  9457 ;; This function is called by:
  9458 ;;		_vfpfcnvrt
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462     11A9                     _atoi:	
  9463                           ;psect for function _atoi
  9464                           
  9465                           
  9466                           ;incstack = 0
  9467                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9468     11A9  0020               	movlb	0	; select bank0
  9469     11AA  01A2               	clrf	atoi@n
  9470     11AB  01A3               	clrf	atoi@n+1
  9471     11AC  01A0               	clrf	atoi@neg
  9472     11AD  01A1               	clrf	atoi@neg+1
  9473     11AE                     l4001:
  9474     11AE  0876               	movf	atoi@s,w
  9475     11AF  0084               	movwf	4
  9476     11B0  0877               	movf	atoi@s+1,w
  9477     11B1  0085               	movwf	5
  9478     11B2  0012               	moviw fsr0++
  9479     11B3  3A20               	xorlw	32
  9480     11B4  1D03               	btfss	3,2
  9481     11B5  29BB               	goto	l4003
  9482     11B6                     l3997:
  9483     11B6  3001               	movlw	1
  9484     11B7  07F6               	addwf	atoi@s,f
  9485     11B8  3000               	movlw	0
  9486     11B9  3DF7               	addwfc	atoi@s+1,f
  9487     11BA  29AE               	goto	l4001
  9488     11BB                     l4003:
  9489     11BB  0876               	movf	atoi@s,w
  9490     11BC  0084               	movwf	4
  9491     11BD  0877               	movf	atoi@s+1,w
  9492     11BE  0085               	movwf	5
  9493     11BF  0800               	movf	0,w	;code access
  9494     11C0  3EF7               	addlw	247
  9495     11C1  00F8               	movwf	??_atoi
  9496     11C2  30FF               	movlw	255
  9497     11C3  1803               	skipnc
  9498     11C4  3000               	movlw	0
  9499     11C5  00F9               	movwf	??_atoi+1
  9500     11C6  3000               	movlw	0
  9501     11C7  0279               	subwf	??_atoi+1,w
  9502     11C8  3005               	movlw	5
  9503     11C9  1903               	skipnz
  9504     11CA  0278               	subwf	??_atoi,w
  9505     11CB  1803               	btfsc	3,0
  9506     11CC  29D4               	goto	l4007
  9507     11CD  29B6               	goto	l3997
  9508     11CE                     l4005:
  9509     11CE  3001               	movlw	1
  9510     11CF  0020               	movlb	0	; select bank0
  9511     11D0  00A0               	movwf	atoi@neg
  9512     11D1  3000               	movlw	0
  9513     11D2  00A1               	movwf	atoi@neg+1
  9514     11D3  2A08               	goto	l995
  9515     11D4                     l4007:
  9516     11D4  0876               	movf	atoi@s,w
  9517     11D5  0084               	movwf	4
  9518     11D6  0877               	movf	atoi@s+1,w
  9519     11D7  0085               	movwf	5
  9520     11D8  0800               	movf	0,w	;code access
  9521     11D9  00F8               	movwf	??_atoi
  9522     11DA  01F9               	clrf	??_atoi+1
  9523                           
  9524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9525                           ; Switch size 1, requested type "simple"
  9526                           ; Number of cases is 1, Range of values is 0 to 0
  9527                           ; switch strategies available:
  9528                           ; Name         Instructions Cycles
  9529                           ; simple_byte            4     3 (average)
  9530                           ; direct_byte            8     6 (fixed)
  9531                           ; jumptable            260     6 (fixed)
  9532                           ;	Chosen strategy is simple_byte
  9533     11DB  0879               	movf	??_atoi+1,w
  9534     11DC  3A00               	xorlw	0	; case 0
  9535     11DD  1903               	skipnz
  9536     11DE  29E0               	goto	l4855
  9537     11DF  2A0C               	goto	l4015
  9538     11E0                     l4855:
  9539                           
  9540                           ; Switch size 1, requested type "simple"
  9541                           ; Number of cases is 2, Range of values is 43 to 45
  9542                           ; switch strategies available:
  9543                           ; Name         Instructions Cycles
  9544                           ; simple_byte            7     4 (average)
  9545                           ; direct_byte           15     9 (fixed)
  9546                           ; jumptable            263     9 (fixed)
  9547                           ;	Chosen strategy is simple_byte
  9548     11E0  0878               	movf	??_atoi,w
  9549     11E1  3A2B               	xorlw	43	; case 43
  9550     11E2  1903               	skipnz
  9551     11E3  2A08               	goto	l995
  9552     11E4  3A06               	xorlw	6	; case 45
  9553     11E5  1903               	skipnz
  9554     11E6  29CE               	goto	l4005
  9555     11E7  2A0C               	goto	l4015
  9556     11E8                     l4009:
  9557     11E8  0876               	movf	atoi@s,w
  9558     11E9  0084               	movwf	4
  9559     11EA  0877               	movf	atoi@s+1,w
  9560     11EB  0085               	movwf	5
  9561     11EC  0800               	movf	0,w	;code access
  9562     11ED  00F8               	movwf	??_atoi
  9563     11EE  0020               	movlb	0	; select bank0
  9564     11EF  0823               	movf	atoi@n+1,w
  9565     11F0  00F1               	movwf	___wmul@multiplier+1
  9566     11F1  0822               	movf	atoi@n,w
  9567     11F2  00F0               	movwf	___wmul@multiplier
  9568     11F3  300A               	movlw	10
  9569     11F4  00F2               	movwf	___wmul@multiplicand
  9570     11F5  3000               	movlw	0
  9571     11F6  00F3               	movwf	___wmul@multiplicand+1
  9572     11F7  319C  2457  3191   	fcall	___wmul
  9573     11FA  0871               	movf	?___wmul+1,w
  9574     11FB  00FA               	movwf	??_atoi+2
  9575     11FC  0878               	movf	??_atoi,w
  9576     11FD  0270               	subwf	?___wmul,w
  9577     11FE  00F9               	movwf	??_atoi+1
  9578     11FF  1C03               	skipc
  9579     1200  03FA               	decf	??_atoi+2,f
  9580     1201  0879               	movf	??_atoi+1,w
  9581     1202  3E30               	addlw	48
  9582     1203  0020               	movlb	0	; select bank0
  9583     1204  00A2               	movwf	atoi@n
  9584     1205  3000               	movlw	0
  9585     1206  3D7A               	addwfc	??_atoi+2,w
  9586     1207  00A3               	movwf	atoi@n+1
  9587     1208                     l995:
  9588     1208  3001               	movlw	1
  9589     1209  07F6               	addwf	atoi@s,f
  9590     120A  3000               	movlw	0
  9591     120B  3DF7               	addwfc	atoi@s+1,f
  9592     120C                     l4015:
  9593     120C  0876               	movf	atoi@s,w
  9594     120D  0084               	movwf	4
  9595     120E  0877               	movf	atoi@s+1,w
  9596     120F  0085               	movwf	5
  9597     1210  0800               	movf	0,w	;code access
  9598     1211  3ED0               	addlw	208
  9599     1212  00F8               	movwf	??_atoi
  9600     1213  30FF               	movlw	255
  9601     1214  1803               	skipnc
  9602     1215  3000               	movlw	0
  9603     1216  00F9               	movwf	??_atoi+1
  9604     1217  3000               	movlw	0
  9605     1218  0279               	subwf	??_atoi+1,w
  9606     1219  300A               	movlw	10
  9607     121A  1903               	skipnz
  9608     121B  0278               	subwf	??_atoi,w
  9609     121C  1C03               	skipc
  9610     121D  29E8               	goto	l4009
  9611     121E  0020               	movlb	0	; select bank0
  9612     121F  0820               	movf	atoi@neg,w
  9613     1220  0421               	iorwf	atoi@neg+1,w
  9614     1221  1D03               	btfss	3,2
  9615     1222  2A2F               	goto	l4021
  9616     1223  0922               	comf	atoi@n,w
  9617     1224  00F8               	movwf	??_atoi
  9618     1225  0923               	comf	atoi@n+1,w
  9619     1226  00F9               	movwf	??_atoi+1
  9620     1227  0AF8               	incf	??_atoi,f
  9621     1228  1903               	skipnz
  9622     1229  0AF9               	incf	??_atoi+1,f
  9623     122A  0878               	movf	??_atoi,w
  9624     122B  00F6               	movwf	?_atoi
  9625     122C  0879               	movf	??_atoi+1,w
  9626     122D  00F7               	movwf	?_atoi+1
  9627     122E  0008               	return
  9628     122F                     l4021:
  9629     122F  0823               	movf	atoi@n+1,w
  9630     1230  00F7               	movwf	?_atoi+1
  9631     1231  0822               	movf	atoi@n,w
  9632     1232  00F6               	movwf	?_atoi
  9633     1233  0008               	return
  9634     1234                     __end_of_atoi:
  9635                           
  9636                           	psect	text30
  9637     1C8D                     __ptext30:	
  9638 ;; *************** function _isspace *****************
  9639 ;; Defined at:
  9640 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  c               2    0[COMMON] int 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  2    0[COMMON] int 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9654 ;;      Params:         2       0       0       0       0       0       0       0
  9655 ;;      Locals:         1       0       0       0       0       0       0       0
  9656 ;;      Temps:          2       0       0       0       0       0       0       0
  9657 ;;      Totals:         5       0       0       0       0       0       0       0
  9658 ;;Total ram usage:        5 bytes
  9659 ;; Hardware stack levels used: 1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_atoi
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667     1C8D                     _isspace:	
  9668                           ;psect for function _isspace
  9669                           
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in _isspace: [wreg+status,2+status,0]
  9673     1C8D  01F4               	clrf	_isspace$1035
  9674     1C8E  0AF4               	incf	_isspace$1035,f
  9675     1C8F  3020               	movlw	32
  9676     1C90  0670               	xorwf	isspace@c,w
  9677     1C91  0471               	iorwf	isspace@c+1,w
  9678     1C92  1903               	btfsc	3,2
  9679     1C93  2CA1               	goto	l3739
  9680     1C94  0870               	movf	isspace@c,w
  9681     1C95  3EF7               	addlw	247
  9682     1C96  00F2               	movwf	??_isspace
  9683     1C97  30FF               	movlw	255
  9684     1C98  3D71               	addwfc	isspace@c+1,w
  9685     1C99  00F3               	movwf	??_isspace+1
  9686     1C9A  3000               	movlw	0
  9687     1C9B  0273               	subwf	??_isspace+1,w
  9688     1C9C  3005               	movlw	5
  9689     1C9D  1903               	skipnz
  9690     1C9E  0272               	subwf	??_isspace,w
  9691     1C9F  1803               	btfsc	3,0
  9692     1CA0  01F4               	clrf	_isspace$1035
  9693     1CA1                     l3739:
  9694     1CA1  0874               	movf	_isspace$1035,w
  9695     1CA2  00F2               	movwf	??_isspace
  9696     1CA3  01F3               	clrf	??_isspace+1
  9697     1CA4  0872               	movf	??_isspace,w
  9698     1CA5  00F0               	movwf	?_isspace
  9699     1CA6  0873               	movf	??_isspace+1,w
  9700     1CA7  00F1               	movwf	?_isspace+1
  9701     1CA8  0008               	return
  9702     1CA9                     __end_of_isspace:
  9703                           
  9704                           	psect	text31
  9705     1C29                     __ptext31:	
  9706 ;; *************** function _isdigit *****************
  9707 ;; Defined at:
  9708 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  c               2    0[COMMON] int 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  2    0[COMMON] int 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9722 ;;      Params:         2       0       0       0       0       0       0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0
  9724 ;;      Temps:          4       0       0       0       0       0       0       0
  9725 ;;      Totals:         6       0       0       0       0       0       0       0
  9726 ;;Total ram usage:        6 bytes
  9727 ;; Hardware stack levels used: 1
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_vfpfcnvrt
  9732 ;;		_atoi
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736     1C29                     _isdigit:	
  9737                           ;psect for function _isdigit
  9738                           
  9739                           
  9740                           ;incstack = 0
  9741                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9742     1C29  0870               	movf	isdigit@c,w
  9743     1C2A  3ED0               	addlw	208
  9744     1C2B  00F2               	movwf	??_isdigit
  9745     1C2C  30FF               	movlw	255
  9746     1C2D  3D71               	addwfc	isdigit@c+1,w
  9747     1C2E  00F3               	movwf	??_isdigit+1
  9748     1C2F  3000               	movlw	0
  9749     1C30  0273               	subwf	??_isdigit+1,w
  9750     1C31  300A               	movlw	10
  9751     1C32  1903               	skipnz
  9752     1C33  0272               	subwf	??_isdigit,w
  9753     1C34  1803               	btfsc	3,0
  9754     1C35  2C38               	goto	u5110
  9755     1C36  3001               	movlw	1
  9756     1C37  2C39               	goto	u5120
  9757     1C38                     u5110:
  9758     1C38  3000               	movlw	0
  9759     1C39                     u5120:
  9760     1C39  00F4               	movwf	??_isdigit+2
  9761     1C3A  01F5               	clrf	??_isdigit+3
  9762     1C3B  0874               	movf	??_isdigit+2,w
  9763     1C3C  00F0               	movwf	?_isdigit
  9764     1C3D  0875               	movf	??_isdigit+3,w
  9765     1C3E  00F1               	movwf	?_isdigit+1
  9766     1C3F  0008               	return
  9767     1C40                     __end_of_isdigit:
  9768                           
  9769                           	psect	text32
  9770     1C57                     __ptext32:	
  9771 ;; *************** function ___wmul *****************
  9772 ;; Defined at:
  9773 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  multiplier      2    0[COMMON] unsigned int 
  9776 ;;  multiplicand    2    2[COMMON] unsigned int 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;  product         2    4[COMMON] unsigned int 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2    0[COMMON] unsigned int 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9788 ;;      Params:         4       0       0       0       0       0       0       0
  9789 ;;      Locals:         2       0       0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0
  9791 ;;      Totals:         6       0       0       0       0       0       0       0
  9792 ;;Total ram usage:        6 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_main
  9798 ;;		_atoi
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802     1C57                     ___wmul:	
  9803                           ;psect for function ___wmul
  9804                           
  9805                           
  9806                           ;incstack = 0
  9807                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9808     1C57  01F4               	clrf	___wmul@product
  9809     1C58  01F5               	clrf	___wmul@product+1
  9810     1C59                     l3197:
  9811     1C59  1C70               	btfss	___wmul@multiplier,0
  9812     1C5A  2C5F               	goto	l352
  9813     1C5B  0872               	movf	___wmul@multiplicand,w
  9814     1C5C  07F4               	addwf	___wmul@product,f
  9815     1C5D  0873               	movf	___wmul@multiplicand+1,w
  9816     1C5E  3DF5               	addwfc	___wmul@product+1,f
  9817     1C5F                     l352:
  9818     1C5F  3001               	movlw	1
  9819     1C60                     u3885:
  9820     1C60  35F2               	lslf	___wmul@multiplicand,f
  9821     1C61  0DF3               	rlf	___wmul@multiplicand+1,f
  9822     1C62  0B89               	decfsz	9,f
  9823     1C63  2C60               	goto	u3885
  9824     1C64  3001               	movlw	1
  9825     1C65                     u3895:
  9826     1C65  36F1               	lsrf	___wmul@multiplier+1,f
  9827     1C66  0CF0               	rrf	___wmul@multiplier,f
  9828     1C67  0B89               	decfsz	9,f
  9829     1C68  2C65               	goto	u3895
  9830     1C69  0870               	movf	___wmul@multiplier,w
  9831     1C6A  0471               	iorwf	___wmul@multiplier+1,w
  9832     1C6B  1D03               	btfss	3,2
  9833     1C6C  2C59               	goto	l3197
  9834     1C6D  0875               	movf	___wmul@product+1,w
  9835     1C6E  00F1               	movwf	?___wmul+1
  9836     1C6F  0874               	movf	___wmul@product,w
  9837     1C70  00F0               	movwf	?___wmul
  9838     1C71  0008               	return
  9839     1C72                     __end_of___wmul:
  9840                           
  9841                           	psect	text33
  9842     1C15                     __ptext33:	
  9843 ;; *************** function _lcd_DisplayString *****************
  9844 ;; Defined at:
  9845 ;;		line 80 in file "main.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  str             2    2[COMMON] PTR unsigned char 
  9848 ;;		 -> STR_14(5), STR_13(15), STR_12(6), STR_11(12), 
  9849 ;;		 -> STR_10(7), STR_9(15), STR_8(14), STR_7(14), 
  9850 ;;		 -> STR_6(16), main@inputTime(6), main@inputTemp(3), STR_5(9), 
  9851 ;;		 -> STR_4(12), display_int@str(16), display_float2@str(16), display_float@str(16), 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      void 
  9856 ;; Registers used:
  9857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9863 ;;      Params:         2       0       0       0       0       0       0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0
  9865 ;;      Temps:          1       0       0       0       0       0       0       0
  9866 ;;      Totals:         3       0       0       0       0       0       0       0
  9867 ;;Total ram usage:        3 bytes
  9868 ;; Hardware stack levels used: 1
  9869 ;; Hardware stack levels required when called: 1
  9870 ;; This function calls:
  9871 ;;		_lcd_char
  9872 ;; This function is called by:
  9873 ;;		_display_float
  9874 ;;		_display_int
  9875 ;;		_main
  9876 ;;		_display_float2
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880     1C15                     _lcd_DisplayString:	
  9881                           ;psect for function _lcd_DisplayString
  9882                           
  9883     1C15                     l4153:	
  9884                           ;main.c: 81:     while(*str)
  9885                           
  9886                           ;incstack = 0
  9887                           ; Regs used in _lcd_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9888                           
  9889                           
  9890                           ;main.c: 81:     while(*str)
  9891     1C15  0872               	movf	lcd_DisplayString@str,w
  9892     1C16  0084               	movwf	4
  9893     1C17  0873               	movf	lcd_DisplayString@str+1,w
  9894     1C18  0085               	movwf	5
  9895     1C19  0012               	moviw fsr0++
  9896     1C1A  1903               	btfsc	3,2
  9897     1C1B  0008               	return
  9898                           
  9899                           ;main.c: 82:     {;main.c: 83:         lcd_char(*str);
  9900     1C1C  0872               	movf	lcd_DisplayString@str,w
  9901     1C1D  0084               	movwf	4
  9902     1C1E  0873               	movf	lcd_DisplayString@str+1,w
  9903     1C1F  0085               	movwf	5
  9904     1C20  0800               	movf	0,w	;code access
  9905     1C21  319D  25FE  319C   	fcall	_lcd_char
  9906                           
  9907                           ;main.c: 84:         str++;
  9908     1C24  3001               	movlw	1
  9909     1C25  07F2               	addwf	lcd_DisplayString@str,f
  9910     1C26  3000               	movlw	0
  9911     1C27  3DF3               	addwfc	lcd_DisplayString@str+1,f
  9912     1C28  2C15               	goto	l4153
  9913     1C29                     __end_of_lcd_DisplayString:
  9914                           
  9915                           	psect	text34
  9916     1DFE                     __ptext34:	
  9917 ;; *************** function _lcd_char *****************
  9918 ;; Defined at:
  9919 ;;		line 70 in file "main.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  c               1    wreg     unsigned char 
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;  c               1    1[COMMON] unsigned char 
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      void 
  9926 ;; Registers used:
  9927 ;;		wreg, status,2, status,0
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9933 ;;      Params:         0       0       0       0       0       0       0       0
  9934 ;;      Locals:         1       0       0       0       0       0       0       0
  9935 ;;      Temps:          1       0       0       0       0       0       0       0
  9936 ;;      Totals:         2       0       0       0       0       0       0       0
  9937 ;;Total ram usage:        2 bytes
  9938 ;; Hardware stack levels used: 1
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_lcd_DisplayString
  9943 ;;		_main
  9944 ;;		_ClearRow
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948     1DFE                     _lcd_char:	
  9949                           ;psect for function _lcd_char
  9950                           
  9951                           
  9952                           ;incstack = 0
  9953                           ; Regs used in _lcd_char: [wreg+status,2+status,0]
  9954                           ;lcd_char@c stored from wreg
  9955     1DFE  00F1               	movwf	lcd_char@c
  9956                           
  9957                           ;main.c: 70: void lcd_char(unsigned char c);main.c: 71: {;main.c: 72:     LATB = 0x30 + 
      +                          ((c >> 4) & 0x0f);
  9958     1DFF  0871               	movf	lcd_char@c,w
  9959     1E00  00F0               	movwf	??_lcd_char
  9960     1E01  3004               	movlw	4
  9961     1E02                     u5695:
  9962     1E02  36F0               	lsrf	??_lcd_char,f
  9963     1E03  0B89               	decfsz	9,f
  9964     1E04  2E02               	goto	u5695
  9965     1E05  0870               	movf	??_lcd_char,w
  9966     1E06  390F               	andlw	15
  9967     1E07  3E30               	addlw	48
  9968     1E08  0022               	movlb	2	; select bank2
  9969     1E09  008D               	movwf	13	;volatile
  9970                           
  9971                           ;main.c: 73:     LATB = 0x20 + ((c >> 4) & 0x0f);
  9972     1E0A  0871               	movf	lcd_char@c,w
  9973     1E0B  00F0               	movwf	??_lcd_char
  9974     1E0C  3004               	movlw	4
  9975     1E0D                     u5705:
  9976     1E0D  36F0               	lsrf	??_lcd_char,f
  9977     1E0E  0B89               	decfsz	9,f
  9978     1E0F  2E0D               	goto	u5705
  9979     1E10  0870               	movf	??_lcd_char,w
  9980     1E11  390F               	andlw	15
  9981     1E12  3E20               	addlw	32
  9982     1E13  008D               	movwf	13	;volatile
  9983                           
  9984                           ;main.c: 74:     _delay((unsigned long)((2)*(19600000/4000.0)));
  9985     1E14  300D               	movlw	13
  9986     1E15  00F0               	movwf	??_lcd_char
  9987     1E16  30B9               	movlw	185
  9988     1E17                     u6887:
  9989     1E17  0B89               	decfsz	9,f
  9990     1E18  2E17               	goto	u6887
  9991     1E19  0BF0               	decfsz	??_lcd_char,f
  9992     1E1A  2E17               	goto	u6887
  9993     1E1B  0000               	nop
  9994                           
  9995                           ;main.c: 75:     LATB = 0x30 + (c & 0x0f);
  9996     1E1C  0871               	movf	lcd_char@c,w
  9997     1E1D  390F               	andlw	15
  9998     1E1E  3E30               	addlw	48
  9999     1E1F  0022               	movlb	2	; select bank2
 10000     1E20  008D               	movwf	13	;volatile
 10001                           
 10002                           ;main.c: 76:     LATB = 0x20 + (c & 0x0f);
 10003     1E21  0871               	movf	lcd_char@c,w
 10004     1E22  390F               	andlw	15
 10005     1E23  3E20               	addlw	32
 10006     1E24  008D               	movwf	13	;volatile
 10007                           
 10008                           ;main.c: 77:     _delay((unsigned long)((2)*(19600000/4000.0)));
 10009     1E25  300D               	movlw	13
 10010     1E26  00F0               	movwf	??_lcd_char
 10011     1E27  30B9               	movlw	185
 10012     1E28                     u6897:
 10013     1E28  0B89               	decfsz	9,f
 10014     1E29  2E28               	goto	u6897
 10015     1E2A  0BF0               	decfsz	??_lcd_char,f
 10016     1E2B  2E28               	goto	u6897
 10017     1E2C  0000               	nop
 10018     1E2D  0008               	return
 10019     1E2E                     __end_of_lcd_char:
 10020                           
 10021                           	psect	text35
 10022     1E6F                     __ptext35:	
 10023 ;; *************** function ___awmod *****************
 10024 ;; Defined at:
 10025 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;  divisor         2    0[COMMON] int 
 10028 ;;  dividend        2    2[COMMON] int 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  sign            1    6[COMMON] unsigned char 
 10031 ;;  counter         1    5[COMMON] unsigned char 
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  2    0[COMMON] int 
 10034 ;; Registers used:
 10035 ;;		wreg, status,2, status,0
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10041 ;;      Params:         4       0       0       0       0       0       0       0
 10042 ;;      Locals:         2       0       0       0       0       0       0       0
 10043 ;;      Temps:          1       0       0       0       0       0       0       0
 10044 ;;      Totals:         7       0       0       0       0       0       0       0
 10045 ;;Total ram usage:        7 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_main
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054     1E6F                     ___awmod:	
 10055                           ;psect for function ___awmod
 10056                           
 10057                           
 10058                           ;incstack = 0
 10059                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10060     1E6F  01F6               	clrf	___awmod@sign
 10061     1E70  1FF3               	btfss	___awmod@dividend+1,7
 10062     1E71  2E79               	goto	l4429
 10063     1E72  09F2               	comf	___awmod@dividend,f
 10064     1E73  09F3               	comf	___awmod@dividend+1,f
 10065     1E74  0AF2               	incf	___awmod@dividend,f
 10066     1E75  1903               	skipnz
 10067     1E76  0AF3               	incf	___awmod@dividend+1,f
 10068     1E77  01F6               	clrf	___awmod@sign
 10069     1E78  0AF6               	incf	___awmod@sign,f
 10070     1E79                     l4429:
 10071     1E79  1FF1               	btfss	___awmod@divisor+1,7
 10072     1E7A  2E80               	goto	l4433
 10073     1E7B  09F0               	comf	___awmod@divisor,f
 10074     1E7C  09F1               	comf	___awmod@divisor+1,f
 10075     1E7D  0AF0               	incf	___awmod@divisor,f
 10076     1E7E  1903               	skipnz
 10077     1E7F  0AF1               	incf	___awmod@divisor+1,f
 10078     1E80                     l4433:
 10079     1E80  0870               	movf	___awmod@divisor,w
 10080     1E81  0471               	iorwf	___awmod@divisor+1,w
 10081     1E82  1903               	btfsc	3,2
 10082     1E83  2EA7               	goto	l4451
 10083     1E84  01F5               	clrf	___awmod@counter
 10084     1E85  0AF5               	incf	___awmod@counter,f
 10085     1E86                     l4441:
 10086     1E86  1BF1               	btfsc	___awmod@divisor+1,7
 10087     1E87  2E92               	goto	l4443
 10088     1E88  3001               	movlw	1
 10089     1E89                     u6305:
 10090     1E89  35F0               	lslf	___awmod@divisor,f
 10091     1E8A  0DF1               	rlf	___awmod@divisor+1,f
 10092     1E8B  0B89               	decfsz	9,f
 10093     1E8C  2E89               	goto	u6305
 10094     1E8D  3001               	movlw	1
 10095     1E8E  00F4               	movwf	??___awmod
 10096     1E8F  0874               	movf	??___awmod,w
 10097     1E90  07F5               	addwf	___awmod@counter,f
 10098     1E91  2E86               	goto	l4441
 10099     1E92                     l4443:
 10100     1E92  0871               	movf	___awmod@divisor+1,w
 10101     1E93  0273               	subwf	___awmod@dividend+1,w
 10102     1E94  1D03               	skipz
 10103     1E95  2E98               	goto	u6325
 10104     1E96  0870               	movf	___awmod@divisor,w
 10105     1E97  0272               	subwf	___awmod@dividend,w
 10106     1E98                     u6325:
 10107     1E98  1C03               	skipc
 10108     1E99  2E9E               	goto	l4447
 10109     1E9A  0870               	movf	___awmod@divisor,w
 10110     1E9B  02F2               	subwf	___awmod@dividend,f
 10111     1E9C  0871               	movf	___awmod@divisor+1,w
 10112     1E9D  3BF3               	subwfb	___awmod@dividend+1,f
 10113     1E9E                     l4447:
 10114     1E9E  3001               	movlw	1
 10115     1E9F                     u6335:
 10116     1E9F  36F1               	lsrf	___awmod@divisor+1,f
 10117     1EA0  0CF0               	rrf	___awmod@divisor,f
 10118     1EA1  0B89               	decfsz	9,f
 10119     1EA2  2E9F               	goto	u6335
 10120     1EA3  3001               	movlw	1
 10121     1EA4  02F5               	subwf	___awmod@counter,f
 10122     1EA5  1D03               	btfss	3,2
 10123     1EA6  2E92               	goto	l4443
 10124     1EA7                     l4451:
 10125     1EA7  0876               	movf	___awmod@sign,w
 10126     1EA8  1903               	btfsc	3,2
 10127     1EA9  2EAF               	goto	l4455
 10128     1EAA  09F2               	comf	___awmod@dividend,f
 10129     1EAB  09F3               	comf	___awmod@dividend+1,f
 10130     1EAC  0AF2               	incf	___awmod@dividend,f
 10131     1EAD  1903               	skipnz
 10132     1EAE  0AF3               	incf	___awmod@dividend+1,f
 10133     1EAF                     l4455:
 10134     1EAF  0873               	movf	___awmod@dividend+1,w
 10135     1EB0  00F1               	movwf	?___awmod+1
 10136     1EB1  0872               	movf	___awmod@dividend,w
 10137     1EB2  00F0               	movwf	?___awmod
 10138     1EB3  0008               	return
 10139     1EB4                     __end_of___awmod:
 10140                           
 10141                           	psect	text36
 10142     1F4D                     __ptext36:	
 10143 ;; *************** function ___awdiv *****************
 10144 ;; Defined at:
 10145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  divisor         2    7[COMMON] int 
 10148 ;;  dividend        2    9[COMMON] int 
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;  quotient        2    2[BANK0 ] int 
 10151 ;;  sign            1    1[BANK0 ] unsigned char 
 10152 ;;  counter         1    0[BANK0 ] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  2    7[COMMON] int 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10162 ;;      Params:         4       0       0       0       0       0       0       0
 10163 ;;      Locals:         0       4       0       0       0       0       0       0
 10164 ;;      Temps:          1       0       0       0       0       0       0       0
 10165 ;;      Totals:         5       4       0       0       0       0       0       0
 10166 ;;Total ram usage:        9 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; This function calls:
 10169 ;;		Nothing
 10170 ;; This function is called by:
 10171 ;;		_main
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175     1F4D                     ___awdiv:	
 10176                           ;psect for function ___awdiv
 10177                           
 10178                           
 10179                           ;incstack = 0
 10180                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10181     1F4D  0020               	movlb	0	; select bank0
 10182     1F4E  01A1               	clrf	___awdiv@sign
 10183     1F4F  1FF8               	btfss	___awdiv@divisor+1,7
 10184     1F50  2F58               	goto	l4385
 10185     1F51  09F7               	comf	___awdiv@divisor,f
 10186     1F52  09F8               	comf	___awdiv@divisor+1,f
 10187     1F53  0AF7               	incf	___awdiv@divisor,f
 10188     1F54  1903               	skipnz
 10189     1F55  0AF8               	incf	___awdiv@divisor+1,f
 10190     1F56  01A1               	clrf	___awdiv@sign
 10191     1F57  0AA1               	incf	___awdiv@sign,f
 10192     1F58                     l4385:
 10193     1F58  1FFA               	btfss	___awdiv@dividend+1,7
 10194     1F59  2F63               	goto	l4391
 10195     1F5A  09F9               	comf	___awdiv@dividend,f
 10196     1F5B  09FA               	comf	___awdiv@dividend+1,f
 10197     1F5C  0AF9               	incf	___awdiv@dividend,f
 10198     1F5D  1903               	skipnz
 10199     1F5E  0AFA               	incf	___awdiv@dividend+1,f
 10200     1F5F  3001               	movlw	1
 10201     1F60  00FB               	movwf	??___awdiv
 10202     1F61  087B               	movf	??___awdiv,w
 10203     1F62  06A1               	xorwf	___awdiv@sign,f
 10204     1F63                     l4391:
 10205     1F63  01A2               	clrf	___awdiv@quotient
 10206     1F64  01A3               	clrf	___awdiv@quotient+1
 10207     1F65  0877               	movf	___awdiv@divisor,w
 10208     1F66  0478               	iorwf	___awdiv@divisor+1,w
 10209     1F67  1903               	btfsc	3,2
 10210     1F68  2F92               	goto	l4413
 10211     1F69  01A0               	clrf	___awdiv@counter
 10212     1F6A  0AA0               	incf	___awdiv@counter,f
 10213     1F6B                     l4401:
 10214     1F6B  1BF8               	btfsc	___awdiv@divisor+1,7
 10215     1F6C  2F77               	goto	l4403
 10216     1F6D  3001               	movlw	1
 10217     1F6E                     u6205:
 10218     1F6E  35F7               	lslf	___awdiv@divisor,f
 10219     1F6F  0DF8               	rlf	___awdiv@divisor+1,f
 10220     1F70  0B89               	decfsz	9,f
 10221     1F71  2F6E               	goto	u6205
 10222     1F72  3001               	movlw	1
 10223     1F73  00FB               	movwf	??___awdiv
 10224     1F74  087B               	movf	??___awdiv,w
 10225     1F75  07A0               	addwf	___awdiv@counter,f
 10226     1F76  2F6B               	goto	l4401
 10227     1F77                     l4403:
 10228     1F77  3001               	movlw	1
 10229     1F78                     u6225:
 10230     1F78  35A2               	lslf	___awdiv@quotient,f
 10231     1F79  0DA3               	rlf	___awdiv@quotient+1,f
 10232     1F7A  0B89               	decfsz	9,f
 10233     1F7B  2F78               	goto	u6225
 10234     1F7C  0878               	movf	___awdiv@divisor+1,w
 10235     1F7D  027A               	subwf	___awdiv@dividend+1,w
 10236     1F7E  1D03               	skipz
 10237     1F7F  2F82               	goto	u6235
 10238     1F80  0877               	movf	___awdiv@divisor,w
 10239     1F81  0279               	subwf	___awdiv@dividend,w
 10240     1F82                     u6235:
 10241     1F82  1C03               	skipc
 10242     1F83  2F89               	goto	l4409
 10243     1F84  0877               	movf	___awdiv@divisor,w
 10244     1F85  02F9               	subwf	___awdiv@dividend,f
 10245     1F86  0878               	movf	___awdiv@divisor+1,w
 10246     1F87  3BFA               	subwfb	___awdiv@dividend+1,f
 10247     1F88  1422               	bsf	___awdiv@quotient,0
 10248     1F89                     l4409:
 10249     1F89  3001               	movlw	1
 10250     1F8A                     u6245:
 10251     1F8A  36F8               	lsrf	___awdiv@divisor+1,f
 10252     1F8B  0CF7               	rrf	___awdiv@divisor,f
 10253     1F8C  0B89               	decfsz	9,f
 10254     1F8D  2F8A               	goto	u6245
 10255     1F8E  3001               	movlw	1
 10256     1F8F  02A0               	subwf	___awdiv@counter,f
 10257     1F90  1D03               	btfss	3,2
 10258     1F91  2F77               	goto	l4403
 10259     1F92                     l4413:
 10260     1F92  0821               	movf	___awdiv@sign,w
 10261     1F93  1903               	btfsc	3,2
 10262     1F94  2F9A               	goto	l4417
 10263     1F95  09A2               	comf	___awdiv@quotient,f
 10264     1F96  09A3               	comf	___awdiv@quotient+1,f
 10265     1F97  0AA2               	incf	___awdiv@quotient,f
 10266     1F98  1903               	skipnz
 10267     1F99  0AA3               	incf	___awdiv@quotient+1,f
 10268     1F9A                     l4417:
 10269     1F9A  0823               	movf	___awdiv@quotient+1,w
 10270     1F9B  00F8               	movwf	?___awdiv+1
 10271     1F9C  0822               	movf	___awdiv@quotient,w
 10272     1F9D  00F7               	movwf	?___awdiv
 10273     1F9E  0008               	return
 10274     1F9F                     __end_of___awdiv:
 10275                           
 10276                           	psect	text37
 10277     0008                     __ptext37:	
 10278 ;; *************** function _ADC_init *****************
 10279 ;; Defined at:
 10280 ;;		line 123 in file "main.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, status,2, status,0
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10294 ;;      Params:         0       0       0       0       0       0       0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0
 10297 ;;      Totals:         0       0       0       0       0       0       0       0
 10298 ;;Total ram usage:        0 bytes
 10299 ;; Hardware stack levels used: 1
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_main
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307     0008                     _ADC_init:	
 10308                           ;psect for function _ADC_init
 10309                           
 10310                           
 10311                           ;main.c: 125:     ADCON0bits.ADON = 1;
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 10315     0008  0021               	movlb	1	; select bank1
 10316     0009  141D               	bsf	29,0	;volatile
 10317                           
 10318                           ;main.c: 126:     ADCON1bits.ADFM = 1;
 10319     000A  179E               	bsf	30,7	;volatile
 10320                           
 10321                           ;main.c: 127:     ADCON1bits.ADCS = 011;
 10322     000B  081E               	movf	30,w	;volatile
 10323     000C  398F               	andlw	-113
 10324     000D  3810               	iorlw	16
 10325     000E  009E               	movwf	30	;volatile
 10326                           
 10327                           ;main.c: 128:     ADRESH = 0;
 10328     000F  019C               	clrf	28	;volatile
 10329                           
 10330                           ;main.c: 129:     ADRESL = 0;
 10331     0010  019B               	clrf	27	;volatile
 10332     0011  0008               	return
 10333     0012                     __end_of_ADC_init:
 10334                           
 10335                           	psect	text38
 10336     103F                     __ptext38:	
 10337 ;; *************** function _ADC_Convert *****************
 10338 ;; Defined at:
 10339 ;;		line 132 in file "main.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  chan            2   52[BANK0 ] int 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  voltage         4   58[BANK0 ] float 
 10344 ;;  result          2   62[BANK0 ] unsigned int 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  4   52[BANK0 ] float 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, pclath, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10354 ;;      Params:         0       4       0       0       0       0       0       0
 10355 ;;      Locals:         0       6       0       0       0       0       0       0
 10356 ;;      Temps:          0       2       0       0       0       0       0       0
 10357 ;;      Totals:         0      12       0       0       0       0       0       0
 10358 ;;Total ram usage:       12 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 2
 10361 ;; This function calls:
 10362 ;;		___fldiv
 10363 ;;		___flmul
 10364 ;;		___xxtofl
 10365 ;; This function is called by:
 10366 ;;		_main
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370     103F                     _ADC_Convert:	
 10371                           ;psect for function _ADC_Convert
 10372                           
 10373                           
 10374                           ;main.c: 132: float ADC_Convert(int chan);main.c: 133: {;main.c: 134:     if(chan == 0){
 10375                           
 10376                           ;incstack = 0
 10377                           ; Regs used in _ADC_Convert: [wreg+status,2+status,0+pclath+cstack]
 10378     103F  0020               	movlb	0	; select bank0
 10379     1040  0854               	movf	ADC_Convert@chan,w
 10380     1041  0455               	iorwf	ADC_Convert@chan+1,w
 10381     1042  1D03               	btfss	3,2
 10382     1043  2848               	goto	l4243
 10383                           
 10384                           ;main.c: 135:       ADCON0bits.CHS = 00000 ;
 10385     1044  3083               	movlw	-125
 10386     1045  0021               	movlb	1	; select bank1
 10387     1046  059D               	andwf	29,f	;volatile
 10388                           
 10389                           ;main.c: 136:     }
 10390     1047  285B               	goto	l4251
 10391     1048                     l4243:
 10392     1048  0354               	decf	ADC_Convert@chan,w
 10393     1049  0455               	iorwf	ADC_Convert@chan+1,w
 10394     104A  1D03               	btfss	3,2
 10395     104B  2851               	goto	l4247
 10396                           
 10397                           ;main.c: 138:       ADCON0bits.CHS = 00001 ;
 10398     104C  0021               	movlb	1	; select bank1
 10399     104D  081D               	movf	29,w	;volatile
 10400     104E  3983               	andlw	-125
 10401     104F  3804               	iorlw	4
 10402     1050  285A               	goto	L25
 10403     1051                     l4247:	
 10404                           ;main.c: 139:     }
 10405                           
 10406     1051  3002               	movlw	2
 10407     1052  0654               	xorwf	ADC_Convert@chan,w
 10408     1053  0455               	iorwf	ADC_Convert@chan+1,w
 10409     1054  1D03               	btfss	3,2
 10410     1055  285B               	goto	l4251
 10411                           
 10412                           ;main.c: 141:       ADCON0bits.CHS = 00010 ;
 10413     1056  0021               	movlb	1	; select bank1
 10414     1057  081D               	movf	29,w	;volatile
 10415     1058  3983               	andlw	-125
 10416     1059  3820               	iorlw	32
 10417     105A                     L25:
 10418     105A  009D               	movwf	29	;volatile
 10419     105B                     l4251:
 10420                           
 10421                           ;main.c: 143:     _delay((unsigned long)((1)*(19600000/4000.0)));
 10422     105B  3007               	movlw	7
 10423     105C  0020               	movlb	0	; select bank0
 10424     105D  00D8               	movwf	??_ADC_Convert
 10425     105E  305B               	movlw	91
 10426     105F                     u6907:
 10427     105F  0B89               	decfsz	9,f
 10428     1060  285F               	goto	u6907
 10429     1061  0BD8               	decfsz	??_ADC_Convert,f
 10430     1062  285F               	goto	u6907
 10431     1063  3200               	nop2
 10432                           
 10433                           ;main.c: 144:     ADCON0bits.GO_nDONE = 1;
 10434     1064  0021               	movlb	1	; select bank1
 10435     1065  149D               	bsf	29,1	;volatile
 10436                           
 10437                           ;main.c: 145:     ADCON0bits.ADGO = 1;
 10438     1066  149D               	bsf	29,1	;volatile
 10439     1067                     l76:	
 10440                           ;main.c: 146:     while(ADCON0bits.GO_nDONE);
 10441                           
 10442     1067  189D               	btfsc	29,1	;volatile
 10443     1068  2867               	goto	l76
 10444                           
 10445                           ;main.c: 147:     unsigned int result = (ADRESH>>8) + ADRESL;
 10446     1069  081C               	movf	28,w	;volatile
 10447     106A  081B               	movf	27,w	;volatile
 10448     106B  0020               	movlb	0	; select bank0
 10449     106C  00D8               	movwf	??_ADC_Convert
 10450     106D  01D9               	clrf	??_ADC_Convert+1
 10451     106E  0858               	movf	??_ADC_Convert,w
 10452     106F  00DE               	movwf	ADC_Convert@result
 10453     1070  0859               	movf	??_ADC_Convert+1,w
 10454     1071  00DF               	movwf	ADC_Convert@result+1
 10455                           
 10456                           ;main.c: 148:     float voltage = (result * 5.0) / 1023;
 10457     1072  3044               	movlw	68
 10458     1073  00BD               	movwf	___fldiv@a+3
 10459     1074  307F               	movlw	127
 10460     1075  00BC               	movwf	___fldiv@a+2
 10461     1076  30C0               	movlw	192
 10462     1077  00BB               	movwf	___fldiv@a+1
 10463     1078  3000               	movlw	0
 10464     1079  00BA               	movwf	___fldiv@a
 10465     107A  3040               	movlw	64
 10466     107B  00A3               	movwf	___flmul@b+3
 10467     107C  30A0               	movlw	160
 10468     107D  00A2               	movwf	___flmul@b+2
 10469     107E  3000               	movlw	0
 10470     107F  00A1               	movwf	___flmul@b+1
 10471     1080  3000               	movlw	0
 10472     1081  00A0               	movwf	___flmul@b
 10473     1082  085E               	movf	ADC_Convert@result,w
 10474     1083  00F0               	movwf	___xxtofl@val
 10475     1084  085F               	movf	ADC_Convert@result+1,w
 10476     1085  00F1               	movwf	___xxtofl@val+1
 10477     1086  01F2               	clrf	___xxtofl@val+2
 10478     1087  01F3               	clrf	___xxtofl@val+3
 10479     1088  3000               	movlw	0
 10480     1089  3192  2234  3190   	fcall	___xxtofl
 10481     108C  0873               	movf	?___xxtofl+3,w
 10482     108D  0020               	movlb	0	; select bank0
 10483     108E  00A7               	movwf	___flmul@a+3
 10484     108F  0872               	movf	?___xxtofl+2,w
 10485     1090  00A6               	movwf	___flmul@a+2
 10486     1091  0871               	movf	?___xxtofl+1,w
 10487     1092  00A5               	movwf	___flmul@a+1
 10488     1093  0870               	movf	?___xxtofl,w
 10489     1094  00A4               	movwf	___flmul@a
 10490     1095  3180  2012  3190   	fcall	___flmul
 10491     1098  0020               	movlb	0	; select bank0
 10492     1099  0823               	movf	?___flmul+3,w
 10493     109A  00C1               	movwf	___fldiv@b+3
 10494     109B  0822               	movf	?___flmul+2,w
 10495     109C  00C0               	movwf	___fldiv@b+2
 10496     109D  0821               	movf	?___flmul+1,w
 10497     109E  00BF               	movwf	___fldiv@b+1
 10498     109F  0820               	movf	?___flmul,w
 10499     10A0  00BE               	movwf	___fldiv@b
 10500     10A1  3196  2690         	fcall	___fldiv
 10501     10A3  0020               	movlb	0	; select bank0
 10502     10A4  083D               	movf	?___fldiv+3,w
 10503     10A5  00DD               	movwf	ADC_Convert@voltage+3
 10504     10A6  083C               	movf	?___fldiv+2,w
 10505     10A7  00DC               	movwf	ADC_Convert@voltage+2
 10506     10A8  083B               	movf	?___fldiv+1,w
 10507     10A9  00DB               	movwf	ADC_Convert@voltage+1
 10508     10AA  083A               	movf	?___fldiv,w
 10509     10AB  00DA               	movwf	ADC_Convert@voltage
 10510                           
 10511                           ;main.c: 149:     return voltage;
 10512     10AC  085D               	movf	ADC_Convert@voltage+3,w
 10513     10AD  00D7               	movwf	?_ADC_Convert+3
 10514     10AE  085C               	movf	ADC_Convert@voltage+2,w
 10515     10AF  00D6               	movwf	?_ADC_Convert+2
 10516     10B0  085B               	movf	ADC_Convert@voltage+1,w
 10517     10B1  00D5               	movwf	?_ADC_Convert+1
 10518     10B2  085A               	movf	ADC_Convert@voltage,w
 10519     10B3  00D4               	movwf	?_ADC_Convert
 10520     10B4  0008               	return
 10521     10B5                     __end_of_ADC_Convert:
 10522                           
 10523                           	psect	text39
 10524     1234                     __ptext39:	
 10525 ;; *************** function ___xxtofl *****************
 10526 ;; Defined at:
 10527 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;  sign            1    wreg     unsigned char 
 10530 ;;  val             4    0[COMMON] long 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;  sign            1    8[COMMON] unsigned char 
 10533 ;;  arg             4   10[COMMON] unsigned long 
 10534 ;;  exp             1    9[COMMON] unsigned char 
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  4    0[COMMON] unsigned char 
 10537 ;; Registers used:
 10538 ;;		wreg, status,2, status,0
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10544 ;;      Params:         4       0       0       0       0       0       0       0
 10545 ;;      Locals:         6       0       0       0       0       0       0       0
 10546 ;;      Temps:          4       0       0       0       0       0       0       0
 10547 ;;      Totals:        14       0       0       0       0       0       0       0
 10548 ;;Total ram usage:       14 bytes
 10549 ;; Hardware stack levels used: 1
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_ADC_Convert
 10554 ;;		_main
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558     1234                     ___xxtofl:	
 10559                           ;psect for function ___xxtofl
 10560                           
 10561                           
 10562                           ;incstack = 0
 10563                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10564                           ;___xxtofl@sign stored from wreg
 10565     1234  00F8               	movwf	___xxtofl@sign
 10566     1235  0878               	movf	___xxtofl@sign,w
 10567     1236  1D03               	btfss	3,2
 10568     1237  1FF3               	btfss	___xxtofl@val+3,7
 10569     1238  2A49               	goto	l4173
 10570     1239  0970               	comf	___xxtofl@val,w
 10571     123A  00FA               	movwf	___xxtofl@arg
 10572     123B  0971               	comf	___xxtofl@val+1,w
 10573     123C  00FB               	movwf	___xxtofl@arg+1
 10574     123D  0972               	comf	___xxtofl@val+2,w
 10575     123E  00FC               	movwf	___xxtofl@arg+2
 10576     123F  0973               	comf	___xxtofl@val+3,w
 10577     1240  00FD               	movwf	___xxtofl@arg+3
 10578     1241  0AFA               	incf	___xxtofl@arg,f
 10579     1242  1903               	skipnz
 10580     1243  0AFB               	incf	___xxtofl@arg+1,f
 10581     1244  1903               	skipnz
 10582     1245  0AFC               	incf	___xxtofl@arg+2,f
 10583     1246  1903               	skipnz
 10584     1247  0AFD               	incf	___xxtofl@arg+3,f
 10585     1248  2A51               	goto	l793
 10586     1249                     l4173:
 10587     1249  0873               	movf	___xxtofl@val+3,w
 10588     124A  00FD               	movwf	___xxtofl@arg+3
 10589     124B  0872               	movf	___xxtofl@val+2,w
 10590     124C  00FC               	movwf	___xxtofl@arg+2
 10591     124D  0871               	movf	___xxtofl@val+1,w
 10592     124E  00FB               	movwf	___xxtofl@arg+1
 10593     124F  0870               	movf	___xxtofl@val,w
 10594     1250  00FA               	movwf	___xxtofl@arg
 10595     1251                     l793:
 10596     1251  0873               	movf	___xxtofl@val+3,w
 10597     1252  0472               	iorwf	___xxtofl@val+2,w
 10598     1253  0471               	iorwf	___xxtofl@val+1,w
 10599     1254  0470               	iorwf	___xxtofl@val,w
 10600     1255  1D03               	skipz
 10601     1256  2A60               	goto	l4179
 10602     1257  3000               	movlw	0
 10603     1258  00F3               	movwf	?___xxtofl+3
 10604     1259  3000               	movlw	0
 10605     125A  00F2               	movwf	?___xxtofl+2
 10606     125B  3000               	movlw	0
 10607     125C  00F1               	movwf	?___xxtofl+1
 10608     125D  3000               	movlw	0
 10609     125E  00F0               	movwf	?___xxtofl
 10610     125F  0008               	return
 10611     1260                     l4179:
 10612     1260  3096               	movlw	150
 10613     1261  00F9               	movwf	___xxtofl@exp
 10614     1262                     l4183:
 10615     1262  30FE               	movlw	254
 10616     1263  057D               	andwf	___xxtofl@arg+3,w
 10617     1264  1903               	btfsc	3,2
 10618     1265  2A85               	goto	l799
 10619     1266  3001               	movlw	1
 10620     1267  00F4               	movwf	??___xxtofl
 10621     1268  0874               	movf	??___xxtofl,w
 10622     1269  07F9               	addwf	___xxtofl@exp,f
 10623     126A  3001               	movlw	1
 10624     126B                     u5765:
 10625     126B  36FD               	lsrf	___xxtofl@arg+3,f
 10626     126C  0CFC               	rrf	___xxtofl@arg+2,f
 10627     126D  0CFB               	rrf	___xxtofl@arg+1,f
 10628     126E  0CFA               	rrf	___xxtofl@arg,f
 10629     126F  0B89               	decfsz	9,f
 10630     1270  2A6B               	goto	u5765
 10631     1271  2A62               	goto	l4183
 10632     1272                     l4185:
 10633     1272  3001               	movlw	1
 10634     1273  00F4               	movwf	??___xxtofl
 10635     1274  0874               	movf	??___xxtofl,w
 10636     1275  07F9               	addwf	___xxtofl@exp,f
 10637     1276  3001               	movlw	1
 10638     1277  07FA               	addwf	___xxtofl@arg,f
 10639     1278  3000               	movlw	0
 10640     1279  3DFB               	addwfc	___xxtofl@arg+1,f
 10641     127A  3000               	movlw	0
 10642     127B  3DFC               	addwfc	___xxtofl@arg+2,f
 10643     127C  3000               	movlw	0
 10644     127D  3DFD               	addwfc	___xxtofl@arg+3,f
 10645     127E  3001               	movlw	1
 10646     127F                     u5785:
 10647     127F  36FD               	lsrf	___xxtofl@arg+3,f
 10648     1280  0CFC               	rrf	___xxtofl@arg+2,f
 10649     1281  0CFB               	rrf	___xxtofl@arg+1,f
 10650     1282  0CFA               	rrf	___xxtofl@arg,f
 10651     1283  0B89               	decfsz	9,f
 10652     1284  2A7F               	goto	u5785
 10653     1285                     l799:
 10654     1285  30FF               	movlw	255
 10655     1286  057D               	andwf	___xxtofl@arg+3,w
 10656     1287  1903               	btfsc	3,2
 10657     1288  2A97               	goto	l4193
 10658     1289  2A72               	goto	l4185
 10659     128A                     l4195:
 10660     128A  3002               	movlw	2
 10661     128B  0279               	subwf	___xxtofl@exp,w
 10662     128C  1C03               	btfss	3,0
 10663     128D  2A99               	goto	l806
 10664     128E  3001               	movlw	1
 10665     128F  02F9               	subwf	___xxtofl@exp,f
 10666     1290  3001               	movlw	1
 10667     1291                     u5805:
 10668     1291  35FA               	lslf	___xxtofl@arg,f
 10669     1292  0DFB               	rlf	___xxtofl@arg+1,f
 10670     1293  0DFC               	rlf	___xxtofl@arg+2,f
 10671     1294  0DFD               	rlf	___xxtofl@arg+3,f
 10672     1295  0B89               	decfsz	9,f
 10673     1296  2A91               	goto	u5805
 10674     1297                     l4193:
 10675     1297  1FFC               	btfss	___xxtofl@arg+2,7
 10676     1298  2A8A               	goto	l4195
 10677     1299                     l806:
 10678     1299  1879               	btfsc	___xxtofl@exp,0
 10679     129A  2AA3               	goto	l807
 10680     129B  30FF               	movlw	255
 10681     129C  05FA               	andwf	___xxtofl@arg,f
 10682     129D  30FF               	movlw	255
 10683     129E  05FB               	andwf	___xxtofl@arg+1,f
 10684     129F  307F               	movlw	127
 10685     12A0  05FC               	andwf	___xxtofl@arg+2,f
 10686     12A1  30FF               	movlw	255
 10687     12A2  05FD               	andwf	___xxtofl@arg+3,f
 10688     12A3                     l807:
 10689     12A3  1003               	clrc
 10690     12A4  0CF9               	rrf	___xxtofl@exp,f
 10691     12A5  0879               	movf	___xxtofl@exp,w
 10692     12A6  00F4               	movwf	??___xxtofl
 10693     12A7  01F5               	clrf	??___xxtofl+1
 10694     12A8  01F6               	clrf	??___xxtofl+2
 10695     12A9  01F7               	clrf	??___xxtofl+3
 10696     12AA  3018               	movlw	24
 10697     12AB                     u5845:
 10698     12AB  35F4               	lslf	??___xxtofl,f
 10699     12AC  0DF5               	rlf	??___xxtofl+1,f
 10700     12AD  0DF6               	rlf	??___xxtofl+2,f
 10701     12AE  0DF7               	rlf	??___xxtofl+3,f
 10702     12AF  0B89               	decfsz	9,f
 10703     12B0  2AAB               	goto	u5845
 10704     12B1  0874               	movf	??___xxtofl,w
 10705     12B2  04FA               	iorwf	___xxtofl@arg,f
 10706     12B3  0875               	movf	??___xxtofl+1,w
 10707     12B4  04FB               	iorwf	___xxtofl@arg+1,f
 10708     12B5  0876               	movf	??___xxtofl+2,w
 10709     12B6  04FC               	iorwf	___xxtofl@arg+2,f
 10710     12B7  0877               	movf	??___xxtofl+3,w
 10711     12B8  04FD               	iorwf	___xxtofl@arg+3,f
 10712     12B9  0878               	movf	___xxtofl@sign,w
 10713     12BA  1D03               	btfss	3,2
 10714     12BB  1FF3               	btfss	___xxtofl@val+3,7
 10715     12BC  2ABE               	goto	l4207
 10716     12BD  17FD               	bsf	___xxtofl@arg+3,7
 10717     12BE                     l4207:
 10718     12BE  087D               	movf	___xxtofl@arg+3,w
 10719     12BF  00F3               	movwf	?___xxtofl+3
 10720     12C0  087C               	movf	___xxtofl@arg+2,w
 10721     12C1  00F2               	movwf	?___xxtofl+2
 10722     12C2  087B               	movf	___xxtofl@arg+1,w
 10723     12C3  00F1               	movwf	?___xxtofl+1
 10724     12C4  087A               	movf	___xxtofl@arg,w
 10725     12C5  00F0               	movwf	?___xxtofl
 10726     12C6  0008               	return
 10727     12C7                     __end_of___xxtofl:
 10728                           
 10729                           	psect	text40
 10730     0012                     __ptext40:	
 10731 ;; *************** function ___flmul *****************
 10732 ;; Defined at:
 10733 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  b               4    0[BANK0 ] unsigned char 
 10736 ;;  a               4    4[BANK0 ] unsigned char 
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;  prod            4   20[BANK0 ] struct .
 10739 ;;  grs             4   14[BANK0 ] unsigned long 
 10740 ;;  temp            2   24[BANK0 ] struct .
 10741 ;;  bexp            1   19[BANK0 ] unsigned char 
 10742 ;;  aexp            1   18[BANK0 ] unsigned char 
 10743 ;;  sign            1   13[BANK0 ] unsigned char 
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  4    0[BANK0 ] unsigned char 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0, pclath, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10753 ;;      Params:         0       8       0       0       0       0       0       0
 10754 ;;      Locals:         0      13       0       0       0       0       0       0
 10755 ;;      Temps:          0       5       0       0       0       0       0       0
 10756 ;;      Totals:         0      26       0       0       0       0       0       0
 10757 ;;Total ram usage:       26 bytes
 10758 ;; Hardware stack levels used: 1
 10759 ;; Hardware stack levels required when called: 1
 10760 ;; This function calls:
 10761 ;;		__Umul8_16
 10762 ;; This function is called by:
 10763 ;;		_ADC_Convert
 10764 ;;		_main
 10765 ;;		_efgtoa
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769     0012                     ___flmul:	
 10770                           ;psect for function ___flmul
 10771                           
 10772                           
 10773                           ;incstack = 0
 10774                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10775     0012  0020               	movlb	0	; select bank0
 10776     0013  0823               	movf	___flmul@b+3,w
 10777     0014  3980               	andlw	128
 10778     0015  00AD               	movwf	___flmul@sign
 10779     0016  3523               	lslf	___flmul@b+3,w
 10780     0017  00B3               	movwf	___flmul@bexp
 10781     0018  1BA2               	btfsc	___flmul@b+2,7
 10782     0019  1433               	bsf	___flmul@bexp,0
 10783     001A  0833               	movf	___flmul@bexp,w
 10784     001B  1903               	btfsc	3,2
 10785     001C  282A               	goto	l3515
 10786     001D  0A33               	incf	___flmul@bexp,w
 10787     001E  1D03               	btfss	3,2
 10788     001F  2828               	goto	l3513
 10789     0020  3000               	movlw	0
 10790     0021  00A3               	movwf	___flmul@b+3
 10791     0022  3000               	movlw	0
 10792     0023  00A2               	movwf	___flmul@b+2
 10793     0024  3000               	movlw	0
 10794     0025  00A1               	movwf	___flmul@b+1
 10795     0026  3000               	movlw	0
 10796     0027  00A0               	movwf	___flmul@b
 10797     0028                     l3513:
 10798     0028  17A2               	bsf	___flmul@b+2,7
 10799     0029  2832               	goto	l3517
 10800     002A                     l3515:
 10801     002A  3000               	movlw	0
 10802     002B  00A3               	movwf	___flmul@b+3
 10803     002C  3000               	movlw	0
 10804     002D  00A2               	movwf	___flmul@b+2
 10805     002E  3000               	movlw	0
 10806     002F  00A1               	movwf	___flmul@b+1
 10807     0030  3000               	movlw	0
 10808     0031  00A0               	movwf	___flmul@b
 10809     0032                     l3517:
 10810     0032  0827               	movf	___flmul@a+3,w
 10811     0033  3980               	andlw	128
 10812     0034  00A8               	movwf	??___flmul
 10813     0035  0828               	movf	??___flmul,w
 10814     0036  06AD               	xorwf	___flmul@sign,f
 10815     0037  3527               	lslf	___flmul@a+3,w
 10816     0038  00B2               	movwf	___flmul@aexp
 10817     0039  1BA6               	btfsc	___flmul@a+2,7
 10818     003A  1432               	bsf	___flmul@aexp,0
 10819     003B  0832               	movf	___flmul@aexp,w
 10820     003C  1903               	btfsc	3,2
 10821     003D  284B               	goto	l3533
 10822     003E  0A32               	incf	___flmul@aexp,w
 10823     003F  1D03               	btfss	3,2
 10824     0040  2849               	goto	l3531
 10825     0041  3000               	movlw	0
 10826     0042  00A7               	movwf	___flmul@a+3
 10827     0043  3000               	movlw	0
 10828     0044  00A6               	movwf	___flmul@a+2
 10829     0045  3000               	movlw	0
 10830     0046  00A5               	movwf	___flmul@a+1
 10831     0047  3000               	movlw	0
 10832     0048  00A4               	movwf	___flmul@a
 10833     0049                     l3531:
 10834     0049  17A6               	bsf	___flmul@a+2,7
 10835     004A  2853               	goto	l3535
 10836     004B                     l3533:
 10837     004B  3000               	movlw	0
 10838     004C  00A7               	movwf	___flmul@a+3
 10839     004D  3000               	movlw	0
 10840     004E  00A6               	movwf	___flmul@a+2
 10841     004F  3000               	movlw	0
 10842     0050  00A5               	movwf	___flmul@a+1
 10843     0051  3000               	movlw	0
 10844     0052  00A4               	movwf	___flmul@a
 10845     0053                     l3535:
 10846     0053  0832               	movf	___flmul@aexp,w
 10847     0054  1D03               	btfss	3,2
 10848     0055  0833               	movf	___flmul@bexp,w
 10849     0056  1D03               	btfss	3,2
 10850     0057  2861               	goto	l3543
 10851     0058  3000               	movlw	0
 10852     0059  00A3               	movwf	?___flmul+3
 10853     005A  3000               	movlw	0
 10854     005B  00A2               	movwf	?___flmul+2
 10855     005C  3000               	movlw	0
 10856     005D  00A1               	movwf	?___flmul+1
 10857     005E  3000               	movlw	0
 10858     005F  00A0               	movwf	?___flmul
 10859     0060  0008               	return
 10860     0061                     l3543:
 10861     0061  0820               	movf	___flmul@b,w
 10862     0062  00F0               	movwf	__Umul8_16@multiplicand
 10863     0063  0826               	movf	___flmul@a+2,w
 10864     0064  319C  24E4  3180   	fcall	__Umul8_16
 10865     0067  0871               	movf	?__Umul8_16+1,w
 10866     0068  0020               	movlb	0	; select bank0
 10867     0069  00B9               	movwf	___flmul@temp+1
 10868     006A  0870               	movf	?__Umul8_16,w
 10869     006B  00B8               	movwf	___flmul@temp
 10870     006C  0838               	movf	___flmul@temp,w
 10871     006D  00A8               	movwf	??___flmul
 10872     006E  01A9               	clrf	??___flmul+1
 10873     006F  01AA               	clrf	??___flmul+2
 10874     0070  01AB               	clrf	??___flmul+3
 10875     0071  082B               	movf	??___flmul+3,w
 10876     0072  00B1               	movwf	___flmul@grs+3
 10877     0073  082A               	movf	??___flmul+2,w
 10878     0074  00B0               	movwf	___flmul@grs+2
 10879     0075  0829               	movf	??___flmul+1,w
 10880     0076  00AF               	movwf	___flmul@grs+1
 10881     0077  0828               	movf	??___flmul,w
 10882     0078  00AE               	movwf	___flmul@grs
 10883     0079  0839               	movf	___flmul@temp+1,w
 10884     007A  00A8               	movwf	??___flmul
 10885     007B  01A9               	clrf	??___flmul+1
 10886     007C  01AA               	clrf	??___flmul+2
 10887     007D  01AB               	clrf	??___flmul+3
 10888     007E  082B               	movf	??___flmul+3,w
 10889     007F  00B7               	movwf	___flmul@prod+3
 10890     0080  082A               	movf	??___flmul+2,w
 10891     0081  00B6               	movwf	___flmul@prod+2
 10892     0082  0829               	movf	??___flmul+1,w
 10893     0083  00B5               	movwf	___flmul@prod+1
 10894     0084  0828               	movf	??___flmul,w
 10895     0085  00B4               	movwf	___flmul@prod
 10896     0086  0821               	movf	___flmul@b+1,w
 10897     0087  00F0               	movwf	__Umul8_16@multiplicand
 10898     0088  0825               	movf	___flmul@a+1,w
 10899     0089  319C  24E4  3180   	fcall	__Umul8_16
 10900     008C  0871               	movf	?__Umul8_16+1,w
 10901     008D  0020               	movlb	0	; select bank0
 10902     008E  00B9               	movwf	___flmul@temp+1
 10903     008F  0870               	movf	?__Umul8_16,w
 10904     0090  00B8               	movwf	___flmul@temp
 10905     0091  0838               	movf	___flmul@temp,w
 10906     0092  00A8               	movwf	??___flmul
 10907     0093  01A9               	clrf	??___flmul+1
 10908     0094  01AA               	clrf	??___flmul+2
 10909     0095  01AB               	clrf	??___flmul+3
 10910     0096  0828               	movf	??___flmul,w
 10911     0097  07AE               	addwf	___flmul@grs,f
 10912     0098  0829               	movf	??___flmul+1,w
 10913     0099  3DAF               	addwfc	___flmul@grs+1,f
 10914     009A  082A               	movf	??___flmul+2,w
 10915     009B  3DB0               	addwfc	___flmul@grs+2,f
 10916     009C  082B               	movf	??___flmul+3,w
 10917     009D  3DB1               	addwfc	___flmul@grs+3,f
 10918     009E  0839               	movf	___flmul@temp+1,w
 10919     009F  00A8               	movwf	??___flmul
 10920     00A0  01A9               	clrf	??___flmul+1
 10921     00A1  01AA               	clrf	??___flmul+2
 10922     00A2  01AB               	clrf	??___flmul+3
 10923     00A3  0828               	movf	??___flmul,w
 10924     00A4  07B4               	addwf	___flmul@prod,f
 10925     00A5  0829               	movf	??___flmul+1,w
 10926     00A6  3DB5               	addwfc	___flmul@prod+1,f
 10927     00A7  082A               	movf	??___flmul+2,w
 10928     00A8  3DB6               	addwfc	___flmul@prod+2,f
 10929     00A9  082B               	movf	??___flmul+3,w
 10930     00AA  3DB7               	addwfc	___flmul@prod+3,f
 10931     00AB  0822               	movf	___flmul@b+2,w
 10932     00AC  00F0               	movwf	__Umul8_16@multiplicand
 10933     00AD  0824               	movf	___flmul@a,w
 10934     00AE  319C  24E4  3180   	fcall	__Umul8_16
 10935     00B1  0871               	movf	?__Umul8_16+1,w
 10936     00B2  0020               	movlb	0	; select bank0
 10937     00B3  00B9               	movwf	___flmul@temp+1
 10938     00B4  0870               	movf	?__Umul8_16,w
 10939     00B5  00B8               	movwf	___flmul@temp
 10940     00B6  0838               	movf	___flmul@temp,w
 10941     00B7  00A8               	movwf	??___flmul
 10942     00B8  01A9               	clrf	??___flmul+1
 10943     00B9  01AA               	clrf	??___flmul+2
 10944     00BA  01AB               	clrf	??___flmul+3
 10945     00BB  0828               	movf	??___flmul,w
 10946     00BC  07AE               	addwf	___flmul@grs,f
 10947     00BD  0829               	movf	??___flmul+1,w
 10948     00BE  3DAF               	addwfc	___flmul@grs+1,f
 10949     00BF  082A               	movf	??___flmul+2,w
 10950     00C0  3DB0               	addwfc	___flmul@grs+2,f
 10951     00C1  082B               	movf	??___flmul+3,w
 10952     00C2  3DB1               	addwfc	___flmul@grs+3,f
 10953     00C3  0839               	movf	___flmul@temp+1,w
 10954     00C4  00A8               	movwf	??___flmul
 10955     00C5  01A9               	clrf	??___flmul+1
 10956     00C6  01AA               	clrf	??___flmul+2
 10957     00C7  01AB               	clrf	??___flmul+3
 10958     00C8  0828               	movf	??___flmul,w
 10959     00C9  07B4               	addwf	___flmul@prod,f
 10960     00CA  0829               	movf	??___flmul+1,w
 10961     00CB  3DB5               	addwfc	___flmul@prod+1,f
 10962     00CC  082A               	movf	??___flmul+2,w
 10963     00CD  3DB6               	addwfc	___flmul@prod+2,f
 10964     00CE  082B               	movf	??___flmul+3,w
 10965     00CF  3DB7               	addwfc	___flmul@prod+3,f
 10966     00D0  3008               	movlw	8
 10967     00D1                     u4685:
 10968     00D1  35AE               	lslf	___flmul@grs,f
 10969     00D2  0DAF               	rlf	___flmul@grs+1,f
 10970     00D3  0DB0               	rlf	___flmul@grs+2,f
 10971     00D4  0DB1               	rlf	___flmul@grs+3,f
 10972     00D5  0B89               	decfsz	9,f
 10973     00D6  28D1               	goto	u4685
 10974     00D7  0821               	movf	___flmul@b+1,w
 10975     00D8  00F0               	movwf	__Umul8_16@multiplicand
 10976     00D9  0824               	movf	___flmul@a,w
 10977     00DA  319C  24E4  3180   	fcall	__Umul8_16
 10978     00DD  0871               	movf	?__Umul8_16+1,w
 10979     00DE  0020               	movlb	0	; select bank0
 10980     00DF  00B9               	movwf	___flmul@temp+1
 10981     00E0  0870               	movf	?__Umul8_16,w
 10982     00E1  00B8               	movwf	___flmul@temp
 10983     00E2  0838               	movf	___flmul@temp,w
 10984     00E3  07AE               	addwf	___flmul@grs,f
 10985     00E4  0839               	movf	___flmul@temp+1,w
 10986     00E5  3DAF               	addwfc	___flmul@grs+1,f
 10987     00E6  3000               	movlw	0
 10988     00E7  3DB0               	addwfc	___flmul@grs+2,f
 10989     00E8  3DB1               	addwfc	___flmul@grs+3,f
 10990     00E9  0820               	movf	___flmul@b,w
 10991     00EA  00F0               	movwf	__Umul8_16@multiplicand
 10992     00EB  0825               	movf	___flmul@a+1,w
 10993     00EC  319C  24E4  3180   	fcall	__Umul8_16
 10994     00EF  0871               	movf	?__Umul8_16+1,w
 10995     00F0  0020               	movlb	0	; select bank0
 10996     00F1  00B9               	movwf	___flmul@temp+1
 10997     00F2  0870               	movf	?__Umul8_16,w
 10998     00F3  00B8               	movwf	___flmul@temp
 10999     00F4  0838               	movf	___flmul@temp,w
 11000     00F5  07AE               	addwf	___flmul@grs,f
 11001     00F6  0839               	movf	___flmul@temp+1,w
 11002     00F7  3DAF               	addwfc	___flmul@grs+1,f
 11003     00F8  3000               	movlw	0
 11004     00F9  3DB0               	addwfc	___flmul@grs+2,f
 11005     00FA  3DB1               	addwfc	___flmul@grs+3,f
 11006     00FB  3008               	movlw	8
 11007     00FC                     u4695:
 11008     00FC  35AE               	lslf	___flmul@grs,f
 11009     00FD  0DAF               	rlf	___flmul@grs+1,f
 11010     00FE  0DB0               	rlf	___flmul@grs+2,f
 11011     00FF  0DB1               	rlf	___flmul@grs+3,f
 11012     0100  0B89               	decfsz	9,f
 11013     0101  28FC               	goto	u4695
 11014     0102  0820               	movf	___flmul@b,w
 11015     0103  00F0               	movwf	__Umul8_16@multiplicand
 11016     0104  0824               	movf	___flmul@a,w
 11017     0105  319C  24E4  3180   	fcall	__Umul8_16
 11018     0108  0871               	movf	?__Umul8_16+1,w
 11019     0109  0020               	movlb	0	; select bank0
 11020     010A  00B9               	movwf	___flmul@temp+1
 11021     010B  0870               	movf	?__Umul8_16,w
 11022     010C  00B8               	movwf	___flmul@temp
 11023     010D  0838               	movf	___flmul@temp,w
 11024     010E  07AE               	addwf	___flmul@grs,f
 11025     010F  0839               	movf	___flmul@temp+1,w
 11026     0110  3DAF               	addwfc	___flmul@grs+1,f
 11027     0111  3000               	movlw	0
 11028     0112  3DB0               	addwfc	___flmul@grs+2,f
 11029     0113  3DB1               	addwfc	___flmul@grs+3,f
 11030     0114  0821               	movf	___flmul@b+1,w
 11031     0115  00F0               	movwf	__Umul8_16@multiplicand
 11032     0116  0826               	movf	___flmul@a+2,w
 11033     0117  319C  24E4  3180   	fcall	__Umul8_16
 11034     011A  0871               	movf	?__Umul8_16+1,w
 11035     011B  0020               	movlb	0	; select bank0
 11036     011C  00B9               	movwf	___flmul@temp+1
 11037     011D  0870               	movf	?__Umul8_16,w
 11038     011E  00B8               	movwf	___flmul@temp
 11039     011F  0838               	movf	___flmul@temp,w
 11040     0120  07B4               	addwf	___flmul@prod,f
 11041     0121  0839               	movf	___flmul@temp+1,w
 11042     0122  3DB5               	addwfc	___flmul@prod+1,f
 11043     0123  3000               	movlw	0
 11044     0124  3DB6               	addwfc	___flmul@prod+2,f
 11045     0125  3DB7               	addwfc	___flmul@prod+3,f
 11046     0126  0822               	movf	___flmul@b+2,w
 11047     0127  00F0               	movwf	__Umul8_16@multiplicand
 11048     0128  0825               	movf	___flmul@a+1,w
 11049     0129  319C  24E4  3180   	fcall	__Umul8_16
 11050     012C  0871               	movf	?__Umul8_16+1,w
 11051     012D  0020               	movlb	0	; select bank0
 11052     012E  00B9               	movwf	___flmul@temp+1
 11053     012F  0870               	movf	?__Umul8_16,w
 11054     0130  00B8               	movwf	___flmul@temp
 11055     0131  0838               	movf	___flmul@temp,w
 11056     0132  07B4               	addwf	___flmul@prod,f
 11057     0133  0839               	movf	___flmul@temp+1,w
 11058     0134  3DB5               	addwfc	___flmul@prod+1,f
 11059     0135  3000               	movlw	0
 11060     0136  3DB6               	addwfc	___flmul@prod+2,f
 11061     0137  3DB7               	addwfc	___flmul@prod+3,f
 11062     0138  0822               	movf	___flmul@b+2,w
 11063     0139  00F0               	movwf	__Umul8_16@multiplicand
 11064     013A  0826               	movf	___flmul@a+2,w
 11065     013B  319C  24E4  3180   	fcall	__Umul8_16
 11066     013E  0871               	movf	?__Umul8_16+1,w
 11067     013F  0020               	movlb	0	; select bank0
 11068     0140  00B9               	movwf	___flmul@temp+1
 11069     0141  0870               	movf	?__Umul8_16,w
 11070     0142  00B8               	movwf	___flmul@temp
 11071     0143  0838               	movf	___flmul@temp,w
 11072     0144  00A8               	movwf	??___flmul
 11073     0145  0839               	movf	___flmul@temp+1,w
 11074     0146  00A9               	movwf	??___flmul+1
 11075     0147  01AA               	clrf	??___flmul+2
 11076     0148  01AB               	clrf	??___flmul+3
 11077     0149  3008               	movlw	8
 11078     014A                     u4705:
 11079     014A  35A8               	lslf	??___flmul,f
 11080     014B  0DA9               	rlf	??___flmul+1,f
 11081     014C  0DAA               	rlf	??___flmul+2,f
 11082     014D  0DAB               	rlf	??___flmul+3,f
 11083     014E  0B89               	decfsz	9,f
 11084     014F  294A               	goto	u4705
 11085     0150  0828               	movf	??___flmul,w
 11086     0151  07B4               	addwf	___flmul@prod,f
 11087     0152  0829               	movf	??___flmul+1,w
 11088     0153  3DB5               	addwfc	___flmul@prod+1,f
 11089     0154  082A               	movf	??___flmul+2,w
 11090     0155  3DB6               	addwfc	___flmul@prod+2,f
 11091     0156  082B               	movf	??___flmul+3,w
 11092     0157  3DB7               	addwfc	___flmul@prod+3,f
 11093     0158  082E               	movf	___flmul@grs,w
 11094     0159  00A8               	movwf	??___flmul
 11095     015A  082F               	movf	___flmul@grs+1,w
 11096     015B  00A9               	movwf	??___flmul+1
 11097     015C  0830               	movf	___flmul@grs+2,w
 11098     015D  00AA               	movwf	??___flmul+2
 11099     015E  0831               	movf	___flmul@grs+3,w
 11100     015F  00AB               	movwf	??___flmul+3
 11101     0160  3018               	movlw	24
 11102     0161                     u4715:
 11103     0161  36AB               	lsrf	??___flmul+3,f
 11104     0162  0CAA               	rrf	??___flmul+2,f
 11105     0163  0CA9               	rrf	??___flmul+1,f
 11106     0164  0CA8               	rrf	??___flmul,f
 11107     0165  0B89               	decfsz	9,f
 11108     0166  2961               	goto	u4715
 11109     0167  0828               	movf	??___flmul,w
 11110     0168  07B4               	addwf	___flmul@prod,f
 11111     0169  0829               	movf	??___flmul+1,w
 11112     016A  3DB5               	addwfc	___flmul@prod+1,f
 11113     016B  082A               	movf	??___flmul+2,w
 11114     016C  3DB6               	addwfc	___flmul@prod+2,f
 11115     016D  082B               	movf	??___flmul+3,w
 11116     016E  3DB7               	addwfc	___flmul@prod+3,f
 11117     016F  3008               	movlw	8
 11118     0170                     u4725:
 11119     0170  35AE               	lslf	___flmul@grs,f
 11120     0171  0DAF               	rlf	___flmul@grs+1,f
 11121     0172  0DB0               	rlf	___flmul@grs+2,f
 11122     0173  0DB1               	rlf	___flmul@grs+3,f
 11123     0174  0B89               	decfsz	9,f
 11124     0175  2970               	goto	u4725
 11125     0176  0833               	movf	___flmul@bexp,w
 11126     0177  0732               	addwf	___flmul@aexp,w
 11127     0178  00A8               	movwf	??___flmul
 11128     0179  01A9               	clrf	??___flmul+1
 11129     017A  0DA9               	rlf	??___flmul+1,f
 11130     017B  0828               	movf	??___flmul,w
 11131     017C  3E82               	addlw	130
 11132     017D  00B8               	movwf	___flmul@temp
 11133     017E  30FF               	movlw	255
 11134     017F  3D29               	addwfc	??___flmul+1,w
 11135     0180  00B9               	movwf	___flmul@temp+1
 11136     0181                     l3595:
 11137     0181  1BB6               	btfsc	___flmul@prod+2,7
 11138     0182  2998               	goto	l3597
 11139     0183  3001               	movlw	1
 11140     0184                     u4735:
 11141     0184  35B4               	lslf	___flmul@prod,f
 11142     0185  0DB5               	rlf	___flmul@prod+1,f
 11143     0186  0DB6               	rlf	___flmul@prod+2,f
 11144     0187  0DB7               	rlf	___flmul@prod+3,f
 11145     0188  0B89               	decfsz	9,f
 11146     0189  2984               	goto	u4735
 11147     018A  1BB1               	btfsc	___flmul@grs+3,7
 11148     018B  1434               	bsf	___flmul@prod,0
 11149     018C  3001               	movlw	1
 11150     018D                     u4755:
 11151     018D  35AE               	lslf	___flmul@grs,f
 11152     018E  0DAF               	rlf	___flmul@grs+1,f
 11153     018F  0DB0               	rlf	___flmul@grs+2,f
 11154     0190  0DB1               	rlf	___flmul@grs+3,f
 11155     0191  0B89               	decfsz	9,f
 11156     0192  298D               	goto	u4755
 11157     0193  30FF               	movlw	255
 11158     0194  07B8               	addwf	___flmul@temp,f
 11159     0195  30FF               	movlw	255
 11160     0196  3DB9               	addwfc	___flmul@temp+1,f
 11161     0197  2981               	goto	l3595
 11162     0198                     l3597:
 11163     0198  01B2               	clrf	___flmul@aexp
 11164     0199  1FB1               	btfss	___flmul@grs+3,7
 11165     019A  29B1               	goto	l3607
 11166     019B  30FF               	movlw	255
 11167     019C  052E               	andwf	___flmul@grs,w
 11168     019D  00A8               	movwf	??___flmul
 11169     019E  30FF               	movlw	255
 11170     019F  052F               	andwf	___flmul@grs+1,w
 11171     01A0  00A9               	movwf	??___flmul+1
 11172     01A1  30FF               	movlw	255
 11173     01A2  0530               	andwf	___flmul@grs+2,w
 11174     01A3  00AA               	movwf	??___flmul+2
 11175     01A4  307F               	movlw	127
 11176     01A5  0531               	andwf	___flmul@grs+3,w
 11177     01A6  00AB               	movwf	??___flmul+3
 11178     01A7  082B               	movf	??___flmul+3,w
 11179     01A8  042A               	iorwf	??___flmul+2,w
 11180     01A9  0429               	iorwf	??___flmul+1,w
 11181     01AA  0428               	iorwf	??___flmul,w
 11182     01AB  1903               	skipnz
 11183     01AC  1834               	btfsc	___flmul@prod,0
 11184     01AD  29AF               	goto	l3603
 11185     01AE  29B1               	goto	l3607
 11186     01AF                     l3603:
 11187     01AF  01B2               	clrf	___flmul@aexp
 11188     01B0  0AB2               	incf	___flmul@aexp,f
 11189     01B1                     l3607:
 11190     01B1  0832               	movf	___flmul@aexp,w
 11191     01B2  1903               	btfsc	3,2
 11192     01B3  29DA               	goto	l3617
 11193     01B4  3001               	movlw	1
 11194     01B5  07B4               	addwf	___flmul@prod,f
 11195     01B6  3000               	movlw	0
 11196     01B7  3DB5               	addwfc	___flmul@prod+1,f
 11197     01B8  3000               	movlw	0
 11198     01B9  3DB6               	addwfc	___flmul@prod+2,f
 11199     01BA  3000               	movlw	0
 11200     01BB  3DB7               	addwfc	___flmul@prod+3,f
 11201     01BC  1C37               	btfss	___flmul@prod+3,0
 11202     01BD  29DA               	goto	l3617
 11203     01BE  0834               	movf	___flmul@prod,w
 11204     01BF  00A8               	movwf	??___flmul
 11205     01C0  0835               	movf	___flmul@prod+1,w
 11206     01C1  00A9               	movwf	??___flmul+1
 11207     01C2  0836               	movf	___flmul@prod+2,w
 11208     01C3  00AA               	movwf	??___flmul+2
 11209     01C4  0837               	movf	___flmul@prod+3,w
 11210     01C5  00AB               	movwf	??___flmul+3
 11211     01C6  3001               	movlw	1
 11212     01C7  00AC               	movwf	??___flmul+4
 11213     01C8                     u4825:
 11214     01C8  37AB               	asrf	??___flmul+3,f
 11215     01C9  0CAA               	rrf	??___flmul+2,f
 11216     01CA  0CA9               	rrf	??___flmul+1,f
 11217     01CB  0CA8               	rrf	??___flmul,f
 11218     01CC  0BAC               	decfsz	??___flmul+4,f
 11219     01CD  29C8               	goto	u4825
 11220     01CE  082B               	movf	??___flmul+3,w
 11221     01CF  00B7               	movwf	___flmul@prod+3
 11222     01D0  082A               	movf	??___flmul+2,w
 11223     01D1  00B6               	movwf	___flmul@prod+2
 11224     01D2  0829               	movf	??___flmul+1,w
 11225     01D3  00B5               	movwf	___flmul@prod+1
 11226     01D4  0828               	movf	??___flmul,w
 11227     01D5  00B4               	movwf	___flmul@prod
 11228     01D6  3001               	movlw	1
 11229     01D7  07B8               	addwf	___flmul@temp,f
 11230     01D8  3000               	movlw	0
 11231     01D9  3DB9               	addwfc	___flmul@temp+1,f
 11232     01DA                     l3617:
 11233     01DA  0839               	movf	___flmul@temp+1,w
 11234     01DB  3A80               	xorlw	128
 11235     01DC  00A8               	movwf	??___flmul
 11236     01DD  3080               	movlw	128
 11237     01DE  0228               	subwf	??___flmul,w
 11238     01DF  1D03               	skipz
 11239     01E0  29E3               	goto	u4835
 11240     01E1  30FF               	movlw	255
 11241     01E2  0238               	subwf	___flmul@temp,w
 11242     01E3                     u4835:
 11243     01E3  1C03               	skipc
 11244     01E4  29EF               	goto	l3621
 11245     01E5  307F               	movlw	127
 11246     01E6  0020               	movlb	0	; select bank0
 11247     01E7  00B7               	movwf	___flmul@prod+3
 11248     01E8  3080               	movlw	128
 11249     01E9  00B6               	movwf	___flmul@prod+2
 11250     01EA  3000               	movlw	0
 11251     01EB  00B5               	movwf	___flmul@prod+1
 11252     01EC  3000               	movlw	0
 11253     01ED  00B4               	movwf	___flmul@prod
 11254     01EE  2A15               	goto	l761
 11255     01EF                     l3621:
 11256     01EF  0020               	movlb	0	; select bank0
 11257     01F0  0839               	movf	___flmul@temp+1,w
 11258     01F1  3A80               	xorlw	128
 11259     01F2  00A8               	movwf	??___flmul
 11260     01F3  3080               	movlw	128
 11261     01F4  0228               	subwf	??___flmul,w
 11262     01F5  1D03               	skipz
 11263     01F6  29F9               	goto	u4845
 11264     01F7  3001               	movlw	1
 11265     01F8  0238               	subwf	___flmul@temp,w
 11266     01F9                     u4845:
 11267     01F9  1803               	skipnc
 11268     01FA  2A06               	goto	l3627
 11269     01FB  3000               	movlw	0
 11270     01FC  0020               	movlb	0	; select bank0
 11271     01FD  00B7               	movwf	___flmul@prod+3
 11272     01FE  3000               	movlw	0
 11273     01FF  00B6               	movwf	___flmul@prod+2
 11274     0200  3000               	movlw	0
 11275     0201  00B5               	movwf	___flmul@prod+1
 11276     0202  3000               	movlw	0
 11277     0203  00B4               	movwf	___flmul@prod
 11278     0204  01AD               	clrf	___flmul@sign
 11279     0205  2A15               	goto	l761
 11280     0206                     l3627:
 11281     0206  0020               	movlb	0	; select bank0
 11282     0207  0838               	movf	___flmul@temp,w
 11283     0208  00B3               	movwf	___flmul@bexp
 11284     0209  30FF               	movlw	255
 11285     020A  05B4               	andwf	___flmul@prod,f
 11286     020B  30FF               	movlw	255
 11287     020C  05B5               	andwf	___flmul@prod+1,f
 11288     020D  307F               	movlw	127
 11289     020E  05B6               	andwf	___flmul@prod+2,f
 11290     020F  3000               	movlw	0
 11291     0210  05B7               	andwf	___flmul@prod+3,f
 11292     0211  1833               	btfsc	___flmul@bexp,0
 11293     0212  17B6               	bsf	___flmul@prod+2,7
 11294     0213  3633               	lsrf	___flmul@bexp,w
 11295     0214  00B7               	movwf	___flmul@prod+3
 11296     0215                     l761:
 11297     0215  082D               	movf	___flmul@sign,w
 11298     0216  00A8               	movwf	??___flmul
 11299     0217  0828               	movf	??___flmul,w
 11300     0218  04B7               	iorwf	___flmul@prod+3,f
 11301     0219  0837               	movf	___flmul@prod+3,w
 11302     021A  00A3               	movwf	?___flmul+3
 11303     021B  0836               	movf	___flmul@prod+2,w
 11304     021C  00A2               	movwf	?___flmul+2
 11305     021D  0835               	movf	___flmul@prod+1,w
 11306     021E  00A1               	movwf	?___flmul+1
 11307     021F  0834               	movf	___flmul@prod,w
 11308     0220  00A0               	movwf	?___flmul
 11309     0221  0008               	return
 11310     0222                     __end_of___flmul:
 11311                           
 11312                           	psect	text41
 11313     1CE4                     __ptext41:	
 11314 ;; *************** function __Umul8_16 *****************
 11315 ;; Defined at:
 11316 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;  multiplier      1    wreg     unsigned char 
 11319 ;;  multiplicand    1    0[COMMON] unsigned char 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;  multiplier      1    8[COMMON] unsigned char 
 11322 ;;  word_mpld       2    6[COMMON] unsigned int 
 11323 ;;  product         2    4[COMMON] unsigned int 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  2    0[COMMON] unsigned int 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11333 ;;      Params:         2       0       0       0       0       0       0       0
 11334 ;;      Locals:         5       0       0       0       0       0       0       0
 11335 ;;      Temps:          2       0       0       0       0       0       0       0
 11336 ;;      Totals:         9       0       0       0       0       0       0       0
 11337 ;;Total ram usage:        9 bytes
 11338 ;; Hardware stack levels used: 1
 11339 ;; This function calls:
 11340 ;;		Nothing
 11341 ;; This function is called by:
 11342 ;;		___flmul
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346     1CE4                     __Umul8_16:	
 11347                           ;psect for function __Umul8_16
 11348                           
 11349                           
 11350                           ;incstack = 0
 11351                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11352                           ;__Umul8_16@multiplier stored from wreg
 11353     1CE4  00F8               	movwf	__Umul8_16@multiplier
 11354     1CE5  01F4               	clrf	__Umul8_16@product
 11355     1CE6  01F5               	clrf	__Umul8_16@product+1
 11356     1CE7  0870               	movf	__Umul8_16@multiplicand,w
 11357     1CE8  00F2               	movwf	??__Umul8_16
 11358     1CE9  01F3               	clrf	??__Umul8_16+1
 11359     1CEA  0872               	movf	??__Umul8_16,w
 11360     1CEB  00F6               	movwf	__Umul8_16@word_mpld
 11361     1CEC  0873               	movf	??__Umul8_16+1,w
 11362     1CED  00F7               	movwf	__Umul8_16@word_mpld+1
 11363     1CEE                     l3177:
 11364     1CEE  1C78               	btfss	__Umul8_16@multiplier,0
 11365     1CEF  2CF4               	goto	l768
 11366     1CF0  0876               	movf	__Umul8_16@word_mpld,w
 11367     1CF1  07F4               	addwf	__Umul8_16@product,f
 11368     1CF2  0877               	movf	__Umul8_16@word_mpld+1,w
 11369     1CF3  3DF5               	addwfc	__Umul8_16@product+1,f
 11370     1CF4                     l768:
 11371     1CF4  3001               	movlw	1
 11372     1CF5                     u3845:
 11373     1CF5  35F6               	lslf	__Umul8_16@word_mpld,f
 11374     1CF6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11375     1CF7  0B89               	decfsz	9,f
 11376     1CF8  2CF5               	goto	u3845
 11377     1CF9  1003               	clrc
 11378     1CFA  0CF8               	rrf	__Umul8_16@multiplier,f
 11379     1CFB  0878               	movf	__Umul8_16@multiplier,w
 11380     1CFC  1D03               	btfss	3,2
 11381     1CFD  2CEE               	goto	l3177
 11382     1CFE  0875               	movf	__Umul8_16@product+1,w
 11383     1CFF  00F1               	movwf	?__Umul8_16+1
 11384     1D00  0874               	movf	__Umul8_16@product,w
 11385     1D01  00F0               	movwf	?__Umul8_16
 11386     1D02  0008               	return
 11387     1D03                     __end_of__Umul8_16:
 11388                           
 11389                           	psect	text42
 11390     1690                     __ptext42:	
 11391 ;; *************** function ___fldiv *****************
 11392 ;; Defined at:
 11393 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  a               4   26[BANK0 ] unsigned int 
 11396 ;;  b               4   30[BANK0 ] unsigned int 
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;  grs             4   46[BANK0 ] unsigned long 
 11399 ;;  rem             4   39[BANK0 ] unsigned long 
 11400 ;;  new_exp         2   44[BANK0 ] int 
 11401 ;;  aexp            1   51[BANK0 ] unsigned char 
 11402 ;;  bexp            1   50[BANK0 ] unsigned char 
 11403 ;;  sign            1   43[BANK0 ] unsigned char 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  4   26[BANK0 ] unsigned char 
 11406 ;; Registers used:
 11407 ;;		wreg, status,2, status,0
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/0
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11413 ;;      Params:         0       8       0       0       0       0       0       0
 11414 ;;      Locals:         0      13       0       0       0       0       0       0
 11415 ;;      Temps:          0       5       0       0       0       0       0       0
 11416 ;;      Totals:         0      26       0       0       0       0       0       0
 11417 ;;Total ram usage:       26 bytes
 11418 ;; Hardware stack levels used: 1
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_ADC_Convert
 11423 ;;		_efgtoa
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427     1690                     ___fldiv:	
 11428                           ;psect for function ___fldiv
 11429                           
 11430                           
 11431                           ;incstack = 0
 11432                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11433     1690  0020               	movlb	0	; select bank0
 11434     1691  0841               	movf	___fldiv@b+3,w
 11435     1692  3980               	andlw	128
 11436     1693  00CB               	movwf	___fldiv@sign
 11437     1694  3541               	lslf	___fldiv@b+3,w
 11438     1695  00D2               	movwf	___fldiv@bexp
 11439     1696  1BC0               	btfsc	___fldiv@b+2,7
 11440     1697  1452               	bsf	___fldiv@bexp,0
 11441     1698  0852               	movf	___fldiv@bexp,w
 11442     1699  1903               	btfsc	3,2
 11443     169A  2EA9               	goto	l3377
 11444     169B  0A52               	incf	___fldiv@bexp,w
 11445     169C  1D03               	btfss	3,2
 11446     169D  2EA6               	goto	l3373
 11447     169E  3000               	movlw	0
 11448     169F  00C1               	movwf	___fldiv@b+3
 11449     16A0  3000               	movlw	0
 11450     16A1  00C0               	movwf	___fldiv@b+2
 11451     16A2  3000               	movlw	0
 11452     16A3  00BF               	movwf	___fldiv@b+1
 11453     16A4  3000               	movlw	0
 11454     16A5  00BE               	movwf	___fldiv@b
 11455     16A6                     l3373:
 11456     16A6  17C0               	bsf	___fldiv@b+2,7
 11457     16A7  01C1               	clrf	___fldiv@b+3
 11458     16A8  2EB1               	goto	l3379
 11459     16A9                     l3377:
 11460     16A9  3000               	movlw	0
 11461     16AA  00C1               	movwf	___fldiv@b+3
 11462     16AB  3000               	movlw	0
 11463     16AC  00C0               	movwf	___fldiv@b+2
 11464     16AD  3000               	movlw	0
 11465     16AE  00BF               	movwf	___fldiv@b+1
 11466     16AF  3000               	movlw	0
 11467     16B0  00BE               	movwf	___fldiv@b
 11468     16B1                     l3379:
 11469     16B1  083D               	movf	___fldiv@a+3,w
 11470     16B2  3980               	andlw	128
 11471     16B3  00C2               	movwf	??___fldiv
 11472     16B4  0842               	movf	??___fldiv,w
 11473     16B5  06CB               	xorwf	___fldiv@sign,f
 11474     16B6  353D               	lslf	___fldiv@a+3,w
 11475     16B7  00D3               	movwf	___fldiv@aexp
 11476     16B8  1BBC               	btfsc	___fldiv@a+2,7
 11477     16B9  1453               	bsf	___fldiv@aexp,0
 11478     16BA  0853               	movf	___fldiv@aexp,w
 11479     16BB  1903               	btfsc	3,2
 11480     16BC  2ECB               	goto	l3397
 11481     16BD  0A53               	incf	___fldiv@aexp,w
 11482     16BE  1D03               	btfss	3,2
 11483     16BF  2EC8               	goto	l3393
 11484     16C0  3000               	movlw	0
 11485     16C1  00BD               	movwf	___fldiv@a+3
 11486     16C2  3000               	movlw	0
 11487     16C3  00BC               	movwf	___fldiv@a+2
 11488     16C4  3000               	movlw	0
 11489     16C5  00BB               	movwf	___fldiv@a+1
 11490     16C6  3000               	movlw	0
 11491     16C7  00BA               	movwf	___fldiv@a
 11492     16C8                     l3393:
 11493     16C8  17BC               	bsf	___fldiv@a+2,7
 11494     16C9  01BD               	clrf	___fldiv@a+3
 11495     16CA  2ED3               	goto	l709
 11496     16CB                     l3397:
 11497     16CB  3000               	movlw	0
 11498     16CC  00BD               	movwf	___fldiv@a+3
 11499     16CD  3000               	movlw	0
 11500     16CE  00BC               	movwf	___fldiv@a+2
 11501     16CF  3000               	movlw	0
 11502     16D0  00BB               	movwf	___fldiv@a+1
 11503     16D1  3000               	movlw	0
 11504     16D2  00BA               	movwf	___fldiv@a
 11505     16D3                     l709:
 11506     16D3  083D               	movf	___fldiv@a+3,w
 11507     16D4  043C               	iorwf	___fldiv@a+2,w
 11508     16D5  043B               	iorwf	___fldiv@a+1,w
 11509     16D6  043A               	iorwf	___fldiv@a,w
 11510     16D7  1D03               	skipz
 11511     16D8  2EF2               	goto	l3407
 11512     16D9  3000               	movlw	0
 11513     16DA  00C1               	movwf	___fldiv@b+3
 11514     16DB  3000               	movlw	0
 11515     16DC  00C0               	movwf	___fldiv@b+2
 11516     16DD  3000               	movlw	0
 11517     16DE  00BF               	movwf	___fldiv@b+1
 11518     16DF  3000               	movlw	0
 11519     16E0  00BE               	movwf	___fldiv@b
 11520     16E1  3080               	movlw	128
 11521     16E2  04C0               	iorwf	___fldiv@b+2,f
 11522     16E3  307F               	movlw	127
 11523     16E4  04C1               	iorwf	___fldiv@b+3,f
 11524     16E5                     L26:
 11525     16E5  084B               	movf	___fldiv@sign,w
 11526     16E6  00C2               	movwf	??___fldiv
 11527     16E7  0842               	movf	??___fldiv,w
 11528     16E8  04C1               	iorwf	___fldiv@b+3,f
 11529     16E9  0841               	movf	___fldiv@b+3,w
 11530     16EA  00BD               	movwf	?___fldiv+3
 11531     16EB  0840               	movf	___fldiv@b+2,w
 11532     16EC  00BC               	movwf	?___fldiv+2
 11533     16ED  083F               	movf	___fldiv@b+1,w
 11534     16EE  00BB               	movwf	?___fldiv+1
 11535     16EF  083E               	movf	___fldiv@b,w
 11536     16F0  00BA               	movwf	?___fldiv
 11537     16F1  0008               	return
 11538     16F2                     l3407:
 11539     16F2  0852               	movf	___fldiv@bexp,w
 11540     16F3  1D03               	btfss	3,2
 11541     16F4  2EFE               	goto	l3413
 11542     16F5  3000               	movlw	0
 11543     16F6  00BD               	movwf	?___fldiv+3
 11544     16F7  3000               	movlw	0
 11545     16F8  00BC               	movwf	?___fldiv+2
 11546     16F9  3000               	movlw	0
 11547     16FA  00BB               	movwf	?___fldiv+1
 11548     16FB  3000               	movlw	0
 11549     16FC  00BA               	movwf	?___fldiv
 11550     16FD  0008               	return
 11551     16FE                     l3413:
 11552     16FE  0852               	movf	___fldiv@bexp,w
 11553     16FF  00C2               	movwf	??___fldiv
 11554     1700  01C3               	clrf	??___fldiv+1
 11555     1701  0843               	movf	??___fldiv+1,w
 11556     1702  00C5               	movwf	??___fldiv+3
 11557     1703  0853               	movf	___fldiv@aexp,w
 11558     1704  0242               	subwf	??___fldiv,w
 11559     1705  00C4               	movwf	??___fldiv+2
 11560     1706  1C03               	skipc
 11561     1707  03C5               	decf	??___fldiv+3,f
 11562     1708  0844               	movf	??___fldiv+2,w
 11563     1709  3E7F               	addlw	127
 11564     170A  00CC               	movwf	___fldiv@new_exp
 11565     170B  3000               	movlw	0
 11566     170C  3D45               	addwfc	??___fldiv+3,w
 11567     170D  00CD               	movwf	___fldiv@new_exp+1
 11568     170E  0841               	movf	___fldiv@b+3,w
 11569     170F  00CA               	movwf	___fldiv@rem+3
 11570     1710  0840               	movf	___fldiv@b+2,w
 11571     1711  00C9               	movwf	___fldiv@rem+2
 11572     1712  083F               	movf	___fldiv@b+1,w
 11573     1713  00C8               	movwf	___fldiv@rem+1
 11574     1714  083E               	movf	___fldiv@b,w
 11575     1715  00C7               	movwf	___fldiv@rem
 11576     1716  3000               	movlw	0
 11577     1717  00C1               	movwf	___fldiv@b+3
 11578     1718  3000               	movlw	0
 11579     1719  00C0               	movwf	___fldiv@b+2
 11580     171A  3000               	movlw	0
 11581     171B  00BF               	movwf	___fldiv@b+1
 11582     171C  3000               	movlw	0
 11583     171D  00BE               	movwf	___fldiv@b
 11584     171E  3000               	movlw	0
 11585     171F  00D1               	movwf	___fldiv@grs+3
 11586     1720  3000               	movlw	0
 11587     1721  00D0               	movwf	___fldiv@grs+2
 11588     1722  3000               	movlw	0
 11589     1723  00CF               	movwf	___fldiv@grs+1
 11590     1724  3000               	movlw	0
 11591     1725  00CE               	movwf	___fldiv@grs
 11592     1726  01D3               	clrf	___fldiv@aexp
 11593     1727                     l3441:
 11594     1727  301A               	movlw	26
 11595     1728  0253               	subwf	___fldiv@aexp,w
 11596     1729  1803               	btfsc	3,0
 11597     172A  2F63               	goto	l3443
 11598     172B  0853               	movf	___fldiv@aexp,w
 11599     172C  1903               	btfsc	3,2
 11600     172D  2F45               	goto	l3433
 11601     172E  3001               	movlw	1
 11602     172F                     u4405:
 11603     172F  35C7               	lslf	___fldiv@rem,f
 11604     1730  0DC8               	rlf	___fldiv@rem+1,f
 11605     1731  0DC9               	rlf	___fldiv@rem+2,f
 11606     1732  0DCA               	rlf	___fldiv@rem+3,f
 11607     1733  0B89               	decfsz	9,f
 11608     1734  2F2F               	goto	u4405
 11609     1735  3001               	movlw	1
 11610     1736                     u4415:
 11611     1736  35BE               	lslf	___fldiv@b,f
 11612     1737  0DBF               	rlf	___fldiv@b+1,f
 11613     1738  0DC0               	rlf	___fldiv@b+2,f
 11614     1739  0DC1               	rlf	___fldiv@b+3,f
 11615     173A  0B89               	decfsz	9,f
 11616     173B  2F36               	goto	u4415
 11617     173C  1BD1               	btfsc	___fldiv@grs+3,7
 11618     173D  143E               	bsf	___fldiv@b,0
 11619     173E  3001               	movlw	1
 11620     173F                     u4435:
 11621     173F  35CE               	lslf	___fldiv@grs,f
 11622     1740  0DCF               	rlf	___fldiv@grs+1,f
 11623     1741  0DD0               	rlf	___fldiv@grs+2,f
 11624     1742  0DD1               	rlf	___fldiv@grs+3,f
 11625     1743  0B89               	decfsz	9,f
 11626     1744  2F3F               	goto	u4435
 11627     1745                     l3433:
 11628     1745  083D               	movf	___fldiv@a+3,w
 11629     1746  024A               	subwf	___fldiv@rem+3,w
 11630     1747  1D03               	skipz
 11631     1748  2F53               	goto	u4445
 11632     1749  083C               	movf	___fldiv@a+2,w
 11633     174A  0249               	subwf	___fldiv@rem+2,w
 11634     174B  1D03               	skipz
 11635     174C  2F53               	goto	u4445
 11636     174D  083B               	movf	___fldiv@a+1,w
 11637     174E  0248               	subwf	___fldiv@rem+1,w
 11638     174F  1D03               	skipz
 11639     1750  2F53               	goto	u4445
 11640     1751  083A               	movf	___fldiv@a,w
 11641     1752  0247               	subwf	___fldiv@rem,w
 11642     1753                     u4445:
 11643     1753  1C03               	skipc
 11644     1754  2F5E               	goto	l3439
 11645     1755  1751               	bsf	___fldiv@grs+3,6
 11646     1756  083A               	movf	___fldiv@a,w
 11647     1757  02C7               	subwf	___fldiv@rem,f
 11648     1758  083B               	movf	___fldiv@a+1,w
 11649     1759  3BC8               	subwfb	___fldiv@rem+1,f
 11650     175A  083C               	movf	___fldiv@a+2,w
 11651     175B  3BC9               	subwfb	___fldiv@rem+2,f
 11652     175C  083D               	movf	___fldiv@a+3,w
 11653     175D  3BCA               	subwfb	___fldiv@rem+3,f
 11654     175E                     l3439:
 11655     175E  3001               	movlw	1
 11656     175F  00C2               	movwf	??___fldiv
 11657     1760  0842               	movf	??___fldiv,w
 11658     1761  07D3               	addwf	___fldiv@aexp,f
 11659     1762  2F27               	goto	l3441
 11660     1763                     l3443:
 11661     1763  084A               	movf	___fldiv@rem+3,w
 11662     1764  0449               	iorwf	___fldiv@rem+2,w
 11663     1765  0448               	iorwf	___fldiv@rem+1,w
 11664     1766  0447               	iorwf	___fldiv@rem,w
 11665     1767  1D03               	btfss	3,2
 11666     1768  144E               	bsf	___fldiv@grs,0
 11667     1769                     l3457:
 11668     1769  1BC0               	btfsc	___fldiv@b+2,7
 11669     176A  2F80               	goto	l3459
 11670     176B  3001               	movlw	1
 11671     176C                     u4475:
 11672     176C  35BE               	lslf	___fldiv@b,f
 11673     176D  0DBF               	rlf	___fldiv@b+1,f
 11674     176E  0DC0               	rlf	___fldiv@b+2,f
 11675     176F  0DC1               	rlf	___fldiv@b+3,f
 11676     1770  0B89               	decfsz	9,f
 11677     1771  2F6C               	goto	u4475
 11678     1772  1BD1               	btfsc	___fldiv@grs+3,7
 11679     1773  143E               	bsf	___fldiv@b,0
 11680     1774  3001               	movlw	1
 11681     1775                     u4495:
 11682     1775  35CE               	lslf	___fldiv@grs,f
 11683     1776  0DCF               	rlf	___fldiv@grs+1,f
 11684     1777  0DD0               	rlf	___fldiv@grs+2,f
 11685     1778  0DD1               	rlf	___fldiv@grs+3,f
 11686     1779  0B89               	decfsz	9,f
 11687     177A  2F75               	goto	u4495
 11688     177B  30FF               	movlw	255
 11689     177C  07CC               	addwf	___fldiv@new_exp,f
 11690     177D  30FF               	movlw	255
 11691     177E  3DCD               	addwfc	___fldiv@new_exp+1,f
 11692     177F  2F69               	goto	l3457
 11693     1780                     l3459:
 11694     1780  01D3               	clrf	___fldiv@aexp
 11695     1781  1FD1               	btfss	___fldiv@grs+3,7
 11696     1782  2F99               	goto	l3469
 11697     1783  30FF               	movlw	255
 11698     1784  054E               	andwf	___fldiv@grs,w
 11699     1785  00C2               	movwf	??___fldiv
 11700     1786  30FF               	movlw	255
 11701     1787  054F               	andwf	___fldiv@grs+1,w
 11702     1788  00C3               	movwf	??___fldiv+1
 11703     1789  30FF               	movlw	255
 11704     178A  0550               	andwf	___fldiv@grs+2,w
 11705     178B  00C4               	movwf	??___fldiv+2
 11706     178C  307F               	movlw	127
 11707     178D  0551               	andwf	___fldiv@grs+3,w
 11708     178E  00C5               	movwf	??___fldiv+3
 11709     178F  0845               	movf	??___fldiv+3,w
 11710     1790  0444               	iorwf	??___fldiv+2,w
 11711     1791  0443               	iorwf	??___fldiv+1,w
 11712     1792  0442               	iorwf	??___fldiv,w
 11713     1793  1903               	skipnz
 11714     1794  183E               	btfsc	___fldiv@b,0
 11715     1795  2F97               	goto	l3465
 11716     1796  2F99               	goto	l3469
 11717     1797                     l3465:
 11718     1797  01D3               	clrf	___fldiv@aexp
 11719     1798  0AD3               	incf	___fldiv@aexp,f
 11720     1799                     l3469:
 11721     1799  0853               	movf	___fldiv@aexp,w
 11722     179A  1903               	btfsc	3,2
 11723     179B  2FC2               	goto	l3479
 11724     179C  3001               	movlw	1
 11725     179D  07BE               	addwf	___fldiv@b,f
 11726     179E  3000               	movlw	0
 11727     179F  3DBF               	addwfc	___fldiv@b+1,f
 11728     17A0  3000               	movlw	0
 11729     17A1  3DC0               	addwfc	___fldiv@b+2,f
 11730     17A2  3000               	movlw	0
 11731     17A3  3DC1               	addwfc	___fldiv@b+3,f
 11732     17A4  1C41               	btfss	___fldiv@b+3,0
 11733     17A5  2FC2               	goto	l3479
 11734     17A6  083E               	movf	___fldiv@b,w
 11735     17A7  00C2               	movwf	??___fldiv
 11736     17A8  083F               	movf	___fldiv@b+1,w
 11737     17A9  00C3               	movwf	??___fldiv+1
 11738     17AA  0840               	movf	___fldiv@b+2,w
 11739     17AB  00C4               	movwf	??___fldiv+2
 11740     17AC  0841               	movf	___fldiv@b+3,w
 11741     17AD  00C5               	movwf	??___fldiv+3
 11742     17AE  3001               	movlw	1
 11743     17AF  00C6               	movwf	??___fldiv+4
 11744     17B0                     u4565:
 11745     17B0  37C5               	asrf	??___fldiv+3,f
 11746     17B1  0CC4               	rrf	??___fldiv+2,f
 11747     17B2  0CC3               	rrf	??___fldiv+1,f
 11748     17B3  0CC2               	rrf	??___fldiv,f
 11749     17B4  0BC6               	decfsz	??___fldiv+4,f
 11750     17B5  2FB0               	goto	u4565
 11751     17B6  0845               	movf	??___fldiv+3,w
 11752     17B7  00C1               	movwf	___fldiv@b+3
 11753     17B8  0844               	movf	??___fldiv+2,w
 11754     17B9  00C0               	movwf	___fldiv@b+2
 11755     17BA  0843               	movf	??___fldiv+1,w
 11756     17BB  00BF               	movwf	___fldiv@b+1
 11757     17BC  0842               	movf	??___fldiv,w
 11758     17BD  00BE               	movwf	___fldiv@b
 11759     17BE  3001               	movlw	1
 11760     17BF  07CC               	addwf	___fldiv@new_exp,f
 11761     17C0  3000               	movlw	0
 11762     17C1  3DCD               	addwfc	___fldiv@new_exp+1,f
 11763     17C2                     l3479:
 11764     17C2  084D               	movf	___fldiv@new_exp+1,w
 11765     17C3  3A80               	xorlw	128
 11766     17C4  00C2               	movwf	??___fldiv
 11767     17C5  3080               	movlw	128
 11768     17C6  0242               	subwf	??___fldiv,w
 11769     17C7  1D03               	skipz
 11770     17C8  2FCB               	goto	u4575
 11771     17C9  30FF               	movlw	255
 11772     17CA  024C               	subwf	___fldiv@new_exp,w
 11773     17CB                     u4575:
 11774     17CB  1C03               	skipc
 11775     17CC  2FDA               	goto	l730
 11776     17CD  30FF               	movlw	255
 11777     17CE  0020               	movlb	0	; select bank0
 11778     17CF  00CC               	movwf	___fldiv@new_exp
 11779     17D0  3000               	movlw	0
 11780     17D1  00CD               	movwf	___fldiv@new_exp+1
 11781     17D2  3000               	movlw	0
 11782     17D3  00C1               	movwf	___fldiv@b+3
 11783     17D4  3000               	movlw	0
 11784     17D5  00C0               	movwf	___fldiv@b+2
 11785     17D6  3000               	movlw	0
 11786     17D7  00BF               	movwf	___fldiv@b+1
 11787     17D8  3000               	movlw	0
 11788     17D9  00BE               	movwf	___fldiv@b
 11789     17DA                     l730:
 11790     17DA  0020               	movlb	0	; select bank0
 11791     17DB  084D               	movf	___fldiv@new_exp+1,w
 11792     17DC  3A80               	xorlw	128
 11793     17DD  00C2               	movwf	??___fldiv
 11794     17DE  3080               	movlw	128
 11795     17DF  0242               	subwf	??___fldiv,w
 11796     17E0  1D03               	skipz
 11797     17E1  2FE4               	goto	u4585
 11798     17E2  3001               	movlw	1
 11799     17E3  024C               	subwf	___fldiv@new_exp,w
 11800     17E4                     u4585:
 11801     17E4  1803               	skipnc
 11802     17E5  2FF2               	goto	l731
 11803     17E6  0020               	movlb	0	; select bank0
 11804     17E7  01CC               	clrf	___fldiv@new_exp
 11805     17E8  01CD               	clrf	___fldiv@new_exp+1
 11806     17E9  3000               	movlw	0
 11807     17EA  00C1               	movwf	___fldiv@b+3
 11808     17EB  3000               	movlw	0
 11809     17EC  00C0               	movwf	___fldiv@b+2
 11810     17ED  3000               	movlw	0
 11811     17EE  00BF               	movwf	___fldiv@b+1
 11812     17EF  3000               	movlw	0
 11813     17F0  00BE               	movwf	___fldiv@b
 11814     17F1  01CB               	clrf	___fldiv@sign
 11815     17F2                     l731:
 11816     17F2  0020               	movlb	0	; select bank0
 11817     17F3  084C               	movf	___fldiv@new_exp,w
 11818     17F4  00D2               	movwf	___fldiv@bexp
 11819     17F5  1C52               	btfss	___fldiv@bexp,0
 11820     17F6  2FF9               	goto	l3493
 11821     17F7  17C0               	bsf	___fldiv@b+2,7
 11822     17F8  2FFD               	goto	l733
 11823     17F9                     l3493:
 11824     17F9  307F               	movlw	127
 11825     17FA  00C2               	movwf	??___fldiv
 11826     17FB  0842               	movf	??___fldiv,w
 11827     17FC  05C0               	andwf	___fldiv@b+2,f
 11828     17FD                     l733:
 11829     17FD  3652               	lsrf	___fldiv@bexp,w
 11830     17FE  00C1               	movwf	___fldiv@b+3
 11831     17FF  2EE5               	goto	L26
 11832     1800                     __end_of___fldiv:
 11833     007E                     btemp	set	126	;btemp
 11834     007E                     wtemp0	set	126
 11835                           
 11836                           	psect	idloc
 11837                           
 11838                           ;Config register IDLOC0 @ 0x8000
 11839                           ;	unspecified, using default values
 11840     8000                     	org	32768
 11841     8000  3FFF               	dw	16383
 11842                           
 11843                           ;Config register IDLOC1 @ 0x8001
 11844                           ;	unspecified, using default values
 11845     8001                     	org	32769
 11846     8001  3FFF               	dw	16383
 11847                           
 11848                           ;Config register IDLOC2 @ 0x8002
 11849                           ;	unspecified, using default values
 11850     8002                     	org	32770
 11851     8002  3FFF               	dw	16383
 11852                           
 11853                           ;Config register IDLOC3 @ 0x8003
 11854                           ;	unspecified, using default values
 11855     8003                     	org	32771
 11856     8003  3FFF               	dw	16383
 11857                           
 11858                           	psect	config
 11859                           
 11860                           ;Config register CONFIG1 @ 0x8007
 11861                           ;	Oscillator Selection
 11862                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 11863                           ;	Watchdog Timer Enable
 11864                           ;	WDTE = OFF, WDT disabled
 11865                           ;	Power-up Timer Enable
 11866                           ;	PWRTE = OFF, PWRT disabled
 11867                           ;	MCLR Pin Function Select
 11868                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11869                           ;	Flash Program Memory Code Protection
 11870                           ;	CP = OFF, Program memory code protection is disabled
 11871                           ;	Data Memory Code Protection
 11872                           ;	CPD = OFF, Data memory code protection is disabled
 11873                           ;	Brown-out Reset Enable
 11874                           ;	BOREN = OFF, Brown-out Reset disabled
 11875                           ;	Clock Out Enable
 11876                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11877                           ;	Internal/External Switchover
 11878                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11879                           ;	Fail-Safe Clock Monitor Enable
 11880                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11881     8007                     	org	32775
 11882     8007  09E2               	dw	2530
 11883                           
 11884                           ;Config register CONFIG2 @ 0x8008
 11885                           ;	Flash Memory Self-Write Protection
 11886                           ;	WRT = OFF, Write protection off
 11887                           ;	Voltage Regulator Capacitor Enable
 11888                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 11889                           ;	PLL Enable
 11890                           ;	PLLEN = OFF, 4x PLL disabled
 11891                           ;	Stack Overflow/Underflow Reset Enable
 11892                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
 11893                           ;	Brown-out Reset Voltage Selection
 11894                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11895                           ;	Low-Voltage Programming Enable
 11896                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11897     8008                     	org	32776
 11898     8008  1CFF               	dw	7423

Data Sizes:
    Strings     144
    Constant    0
    Data        9
    BSS         93
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     35      47
    BANK3            80     52      61
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_15(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_15(CODE[4]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S886$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> display_int@str(BANK2[16]), display_float2@str(BANK0[16]), display_float@str(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S802$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S802$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    lcd_DisplayString@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[5]), STR_13(CODE[15]), STR_12(CODE[6]), STR_11(CODE[12]), 
		 -> STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[14]), 
		 -> STR_6(CODE[16]), main@inputTime(BANK3[6]), main@inputTemp(BANK3[3]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), display_int@str(BANK2[16]), display_float2@str(BANK0[16]), display_float@str(BANK2[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _efgtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_DisplayString->_lcd_char
    ___awdiv->___awmod
    _ADC_Convert->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _ADC_Convert->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _display_int->_sprintf
    _display_float->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_display_float
    _display_int->_sprintf
    _display_float->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   76822
                                             31 BANK2      4     4      0
                                              0 BANK3     52    52      0
                        _ADC_Convert
                           _ADC_init
                            ___awdiv
                            ___awmod
                             ___flge
                            ___flmul
                             ___wmul
                           ___xxtofl
                      _display_float
                        _display_int
                             _keypad
                  _lcd_DisplayString
                           _lcd_char
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               1     1      0      23
 ---------------------------------------------------------------------------------
 (1) _display_int                                         18    16      2   29746
                                             11 BANK2     18    16      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                  _lcd_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _display_float                                       20    16      4   29366
                                             11 BANK2     20    16      4
                  _lcd_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    13      8   27869
                                             71 BANK1      8     0      8
                                              0 BANK2     11    11      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   27325
                                             79 BANK0      1     1      0
                                             65 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    20      2   27004
                                             77 BANK0      2     0      2
                                             49 BANK1     16    16      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              55    50      5   19099
                                             72 BANK0      5     0      5
                                              0 BANK1     49    49      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     314
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1094
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                27    19      8    4075
                                             16 BANK0     27    19      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2468
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1925
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_DisplayString                                    3     1      2    1349
                                              2 COMMON     3     1      2
                           _lcd_char
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                         12     8      4    6176
                                             52 BANK0     12     8      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3481
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2033
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _ADC_init
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___flge
     ___flmul (ARG)
   ___flmul
   ___wmul
   ___xxtofl
   _display_float
     _lcd_DisplayString
       _lcd_char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   _display_int
     ___awdiv (ARG)
     ___awmod (ARG)
     _lcd_DisplayString (ARG)
     _sprintf (ARG)
   _keypad
   _lcd_DisplayString
   _lcd_char
   _lcd_cmd
   _lcd_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     16A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4F      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     23      2F      10       58.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     34      3D      12       76.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     16A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 24 18:32:12 2023

             ___fldiv@aexp 0053               ___fldiv@bexp 0052               ___fldiv@sign 004B  
             ?_display_int 012B                         l82 0815                         l83 0811  
                       l76 1067                         l93 0821                         l94 081D  
                       l87 0827                         l88 081B                         l89 0817  
                       l99 0823               ___awdiv@sign 0021        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l102 0836                        l103 0832  
                      l112 0842                        l121 0857                        l113 083E  
                      l122 0853                        l106 0848                        l131 0863  
                      l107 083C                        l132 085F                        l108 0838  
                      l125 0869                        l126 085D                        l118 0844  
                      l127 0859                        l137 0865                        l352 1C5F  
                      l521 1ECE                        l522 1EE8                        l530 1148  
                      l452 155C                        l533 1196                        l197 0FC6  
                      l199 0FCC                        l465 1469                        l553 1FE4  
                      l730 17DA                        l731 17F2                        l733 17FD  
                      l709 16D3                        l653 08B7                        l901 0432  
                      l806 1299                        l807 12A3                        l911 0640  
                      l761 0215                        l657 0927                        l674 09AA  
                      l851 101A                        l659 090C                        l862 15CA  
                      l863 15E4                        l695 0A23                        l687 0A0A  
                      l768 1CF4                        l793 1251                        l868 166A  
                      l799 1285                        l995 1208                        _abs 1C40  
                      _pad 100F               ___awmod@sign 0076                        wreg 0009  
             ___flmul@aexp 0032               ___flmul@bexp 0033               ___flmul@sign 002D  
             ___flmul@temp 0038               ___flmul@prod 0034               ___fltol@exp1 0079  
                     l1016 1396                       l1043 1D68                       ?_abs 0073  
                     l3101 0957                       l3021 08AF                       l3111 09A2  
                     l4001 11AE                       l3017 08AC                       l4003 11BB  
                     l3027 08C2                       l4021 122F                       l4005 11CE  
                     l3221 14D0                       l3141 09DB                       l3133 09D0  
                     l4015 120C                       l4007 11D4                       l3231 14E7  
                     l3215 14A5                       l3127 09C9                       l3119 09BC  
                     l3135 09D2                       l4103 0BCE                       l4009 11E8  
                     l3241 152F                       l3233 14F6                       l3145 09DD  
                     l3065 0912                       l3057 08E0                       l4105 0BDF  
                     l3243 153B                       l3219 14CC                       l3163 0A1A  
                     l3091 0945                       l3083 0935                       l3067 0914  
                     l3075 0923                       l3323 1FAF                       l3413 16FE  
                     l3253 13C9                       l3093 0947                       l3341 1FE0  
                     l4109 0BE9                       l4141 1CCC                       l3407 16F2  
                     l4207 12BE                       l3271 143C                       l3167 0A1E  
                     l3319 1FA6                       l4071 0B35                       l4063 0AE6  
                     l4055 0AA8                       l4143 1CE1                       l3433 1745  
                     l3441 1727                       l3177 1CEE                       l3513 0028  
                     l4401 1F6B                       l4153 1C15                       l3265 13FD  
                     l3273 1448                       l3257 13F0                       l3193 1D45  
                     l4049 0A98                       l4057 0ACD                       l3443 1763  
                     l3603 01AF                       l3531 0049                       l3515 002A  
                     l4251 105B                       l4243 1048                       l4403 1F77  
                     l3267 140C                       l3339 1FD2                       l4075 0B45  
                     l4083 0B4F                       l3373 16A6                       l3621 01EF  
                     l3533 004B                       l3517 0032                       l4173 1249  
                     l4413 1F92                       l3197 1C59                       l3285 1EFA  
                     l3349 1FF1                       l4093 0B92                       l4077 0B4A  
                     l4085 0B62                       l3439 175E                       l3607 01B1  
                     l3543 0061                       l3535 0053                       l4183 1262  
                     l4247 1051                       l3295 1162                       l4095 0BA2  
                     l4087 0B6B                       l4079 0B4D                       l3465 1797  
                     l3457 1769                       l3393 16C8                       l3377 16A9  
                     l3617 01DA                       l4193 1297                       l4185 1272  
                     l4417 1F9A                       l4409 1F89                       l4441 1E86  
                     l4433 1E80                       l3713 1379                       l4097 0BB2  
                     l4089 0B7E                       l3459 1780                       l3379 16B1  
                     l3627 0206                       l4195 128A                       l4179 1260  
                     l4443 1E92                       l4451 1EA7                       l3651 1038  
                     l3643 1018                       l3299 117C                       l3707 134F  
                     l3803 0268                       l4603 0D31                       l3493 17F9  
                     l3469 1799                       l3397 16CB                       l4429 1E79  
                     l3709 1360                       l3901 053E                       l3821 02A0  
                     l3813 027B                       ?_pad 007B                       l3479 17C2  
                     l4391 1F63                       l4455 1EAF                       l4447 1E9E  
                     l3751 15AE                       l3671 1105                       l3911 05B2  
                     l3815 0281                       l4623 0D55                       l4551 0C71  
                     l4385 1F58                       l3649 101C                       l3905 0591  
                     l3833 02D8                       l3595 0181                       l3739 1CA1  
                     l3755 15C2                       l3667 1100                       l3683 1CB0  
                     l3827 02B8                       l4619 0D4D                       l3597 0198  
                     l2973 1F2C                       l3765 15DE                       l3677 1128  
                     l3933 06BB                       l3853 0370                       l4549 0E76  
                     l3783 1676                       l3687 1D31                       l3935 06C0  
                     l3847 0311                       l3839 02F0                       l4751 0FD3  
                     l2969 1F05                       l3769 1601                       l2993 0888  
                     l3929 0653                       l3857 03BC                       l3849 031E  
                     l4657 0DBD                       l4569 0CA5                       l3779 15EB  
                     l3955 06D5                       l3971 077F                       l3875 042D  
                     l3859 03C6                       l3867 03F7                       l4851 0B9A  
                     l4747 0EAC                       l4691 0E43                       l4683 0E2D  
                     l4595 0D18                       l3789 1685                       l2997 088B  
                     l3957 06ED                       l3885 044A                       l3869 041C  
                     l4853 0BDA                       l4677 0E22                       l4589 0D0D  
                     l4855 11E0                       l2999 0893                       l3975 0797  
                     l4687 0E37                       l4695 0E54                       l4599 0D22  
                     l3889 0452                       l4849 0B57                       l3899 0464  
                     l3997 11B6                       l3989 07D1                       STR_1 187D  
                     STR_2 188D                       STR_3 188A                       STR_4 1856  
                     STR_5 1862                       STR_6 1800                       STR_7 182E  
                     STR_8 183C                       STR_9 1810             ?_display_float 012B  
                     _LATB 010D                       u3500 08FF                       u5020 1316  
                     u5005 1303                       u5110 1C38                       u3510 0900  
                     u5120 1C39                       u4145 1EF6                       u4225 1FB8  
                     u5025 1312                       u4405 172F                       u4085 142A  
                     u5045 133B                       u5150 158A                       u4415 1736  
                     u3623 096A                       u3615 094C                       u4255 1FD3  
                     u5160 158B                       u5225 1674                       u3545 0919  
                     u5065 1369                       u4435 173F                       u3395 1F2A  
                     u4445 1753                       u6205 1F6E                       u5245 15FF  
                     u4285 1FE8                       u5085 1382                       u3495 08F5  
                     u6400 0C5D                       u4705 014A                       u6225 1F78  
                     u6305 1E89                       u3665 09BD                       u4475 176C  
                     u4715 0161                       u6235 1F82                       u5195 15BA  
                     u5435 046E                       u4565 17B0                       u3845 1CF5  
                     u4725 0170                       u6245 1F8A                       u6325 1E98  
                     u3765 09F5                       u3950 14D7                       u5550 07BC  
                     u4575 17CB                       u4495 1775                       u4735 0184  
                     u6335 1E9F                       u5535 0789                       u5560 07BD  
                     u4585 17E4                       u4825 01C8                       u5705 1E0D  
                     u5545 0795                       u4835 01E3                       u4755 018D  
                     u4915 10EF                       u4845 01F9                       u4685 00D1  
                     u5805 1291                       u3885 1C60                       u4950 1120  
                     u4695 00FC                       u3895 1C65                       u5495 06A7  
                     u4960 1121                       u3985 151C                       u4945 1112  
                     u6705 0EB8                       u4875 1026                       u5845 12AB  
                     u5765 126B                       u4885 1C49                       u6717 0C3D  
                     u5695 1E02                       u4895 10D6                       u6807 1E5C  
                     u6727 0C95                       u5785 127F                       u6817 1E69  
                     u6737 0D84                       u6907 105F                       u4995 12E8  
                     u6827 1DE8                       u5875 1DD4                       u6747 0DAB  
                     u6837 1DF8                       u5885 1DDF                       u6757 0F74  
                     u6847 080B                       u6767 0FEF                       u6857 082C  
                     u6777 1E33                       u6867 084D                       u6787 1E42  
                     u6877 086E                       u6797 1E4F                       u6887 1E17  
                     u6897 1E28                       abs@a 0073                main@seconds 01C3  
                     _dbuf 0220                       _labs 1D22                       _atoi 11A9  
                     _main 0C03                       _dtoa 156E                       _prec 014D  
                     pad@i 0025                       pad@p 007C                       fsr0h 0005  
                     fsr1h 0007                       indf0 0000                       fsr0l 0004  
                     indf1 0001                       fsr1l 0006                       pad@w 0027  
                     btemp 007E              ___fpclassifyf 10B5                       start 0002  
         __end_of_ADC_init 0012            ___fldiv@new_exp 004C                      ??_abs 0075  
                    ??_pad 0024              ___fltol@sign1 0078            __end_of___aodiv 156E  
                    ?_labs 0070                      ?_atoi 0076            __end_of___fladd 0A29  
                    ?_main 0070                      ?_dtoa 0030            __end_of___aomod 147B  
          __end_of___fldiv 1800            __end_of___awdiv 1F9F            __end_of___flneg 1C15  
                    STR_10 186B                      STR_11 184A                      STR_12 1872  
                    STR_13 181F                      STR_14 1878                      STR_15 1882  
                    STR_18 1886            __end_of___awmod 1EB4            __end_of___flmul 0222  
          __end_of___flsub 1D22            __end_of___fltol 2000            ___awdiv@divisor 0077  
          ___awdiv@counter 0020               vfpfcnvrt@fmt 006D                      _TRISB 008D  
                    _TRISC 008E                      _TRISD 008F            __end_of_lcd_cmd 1DFE  
                    _flags 00EF               main@tempBool 01BB                      _fputc 1EFC  
                    _fputs 1D41            __end_of_isdigit 1C40               main@timeBool 01BC  
                    labs@a 0070                      atoi@n 0022                      pad@fp 0029  
                    atoi@s 0076                      _width 014B                      _putch 0007  
                    dtoa@d 0030                      dtoa@i 0048                      main@v 01C5  
                    dtoa@n 0040                      dtoa@p 003C                      dtoa@s 004A  
                    dtoa@w 003E            __end_of_isspace 1CA9                      status 0003  
                    wtemp0 007E            __end_of_sprintf 1DD0             ?___fpclassifyf 0070  
          __initialization 07E0               __end_of_labs 1D41               __end_of_atoi 1234  
             __end_of_main 1000               __end_of_dtoa 1690            ADC_Convert@chan 0054  
                   ??_labs 0074                     ??_atoi 0078                     ??_main 013F  
                   ??_dtoa 0038            ??_display_float 007E                     ?_fputc 0070  
                   ?_fputs 0078                     _ADRESH 009C                     _ADRESL 009B  
         ___awdiv@dividend 0079                     _ANSELA 018C                     ?_putch 0070  
                   _ANSELD 018F                     u403lld 13C7                     u392lld 14A3  
         __end_of___xxtofl 12C7           __end_of_lcd_char 1E2E              main@inputTemp 01CF  
            main@inputTime 01C9               vfprintf@cfmt 00E5           __end_of_lcd_init 1E6F  
                   ___flge 112D                     ___fleq 1EB4                  ??___aodiv 0070  
                ??___fladd 0020                  ??___aomod 0070                     ___wmul 1C57  
                ??___fldiv 0042                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 0028                  ??___flsub 007E  
                ??___fltol 0074                     _efgtoa 0222                     _floorf 12C7  
                   _memcpy 1D63                     _keypad 0806     main@currentTemperature 01B7  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                   pad@buf 007B                     main@n0 01A8                     main@n1 01AA  
                   main@n2 01AC                  ??_lcd_cmd 0070                     main@hr 01BF  
       ADC_Convert@voltage 005A                     dtoa@fp 003B                     _strcpy 1CA9  
                   fputc@c 0070                     fputs@c 0020                     fputs@i 0021  
                   fputs@s 0023                  ??_isdigit 0072            ___fpclassifyf@e 0020  
          ___fpclassifyf@u 0022            ___fpclassifyf@x 0070                  ??_isspace 0072  
                ?_ADC_init 0070                     putch@c 0070           __end_of_vfprintf 1CE4  
                ??_sprintf 007E                 ___flge@ff1 003A                 ___flge@ff2 003E  
          ??___fpclassifyf 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FD                 ___flneg@f1 0070                 ___fltol@f1 0070  
           __pcstackCOMMON 0070               __pidataBANK3 1006              __end_of_fputc 1F4D  
            __end_of_fputs 1D63              __end_of_putch 0008                 ??_ADC_init 0070  
                  ??_fputc 0073                    ??_fputs 0079                    ??_putch 0070  
               __pbssBANK1 00EF                 __pbssBANK2 0143                 __pbssBANK4 0220  
        __end_of__Umul8_16 1D03                 _efgtoa$955 00AA                 __pmaintext 0C03  
                  ?___flge 003A                    ?___fleq 0070                    ?___wmul 0070  
                  ?_efgtoa 0068                    ?_floorf 0054                    ?_memcpy 0070  
                  ?_keypad 0070                    ?_strcpy 0070                  ?___xxtofl 0070  
            ??_ADC_Convert 0058          _lcd_DisplayString 1C15                  ?_lcd_char 0070  
       ?_lcd_DisplayString 0072                  ?_lcd_init 0070        ??_lcd_DisplayString 0074  
                  ___aodiv 147B                    ___fladd 0873                    ___aomod 139F  
                  ___fldiv 1690                    ___awdiv 1F4D                    ___flneg 1C0C  
                  ___awmod 1E6F                    ___flmul 0012                    ___flsub 1D03  
                  ___fltol 1F9F                  ?_vfprintf 00E1                    __ptext1 1E2E  
                  __ptext2 1DD0                    __ptext3 0806                    __ptext4 1C72  
                  __ptext5 1D86                    __ptext6 1DA9                    __ptext7 1CC6  
                  __ptext8 0A29                    __ptext9 0222                    _lcd_cmd 1DD0  
     lcd_DisplayString@str 0072  __end_of_lcd_DisplayString 1C29                    _isdigit 1C29  
               ??___xxtofl 0074           ___awmod@dividend 0072                    _isspace 1C8D  
                  efgtoa@c 006C                    efgtoa@d 00AF                    efgtoa@e 00B4  
                  efgtoa@f 0068                    efgtoa@g 00C9                    efgtoa@h 00BE  
                  efgtoa@i 00BC                    efgtoa@l 00C2                    efgtoa@m 00B1  
                  efgtoa@n 00C7                    efgtoa@p 00A6                    efgtoa@t 00A8  
                  efgtoa@u 00CD                    efgtoa@w 00B6                    atoi@neg 0020  
                  main@hr0 01AE                    main@hr1 01B0                 ??_lcd_char 0070  
                  _sprintf 1DA9                    main@key 01C6                    main@min 01C1  
                  clrloop0 1001                 ??_lcd_init 0070       end_of_initialization 07FD  
                  floorf@e 0062                    floorf@m 005E                    floorf@u 0064  
                  floorf@x 0054        __end_of_ADC_Convert 10B5                    memcpy@d 0076  
                  memcpy@n 0071                    memcpy@s 0077                    fputc@fp 0072  
                  init_ram 0800                    fputs@fp 0078                    initloop 0801  
           display_int@num 012B             display_int@str 012D          __end_of_vfpfcnvrt 0C03  
               efgtoa@mode 00AD                 efgtoa@sign 00C6           vfpfcnvrt@convarg 00D5  
               ??_vfprintf 006F                    strcpy@d 0076                    strcpy@s 0074  
                _PORTCbits 000E                  _PORTDbits 000F                ___fladd@grs 007B  
            ___xxtofl@sign 0078                 lcd_cmd@cmd 0071                ___fldiv@grs 004E  
              ___fldiv@rem 0047      __end_of_display_float 1DA9                ___flmul@grs 002E  
               main@count2 01D2              ??_display_int 007E             __end_of___flge 11A9  
           __end_of___fleq 1EFC                vfpfcnvrt@ap 006E                vfpfcnvrt@cp 00DF  
              vfpfcnvrt@fp 00DE             __end_of___wmul 1C72             __end_of_efgtoa 07E0  
           __end_of_floorf 139F             __end_of_memcpy 1D86                 floorf@F526 0143  
           __end_of_keypad 0873             __end_of_strcpy 1CC6        start_initialization 07E0  
              _ADC_Convert 103F                __end_of_abs 1C57                __end_of_pad 103F  
    __end_of___fpclassifyf 112D                vfprintf@fmt 00E1                   ??___flge 0042  
                 ??___fleq 0078                   ??___wmul 0074          ADC_Convert@result 005E  
                 ??_efgtoa 00A0                  __Umul8_16 1CE4                __pdataBANK3 01D4  
                 ??_floorf 0058                   ??_memcpy 0073                   ??_keypad 0070  
                 ??_strcpy 0072                  ___fladd@a 0074                  ___fladd@b 0070  
                ___fldiv@a 003A                  ___fldiv@b 003E        __end_of_display_int 1C8D  
                ___flmul@a 0024                  ___flmul@b 0020                  ___flsub@a 003A  
                ___flsub@b 003E                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0              __pcstackBANK2 0120              __pcstackBANK3 01A0  
         ___aodiv@dividend 0028       main@inputTemperature 01A4                   ?___aodiv 0020  
                 ?___fladd 0070                   ?___aomod 0020                   ?___fldiv 003A  
                 ?___awdiv 0077           ___aodiv@quotient 0073                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0020                   ?___flsub 003A  
                 ?___fltol 0070                 ?__Umul8_16 0070                   ?_lcd_cmd 0070  
                 ?_isdigit 0070                   ?_isspace 0070                   _ADC_init 0008  
                 ?_sprintf 00E7             ___wmul@product 0074                   _LATCbits 010E  
                 _LATDbits 010F                  clear_ram0 1000                  main@F3475 01DA  
                main@F3477 01D4                _display_int 1C72                  _vfpfcnvrt 0A29  
                lcd_char@c 0071                 _ADCON0bits 009D                 _ADCON1bits 009E  
        ___wmul@multiplier 0070                  main@count 01C7                  main@start 01B6  
             _isspace$1035 0074                 vfpfcnvrt@c 00DD                  memcpy@tmp 0074  
               vfprintf@ap 00E3                 vfprintf@fp 00E4                ??__Umul8_16 0072  
               ?_vfpfcnvrt 006D            ___aodiv@divisor 0020            ___aodiv@counter 0071  
       ___fpclassifyf@F465 0147                 sprintf@fmt 00E9                   ___xxtofl 1234  
             ?_ADC_Convert 0054                   _dtoa$924 0039                   __ptext10 1CA9  
                 __ptext11 1D63                   __ptext20 1EB4                   __ptext12 1D22  
                 __ptext21 156E                   __ptext13 12C7                   __ptext30 1C8D  
                 __ptext22 100F                   __ptext14 10B5                   __ptext31 1C29  
                 __ptext23 1D41                   __ptext15 1F9F                   __ptext40 0012  
                 __ptext32 1C57                   __ptext24 1EFC                   __ptext16 1D03  
                 __ptext41 1CE4                   __ptext33 1C15                   __ptext25 0007  
                 __ptext17 0873                   __ptext42 1690                   __ptext34 1DFE  
                 __ptext26 1C40                   __ptext18 1C0C                   __ptext35 1E6F  
                 __ptext27 139F                   __ptext19 112D                   __ptext36 1F4D  
                 __ptext28 147B                   __ptext37 0008                   __ptext29 11A9  
                 __ptext38 103F                   __ptext39 1234                   _lcd_char 1DFE  
                 _lcd_init 1E2E                 strcpy@dest 0077           display_float@num 012B  
         display_float@str 012F                   efgtoa@fp 00B3                   efgtoa@ne 00A4  
                 efgtoa@pp 00AC                   efgtoa@ou 00B8            main@tempVoltage 01A0  
                 _vfprintf 1CC6                   main@min0 01B2                   main@min1 01B4  
                 main@temp 01BD           ___aomod@dividend 0028                   memcpy@d1 0075  
                 memcpy@s1 0070             __pstringtext10 1872             __pstringtext11 1878  
           __pstringtext12 187D             __pstringtext13 1882             __pstringtext14 1886  
           __pstringtext15 188A             __pstringtext16 188D             __pstringtext17 0000  
                 isdigit@c 0070                  sprintf@ap 0120                   isspace@c 0070  
                strcpy@src 0070                efgtoa@nmode 00AE            ___aomod@divisor 0020  
              ??_vfpfcnvrt 00D1            ___aomod@counter 0071              __pstringtext1 1800  
            __pstringtext2 1810              __pstringtext3 181F              __pstringtext4 182E  
            __pstringtext5 183C              __pstringtext6 184A              __pstringtext7 1856  
            __pstringtext8 1862              __pstringtext9 186B     __Umul8_16@multiplicand 0070  
                 sprintf@f 0121                   sprintf@s 00E7              ___fladd@signs 0078  
             ___aodiv@sign 0072              _display_float 1D86               ___fladd@aexp 0079  
             ___fladd@bexp 007A       __Umul8_16@multiplier 0078               ___aomod@sign 0072  
        __Umul8_16@product 0074  
